{"version":3,"sources":["assets/images/login_bg.png","assets/images/logo.png","pages/gonghao/tuoguan/store/reducer.js","utils/index.js","pages/gonghao/tuoguan/store/actionCreators.js","pages/gonghao/tuoguan/store/constants.js","pages/gonghao/menu/store/reducer.js","pages/gonghao/menu/store/actionCreators.js","pages/gonghao/menu/store/constants.js","pages/gonghao/reply/store/reducer.js","pages/gonghao/reply/store/actionCreators.js","pages/gonghao/reply/store/constants.js","pages/gonghao/reducer.js","pages/message/group/store/constants.js","pages/message/group/store/reducer.js","pages/message/group/store/actionCreators.js","pages/message/kefu/store/reducer.js","pages/message/kefu/store/actionCreators.js","pages/message/kefu/store/constants.js","pages/message/template/store/reducer.js","pages/message/template/store/actionCreators.js","pages/message/template/store/constants.js","pages/message/reducer.js","pages/source/group/store/reducer.js","pages/source/group/store/actionCreators.js","pages/source/group/store/constants.js","pages/source/reducer.js","store/reducer.js","store/index.js","pages/login/index.jsx","common/BasicLayout/header/index.jsx","common/BasicLayout/sider/index.jsx","common/BasicLayout/bread/index.jsx","common/BasicLayout/index.jsx","common/components/Button/index.jsx","pages/gonghao/tuoguan/index.jsx","pages/gonghao/tuoguan/group/index.jsx","pages/gonghao/menu/index.jsx","pages/gonghao/menu/edit/index.jsx","pages/gonghao/reply/index.jsx","common/components/GraphicMessage/index.jsx","common/components/SelectGonghao/MultiSelectModal/index.jsx","pages/gonghao/reply/edit/index.jsx","pages/gonghao/qrcode/index.jsx","pages/gonghao/qrcode/edit/index.jsx","pages/gonghao/router.jsx","pages/message/group/components/GraphicMessage/index.jsx","pages/message/group/material/index.jsx","common/components/SelectGonghao/SingleSelectByGroup/index.jsx","pages/message/group/history/index.jsx","common/components/Loading/index.jsx","pages/message/group/index.jsx","pages/message/kefu/index.jsx","pages/message/kefu/edit/index.jsx","pages/message/template/index.jsx","common/components/SelectGonghao/SingleSelectModal/index.jsx","pages/message/template/components/TemplateModal.jsx","pages/message/template/edit/index.jsx","pages/message/router.jsx","pages/channel/spread/index.jsx","pages/channel/spread/edit/index.jsx","pages/channel/router.jsx","pages/account/index.jsx","pages/account/add/index.jsx","pages/account/router.jsx","pages/edit/index.jsx","pages/edit/router.jsx","pages/source/group/index.jsx","pages/source/group/edit/index.jsx","pages/source/router.jsx","App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","defaultState","gonghaoTagList","allGonghaoList","originalGonghaoList","gonghaoList","group","status","currentPage","searchName","isSelectTag","selectedTag","isCreate","gonghaoModal","gonghaoInfo","id","attribute","configList","configForm","type","sex","text","replyType","msgId","key","urlList","backTop","Promise","resolve","reject","timer","setInterval","osTop","document","documentElement","scrollTop","body","ispeed","Math","floor","clearInterval","getGroupList","dispatch","axios","get","then","res","data","code","getAllGonghaoList","length","changePage","page","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","action","wrap","_context","prev","next","stop","_x","apply","this","arguments","changeSearchInput","searchByName","nick_name","params","message","success","changeSelectValue","value","deleteGonghao","index","Modal","confirm","okText","cancelText","content","title","onOk","jieguan","addNewGonghao","window","open","openGonghaoModal","closeGonghaoModal","updateGonghaoInfo","console","log","put","actionCreators_objectSpread","msg","changeGroup","name","changeAttribute","selectTag","removeTag","tagConfirm","props","post","exist","form","setFieldsValue","deleteTagItem","delete","createForm","history","goBack","updateForm","checkPageAttr","getConfigList","deleteConfig","changeConfigForm","formInfo","createConfigForm","configInfo","updateConfigForm","menuList","menuIndex","secMenuIndex","isSubmit","allCodes","targetKeys","sub_button","url","menuForm","menuInfo","individual","values","codes","getMenuList","reverse","deleteMenu","handleInfoChange","handleIndividualChange","handleInputChange","handleSubInputChange","addFirstMenu","editMenu","addSecondMenu","openModal","submitMenu","location","query","store_actionCreators_objectSpread","resetState","cancelMenu","editSecMenu","deleteFirMenu","deleteSubMenu","getAllCodes","changeGonghao","initMenuInfo","record","replyMessageList","messageInfo","JSON","parse","stringify","articles","selectGonghaoModal","updateIndex","messageIndex","getReplyMessageList","deleteReplyMessage","_id","closeSelectModal","openSelectModal","changeMessageInfo","addToList","updateMessageItem","item","updateCurrentMessage","deleteCurrentMessage","initState","reducer","combineReducers","tuoguan","_start","_end","state","undefined","newState","toConsumableArray","filter","slice","splice","push","_objectSpread","menu","assign","reducer_objectSpread","reply","_newState$messageInfo","picurl","description","store_reducer_objectSpread","COPY","messageList","isComplete","tagList","sendModal","sendTimingModal","date","time","sendInfo","tagId","mediaId","sendTimingInfo","isTiming","timing","updateInfo","media_id","content_source_url","updateMaterialModal","historyList","historyMsgModal","delMsgInfo","msg_id","article_idx","delDate","getGroupGonghao","sent","getMaterial","setTimeout","getMessageList","warning","openUpdateMaterialModal","closeUpdateMaterialModal","updateMaterial","group_store_actionCreators_objectSpread","_res$data","error","catch","changeContentSourceUrl","Number","getTagList","changeTagId","closeModal","sendMessage","info","openTimingModal","sendTimingMessage","changeTimingState","changeTime","timeType","copy","dipatch","constants","err","deleteMaterial","clearMaterial","getHistoryList","checkSendState","msg_status","openMsgModal","closeMsgModal","changeArticleIdx","deleteMsg","clearHistory","changeDate","deleteMany","initContent","allMessageList","kefuMessageList","messageType","kefuMessageInfo","contents","img","img_path","channel","timing_time","Date","delay","tagName","remarks","action_type","paramsModal","getKefuMessageList","sort","messages","createKefuMessage","kefu_store_actionCreators_objectSpread","deleteMessage","sendKefuMessage","take_over","handleChangeType","changeContentValue","changeMessageValue","addMessage","selectMessage","selectParams","hideParamsModal","submitMessage","indexOf","task","is_timing","initKefuMessageInfo","templateMessageList","confName","templateId","templateName","templateList","templateInfo","template_id","templateModalVisible","color","getTemplateList","deleteTemplate","sendTemplate","template_store_actionCreators_objectSpread","changeConfNickName","searchConfName","openEditModal","closeTemplateModal","changeTemplate","saveTemplateModal","editTemplate","confirmSelect","initMessageInfo","now","dateTime","getTime","unshift","group_store_reducer_objectSpread","kefu","kefu_store_reducer_objectSpread","template","replyList","replyInfo","getReplyList","deleteReply","handleContentChange","handleReplyChange","submitReply","source_group_store_actionCreators_objectSpread","initReplyInfo","source_group_store_reducer_objectSpread","gonghao","gonghaoReducer","messageReducer","source","sourceReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Login","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","login","bind","assertThisInitialized","loginInfo","username","password","_this2","bgStyle","minHeight","backgroundSize","backgroundRepeat","backgroundAttachment","backgroundImage","concat","require","_react_16_9_0_react_default","createElement","className","style","input","size","onChange","e","changeInputValue","target","prefix","icon","marginRight","marginBottom","placeholder","onKeyUp","keyCode","onClick","setState","login_objectSpread","_this3","$MD5","toString","userInfo","localStorage","setItem","href","Component","HeaderWrapper","getItem","react_router_dom","to","src","alt","avatar","shape","popover","fontSize","logout","SubMenu","Menu","MenuItem","Item","SideWrapper","keyIndex","role","subMenuList","path","selectedKeys","onSelect","selectItem","latestSelectedKey","selectList","find","map","pathname","split","pathName","MenuListRender","SubMenuList","subItem","mode","theme","defaultOpenKeys","defaultSelectedKeys","breadList","/gonghao","/gonghao/tuoguan","/gonghao/tuoguan/group","/gonghao/tuoguan/config","/gonghao/tuoguan/config/create","/gonghao/tuoguan/config/update","/gonghao/menu","/gonghao/menu/create","/gonghao/menu/update","/gonghao/reply","/gonghao/reply/create","/gonghao/reply/update","/message","/message/kefu","/message/kefu/create","/message/kefu/update","/message/group","/message/group/material","/message/group/history","/message/template","/message/template/create","/message/template/update","/channel","/channel/spread","/channel/spread/create","/channel/spread/update","/source","/source/group","/source/group/create","/source/group/update","/edit","/edit/index","/wechat/qrcode","/wechat/qrcode/create","/wechat/qrcode/update","/account","/account/list","/account/add","BreadWrapper","getPath","pathSnippets","extraBreadcrumbItems","_","join","breadcrumb","withRouter","Content","Layout","Sider","Header","Footer","BasicLayout","layout","BasicLayout_header","collapsible","width","BasicLayout_sider","marginLeft","card","background","padding","borderBottom","height","BasicLayout_bread","textAlign","ButtonList","danger","update","ButtonWrapper","buttonStyle","_this$props","_this$props$backgroun","_this$props$color","_this$props$mr","mr","_this$props$ml","ml","_this$props$mb","mb","_this$props2","_this$props2$size","buttonContent","_this$props2$disabled","disabled","es_button","Search","Input","Option","Select","Tuoguan","onSearch","es_select","Button","es_list","grid","gutter","sm","xxl","dataSource","pagination","pageSize","renderItem","actions","tooltip","head_img","marginTop","es_tag","modal","visible","onCancel","es_form","labelCol","span","wrapperCol","label","es_radio","Group","connect","actionCreators","GonghaoGroup","columns","dataIndex","align","render","gonghao_id","gonghao_index","editGroupModalVisible","group_id","group_index","selectGroup","selectedRowKeys","getGonghaoTagList","openEditGroupModal","closeEditGroupModal","confirmEditGroup","_this$state","updateGroup","addGroup","_res$data2","deleteGroup","_res$data3","changeGroupValue","searchGroupGonghao","_res$data4","submitGonghaoModal","_this$state2","ids","updateOne","updateMore","openUpdateMoreModal","_res$data5","_res$data6","changeSelectGroup","_this$state3","rowSelection","group_Sider","header","bordered","display","flexDirection","justifyContent","lineHeight","margin","borderRadius","border","group_Content","group_Search","table","rowKey","menuHeader","EditMenuInfo","keyOrUrl","subKeyOrUrl","menuInfoForm","submitButton","menuModal","individualSex","formItemLayout","offset","colon","top","i","idx","transfer","showSearch","labelAlign","es_switch","checked","unMountState","stopPropagation","Form","create","Config","configHeader","GraphicMessage","MultiSelectModal","_props$codes","maskClosable","closable","mask","footer","es_checkbox","row","col","EditConfigInfo","TextOrKey","MessageContent","UploadImg","submitForm","uploadImg","TextArea","autosize","minRows","maxRows","_react_16_9_0_react","upload","showUploadList","SelectGonghao_MultiSelectModal","divider","common_components_GraphicMessage","file","response","filename","QrCode","qrCodeList","qrCodeHeader","deleteQrCode","getQrCodeList","codesLength","j","dataLength","parseInt","_this4","qrCodeInfo","EditQrCode","cancelEdit","submitEdit","optionFilterProp","getGonghaoName","filterOption","option","children","edit_Option","getGonghaoList","result","edit_objectSpread","_this5","TuoguanWrapper","react_router","component","from","exact","Replay","editReplay","QRCode","editQRCode","openSyncModal","moment","update_time","format","news_item","thumb_media_id","local_img_path","placement","groupMessage","syncMaterial","checkedList","docs","closeSyncModal","syncModal","indeterminate","checkAll","onCheckAllChange","nextProps","nextContext","selectGonghaoList","selectTagRadio","message_group_components_GraphicMessage","htmlFor","date_picker","timeString","time_picker","paddingBottom","PureComponent","Panel","Collapse","SingleSelectByGroup","activeKey","search","setCode","selectGonghao","handleChangeGroup","PanelList","locale","emptyText","SingleSelectByGroup_Sider","collapse","accordion","SingleSelectByGroup_Content","History","historyHeader","tag","arr","titles","dataString","loadingWrapper","position","left","zIndex","Loading","spin","spinning","historyModalVisible","clearTimeout","imageStyle","components_SelectGonghao_SingleSelectByGroup","components_Loading","empty","image","material","group_history","Kefu","copyMessage","kefuMessageHeader","sorter","b","kefu_objectSpread","kefu_Option","EditMessage","isUploadImg","isTextUploadImg","FormItemWrapper","Channel","Fragment","input_number","formatter","parser","replace","min","showTime","dateString","Template","templateColumns","template_objectSpread","template_Search","SingleSelectModal","colors","colorWrapperStyle","show","overflow","TemplateModal_objectSpread","EditTemplate","GonghaoModal","_loop","pre","SelectGonghao_SingleSelectModal","template_edit_Option","defaultValue","components_TemplateModal","GroupRouter","GroupMaterial","EditKefuMSg","TabPane","Tabs","Advertise","spreadData","domain_names","dataList","changeTab","tabsRender","tab","spreadHeader","wordWrap","userSelect","goTop","spread_objectSpread","deleteLink","copyLink","tabs","animated","defaultActiveKey","tabBarGutter","getSpreadList","_this6","_this7","spreadLinkInfo","links","weights","back_urls","link","back_url","weight","granularity","EditAdvertise","spread_edit_objectSpread","addTag","cancelSelectTag","submitSpreadLink","cancelUpdate","initData","isAddWeight","hasLink","hasBackUrl","hasWeight","delLink","isUpdate","updateWeight","enterButton","saveUpdate","addLink","onClose","borderRight","deleteTag","paddingLeft","list","trim","ChannelWrapper","Spread","EditSpread","Account","accountList","searchValue","lib","onCopy","deleteAccount","searchAccount","getAccountList","handleChangeSearchValue","account_Search","AddAccount","addAccount","validateFields","errors","add_objectSpread","resetForm","getFieldDecorator","xs","rules","required","initialValue","add_Option","AccountRouter","Index","getContent","ts","apiKey","init","menubar","max_height","plugins","toolbar","min_height","default_link_target","fontsize_formats","EditRouter","Reply","replyHeader","verticalAlign","EditReplyInfo","textOrImgText","cancel","SourceWrapper","editGroup","App","loginAt","needLogin","keys","es","decodeURIComponent","src_pages_login","src_common_BasicLayout","TuoguanRouter","MessageRouter","ChannelRouter","encodeURIComponent","React","prototype","MD5","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.93205ae2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login_bg.e3347162.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ad641e9f.png\";","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  // 公号接管\r\n  gonghaoTagList: [],\r\n  allGonghaoList: [],\r\n  originalGonghaoList: [],\r\n  gonghaoList: [],\r\n  group: \"全部\",\r\n  status: \"全部\",\r\n  currentPage: 1,\r\n  searchName: \"\",\r\n  isSelectTag: false,\r\n  selectedTag: \"\",\r\n  isCreate: true,\r\n  gonghaoModal: false,\r\n  gonghaoInfo: {\r\n    group: \"\",\r\n    id: \"\",\r\n    attribute: 0\r\n  },\r\n  // 公号配置\r\n  configList: [],\r\n  configForm: {type: 0, sex: 3, attribute: 1, text: \"\", replyType: 0, msgId: null, key: \"\", urlList: []},\r\n\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state)), _start, _end;\r\n  switch (action.type) {\r\n    case constants.GET_GONGHAO_TAG_LIST:\r\n      newState.gonghaoTagList = action.gonghaoTagList;\r\n      return newState;\r\n    case constants.GET_ALL_GONGHAO_LIST:\r\n      newState.allGonghaoList = newState.originalGonghaoList = action.allGonghaoList;\r\n      newState.gonghaoList = action.gonghaoList;\r\n      return newState;\r\n    case constants.CHANGE_SELECT_VALUE:\r\n      newState.group = newState.status = \"全部\";\r\n      newState[action.key] = action.value;\r\n      if(newState[action.key] === \"全部\") {\r\n        newState.gonghaoList = [...newState.allGonghaoList]\r\n      } else{\r\n        newState.gonghaoList = [...newState.allGonghaoList.filter(item => item[action.key] === action.value)]\r\n      }\r\n      return newState;\r\n    case constants.CHANGE_PAGE:\r\n      _start = (action.page - 1) * 10;\r\n      _end = action.page * 10;\r\n      newState.gonghaoList = newState.allGonghaoList.slice(_start, _end);\r\n      newState.currentPage = action.page;\r\n      return newState;\r\n    case constants.CHANGE_SEARCH_INPUT:\r\n      newState.searchName = action.searchName;\r\n      return newState;\r\n    case constants.SEARCH_BY_NAME:\r\n      newState.allGonghaoList = action.allGonghaoList;\r\n      newState.gonghaoList = action.gonghaoList;\r\n      newState.searchName = \"\";\r\n      return newState;\r\n    case constants.OPEN_GONGHAO_MODAL:\r\n      newState.gonghaoModal = true;\r\n      newState.gonghaoInfo = {id: action.id, group: action.group, attribute: action.attribute};\r\n      return newState;\r\n    case constants.CLOSE_GONGHAO_MODAL:\r\n      newState.gonghaoModal = false;\r\n      newState.gonghaoInfo = {attribute: 0};\r\n      return newState;\r\n    case constants.CHANGE_GROUP:\r\n      newState.gonghaoInfo.group = action.name;\r\n      return newState;\r\n    case  constants.CHANGE_ATTRIBUTE:\r\n      newState.gonghaoInfo.attribute = action.attribute;\r\n      return newState;\r\n    case constants.DELETE_GONGHAO:\r\n      newState.gonghaoList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.SESECT_TAG:\r\n      newState.isSelectTag = true;\r\n      newState.selectedTag = action.selectedTag;\r\n      return newState;\r\n    case constants.REMOVE_TAG:\r\n      newState.isSelectTag = false;\r\n      newState.selectedTag = \"\";\r\n      return newState;\r\n    case constants.TAG_CONFIRM:\r\n      newState.isSelectTag = true;\r\n      newState.selectedTag = action.group;\r\n      action.name && newState.gonghaoTagList.push(action.name);\r\n      return newState;\r\n    case constants.DELETE_TAG_ITEM:\r\n      newState.isSelectTag = false;\r\n      newState.selectedTag = \"\";\r\n      newState.gonghaoTagList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CHECK_PAGE_ATTR:\r\n      newState.isCreate = false;\r\n      return newState;\r\n    // 公号配置\r\n    case constants.GET_CONFIG_LIST:\r\n      newState.configList = action.configList;\r\n      return newState;\r\n    case constants.DELETE_CONFIG:\r\n      newState.configList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CHANGE_CONFIG_FORM:\r\n      newState.configForm = {...action.formInfo};\r\n      return newState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","const backTop = () => {\r\n  return new Promise((resolve, reject) => {\r\n    let timer;\r\n    timer = setInterval(function () {\r\n      let osTop =\r\n        document.documentElement.scrollTop || document.body.scrollTop;\r\n      let ispeed = Math.floor(-osTop / 1.2);\r\n      document.documentElement.scrollTop = document.body.scrollTop =\r\n        osTop + ispeed;\r\n      if (osTop === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 30);\r\n    resolve(null)\r\n  })\r\n};\r\n\r\nexport default backTop;","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\nimport backTop from '../../../../utils';\r\n\r\nexport const getGroupList = () => {\r\n  return (dispatch) => {\r\n    axios.get('/gonghaoTag')\r\n      .then(res => {\r\n        if (res.data.code === 1) {\r\n          let gonghaoTagList = res.data.data;\r\n          const action = {\r\n            type: constants.GET_GONGHAO_TAG_LIST,\r\n            gonghaoTagList\r\n          };\r\n          dispatch(action)\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const getAllGonghaoList = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let allGonghaoList = res.data.data,\r\n            gonghaoList = allGonghaoList;\r\n          const action = {\r\n            type: constants.GET_ALL_GONGHAO_LIST,\r\n            allGonghaoList,\r\n            gonghaoList\r\n          };\r\n          dispatch(action);\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changePage = (page) => {\r\n  return async dispatch => {\r\n    const action = {\r\n      type: constants.CHANGE_PAGE,\r\n      page\r\n    };\r\n    await backTop();\r\n    await dispatch(action);\r\n  }\r\n};\r\n\r\n\r\nexport const changeSearchInput = (searchName) => ({\r\n  type: constants.CHANGE_SEARCH_INPUT,\r\n  searchName\r\n});\r\n\r\nexport const searchByName = (nick_name) => {\r\n  return dispatch => {\r\n    axios.get('/conf/find_one', {params: {nick_name}})\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let allGonghaoList = res.data.data,\r\n            gonghaoList = allGonghaoList;\r\n          const action = {\r\n            type: constants.SEARCH_BY_NAME,\r\n            allGonghaoList, gonghaoList\r\n          };\r\n          dispatch(action);\r\n          message.success(\"查询成功\")\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeSelectValue = (key, value) => ({\r\n  type: constants.CHANGE_SELECT_VALUE,\r\n  key, value\r\n});\r\n\r\nexport const deleteGonghao = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认删除吗？\",\r\ntitle: \"提示\",\r\n      onOk: () => {\r\n        axios.get(\"/conf/del\", {\r\n          params: {id}\r\n        }).then(res => {\r\n          const action = {\r\n            type: constants.DELETE_GONGHAO,\r\n            index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"删除成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const jieguan = (code) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认接管吗？\",\r\ntitle: \"提示\",\r\n      onOk: () => {\r\n        axios.get(\"/conf/jieguan\", {\r\n          params: {code}\r\n        }).then(res => {\r\n          const action = {\r\n            type: constants.JIEGUAN_GONGHAO\r\n          };\r\n          dispatch(action);\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const addNewGonghao = () => {\r\n  return dispatch => {\r\n    axios.get('/component/componentAuthorize')\r\n      .then(res => {\r\n        window.open(res.data)\r\n      })\r\n  }\r\n};\r\n\r\nexport const openGonghaoModal = (id, group, attribute) => ({\r\n  type: constants.OPEN_GONGHAO_MODAL,\r\n  id, group, attribute\r\n});\r\n\r\nexport const closeGonghaoModal = () => ({\r\n  type: constants.CLOSE_GONGHAO_MODAL\r\n});\r\n\r\nexport const updateGonghaoInfo = gonghaoInfo => {\r\n  return dispatch => {\r\n    console.log(gonghaoInfo)\r\n    axios.put('/conf', {...gonghaoInfo})\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          message.success(res.data.msg);\r\n          dispatch(closeGonghaoModal());\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeGroup = name => ({\r\n  type: constants.CHANGE_GROUP,\r\n  name\r\n});\r\n\r\nexport const changeAttribute = attribute => ({\r\n  type: constants.CHANGE_ATTRIBUTE,\r\n  attribute\r\n});\r\n\r\nexport const selectTag = (selectedTag) => ({\r\n  type: constants.SESECT_TAG,\r\n  selectedTag\r\n});\r\n\r\nexport const removeTag = () => ({\r\n  type: constants.REMOVE_TAG\r\n});\r\n\r\nexport const tagConfirm = (group, props) => {\r\n  return (dispatch) => {\r\n    let name;\r\n    axios.post(\"/gonghaoTag\", {name: group})\r\n      .then(res => {\r\n        if (res.data.exist === 0) {\r\n          name = res.data.data\r\n        }\r\n        props.form.setFieldsValue({group})\r\n        const action = {\r\n          type: constants.TAG_CONFIRM,\r\n          name, group\r\n        };\r\n        dispatch(action)\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteTagItem = (id, index) => {\r\n  return (dispatch) => {\r\n    axios.delete('/gonghaoTag/' + id)\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.DELETE_TAG_ITEM,\r\n          index\r\n        };\r\n        dispatch(action)\r\n      });\r\n  }\r\n};\r\n\r\nexport const createForm = (gonghaoInfo, history) => {\r\n  return (dispatch) => {\r\n    axios.post(\"/conf/create\", gonghaoInfo).then(res => {\r\n      history.goBack();\r\n      const action = {\r\n        type: constants.CREATE_FORM,\r\n        gonghaoInfo\r\n      };\r\n      dispatch(action);\r\n      message.success(\"添加成功\")\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateForm = (gonghaoInfo, history) => {\r\n  return (dispatch) => {\r\n    axios.post(\"/conf/update\", gonghaoInfo).then(res => {\r\n      history.goBack();\r\n      getAllGonghaoList();\r\n      const action = {\r\n        type: constants.UPDATE_FORM,\r\n        gonghaoInfo\r\n      };\r\n      dispatch(action);\r\n      message.success(\"修改成功\")\r\n    });\r\n  }\r\n};\r\n\r\nexport const checkPageAttr = () => ({\r\n  type: constants.CHECK_PAGE_ATTR\r\n});\r\n\r\n// 公号配置\r\n\r\nexport const getConfigList = (code) => {\r\n  return (dispatch) => {\r\n    axios.get('/reply', {params: {code}})\r\n      .then(res => {\r\n        let configList = res.data.data;\r\n        const action = {\r\n          type: constants.GET_CONFIG_LIST,\r\n          configList\r\n        };\r\n        dispatch(action)\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteConfig = (id, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认删除吗？\",\r\n      title: \"提示\",\r\n      onOk: () => {\r\n        axios.get('/reply/del', {params: {id}})\r\n          .then(res => {\r\n          const action = {\r\n            type: constants.DELETE_CONFIG,\r\n            index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"删除成功\")\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n};\r\n\r\nexport const changeConfigForm = (formInfo) => ({\r\n  type: constants.CHANGE_CONFIG_FORM,\r\n  formInfo\r\n});\r\n\r\nexport const createConfigForm = (configInfo, history) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      title: \"确定新建一条规则吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/create\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.CREATE_CONFIG_FORM,\r\n            configInfo\r\n          };\r\n          dispatch(action);\r\n          message.success(\"创建成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const updateConfigForm = (configInfo, history, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      title: \"确定修改吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/update\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.UPDATE_CONFIG_FORM,\r\n            configInfo, index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"修改成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\n","export const GET_GONGHAO_TAG_LIST = \"gonghao/tuoguan/getGonghaoTagList\";\r\nexport const GET_ALL_GONGHAO_LIST = \"gonghao/tuoguan/getAllGonghaoList\";\r\nexport const CHANGE_PAGE = \"gonghao/tuoguan/changePage\";\r\nexport const SEARCH_BY_NAME = \"gonghao/tuoguan/searchByName\";\r\nexport const DELETE_GONGHAO = \"gonghao/tuoguan/deleteGonghao\";\r\nexport const JIEGUAN_GONGHAO = \"gonghao/tuoguan/jieguan\";\r\nexport const CHANGE_SEARCH_INPUT = \"gonghao/tuoguan/changeSearchInput\";\r\nexport const SESECT_TAG = \"gonghao/tuoguan/selectTag\";\r\nexport const REMOVE_TAG = \"gonghao/tuoguan/removeTag\";\r\nexport const TAG_CONFIRM = \"gonghao/tuoguan/tagConfirm\";\r\nexport const DELETE_TAG_ITEM = \"gonghao/tuoguan/deleteTagItem\";\r\nexport const CREATE_FORM = \"gonghao/tuoguan/createForm\";\r\nexport const UPDATE_FORM = \"gonghao/tuoguan/updateForm\";\r\nexport const CHECK_PAGE_ATTR = \"gonghao/tuoguan/checkPageAttr\";\r\nexport const OPEN_GONGHAO_MODAL = \"gonghao/tuoguan/openGonghaoModal\";\r\nexport const CLOSE_GONGHAO_MODAL = \"gonghao/tuoguan/closeGonghaoModal\";\r\nexport const CHANGE_GROUP = \"gonghao/tuoguan/changeGroup\";\r\nexport const CHANGE_ATTRIBUTE = \"gonghao/tuoguan/changeAttribute\";\r\nexport const CHANGE_SELECT_VALUE = \"gonghao/tuoguan/changeSelectValue\";\r\n\r\n// 公号配置\r\nexport const GET_CONFIG_LIST = \"gonghao/tuoguan/getConfigList\";\r\nexport const DELETE_CONFIG = \"gonghao/tuoguan/deleteConfig\";\r\nexport const CREATE_CONFIG_FORM = \"gonghao/tuoguan/createConfigForm\";\r\nexport const UPDATE_CONFIG_FORM = \"gonghao/tuoguan/updateConfigForm\";\r\nexport const CHANGE_CONFIG_FORM = \"gonghao/tuoguan/changeConfigForm\";\r\n","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  menuList: [],\r\n  menuIndex: -1,\r\n  secMenuIndex: -1,\r\n  isSubmit: false,\r\n  allCodes: [],\r\n  targetKeys: [],\r\n  sub_button: {\r\n    name: \"子菜单名称\",\r\n    type: \"view\",\r\n    key: \"\",\r\n    url: \"\"\r\n  },\r\n  menuForm: {\r\n    name: \"菜单名称\",\r\n    type: \"view\",\r\n    key: \"\",\r\n    url: \"\",\r\n    sub_button: []\r\n  },\r\n  menuInfo: {\r\n    title: \"\",\r\n    individual: false,\r\n    sex: \"0\",\r\n    values: [],\r\n    codes: []\r\n  }\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case constants.GET_MENU_LIST:\r\n      newState.menuList = action.menuList;\r\n      return newState;\r\n    case constants.DELETE_MENU:\r\n      newState.menuList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.HANDLE_INFO_CHANGE:\r\n      newState.menuInfo[action.name] = action.value;\r\n      return newState;\r\n    case constants.HANDLE_INDIVIDUAL_CHANGE:\r\n      newState.menuInfo.individual = action.value;\r\n      Object.assign(newState.menuForm, {\r\n        sex: 0\r\n      });\r\n      return newState;\r\n    case constants.HANDLE_INPUT_CHANGE:\r\n      newState.menuForm[action.name] = action.value;\r\n      action.name === \"type\" && Object.assign(newState.menuForm, {\r\n        key: \"\",\r\n        url: \"\"\r\n      });\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm})\r\n      return newState;\r\n    case constants.HANDLE_SUB_INPUT_CHANGE:\r\n      newState.sub_button[action.name] = action.value;\r\n      action.name === \"type\" && Object.assign(newState.sub_button, {\r\n        key: \"\",\r\n        url: \"\"\r\n      });\r\n      newState.menuForm.sub_button.splice(newState.secMenuIndex, 1, {...newState.sub_button});\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm})\r\n      return newState;\r\n    case constants.ADD_FIRST_MENU:\r\n      newState.menuForm = {\r\n        name: \"菜单名称\",\r\n        type: \"view\",\r\n        key: \"\",\r\n        url: \"\",\r\n        sub_button: []\r\n      };\r\n      newState.menuInfo.values.push({...newState.menuForm});\r\n      newState.menuIndex = newState.menuInfo.values.length - 1;\r\n      return newState;\r\n    case constants.EDIT_MENU:\r\n      newState.menuIndex = action.index;\r\n      newState.menuForm = {...action.data};\r\n      newState.menuForm.sub_button && (newState.sub_button = {...newState.menuForm.sub_button[0]});\r\n      return newState;\r\n    case constants.ADD_SECOND_MENU:\r\n      newState.sub_button = {\r\n        name: \"子菜单名称\",\r\n        type: \"view\",\r\n        key: \"\",\r\n        url: \"\"\r\n      };\r\n      newState.menuForm.sub_button.push({...newState.sub_button});\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm});\r\n      newState.secMenuIndex = newState.menuForm.sub_button.length - 1;\r\n      return newState;\r\n    case constants.EDIT_SEC_MENU:\r\n      newState.secMenuIndex = action.index;\r\n      newState.sub_button = {...action.data};\r\n      return newState;\r\n    case constants.DELETE_Fir_MENU:\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1);\r\n      newState.menuIndex = newState.menuInfo.values.length - 1;\r\n      newState.menuForm = newState.menuInfo.values[0] || {\r\n        name: \"菜单名称\",\r\n        type: \"view\",\r\n        key: \"\",\r\n        url: \"\",\r\n        sub_button: []\r\n      };\r\n      return newState;\r\n    case constants.DELETE_SUB_MENU:\r\n      newState.menuForm.sub_button.splice(newState.secMenuIndex, 1);\r\n      newState.menuInfo.values[newState.menuIndex].sub_button.splice(newState.secMenuIndex, 1);\r\n      newState.secMenuIndex = newState.menuForm.sub_button.length - 1;\r\n      newState.sub_button = newState.menuForm.sub_button[0] || {\r\n        name: \"子菜单名称\",\r\n        type: \"view\",\r\n        key: \"\",\r\n        url: \"\"\r\n      };\r\n      return newState;\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = [...action.allCodes];\r\n      return newState;\r\n    case constants.CHANGE_GONGHAO:\r\n      newState.menuInfo.codes = newState.targetKeys = [...action.targetKeys];\r\n      return newState;\r\n    case constants.OPEN_MADAL:\r\n      newState.isSubmit = true;\r\n      return newState;\r\n    case constants.SUBMIT_MENU:\r\n      newState.isSubmit = false;\r\n      return newState;\r\n    case constants.CANCEL_MENU:\r\n      newState.isSubmit = false;\r\n      return newState;\r\n    case constants.INIT_MENU_INFO:\r\n      newState.menuInfo = action.record;\r\n      newState.menuInfo.id = action.record._id;\r\n      newState.targetKeys = [...newState.menuInfo.codes];\r\n      newState.menuForm = {...newState.menuInfo.values[0]};\r\n      if(newState.menuForm.sub_button) {\r\n        newState.sub_button = {...newState.menuForm.sub_button[0]};\r\n      }\r\n      return newState;\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n\r\nexport const getMenuList = () => {\r\n  return dispatch => {\r\n    axios.get('/menu')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let menuList = res.data.data.reverse();\r\n          const action = {\r\n            type: constants.GET_MENU_LIST,\r\n            menuList\r\n          };\r\n          dispatch(action);\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteMenu = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/menu/del\", {params: {id: id}})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              const action = {\r\n                type: constants.DELETE_MENU,\r\n                index\r\n              };\r\n              dispatch(action);\r\n              message.success(res.data.success)\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const handleInfoChange = (value, name) => ({\r\n  type: constants.HANDLE_INFO_CHANGE,\r\n  value, name\r\n});\r\n\r\nexport const handleIndividualChange = value => ({\r\n  type: constants.HANDLE_INDIVIDUAL_CHANGE,\r\n  value\r\n});\r\n\r\nexport const handleInputChange = (name, value) => ({\r\n  type: constants.HANDLE_INPUT_CHANGE,\r\n  name, value\r\n});\r\n\r\nexport const handleSubInputChange = (name, value) => ({\r\n  type: constants.HANDLE_SUB_INPUT_CHANGE,\r\n  name, value\r\n});\r\n\r\nexport const addFirstMenu = () => ({\r\n  type: constants.ADD_FIRST_MENU\r\n});\r\n\r\nexport const editMenu = (data, index) => ({\r\n  type: constants.EDIT_MENU,\r\n  index, data\r\n});\r\n\r\nexport const addSecondMenu = () => ({\r\n  type: constants.ADD_SECOND_MENU\r\n});\r\n\r\nexport const openModal = () => ({\r\n  type: constants.OPEN_MADAL\r\n});\r\n\r\nexport const submitMenu = props => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定提交吗？\",\r\n      onOk: () => {\r\n        axios.post(props.history.location.query ? \"/menu/update\" : \"/menu/create\", {...props.menuInfo})\r\n          .then(res => {\r\n            const action = {\r\n              type: constants.SUBMIT_MENU\r\n            };\r\n            dispatch(action);\r\n            props.history.goBack();\r\n            resetState();\r\n          })\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n\r\nexport const cancelMenu = () => ({\r\n  type: constants.CANCEL_MENU\r\n});\r\n\r\n\r\nexport const editSecMenu = (data, index) => ({\r\n  type: constants.EDIT_SEC_MENU,\r\n  index, data\r\n});\r\n\r\nexport const deleteFirMenu = () => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        dispatch({ type: constants.DELETE_Fir_MENU})\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteSubMenu = () => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        dispatch({ type: constants.DELETE_SUB_MENU})\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        let allCodes = res.data.data;\r\n        const action = {\r\n          type: constants.GET_ALL_CODES,\r\n          allCodes\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeGonghao = targetKeys => ({\r\n  type: constants.CHANGE_GONGHAO,\r\n  targetKeys\r\n});\r\n\r\nexport const initMenuInfo = record => ({\r\n  type: constants.INIT_MENU_INFO,\r\n  record\r\n});\r\n\r\n\r\n","export const GET_MENU_LIST = \"gonghao/menu/getMenuList\";\r\nexport const DELETE_MENU = \"gonghao/menu/deleteMenu\";\r\nexport const HANDLE_INFO_CHANGE = \"gonghao/menu/handleInfoChange\";\r\nexport const HANDLE_INDIVIDUAL_CHANGE = \"gonghao/menu/handleIndividualChange\";\r\nexport const HANDLE_INPUT_CHANGE = \"gonghao/menu/handleInputChange\";\r\nexport const HANDLE_SUB_INPUT_CHANGE = \"gonghao/menu/handleSubInputChange\";\r\nexport const ADD_FIRST_MENU = \"gonghao/menu/addFirstMenu\";\r\nexport const ADD_SECOND_MENU = \"gonghao/menu/addSecondMenu\";\r\nexport const EDIT_MENU = \"gonghao/menu/editMenu\";\r\nexport const EDIT_SEC_MENU = \"gonghao/menu/editSecMenu\";\r\nexport const SUBMIT_MENU = \"gonghao/menu/submitMenu\";\r\nexport const OPEN_MADAL = \"gonghao/menu/openModal\";\r\nexport const CANCEL_MENU = \"gonghao/menu/cancelMenu\";\r\nexport const DELETE_Fir_MENU = \"gonghao/menu/deleteFirMenu\";\r\nexport const DELETE_SUB_MENU = \"gonghao/menu/deleteSubMenu\";\r\nexport const GET_ALL_CODES = \"gonghao/menu/getAllCodes\";\r\nexport const CHANGE_GONGHAO = \"gonghao/menu/changeGonghao\";\r\nexport const INIT_MENU_INFO = \"gonghao/menu/initMenuInfo\";\r\nexport const RESET_STATE = \"gonghao/menu/resetState\";\r\n","import * as constants from './constants';\r\n\r\nconst resetFields = {\r\n  type: 0,\r\n  sex: 3,\r\n  attribute: 1,\r\n  replyType: 0,\r\n  codes: [],\r\n  articles: []\r\n};\r\n\r\nconst defaultState = {\r\n  // 公号配置\r\n  replyMessageList: [],\r\n  messageInfo: JSON.parse(JSON.stringify(resetFields)),\r\n  allCodes: [],\r\n  selectGonghaoModal: true,\r\n  updateIndex: -1,\r\n  messageIndex: -1\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    // 公号配置\r\n    case constants.GET_REPLY_MESSAGE_LIST:\r\n      newState.replyMessageList = action.replyMessageList;\r\n      return newState;\r\n    case constants.DELETE_REPLY_MESSAGE:\r\n      newState.replyMessageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = action.allCodes;\r\n      return newState;\r\n    case constants.CLOSE_SELECT_MODAL:\r\n      newState.selectGonghaoModal = false;\r\n      return newState;\r\n    case constants.OPEN_SELECT_MODAL:\r\n      newState.selectGonghaoModal = true;\r\n      return newState;\r\n    case constants.CHANGE_MESSAGE_INFO:\r\n      newState.messageInfo[action.key] = action.value;\r\n      return newState;\r\n    case constants.ADD_TO_LIST:\r\n      const { title, picurl, url, description } = newState.messageInfo;\r\n      newState.messageInfo.articles.push({...{ title, picurl, url, description }});\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      return newState;\r\n    case constants.UPDATE_MESSAGE_ITEM:\r\n      const { item, index} = action;\r\n      Object.assign(newState.messageInfo, {...item});\r\n      newState.updateIndex = index;\r\n      return newState;\r\n    case constants.UPDATE_CURRENT_MESSAGE:\r\n      let message = {\r\n        title: newState.messageInfo.title,\r\n        picurl: newState.messageInfo.picurl,\r\n        url: newState.messageInfo.url,\r\n        description: newState.messageInfo.description\r\n      };\r\n      newState.messageInfo.articles.splice(newState.updateIndex, 1, {...message});\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n    case constants.DELETE_CURRENT_MESSAGE:\r\n      newState.messageInfo.articles.splice(newState.updateIndex, 1);\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n\r\n    case constants.INIT_STATE:\r\n      newState.messageInfo = JSON.parse(JSON.stringify(action.record));\r\n      newState.messageIndex = action.index;\r\n      if(newState.messageInfo.replyType === 1) {\r\n        Object.assign(newState.messageInfo, newState.messageInfo.articles[0]);\r\n        newState.updateIndex = 0;\r\n      }\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = JSON.parse(JSON.stringify(defaultState));\r\n      return newState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n\r\n// 公号配置\r\n\r\nexport const getReplyMessageList = () => {\r\n  return dispatch => {\r\n    axios.get('/reply')\r\n      .then(res => {\r\n        let replyMessageList = res.data.data;\r\n        const action = {\r\n          type: constants.GET_REPLY_MESSAGE_LIST,\r\n          replyMessageList\r\n        };\r\n        dispatch(action)\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteReplyMessage = (_id, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认删除吗？\",\r\n      title: \"提示\",\r\n      onOk: () => {\r\n        axios.get('/reply/del', {params: {_id}})\r\n          .then(res => {\r\n          const action = {\r\n            type: constants.DELETE_REPLY_MESSAGE,\r\n            index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"删除成功\")\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          const {data: allCodes} = res.data;\r\n          dispatch({ type: constants.GET_ALL_CODES, allCodes });\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const closeSelectModal = () => ({\r\n  type: constants.CLOSE_SELECT_MODAL\r\n});\r\n\r\nexport const openSelectModal = () => ({\r\n  type: constants.OPEN_SELECT_MODAL\r\n});\r\n\r\nexport const changeMessageInfo = (key, value) => ({\r\n  type: constants.CHANGE_MESSAGE_INFO,\r\n  key, value\r\n});\r\n\r\nexport const addToList = () => ({\r\n  type: constants.ADD_TO_LIST\r\n});\r\n\r\nexport const updateMessageItem = (item, index) => ({\r\n  type: constants.UPDATE_MESSAGE_ITEM,\r\n  item, index\r\n});\r\n\r\nexport const updateCurrentMessage = () => ({\r\n  type: constants.UPDATE_CURRENT_MESSAGE\r\n});\r\n\r\nexport const deleteCurrentMessage = () => ({\r\n  type: constants.DELETE_CURRENT_MESSAGE\r\n});\r\n\r\nexport const createConfigForm = (configInfo, history) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      title: \"确定新建一条规则吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/create\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.CREATE_CONFIG_FORM,\r\n            configInfo\r\n          };\r\n          dispatch(action);\r\n          message.success(\"创建成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const updateConfigForm = (configInfo, history, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      title: \"确定修改吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/update\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.UPDATE_CONFIG_FORM,\r\n            configInfo, index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"修改成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n\r\nexport const initState = (record, index) => ({\r\n  type: constants.INIT_STATE,\r\n  record, index\r\n});","export const GET_REPLY_MESSAGE_LIST = \"gonghao/reply/getReplyMessageList\";\r\nexport const DELETE_REPLY_MESSAGE = \"gonghao/reply/deleteReplyMessage\";\r\n\r\nexport const INIT_STATE = \"gonghao/reply/initState\";\r\n// 获取所有公号\r\nexport const GET_ALL_CODES = \"gonghao/reply/getAllCodes\";\r\nexport const CLOSE_SELECT_MODAL = \"gonghao/reply/closeSelectModal\";\r\nexport const OPEN_SELECT_MODAL = \"gonghao/reply/openSelectModal\";\r\nexport const ADD_TO_LIST = \"gonghao/reply/addToList\";\r\nexport const CHANGE_MESSAGE_INFO = \"gonghao/reply/changeMessageInfo\";\r\nexport const UPDATE_MESSAGE_ITEM = \"gonghao/reply/updateMessageItem\";\r\nexport const UPDATE_CURRENT_MESSAGE = \"gonghao/reply/updateCurrentMessage\";\r\nexport const DELETE_CURRENT_MESSAGE = \"gonghao/reply/deleteCurrentMessage\";\r\n\r\n\r\nexport const CREATE_CONFIG_FORM = \"gonghao/reply/createConfigForm\";\r\nexport const UPDATE_CONFIG_FORM = \"gonghao/reply/updateConfigForm\";\r\n\r\n\r\nexport const RESET_STATE = \"gonghao/reply/resetState\";","import { combineReducers } from 'redux';\r\nimport { reducer as tuoguanReducer } from './tuoguan/store';\r\nimport { reducer as menuReducer } from './menu/store';\r\nimport { reducer as replyReducer } from './reply/store';\r\n\r\nconst reducer = combineReducers({\r\n  tuoguan: tuoguanReducer,\r\n  menu: menuReducer,\r\n  reply: replyReducer,\r\n});\r\n\r\nexport default reducer;","export const GET_GROUP_GONGHAO = \"gonghao/group/getGroupGonghao\";\r\nexport const CHANGE_SEARCH_INPUT = \"gonghao/group/changeSearchInput\";\r\nexport const SEARCH_BY_NAME = \"gonghao/group/search\";\r\n\r\n// 群发素材\r\nexport const GET_GROUP_MATERIAL = \"gonghao/group/getMessageList\";\r\nexport const OPEN_MODAL = \"gonghao/group/openModal\";\r\nexport const OPEN_TIMING_MODAL = \"gonghao/group/openTimingModal\";\r\nexport const CHANGE_TAG_ID = \"gonghao/group/changeTagId\";\r\nexport const GET_TAG_LIST = \"gonghao/group/getTagList\";\r\nexport const CLOSE_MODAL = \"gonghao/group/closeModal\";\r\nexport const CHANGE_TIMING_STATE = \"gonghao/group/changeTimingState\";\r\nexport const CHANGE_TIME = \"gonghao/group/changeTime\";\r\nexport const COPY = \"gonghao/group/copy\";\r\nexport const DELETE_MATERIAL = \"gonghao/group/deleteMaterial\";\r\nexport const CLEAR_MATERIAL = \"gonghao/group/clearMaterial\";\r\nexport const OPEN_UPDATE_MATERIAL_MODAL = \"gonghao/group/openUpdateMaterialModal\";\r\nexport const CLOSE_UPDATE_MATERIAL_MODAL = \"gonghao/group/closeUpdateMaterialModal\";\r\nexport const CHANGE_CONTENT_SOURCE_URL = \"gonghao/group/changeContentSourceUrl\";\r\n\r\n// 群发历史\r\nexport const GET_HISTORY_LIST = \"gonghao/group/getHistoryList\";\r\nexport const OPEN_MSG_MODAL = \"gonghao/group/openMsgModal\";\r\nexport const CLOSE_MSG_MODAL = \"gonghao/group/closeMsgModal\";\r\nexport const CHANGE_ARTICLE_IDX = \"gonghao/group/changeArticleIdx\";\r\nexport const CLEAR_HISTORY = \"gonghao/group/clearHistory\";\r\nexport const CHANGE_DATE = \"gonghao/group/changeDate\";\r\n\r\n\r\n\r\n\r\nexport const RESET_STATE = \"gonghao/group/resetState\";\r\n","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  messageList: [],\r\n  isComplete: true,\r\n  tagList: [],\r\n  sendModal: false,\r\n  sendTimingModal: false,\r\n  date: \"\",\r\n  time: \"\",\r\n  sendInfo: {\r\n    id: \"\",\r\n    tagId: null,\r\n    mediaId: \"\"\r\n  },\r\n  sendTimingInfo: {\r\n    id: \"\",\r\n    tagId: null,\r\n    isTiming: false,\r\n    timing: null\r\n  },\r\n  updateInfo: {\r\n    \"media_id\": \"\",\r\n    \"index\": null,\r\n    \"articles\": {\r\n      \"content_source_url\": \"\"\r\n    },\r\n    id: \"\"\r\n  },\r\n  updateMaterialModal: false,\r\n\r\n  historyList: [],\r\n  historyMsgModal: false,\r\n  delMsgInfo: {\r\n    code: null,\r\n    msg_id: \"\",\r\n    article_idx: \"\"\r\n  },\r\n  delDate: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n\r\n    // 群发素材\r\n\r\n    case constants.GET_GROUP_MATERIAL:\r\n      newState.messageList = [...action.data];\r\n      return newState;\r\n    case constants.GET_TAG_LIST:\r\n      newState.tagList = [...action.data];\r\n      return newState;\r\n    case constants.CHANGE_TAG_ID:\r\n      !action.isTiming && (newState.sendInfo.tagId = action.value)\r\n      action.isTiming && (newState.sendTimingInfo.tagId = action.value)\r\n      return newState;\r\n    case constants.CLOSE_MODAL:\r\n      newState.sendInfo = newState.sendTimingInfo = {};\r\n      newState.sendTimingInfo.timing = Date.now();\r\n      newState.sendTimingInfo.isTiming = newState.sendTimingModal = newState.sendModal = false;\r\n      return newState;\r\n    case constants.OPEN_MODAL:\r\n      newState.sendInfo.id = action.record._id;\r\n      newState.sendInfo.tagId = action.record.tagId;\r\n      newState.sendInfo.mediaId = action.record.media_id;\r\n      newState.sendModal = true;\r\n      return newState;\r\n    case constants.OPEN_TIMING_MODAL:\r\n      newState.sendTimingInfo.id = action.record._id;\r\n      newState.sendTimingInfo.tagId = action.record.tagId;\r\n      newState.sendTimingInfo.isTiming = action.record.isTiming;\r\n      newState.sendTimingInfo.timing = action.record.timing;\r\n      newState.sendTimingModal = true;\r\n      return newState;\r\n    case constants.CHANGE_TIMING_STATE:\r\n      newState.sendTimingInfo.isTiming = action.value;\r\n      return newState;\r\n    case constants.CHANGE_TIME:\r\n      if (action.timeType === \"date\") {\r\n        newState.date = action.time\r\n      } else {\r\n        newState.time = action.time\r\n      }\r\n      let dateTime = new Date(newState.date + \" \" + newState.time);\r\n      newState.sendTimingInfo.timing = dateTime.getTime();\r\n      return newState;\r\n    case constants.COPY:\r\n      newState.messageList.unshift({...action.data});\r\n      return newState;\r\n    case constants.DELETE_MATERIAL:\r\n      newState.messageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CLEAR_MATERIAL:\r\n      newState.messageList = [];\r\n      return newState;\r\n    case constants.OPEN_UPDATE_MATERIAL_MODAL:\r\n      newState.updateMaterialModal = true;\r\n      newState.updateInfo = action.updateInfo;\r\n      return newState;\r\n    case constants.CLOSE_UPDATE_MATERIAL_MODAL:\r\n      newState.updateMaterialModal = false;\r\n      newState.updateInfo.articles.content_source_url = \"\";\r\n      return newState;\r\n    case constants.CHANGE_CONTENT_SOURCE_URL:\r\n      newState.updateInfo.articles.content_source_url = action.content_source_url;\r\n      return newState;\r\n\r\n    // 群发历史\r\n    case constants.GET_HISTORY_LIST:\r\n      newState.historyList = [...action.data];\r\n      return newState;\r\n    case constants.OPEN_MSG_MODAL:\r\n      newState.historyMsgModal = true;\r\n      newState.delMsgInfo.code = action.code;\r\n      newState.delMsgInfo.msg_id = action.msg_id;\r\n      return newState;\r\n    case constants.CLOSE_MSG_MODAL:\r\n      newState.historyMsgModal = false;\r\n      newState.delMsgInfo.article_idx = \"\";\r\n      return newState;\r\n    case constants.CHANGE_ARTICLE_IDX:\r\n      newState.delMsgInfo.article_idx = action.value;\r\n      return newState;\r\n    case constants.CLEAR_HISTORY:\r\n      newState.historyList = [];\r\n      return newState;\r\n    case constants.CHANGE_DATE:\r\n      newState.delDate = action.delDate;\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n// 群发公号\r\nconst getGonghaoList = () => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let gonghaoList = res.data.data;\r\n          const action = {\r\n            type: constants.GET_GROUP_GONGHAO,\r\n            gonghaoList\r\n          };\r\n          resolve(action)\r\n        } else {\r\n          reject('error message: 没有数据')\r\n        }\r\n      })\r\n  });\r\n};\r\n\r\nexport const getGroupGonghao = () => {\r\n  return async dispatch => {\r\n    let action = await getGonghaoList();\r\n    dispatch(action);\r\n  }\r\n};\r\n\r\nexport const getMaterial = code => {\r\n  return dispatch => {\r\n    if(code) {\r\n      axios.get('/material', {params: {code}})\r\n        .then(res => {\r\n          message.success(res.data.success);\r\n          setTimeout(function () {\r\n            dispatch(getMessageList(code))\r\n          }, 3000)\r\n        })\r\n    } else {\r\n      message.warning(\"请选择公号后再试\")\r\n    }\r\n  }\r\n};\r\n\r\nexport const openUpdateMaterialModal = updateInfo => ({\r\n  type: constants.OPEN_UPDATE_MATERIAL_MODAL,\r\n  updateInfo\r\n});\r\n\r\nexport const closeUpdateMaterialModal = () => ({\r\n  type: constants.CLOSE_UPDATE_MATERIAL_MODAL\r\n});\r\n\r\nexport const updateMaterial = (updateInfo, code) => {\r\n  return dispatch => {\r\n    axios.put(\"/material/contentSourceUrl\", {...updateInfo, code})\r\n      .then(res => {\r\n        const { code, msg } = res.data;\r\n        if(code === 1) {\r\n          message.success(msg);\r\n          dispatch(closeUpdateMaterialModal())\r\n        } else {\r\n          message.error(msg)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeContentSourceUrl = content_source_url => ({\r\n  type: constants.CHANGE_CONTENT_SOURCE_URL,\r\n  content_source_url\r\n});\r\n\r\n// 群发素材\r\n\r\nexport const getMessageList = code => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"/material/show\", { params: { code: Number(code) } })\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        const action = {\r\n          type: constants.GET_GROUP_MATERIAL,\r\n          data\r\n        };\r\n        dispatch(action)\r\n      });\r\n  }\r\n};\r\n\r\nexport const getTagList = code => {\r\n  return dispatch => {\r\n    axios.get(\"/material/tag\", {params: {code}})\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        const action = {\r\n          type: constants.GET_TAG_LIST,\r\n          data\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeTagId = (value, isTiming) => ({\r\n  type: constants.CHANGE_TAG_ID,\r\n  value, isTiming\r\n});\r\n\r\nexport const closeModal = () => ({\r\n  type: constants.CLOSE_MODAL\r\n});\r\n\r\nexport const openModal = record => ({\r\n  type: constants.OPEN_MODAL,\r\n  record\r\n});\r\n\r\nexport const sendMessage = sendInfo => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定发送消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/material/sendMsg\", {params: {...sendInfo}})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            dispatch(closeModal());\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const openTimingModal = record => ({\r\n  type: constants.OPEN_TIMING_MODAL,\r\n  record\r\n});\r\n\r\nexport const sendTimingMessage = (sendTimingInfo, code) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定定时发送消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/material/send_timing\", {params: {...sendTimingInfo}})\r\n          .then(res => {\r\n            message.info(\"设置成功\");\r\n            dispatch(getMessageList(code));\r\n            dispatch(closeModal());\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeTimingState = value => ({\r\n  type: constants.CHANGE_TIMING_STATE,\r\n  value\r\n});\r\n\r\nexport const changeTime = (time, timeType) => ({\r\n  type: constants.CHANGE_TIME,\r\n  time, timeType\r\n});\r\n\r\nexport const copy = id => {\r\n  return dipatch => {\r\n    Modal.confirm({\r\n      title: \"确定复制这条素材吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/material/copy\", {id})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              const { data } = res.data;\r\n              message.success(res.data.success);\r\n              const action = {\r\n                type: constants.COPY,\r\n                data\r\n              };\r\n              dipatch(action)\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const deleteMaterial = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条素材吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/material/del\", {params: {id}})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.success(res.data.success);\r\n              const action = {\r\n                type: constants.DELETE_MATERIAL,\r\n                 index\r\n              };\r\n              dispatch(action);\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const clearMaterial = code => {\r\n  return dispatch => {\r\n    if(code) {\r\n      Modal.confirm({\r\n        title: \"确定清空列表吗？\",\r\n        onOk: () => {\r\n          axios.get(\"/material/clear\", { params: { code } })\r\n            .then(res => {\r\n              message.info(res.data.success);\r\n              const action = {\r\n                type: constants.CLEAR_MATERIAL\r\n              };\r\n              dispatch(action);\r\n            });\r\n        }\r\n      })\r\n    } else {\r\n      message.warning(\"请选择公号后再试\")\r\n    }\r\n  }\r\n};\r\n\r\n// 群发历史\r\n\r\nexport const getHistoryList = code => {\r\n  return dispatch => {\r\n    axios.get(\"/history\", {params: {code}})\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        const action = {\r\n          type: constants.GET_HISTORY_LIST,\r\n          data\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const checkSendState = (code, msg_id) => {\r\n  return dispatch => {\r\n    axios.get(\"/history/state\", { params: { code, msg_id }})\r\n      .then(res => {\r\n        message.info(res.data.data.msg_status)\r\n      })\r\n  }\r\n};\r\n\r\nexport const openMsgModal = (code, msg_id) => ({\r\n  type: constants.OPEN_MSG_MODAL,\r\n  code, msg_id\r\n});\r\n\r\nexport const closeMsgModal = () => ({\r\n  type: constants.CLOSE_MSG_MODAL\r\n});\r\n\r\nexport const changeArticleIdx = value => ({\r\n  type: constants.CHANGE_ARTICLE_IDX,\r\n  value\r\n});\r\n\r\nexport const deleteMsg = (delMsgInfo) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除吗？\",\r\n      onOk: () => {\r\n        axios.get('/history/del_msg', {\r\n          params: {...delMsgInfo}\r\n        }).then(res => {\r\n          message.info(res.data.success);\r\n          dispatch(closeMsgModal());\r\n        })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const clearHistory = code => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定清空列表？\",\r\n      onOk: () => {\r\n        axios.get(\"/history/clear\", {params: {code}})\r\n          .then(res => {\r\n            message.success(res.data.success);\r\n            const action = {\r\n              type: constants.CLEAR_HISTORY\r\n            };\r\n            dispatch(action);\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeDate = delDate => ({\r\n  type: constants.CHANGE_DATE,\r\n  delDate\r\n});\r\n\r\nexport const deleteMany = (code, date) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: '确认删除吗?:',\r\n      onOk: () => {\r\n        axios.get('/history/delByDate', {params: {date, code}})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            dispatch(getHistoryList())\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n","import * as constants from './constants';\r\n\r\nconst initContent = {\r\n  description: \"\",\r\n  title: \"\",\r\n  url: \"\",\r\n  picurl: \"\"\r\n};\r\n\r\nconst defaultState = {\r\n  allMessageList: [],\r\n  kefuMessageList: [],\r\n  messageType: 3,\r\n  kefuMessageInfo: {\r\n    contents: [],\r\n    type: 0,\r\n    img: \"\",\r\n    img_path: \"\",\r\n    channel: 0,\r\n    sex: \"all\",\r\n    timing_time: new Date(),\r\n    delay: 5,\r\n    tagId: \"\",\r\n    tagName: \"\",\r\n    codes: [],\r\n    remarks: \"\",\r\n    action_type: 0\r\n  },\r\n  content: initContent,\r\n  messageIndex: -1,\r\n  paramsModal: false,\r\n  allCodes: [],\r\n  selectGonghaoModal: true\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case constants.GET_KEFU_MESSAGE_LIST:\r\n      newState.allMessageList = newState.kefuMessageList = [...action.kefuMessageList];\r\n      return newState;\r\n    case constants.CREATE_KEFU_MESSAGE:\r\n      newState.kefuMessageList.unshift({...action.data});\r\n      return newState;\r\n    case constants.DELETE_LAST_MESSAGE:\r\n      newState.kefuMessageList = [];\r\n      return newState;\r\n    case constants.DELETE_MESSAGE:\r\n      newState.kefuMessageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.HANDLE_CHANGE_TYPE:\r\n      const { messageType: type } = action;\r\n      newState.messageType = type;\r\n      type === 0 && (newState.kefuMessageList = newState.allMessageList.filter(item => !(item.delay || item.is_timing)));\r\n      type === 1 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item.delay));\r\n      type === 2 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item.is_timing));\r\n      type === 3 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item));\r\n      return newState;\r\n\r\n    // 编辑客服消息\r\n    case constants.CHANGE_CONTENT_VALUE:\r\n      newState.content[action.name] = action.value;\r\n      newState.kefuMessageInfo.contents.splice(newState.messageIndex, 1, newState.content)\r\n      return newState;\r\n    case constants.CHANGE_MESSAGE_VALUE:\r\n      newState.kefuMessageInfo[action.name] = action.value;\r\n      if(action.name === \"type\") {\r\n        newState.content = initContent;\r\n        newState.kefuMessageInfo.contents = [];\r\n        newState.kefuMessageInfo.img = newState.kefuMessageInfo.img_path =  \"\";\r\n        newState.messageIndex = -1;\r\n        if(action.value === 0) {\r\n          newState.kefuMessageInfo.contents.push(newState.content);\r\n          newState.messageIndex = 0;\r\n        }\r\n      }\r\n      if(action.name === \"channel\") {\r\n        Object.assign(newState.kefuMessageInfo, {timing_time: new Date(), delay: 5})\r\n      }\r\n      return newState;\r\n    case constants.ADD_MESSAGE:\r\n      newState.content = initContent;\r\n      newState.kefuMessageInfo.contents.push(newState.content);\r\n      newState.messageIndex = newState.kefuMessageInfo.contents.length - 1;\r\n      return newState;\r\n    case constants.SELECT_MESSAGE:\r\n      newState.content = {...action.info};\r\n      newState.messageIndex = action.index;\r\n      return newState;\r\n    case constants.SELECT_PARAMS:\r\n      newState.paramsModal = true;\r\n      return newState;\r\n    case constants.HIDE_PARAMS_MODAL:\r\n      newState.paramsModal = false;\r\n      return newState;\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = [...action.allCodes];\r\n      return newState;\r\n    case constants.CHANGE_GONGHAO:\r\n      newState.kefuMessageInfo.codes = [...action.codes];\r\n      return newState;\r\n    case constants.OPEN_SELECT_MODAL:\r\n      newState.selectGonghaoModal = true;\r\n      return newState;\r\n    case constants.CLOSE_SELECT_MODAL:\r\n      newState.selectGonghaoModal = false;\r\n      return newState;\r\n    case constants.INIT_KEFU_MESSAGE_INFO:\r\n      newState.kefuMessageInfo = {...action.query};\r\n      newState.kefuMessageInfo.contents.length > 0 && (newState.content = {...newState.kefuMessageInfo.contents[0]});\r\n      if(newState.kefuMessageInfo.type === 0) newState.messageIndex = 0;\r\n      if(action.query.task) {\r\n        newState.kefuMessageInfo.channel = 1\r\n      } else if(action.query.is_timing) {\r\n        newState.kefuMessageInfo.channel = 2\r\n      } else {\r\n        newState.kefuMessageInfo.channel = 0\r\n      }\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n// 群发公号\r\nconst getData = () => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(\"/message\", {params: {sort: \"_id\"}})\r\n      .then(res => {\r\n        if (res.data.messages.length > 0) {\r\n          let kefuMessageList = res.data.messages;\r\n          const action = {\r\n            type: constants.GET_KEFU_MESSAGE_LIST,\r\n            kefuMessageList\r\n          };\r\n          resolve(action)\r\n        } else {\r\n          reject('error message: 没有数据')\r\n        }\r\n      })\r\n  });\r\n};\r\n\r\nexport const getKefuMessageList = () => {\r\n  return async dispatch => {\r\n    let action = await getData();\r\n    dispatch(action);\r\n  }\r\n};\r\n\r\nexport const createKefuMessage = record => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定新增一条客服消息吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/message/create\", {...record})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              let data = res.data.data\r\n              message.info(record._id ? \"复制成功\" : res.data.success);\r\n              const action = {\r\n                type: constants.CREATE_KEFU_MESSAGE,\r\n                data\r\n              };\r\n              dispatch(action);\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const deleteMessage = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条客服消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/message/delete\", { params: { id } })\r\n          .then(res => {\r\n            if (res.data.data.length === 0) {\r\n              message.info(\"已删除最后一条数据\");\r\n              const action = {\r\n                type: constants.DELETE_LAST_MESSAGE\r\n              };\r\n              dispatch(action);\r\n            } else {\r\n              message.info(res.data.success);\r\n              const action = {\r\n                type: constants.DELETE_MESSAGE,\r\n                index\r\n              };\r\n              dispatch(action);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const sendKefuMessage = (id, tagId) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定发送消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/message/send\", { params: { id, tagId, take_over: true } })\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const handleChangeType = messageType => ({\r\n  type: constants.HANDLE_CHANGE_TYPE,\r\n  messageType\r\n});\r\n\r\n// 编辑客服消息\r\nexport const changeContentValue = (value, name) => ({\r\n  type: constants.CHANGE_CONTENT_VALUE,\r\n  value, name\r\n});\r\n\r\nexport const changeMessageValue = (value, name) => ({\r\n  type: constants.CHANGE_MESSAGE_VALUE,\r\n  value, name\r\n});\r\n\r\nexport const addMessage = () => ({\r\n  type: constants.ADD_MESSAGE\r\n});\r\n\r\nexport const selectMessage = (info, index) => ({\r\n  type: constants.SELECT_MESSAGE,\r\n  info, index\r\n});\r\n\r\nexport const selectParams = () => ({\r\n  type: constants.SELECT_PARAMS\r\n});\r\n\r\nexport const hideParamsModal = () => ({\r\n  type: constants.HIDE_PARAMS_MODAL\r\n});\r\n\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        let allCodes = res.data.data;\r\n        const action = {\r\n          type: constants.GET_ALL_CODES,\r\n          allCodes\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeGonghao = codes => ({\r\n  type: constants.CHANGE_GONGHAO,\r\n  codes\r\n});\r\n\r\nexport const openSelectModal = () => ({\r\n  type: constants.OPEN_SELECT_MODAL\r\n});\r\n\r\nexport const closeSelectModal = () => ({\r\n  type: constants.CLOSE_SELECT_MODAL\r\n});\r\n\r\nexport const submitMessage = (info, history, allCodes) => {\r\n  return dispatch => {\r\n    info.gonghaoList = allCodes.filter(item => info.codes.indexOf(item.code) > -1);\r\n    !info.img && (info.img = info.contents[0].picurl);\r\n    info.channel === 1 ? info.task = true : info.task = false;\r\n    info.channel === 2 ? info.is_timing = true : info.is_timing = false;\r\n    if(info.channel !== 1) {\r\n      info.delay = null;\r\n    }\r\n    Modal.confirm({\r\n      title: \"确定提交吗？\",\r\n      onOk: () => {\r\n        let url = \"/message/create\";\r\n        if(history.location.query) {\r\n          url = \"/message/update\";\r\n          info.id = info._id\r\n        }\r\n        axios.post(url, {...info})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.info(res.data.success);\r\n              history.goBack();\r\n              dispatch(resetState());\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const initKefuMessageInfo = query => {\r\n  return dispatch => {\r\n    if (query.tagId) {\r\n      axios.get(\"/tag/get_name\", { params: { tagId: query.tagId } })\r\n        .then(res => {\r\n          query.tagName = res.data.data.name;\r\n          const action = {\r\n            type: constants.INIT_KEFU_MESSAGE_INFO,\r\n            query\r\n          };\r\n          dispatch(action);\r\n        });\r\n    } else {\r\n      const action = {\r\n        type: constants.INIT_KEFU_MESSAGE_INFO,\r\n        query\r\n      };\r\n      dispatch(action);\r\n    }\r\n\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n","export const GET_KEFU_MESSAGE_LIST = \"message/kefu/getKefuMessageList\";\r\nexport const CREATE_KEFU_MESSAGE = \"message/kefu/createKefuMessage\";\r\nexport const DELETE_LAST_MESSAGE = \"message/kefu/deleteLastMessage\";\r\nexport const DELETE_MESSAGE = \"message/kefu/deleteMessage\";\r\nexport const CHANGE_CONTENT_VALUE = \"message/kefu/changeContentValue\";\r\nexport const CHANGE_MESSAGE_VALUE = \"message/kefu/changeMessageValue\";\r\nexport const HANDLE_CHANGE_TYPE = \"message/kefu/handleChangeType\";\r\n\r\nexport const ADD_MESSAGE = \"message/kefu/addMessage\";\r\nexport const SELECT_MESSAGE = \"message/kefu/selectMessage\";\r\nexport const GET_ALL_CODES = \"message/kefu/getAllCodes\";\r\nexport const CHANGE_GONGHAO = \"message/kefu/changeGonghao\";\r\nexport const SELECT_PARAMS = \"message/kefu/selectParams\";\r\nexport const HIDE_PARAMS_MODAL = \"message/kefu/hideParamsModal\";\r\nexport const INIT_KEFU_MESSAGE_INFO = \"message/kefu/initKefuMessageInfo\";\r\nexport const SUBMIT_MESSAGE = \"message/kefu/submitMessage\";\r\nexport const OPEN_SELECT_MODAL = \"message/kefu/openSelectModal\";\r\nexport const CLOSE_SELECT_MODAL = \"message/kefu/closeSelectModal\";\r\n\r\n\r\nexport const RESET_STATE = \"message/kefu/resetState\";\r\n","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  templateMessageList: [],\r\n  confName: \"\",\r\n\r\n  selectGonghaoModal: true,\r\n  messageInfo: {\r\n    name: \"\",\r\n    code: null,\r\n    templateId: \"\",\r\n    templateName: \"\",\r\n    url: \"\",\r\n    content: {}\r\n  },\r\n  allCodes: [],\r\n  templateList: [],\r\n  templateInfo: {\r\n    template_id: \"\",\r\n  },\r\n  name: \"\",\r\n  templateModalVisible: false,\r\n  content: {\r\n    value: \"\",\r\n    color: \"#000\"\r\n  }\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n\r\n    case constants.GET_TEMPLATE_LIST:\r\n      newState.templateMessageList = action.data;\r\n      newState.confName = \"\";\r\n      return newState;\r\n    case constants.DELETE_TEMPLATE:\r\n      newState.templateMessageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CHANGE_CONF_NAME:\r\n      newState.confName = action.value;\r\n      return newState;\r\n    case constants.SEARCH_CONF_NAME:\r\n      newState.templateMessageList = action.data;\r\n      newState.confName = \"\";\r\n      return newState;\r\n\r\n\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = action.allCodes;\r\n      return newState;\r\n\r\n    case constants.OPEN_SELECT_MODAL:\r\n      newState.selectGonghaoModal = true;\r\n      return newState;\r\n    case constants.OPEN_EDIT_MODAL:\r\n      newState.name = action.key;\r\n      newState.content = action.content;\r\n      newState.templateModalVisible = true;\r\n      return newState;\r\n    case constants.CLOSE_TEMPLATE_MODAL:\r\n      newState.name = \"\";\r\n      newState.templateModalVisible = false;\r\n      newState.content = { value: \"\", color: \"#000\" };\r\n      return newState;\r\n    case constants.CHANGE_TEMPLATE:\r\n      newState.templateInfo = newState.templateList.filter(item => item.template_id === action.value)[0];\r\n      newState.messageInfo.templateId = newState.templateInfo.template_id;\r\n      newState.messageInfo.content = {};\r\n      for(let key in newState.templateInfo.data) {\r\n        newState.messageInfo.content[key] = {}\r\n      }\r\n      return newState;\r\n    case constants.EDIT_TEMPLATE:\r\n      newState.content[action.key] = action.value;\r\n      return newState;\r\n    case constants.SAVE_TEMPLATE_MODAL:\r\n      newState.messageInfo.content[newState.name] = newState.content;\r\n      newState.name = \"\";\r\n      newState.templateModalVisible = false;\r\n      newState.content = { value: \"\", color: \"#000\" };\r\n      return newState;\r\n\r\n    case constants.CHANGE_MESSAGE_INFO:\r\n      newState.messageInfo[action.key] = action.value;\r\n      return newState;\r\n    case constants.CONFIRM_SELECT:\r\n      newState.templateList = action.templateList;\r\n      newState.templateInfo = action.templateInfo;\r\n      newState.messageInfo.templateId = newState.templateInfo.template_id;\r\n      for(let key in newState.templateInfo.data) {\r\n        newState.messageInfo.content[key] = {}\r\n      }\r\n      return newState;\r\n    case constants.CLOSE_SELECT_MODAL:\r\n      newState.selectGonghaoModal = false;\r\n      return newState;\r\n\r\n    case constants.INIT_MESSAGE_INFO:\r\n      newState.messageInfo = JSON.parse(JSON.stringify(action.record));\r\n      newState.templateList = action.templateList;\r\n      newState.templateInfo = newState.templateList.filter(item => item.template_id === action.record.templateId)[0];\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n// 列表页\r\n\r\nexport const getTemplateList = () => {\r\n  return dispatch => {\r\n    axios.get(\"/template\")\r\n      .then(res => {\r\n        const {data} = res.data;\r\n        dispatch({ type: constants.GET_TEMPLATE_LIST, data })\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteTemplate = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条模板消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/template/del\", {params: {id}})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              message.success(res.data.success);\r\n              dispatch({ type: constants.DELETE_TEMPLATE, index })\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const sendTemplate = record => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定发送这条模板消息吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/template/send\", {...record})\r\n          .then(res => {\r\n            message.success(res.data);\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeConfNickName = value => ({\r\n  type: constants.CHANGE_CONF_NAME,\r\n  value\r\n});\r\n\r\nexport const searchConfName = confName => {\r\n  return dispatch => {\r\n    axios.get('/template/search', {params: {confName}})\r\n      .then(res => {\r\n        if(res.data.data.length > 0) {\r\n          dispatch({type: constants.SEARCH_CONF_NAME, data: res.data.data});\r\n          message.success(res.data.msg)\r\n        } else {\r\n          dispatch(getTemplateList());\r\n          message.error(\"没有查询到相关数据\")\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\n\r\n// 编辑模板消息\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.GET_ALL_CODES,\r\n          allCodes: res.data.data\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const openSelectModal = () => ({\r\n  type: constants.OPEN_SELECT_MODAL\r\n});\r\n\r\nexport const openEditModal = (key, content) => ({\r\n  type: constants.OPEN_EDIT_MODAL,\r\n  key, content\r\n});\r\n\r\nexport const closeTemplateModal = () => ({\r\n  type: constants.CLOSE_TEMPLATE_MODAL\r\n});\r\n\r\nexport const changeTemplate = value => ({\r\n  type: constants.CHANGE_TEMPLATE,\r\n  value\r\n});\r\n\r\nexport const saveTemplateModal = () => ({\r\n  type: constants.SAVE_TEMPLATE_MODAL\r\n});\r\n\r\n\r\nexport const editTemplate = (key, value) => ({\r\n  type: constants.EDIT_TEMPLATE,\r\n  key, value\r\n});\r\n\r\nexport const changeMessageInfo = (key, value) => ({\r\n  type: constants.CHANGE_MESSAGE_INFO,\r\n  key, value\r\n});\r\n\r\nexport const confirmSelect = code => {\r\n  return dispatch => {\r\n    dispatch(changeMessageInfo(\"code\", code));\r\n    axios.get('/template/list', {params: {code}})\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.CONFIRM_SELECT,\r\n          templateList: res.data, templateInfo: {...res.data[0]}, code\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const closeSelectModal = () => ({\r\n  type: constants.CLOSE_SELECT_MODAL\r\n});\r\n\r\nexport const submitMessage = (info, history, templateList) => {\r\n  return dispatch => {\r\n    let url = '/template/create';\r\n    info.templateName = templateList.filter(item => item.template_id === info.templateId)[0].title;\r\n    info._id && (url = '/template/update') && (info.id = info._id);\r\n    Modal.confirm({\r\n      title: \"确定\" + (info._id ? \"保存这\" : \"创建一\") + \"条模板消息吗？\",\r\n      onOk: () => {\r\n        axios.post(url, {...info})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              message.success(res.data.success);\r\n              history.goBack()\r\n            } else {\r\n              message.error(res.data.err)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\n\r\nexport const initMessageInfo = record => {\r\n  return dispatch => {\r\n    dispatch(closeSelectModal());\r\n    axios.get('/template/list', {params: {code: record.code}})\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.INIT_MESSAGE_INFO,\r\n          templateList: res.data,\r\n          record\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n// ({\r\n//   type: constants.INIT_MESSAGE_INFO,\r\n//   record\r\n// });\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n","// 列表页\r\n// 获取模板消息列表\r\nexport const GET_TEMPLATE_LIST = \"message/template/getTemplateList\";\r\nexport const DELETE_TEMPLATE = \"message/template/deleteTemplate\";\r\nexport const CHANGE_CONF_NAME = \"message/template/changeConfNickName\";\r\nexport const SEARCH_CONF_NAME = \"message/template/searchConfName\";\r\n\r\n\r\n// 编辑模板消息\r\n// 获取所有公号\r\nexport const GET_ALL_CODES = \"message/template/getAllCodes\";\r\n\r\n// 打开选择公号面板\r\nexport const OPEN_SELECT_MODAL = \"message/template/openSelectModal\";\r\n// 关闭选择公号面板\r\nexport const CLOSE_SELECT_MODAL = \"message/template/closeSelectModal\";\r\n\r\n// 打开列表编辑的modal\r\nexport const OPEN_EDIT_MODAL = \"message/template/openEditModal\";\r\n// 关闭列表编辑的modal\r\nexport const CLOSE_TEMPLATE_MODAL = \"message/template/closeTemplateModal\";\r\n// 更换模板\r\nexport const CHANGE_TEMPLATE = \"message/template/changeTemplate\";\r\n// 编辑模板\r\nexport const EDIT_TEMPLATE = \"message/template/editTemplate\";\r\n// 保存模板\r\nexport const SAVE_TEMPLATE_MODAL = \"message/template/saveTemplateModal\";\r\n\r\n// 修改messageInfo\r\nexport const CHANGE_MESSAGE_INFO = \"message/template/changeMessageInfo\";\r\n// 确认选择公号，关闭modal，获取模板列表\r\nexport const CONFIRM_SELECT = \"message/template/confirmSelect\";\r\n\r\n// 初始化messageInfo\r\nexport const INIT_MESSAGE_INFO = \"message/template/initMessageInfo\";\r\n\r\n\r\n// 重置state\r\nexport const RESET_STATE = \"message/template/resetState\";\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as groupReducer } from './group/store';\r\nimport { reducer as kefuReducer } from './kefu/store';\r\nimport { reducer as templateReducer } from './template/store';\r\n\r\nconst reducer = combineReducers({\r\n  group: groupReducer,\r\n  kefu: kefuReducer,\r\n  template: templateReducer\r\n});\r\n\r\nexport default reducer;","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  replyList: [],\r\n  content: {\r\n    picurl: \"\",\r\n    title: \"\",\r\n    url: \"\",\r\n    description: \"\"\r\n  },\r\n  replyInfo: {\r\n    type: 0,\r\n    contents: [],\r\n    description: \"\"\r\n  }\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case constants.GET_REPLY_LIST:\r\n      newState.replyList = action.replyList;\r\n      return newState;\r\n    case constants.DELETE_REPLY:\r\n      newState.replyList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.HANDLE_CONTENT_CHANGE:\r\n      newState.content[action.name] = action.value;\r\n      return newState;\r\n    case constants.HANDLE_REPLY_CHANGE:\r\n      if(action.name === \"type\") {\r\n        newState.content = defaultState.content;\r\n        newState.replyInfo.contents = [];\r\n      }\r\n      newState.replyInfo[action.name] = action.value;\r\n      return newState;\r\n    case constants.INIT_REPLY_INFO:\r\n      newState.replyInfo = {...action.record};\r\n      newState.replyInfo.id = newState.replyInfo._id;\r\n      newState.content = {...newState.replyInfo.contents[0]};\r\n      return newState;\r\n    case constants.COPY:\r\n      newState.replyList.unshift({...action.data});\r\n      return newState;\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n\r\nexport const getReplyList = () => {\r\n  return dispatch => {\r\n    axios.get('/msg')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let replyList = res.data.data.reverse();\r\n          const action = {\r\n            type: constants.GET_REPLY_LIST,\r\n            replyList\r\n          };\r\n          dispatch(action);\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteReply = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/msg/del\", {params: {id}})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              const action = {\r\n                type: constants.DELETE_REPLY,\r\n                index\r\n              };\r\n              dispatch(action);\r\n              message.success(res.data.success)\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const handleContentChange = (value, name) => ({\r\n  type: constants.HANDLE_CONTENT_CHANGE,\r\n  name, value\r\n});\r\n\r\nexport const handleReplyChange = (value, name) => ({\r\n  type: constants.HANDLE_REPLY_CHANGE,\r\n  name, value\r\n});\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n\r\nexport const submitReply = (replyInfo, props) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定提交吗？\",\r\n      onOk: () => {\r\n        axios.post(props.history.location.query ? \"/msg/update\" : \"/msg/create\", {...replyInfo})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              resetState();\r\n              message.success(res.data.success);\r\n              props.history.goBack();\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const copy = (record, props) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定复制这条素材吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/msg/create\", {...record})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              let data = res.data.data;\r\n              message.success(\"复制成功\");\r\n              const action = {\r\n                type: constants.COPY,\r\n                data\r\n              };\r\n              dispatch(action);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const initReplyInfo = record => ({\r\n  type: constants.INIT_REPLY_INFO,\r\n  record\r\n});\r\n\r\n","export const GET_REPLY_LIST = \"source/reply/getReplyList\";\r\nexport const DELETE_REPLY = \"source/reply/deleteReply\";\r\nexport const HANDLE_CONTENT_CHANGE = \"source/reply/handleContentChange\";\r\nexport const HANDLE_REPLY_CHANGE = \"source/reply/handleReplyChange\";\r\nexport const RESET_STATE = \"source/reply/resetState\";\r\nexport const SUBMIT_REPLY = \"source/reply/resetState\";\r\nexport const INIT_REPLY_INFO = \"source/reply/initReplyInfo\";\r\nexport const COPY = \"source/reply/copy\";","import { combineReducers } from 'redux';\r\nimport { reducer as groupReducer } from './group/store';\r\n\r\nconst reducer = combineReducers({\r\n  group: groupReducer\r\n});\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport gonghaoReducer from '../pages/gonghao/reducer';\r\nimport messageReducer from '../pages/message/reducer';\r\nimport sourceReducer from '../pages/source/reducer';\r\n\r\nconst reducer = combineReducers({\r\n  gonghao: gonghaoReducer,\r\n  message: messageReducer,\r\n  source: sourceReducer\r\n});\r\n\r\nexport default reducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from './reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport \"./index.scss\";\r\nimport {Input, Icon, message} from 'antd';\r\nimport axios from 'axios';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.login = this.login.bind(this);\r\n    this.state = {\r\n      loginInfo: {\r\n        username: \"\",\r\n        password: \"\"\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loginInfo } = this.state;\r\n    const bgStyle = {\r\n      minHeight: \"100vh\",\r\n      backgroundSize: \"100%\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundAttachment: \"fixed\",\r\n      backgroundImage: `url(${require(\"../../assets/images/login_bg.png\")})`\r\n    };\r\n    return (\r\n      <div className=\"login-bg\" style={bgStyle}>\r\n        <div className=\"bg-mask\"></div>\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"content\">\r\n            <p className=\"title\">明星说后台管理系统</p>\r\n            <p>运营与管控一体化的整合式服务平台</p>\r\n            <p>一起解构数字世界，碰撞科技创新思想</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"login-form-wrapper\">\r\n          <div className=\"login-form\">\r\n            <h4 className=\"login-title\">登录</h4>\r\n            <Input\r\n              value={loginInfo.username}\r\n              size=\"large\"\r\n              onChange={e => this.changeInputValue(e.target.value, \"username\")}\r\n              prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)', marginRight: 10}}/>}\r\n              style={{marginBottom: 30}}\r\n              placeholder=\"用户名\"\r\n              onKeyUp={e => e.keyCode === 13 && this.login()}\r\n            />\r\n            <Input\r\n              value={loginInfo.password}\r\n              size=\"large\"\r\n              type=\"password\"\r\n              onChange={e => this.changeInputValue(e.target.value, \"password\")}\r\n              prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)', marginRight: 10}}/>}\r\n              placeholder=\"密码\"\r\n              onKeyUp={e => e.keyCode === 13 && this.login()}\r\n            />\r\n            <button className=\"login-btn cursor\" onClick={this.login}>登录</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  changeInputValue(value, name) {\r\n    const { loginInfo } = this.state;\r\n    loginInfo[name] = value;\r\n    this.setState(state => ({loginInfo: {...state.loginInfo, ...loginInfo}}))\r\n  }\r\n\r\n  login() {\r\n    const { loginInfo } = this.state;\r\n    if(loginInfo.username && loginInfo.password) {\r\n      loginInfo.password = this.$MD5(loginInfo.password).toString();\r\n      axios.post('/account/login', {...loginInfo})\r\n        .then(res => {\r\n          const { code, msg, data } = res.data;\r\n          if(code === -1) {\r\n            message.error(msg);\r\n          } else {\r\n            const userInfo = JSON.stringify(data[0]);\r\n            localStorage.setItem(\"userInfo\", userInfo);\r\n            window.location.href = '/admin';\r\n            this.setState({loginInfo: {}});\r\n            message.success(msg)\r\n          }\r\n        })\r\n    } else {\r\n      message.warning(\"用户名或密码不能为空\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Avatar, Popover, Icon, message } from 'antd';\r\n\r\nimport './index.scss';\r\n\r\nclass HeaderWrapper extends Component {\r\n\r\n  state = {\r\n    username: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userInfo = localStorage.getItem(\"userInfo\");\r\n    if(userInfo) {\r\n      userInfo = JSON.parse(userInfo);\r\n      this.setState({username: userInfo.username})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='header-wrapper'>\r\n        <Link to=\"/\">\r\n          <img className=\"logo fl\" src={require(\"../../../assets/images/logo.png\")} alt=\"\"/>\r\n        </Link>\r\n        <div className=\"user-info fr\">\r\n          <Avatar shape=\"square\" size={25} icon=\"user\" />\r\n          <Popover content={<p style={{fontSize: 12}} className=\"cursor\" onClick={logout}><Icon type=\"logout\" />退出</p>}>\r\n            <div className=\"user fr cursor\">\r\n              <p>{this.state.username},</p>\r\n              <p>欢迎回来<Icon type=\"down\" /></p>\r\n            </div>\r\n          </Popover>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.setItem(\"userInfo\", \"\");\r\n  message.success(\"退出登录成功\");\r\n  setTimeout(() => {\r\n    window.location.href = \"/admin/login\";\r\n  }, 500)\r\n};\r\n\r\nexport default HeaderWrapper;\r\n","import React, {Component} from 'react';\r\nimport {Menu, Icon} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './index.scss';\r\n\r\nconst {SubMenu} = Menu;\r\nconst MenuItem = Menu.Item;\r\n\r\nclass SideWrapper extends Component {\r\n  menuList = [\r\n    {\r\n      keyIndex: 'gonghao',\r\n      title: '公号管理',\r\n      icon: 'appstore',\r\n      role: 2,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'tuoguan',\r\n          title: '公号托管',\r\n          path: '/admin/gonghao/tuoguan'\r\n        }, {\r\n          keyIndex: 'menu',\r\n          title: '菜单配置',\r\n          path: '/admin/gonghao/menu'\r\n        }, {\r\n          keyIndex: 'reply',\r\n          title: '自动回复',\r\n          path: '/admin/gonghao/reply'\r\n        // }, {\r\n        //   keyIndex: 'qrcode',\r\n        //   title: '参数二维码',\r\n        //   path: '/admin/gonghao/qrcode'\r\n        }\r\n      ]\r\n    }, {\r\n      keyIndex: 'message',\r\n      title: '消息管理',\r\n      icon: 'snippets',\r\n      role: 2,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'kefu',\r\n          title: '客服消息',\r\n          path: '/admin/message/kefu'\r\n        }, {\r\n          keyIndex: 'group',\r\n          title: '群发消息',\r\n          path: '/admin/message/group'\r\n        }, {\r\n          keyIndex: 'template',\r\n          title: '模板消息',\r\n          path: '/admin/message/template'\r\n        }\r\n      ]\r\n    }, {\r\n      keyIndex: 'channel',\r\n      title: '渠道推广',\r\n      icon: 'control',\r\n      role: 2,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'spread',\r\n          title: '推广链接',\r\n          path: '/admin/channel/spread'\r\n        }\r\n      ]\r\n    // }, {\r\n    //   keyIndex: \"source\",\r\n    //   title: \"素材库\",\r\n    //   icon: \"desktop\",\r\n    //   role: 2,\r\n    //   subMenuList: [\r\n    //     {\r\n    //       keyIndex: \"group\",\r\n    //       title: \"图文素材\",\r\n    //       path: '/admin/source/group'\r\n    //     }\r\n    //   ]\r\n    // }, {\r\n    //   keyIndex: 'edit',\r\n    //   title: '编辑器',\r\n    //   icon: 'edit',\r\n    //   role: 2,\r\n    //   subMenuList: [\r\n    //     {\r\n    //       keyIndex: 'aaa',\r\n    //       title: '编辑器',\r\n    //       path: '/admin/edit/index'\r\n    //     }\r\n    //   ]\r\n    }, {\r\n      keyIndex: 'account',\r\n      title: '账户管理',\r\n      icon: 'user',\r\n      role: 0,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'list',\r\n          title: '账户管理',\r\n          path: '/admin/account/list'\r\n        }, {\r\n          keyIndex: 'add',\r\n          title: '新增用户',\r\n          path: '/admin/account/add'\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  state = {\r\n    selectedKeys: [],\r\n    role: null\r\n  };\r\n\r\n  onSelect = async (selectItem) => {\r\n    const latestSelectedKey = selectItem.selectedKeys.find(key => this.state.selectedKeys.indexOf(key) === -1);\r\n    let selectList = [];\r\n    await this.menuList.map(item => (selectList = [...selectList, ...item.subMenuList]));\r\n    await selectList.find(item => (\r\n      item.keyIndex === latestSelectedKey\r\n      && this.setState({ selectedKeys: latestSelectedKey ? [latestSelectedKey] : [this.state.role === 2 ? 'tuoguan' : 'list'] })\r\n    ))\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userInfo = localStorage.getItem(\"userInfo\");\r\n    if(userInfo) {\r\n      userInfo = JSON.parse(userInfo);\r\n      this.setState({\r\n        role: userInfo.role,\r\n        selectedKeys: [window.location.pathname.split('/')[3] || (userInfo.role === 2 ? 'tuoguan' : 'list')]\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const pathName = window.location.pathname;\r\n    const MenuListRender = this.menuList.map((item, index) => {\r\n      if(item.role === this.state.role) {\r\n        const SubMenuList = item.subMenuList.map(subItem => (\r\n          <MenuItem key={subItem.keyIndex}><Link to={subItem.path}>{subItem.title}</Link></MenuItem>\r\n        ));\r\n        return (<SubMenu\r\n          key={item.keyIndex}\r\n          title={\r\n            <span className='side-item'>\r\n            <Icon className=\"side-icon\" type={item.icon}/>\r\n            <span>{item.title}</span>\r\n          </span>\r\n          }\r\n        >\r\n          {SubMenuList}\r\n        </SubMenu>)\r\n      }\r\n      return '';\r\n    });\r\n    return (\r\n      <div className='side-wrapper'>\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"light\"\r\n          selectedKeys={this.state.selectedKeys}\r\n          defaultOpenKeys={[window.location.pathname.split('/')[2] || (this.state.role === 2 ? 'gonghao' : 'account')]}\r\n          onSelect={this.onSelect}\r\n          defaultSelectedKeys={[pathName]}\r\n        >\r\n          {MenuListRender}\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SideWrapper;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Breadcrumb } from 'antd';\r\nimport { withRouter } from 'react-router'\r\nimport './index.scss';\r\n\r\nconst breadList = {\r\n  '/gonghao': '公号管理',\r\n\r\n  '/gonghao/tuoguan': '公号托管',\r\n  '/gonghao/tuoguan/group': '分组管理',\r\n\r\n  '/gonghao/tuoguan/config': '公号配置',\r\n  '/gonghao/tuoguan/config/create': '新建配置',\r\n  '/gonghao/tuoguan/config/update': '修改配置',\r\n\r\n  '/gonghao/menu': '配置菜单',\r\n  '/gonghao/menu/create': '新建菜单',\r\n  '/gonghao/menu/update': '修改菜单',\r\n\r\n  '/gonghao/reply': '自动回复',\r\n  '/gonghao/reply/create': '新建素材',\r\n  '/gonghao/reply/update': '修改素材',\r\n\r\n  '/message': '消息管理',\r\n\r\n  '/message/kefu': '客服消息',\r\n  '/message/kefu/create': '新建消息',\r\n  '/message/kefu/update': '修改消息',\r\n\r\n  '/message/group': '群发消息',\r\n  '/message/group/material': '群发素材',\r\n  '/message/group/history': '历史记录',\r\n\r\n  '/message/template': '模板消息',\r\n  '/message/template/create': '创建消息',\r\n  '/message/template/update': '修改消息',\r\n\r\n  '/channel': \"渠道推广\",\r\n  '/channel/spread': '推广链接',\r\n  '/channel/spread/create': '创建素材',\r\n  '/channel/spread/update': '修改素材',\r\n\r\n  '/source': '素材库',\r\n  '/source/group': '图文素材',\r\n  '/source/group/create': '新建素材',\r\n  '/source/group/update': '修改素材',\r\n\r\n  '/edit': '编辑器',\r\n  '/edit/index': '编辑器',\r\n\r\n  '/wechat/qrcode': '参数二维码',\r\n  '/wechat/qrcode/create': '新增二维码',\r\n  '/wechat/qrcode/update': '修改二维码',\r\n\r\n  '/account': '账户管理',\r\n  '/account/list': '账户列表',\r\n  '/account/add': '新增账户',\r\n};\r\n\r\nclass BreadWrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pathSnippets: null,\r\n      extraBreadcrumbItems: null,\r\n    }\r\n  }\r\n\r\n  getPath = () => {\r\n    this.setState({\r\n      pathSnippets: window.location.pathname.split('/').slice(2)\r\n    });\r\n    this.setState((prev) => {\r\n      return {\r\n        extraBreadcrumbItems: prev.pathSnippets.map((_, index) => {\r\n          let url = `/${prev.pathSnippets.slice(0, index + 1).join('/')}`;\r\n          return (\r\n            <Breadcrumb.Item key={url}>\r\n              {breadList[url]}\r\n            </Breadcrumb.Item>\r\n          );\r\n        })\r\n      }\r\n    })\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps () {\r\n    this.getPath();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPath();\r\n  }\r\n\r\n  render() {\r\n    const { extraBreadcrumbItems } = this.state;\r\n    return (\r\n    \t<div className='bread-wrapper'>\r\n    \t\t<div className='bread-nav'>\r\n          <Breadcrumb>\r\n            {extraBreadcrumbItems}\r\n          </Breadcrumb>\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(BreadWrapper);","import React from 'react';\r\nimport {Layout, Card} from 'antd';\r\nimport HeaderWrapper from './header';\r\nimport SiderWrapper from './sider';\r\nimport BreadCrumb from './bread';\r\nimport \"./index.scss\";\r\n\r\nconst {Content, Sider, Header, Footer} = Layout;\r\n\r\nconst BasicLayout = props => <Layout className=\"basic-layout\">\r\n  <HeaderWrapper/>\r\n  <Layout>\r\n    <Sider collapsible  theme=\"light\" width=\"180\" style={{minHeight: \"calc(100vh - 50px)\"}}>\r\n      <SiderWrapper/>\r\n    </Sider>\r\n    <Layout>\r\n      <Content style={{marginLeft: 2}}>\r\n        <Card style={{minHeight: \"calc(100vh - 90px)\"}}>\r\n          <Layout>\r\n            <Header style={{ background: '#fff', padding: 0, borderBottom: \"2px solid #eee\", height: 43 }}><BreadCrumb /></Header>\r\n            <Content>{props.content}</Content>\r\n          </Layout>\r\n        </Card>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center', padding: \"10px 0\" }}>Copyright&copy;2019  最终解释权归本公司所有</Footer>\r\n    </Layout>\r\n  </Layout>\r\n</Layout>;\r\n\r\nexport default BasicLayout;","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\n\r\nconst ButtonList = {\r\n  \"warning\": \"#F39C12\",\r\n  \"danger\": \"#E74C3C\",\r\n  \"success\": \"#2ECC71\",\r\n  \"info\": \"#7F8C8D\",\r\n  \"update\": \"#3498DB\"\r\n};\r\n\r\n\r\nclass ButtonWrapper extends Component {\r\n  state = {\r\n    buttonStyle: {\r\n      background: \"#3498DB\",\r\n      color: \"#fff\",\r\n      marginRight: 5,\r\n      marginLeft: 0,\r\n      marginBottom: 0\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    const { background = \"update\", color = \"#fff\", mr = 5, ml = 0, mb = 0 } = this.props;\r\n    this.setState({\r\n      buttonStyle: { background: ButtonList[background], color, marginRight: mr, marginLeft: ml, marginBottom: mb }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { size = \"small\", buttonContent, disabled = false, onClick } = this.props;\r\n    const { buttonStyle } = this.state;\r\n    return (\r\n    \t<Button size={size} disabled={disabled} style={buttonStyle} onClick={onClick}>{buttonContent}</Button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ButtonWrapper;","import React, {Component} from 'react';\r\nimport {Input, Card, List, Modal, Form, Select, Radio, Tag, Tooltip, Avatar} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport {actionCreators} from './store';\r\nimport './index.scss';\r\nimport Button from \"../../../common/components/Button\";\r\n\r\nconst {Search} = Input;\r\nconst {Option} = Select;\r\n\r\nclass Tuoguan extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getGroupList();\r\n    this.props.getAllGonghaoList();\r\n  }\r\n\r\n  render() {\r\n    const {gonghaoTagList, gonghaoList, searchByName, searchName, changeSearchInput, jieguan, addNewGonghao, openGonghaoModal, gonghaoModal, closeGonghaoModal, gonghaoInfo, updateGonghaoInfo, changeGroup, changeAttribute, deleteGonghao, group, changeSelectValue, status} = this.props;\r\n    return (\r\n      <div>\r\n        <div className='container'>\r\n          <Search\r\n            placeholder='请输入公号名称'\r\n            className='search-btn'\r\n            value={searchName}\r\n            onChange={changeSearchInput}\r\n            onSearch={searchName => searchByName(searchName)}\r\n          />\r\n          <Select value={group} onChange={value => changeSelectValue(\"group\", value)} style={{width: 150, marginLeft: 10}}>\r\n            <Option value=\"全部公号\">全部</Option>\r\n            <Option value=\"未分组\">未分组</Option>\r\n            {gonghaoTagList.map(item => <Option key={item._id} value={item.name}>{item.name}</Option>)}\r\n          </Select>\r\n          <Select value={status} onChange={value => changeSelectValue(\"status\", value)} style={{width: 100, marginLeft: 10}}>\r\n            <Option value=\"全部\">全部</Option>\r\n            <Option value={1}>已接管</Option>\r\n            <Option value={-1}>接管中</Option>\r\n            <Option value={-2}>未接管</Option>\r\n          </Select>\r\n          <div className=\"fr btn-wrapper\">\r\n            <Button background=\"success\" size=\"default\"\r\n                    buttonContent={<Link to='/admin/gonghao/tuoguan/group'>分组管理</Link>}/>\r\n            <Button size=\"default\" buttonContent=\"添加新公号\" onClick={addNewGonghao}/>\r\n          </div>\r\n          <div className='table-wrapper'>\r\n            <List\r\n              grid={{gutter: 16, sm: 4, xxl: 6}}\r\n              dataSource={gonghaoList}\r\n              pagination={{pageSize: 12}}\r\n              renderItem={(item, index) => (\r\n                <List.Item>\r\n                  <Card className=\"card-item\"\r\n                        actions={\r\n                          [\r\n                            <Tooltip title=\"修改分组和公号属性\"><span onClick={() => openGonghaoModal(item._id, item.group, item.attribute)}>修改</span></Tooltip>,\r\n                            <Tooltip title=\"接管粉丝，打标签\"><span className={item.status === -2 ? \"\" : \"disabled-click\"}\r\n                                           onClick={() => item.status === -2 ? jieguan(item.code) : console.log(\"已接管或接管中\")}>{item.status === -2 ? \"接管\" : (item.status === -1 ? \"接管中\" : \"已接管\")}</span></Tooltip>,\r\n                            <Tooltip title={<p>删除公号信息<br />解除授权请在公号后台操作</p>}><span onClick={() => deleteGonghao(item._id, index)}>删除</span></Tooltip>\r\n                          ]\r\n                        }>\r\n                    {item.head_img ? <img src={item.head_img} alt=\"\"/> : <Avatar shape=\"circle\" size={40} icon=\"user\" style={{marginRight: 5, marginTop: -20}}/>}\r\n                    <div className=\"gonghao-info\">\r\n                      <p>{item.nick_name}</p>\r\n                      <Tag>{item.group}</Tag>\r\n                    </div>\r\n                  </Card>\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Modal visible={gonghaoModal} title=\"修改公号信息\" onCancel={closeGonghaoModal} onOk={() => updateGonghaoInfo(gonghaoInfo)}>\r\n          <Form labelCol={{span: 6}} wrapperCol={{span: 14}}>\r\n            <Form.Item label=\"分组\">\r\n              <Select value={gonghaoInfo.group || \"未分组\"} onChange={changeGroup}>\r\n                <Option value=\"未分组\">未分组</Option>\r\n                {gonghaoTagList.map(item => <Option key={item._id} value={item.name}>{item.name}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item label=\"公号属性\">\r\n              <Radio.Group value={gonghaoInfo.attribute} onChange={changeAttribute}>\r\n                <Radio value={0}>默认</Radio>\r\n                <Radio value={1}>男</Radio>\r\n                <Radio value={2}>女</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  gonghaoTagList: state.gonghao.tuoguan.gonghaoTagList,\r\n  allGonghaoList: state.gonghao.tuoguan.allGonghaoList,\r\n  gonghaoList: state.gonghao.tuoguan.gonghaoList,\r\n  currentPage: state.gonghao.tuoguan.currentPage,\r\n  searchName: state.gonghao.tuoguan.searchName,\r\n  gonghaoModal: state.gonghao.tuoguan.gonghaoModal,\r\n  gonghaoInfo: state.gonghao.tuoguan.gonghaoInfo,\r\n  group: state.gonghao.tuoguan.group,\r\n  status: state.gonghao.tuoguan.status,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getGroupList() {\r\n    dispatch(actionCreators.getGroupList())\r\n  },\r\n  getAllGonghaoList() {\r\n    dispatch(actionCreators.getAllGonghaoList())\r\n  },\r\n  changePage(page) {\r\n    dispatch(actionCreators.changePage(page))\r\n  },\r\n  changeSearchInput(e) {\r\n    dispatch(actionCreators.changeSearchInput(e.target.value))\r\n  },\r\n  searchByName(value) {\r\n    dispatch(actionCreators.searchByName(value));\r\n  },\r\n  deleteGonghao(id, index) {\r\n    dispatch(actionCreators.deleteGonghao(id, index));\r\n  },\r\n  jieguan(code) {\r\n    dispatch(actionCreators.jieguan(code));\r\n  },\r\n  addNewGonghao() {\r\n    dispatch(actionCreators.addNewGonghao());\r\n  },\r\n  openGonghaoModal(id, group, attribute) {\r\n    dispatch(actionCreators.openGonghaoModal(id, group, attribute));\r\n  },\r\n  closeGonghaoModal() {\r\n    dispatch(actionCreators.closeGonghaoModal());\r\n  },\r\n  updateGonghaoInfo(gonghaoInfo) {\r\n    dispatch(actionCreators.updateGonghaoInfo(gonghaoInfo));\r\n  },\r\n  changeGroup(name) {\r\n    dispatch(actionCreators.changeGroup(name));\r\n  },\r\n  changeAttribute(e) {\r\n    let attribute = e.target.value;\r\n    dispatch(actionCreators.changeAttribute(attribute));\r\n  },\r\n  changeSelectValue(key, value) {\r\n    dispatch(actionCreators.changeSelectValue(key, value));\r\n  },\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Tuoguan);","import React, { Component } from 'react';\r\nimport { Layout, List, Input, Card, Table, Button, Modal, Radio, message, Icon } from 'antd'\r\nimport axios from 'axios';\r\n\r\nconst { Sider, Content } = Layout;\r\nconst { Search } = Input;\r\n\r\n\r\nclass GonghaoGroup extends Component {\r\n  columns = [\r\n    {\r\n      key: \"nick_name\",\r\n      dataIndex: \"nick_name\",\r\n      title: \"公号名称\",\r\n      align: \"center\",\r\n      width: 200\r\n    }, {\r\n      key: \"group\",\r\n      dataIndex: \"group\",\r\n      title: \"分组\",\r\n      align: \"center\"\r\n    }, {\r\n      key: \"action\",\r\n      title: \"操作\",\r\n      align: \"center\",\r\n      width: 100,\r\n      render: (text, record, index) => <Button type=\"primary\" size=\"small\" onClick={() => this.setState({gonghaoModal: true, gonghao_id: record._id, gonghao_index: index})}>修改分组</Button>\r\n    }\r\n  ];\r\n\r\n  state = {\r\n    gonghaoTagList: [],\r\n    gonghaoModal: false,\r\n    editGroupModalVisible: false,\r\n    group: \"\",\r\n    gonghaoList: [],\r\n    group_id: \"\",\r\n    group_index: -1,\r\n    gonghao_id: \"\",\r\n    gonghao_index: -1,\r\n    selectGroup: \"\",\r\n    selectedRowKeys: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGonghaoTagList();\r\n    this.getGroupGonghao();\r\n  }\r\n\r\n  getGonghaoTagList = () => {\r\n    axios.get(\"/gonghaoTag\")\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          const { data: gonghaoTagList } = res.data;\r\n          this.setState({gonghaoTagList})\r\n        }\r\n      })\r\n  };\r\n\r\n  getGroupGonghao = group => {\r\n    axios.get('/conf/group', { params: {group} })\r\n      .then(res => {\r\n        let { data: gonghaoList } = res.data;\r\n        this.setState({gonghaoList})\r\n        gonghaoList.length === 0 && message.warning(\"该分组中还没有数据，请添加\")\r\n      })\r\n  };\r\n\r\n  openEditGroupModal = () => {\r\n    this.setState({editGroupModalVisible: true})\r\n  };\r\n\r\n  closeEditGroupModal = () => {\r\n    this.setState({editGroupModalVisible: false, group: \"\"})\r\n  };\r\n\r\n  confirmEditGroup = () => {\r\n    const { group: name, group_id, group_index } = this.state;\r\n    if(!group_id) {\r\n      this.addGroup(name)\r\n    } else {\r\n      this.updateGroup(name, group_id, group_index)\r\n    }\r\n  };\r\n\r\n  addGroup = name => {\r\n    Modal.confirm({\r\n      title: \"确定添加一个分组吗？\",\r\n      onOk: () => {\r\n        if(name) {\r\n          axios.post(\"/gonghaoTag\", {name})\r\n            .then(res => {\r\n              if(res.data.code === 1 && res.data.exist === 0) {\r\n                const { data, msg } = res.data;\r\n                this.setState(state => {\r\n                  let gonghaoTagList = [...state.gonghaoTagList];\r\n                  gonghaoTagList.push(data);\r\n                  return {gonghaoTagList};\r\n                });\r\n                message.success(msg);\r\n                this.closeEditGroupModal();\r\n              } else if (res.data.code === 1 && res.data.exist === 1) {\r\n                message.warning(\"分组已存在，请更换分组名称\");\r\n              } else {\r\n                message.error(res.data.msg)\r\n              }\r\n            });\r\n        } else {\r\n          message.error(\"分组名称不能为空\")\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  updateGroup = (name, id, index) => {\r\n    Modal.confirm({\r\n      title: \"确定修改分组名称吗？\",\r\n      onOk: () => {\r\n        if(name) {\r\n          axios.put(\"/gonghaoTag\", {name, id})\r\n            .then(res => {\r\n              if(res.data.code === 1) {\r\n                const { data, msg } = res.data;\r\n                this.setState(state => {\r\n                  let gonghaoTagList = state.gonghaoTagList;\r\n                  Object.assign(gonghaoTagList[index], data);\r\n                  return {gonghaoTagList};\r\n                });\r\n                message.success(msg);\r\n                this.closeEditGroupModal();\r\n              }else {\r\n                message.error(res.data.msg)\r\n              }\r\n            });\r\n        } else {\r\n          message.error(\"分组名称不能为空\")\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  deleteGroup = (id, index) => {\r\n    Modal.confirm({\r\n      title: \"确定删除这个分组吗？\",\r\n      onOk: () => {\r\n        axios.delete('/gonghaoTag/' + id)\r\n          .then(res => {\r\n            const {code , msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.getGroupGonghao();\r\n              this.setState(state => {\r\n                let gonghaoTagList = state.gonghaoTagList;\r\n                gonghaoTagList.splice(index, 1);\r\n                return {gonghaoTagList}\r\n              })\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  changeGroupValue = e => {\r\n    let group = e.target.value;\r\n    this.setState({group})\r\n  };\r\n\r\n  searchGroupGonghao = nick_name => {\r\n    if(nick_name) {\r\n      axios.get('/conf/find_one', {params: {nick_name}})\r\n        .then(res => {\r\n          const {data: gonghaoList, code, msg} = res.data;\r\n          if(code === 1) {\r\n            message.success(msg);\r\n            this.setState({gonghaoList})\r\n          } else {\r\n            message.error(\"没有查询到相关数据，请检查输入是否有误\")\r\n          }\r\n        })\r\n    } else {\r\n      message.error(\"公号名称不能为空\")\r\n    }\r\n\r\n  };\r\n\r\n  closeGonghaoModal = () => {\r\n    this.setState({\r\n      gonghaoModal: false,\r\n      gonghao_id: \"\",\r\n      gonghao_index: -1,\r\n      selectGroup: \"\"\r\n    })\r\n  };\r\n\r\n  submitGonghaoModal = () => {\r\n    const { gonghao_id: id, gonghao_index, selectGroup: group, selectedRowKeys: ids } = this.state;\r\n    if(id) {\r\n      this.updateOne(id, gonghao_index, group)\r\n    } else {\r\n      this.updateMore(ids, group)\r\n    }\r\n  };\r\n\r\n  openUpdateMoreModal = () => {\r\n    const {selectedRowKeys} = this.state;\r\n    if(selectedRowKeys.length === 0) {\r\n      message.warning(\"请先选择公号\")\r\n    } else {\r\n      this.setState({\r\n        gonghaoModal: true\r\n      })\r\n    }\r\n  };\r\n\r\n  updateOne = (id, gonghao_index, group) => {\r\n    Modal.confirm({\r\n      title: \"确定修改分组吗？\",\r\n      onOk: () => {\r\n        axios.put('/conf', {id, group})\r\n          .then(res => {\r\n            const { code, msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.setState(state => {\r\n                let gonghaoList = [...state.gonghaoList];\r\n                gonghaoList.splice(gonghao_index, 1);\r\n                return {gonghaoList}\r\n              });\r\n              this.closeGonghaoModal();\r\n            } else {\r\n              message.error(msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  updateMore = (ids, group) => {\r\n    Modal.confirm({\r\n      title: \"确定修改分组1吗？\",\r\n      onOk: () => {\r\n        axios.put('/conf/multi_select', {ids, group})\r\n          .then(res => {\r\n            const { code, msg } = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.getGroupGonghao();\r\n              this.closeGonghaoModal();\r\n              this.setState({selectedRowKeys: []})\r\n            } else {\r\n              message.error(msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  changeSelectGroup = e => {\r\n    let selectGroup = e.target.value;\r\n    this.setState({selectGroup});\r\n  };\r\n\r\n  render() {\r\n    const { gonghaoTagList, gonghaoModal, editGroupModalVisible, gonghaoList, group, selectGroup } = this.state;;\r\n    const addGroupStyle = {\r\n      width: \"90%\",\r\n      margin: \"15px auto 0\",\r\n      padding: \"10px 0\",\r\n      borderRadius: 5,\r\n      border: \"1px dashed #999\"\r\n    };\r\n    const rowSelection = {\r\n      selectedRowKeys: this.state.selectedRowKeys,\r\n      onChange: selectedRowKeys => {\r\n        this.setState({selectedRowKeys})\r\n      }\r\n    };\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Layout>\r\n            <Sider theme=\"light\">\r\n              <List\r\n                header={<div className=\"cursor userSelect\" onClick={() => this.getGroupGonghao(\"未分组\")}>未分组</div>}\r\n                bordered\r\n                dataSource={gonghaoTagList}\r\n                style={{marginRight: 10}}\r\n                renderItem={(item, index) => (\r\n                  <List.Item className=\"userSelect\">\r\n                    <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", width: \"100%\", lineHeight: 1}}>\r\n                      <p className=\"cursor\" onClick={() => this.getGroupGonghao(item.name)}>{item.name}</p>\r\n                      <div>\r\n                        <Icon className=\"cursor\" style={{marginRight: 10}} type=\"form\" onClick={() => this.setState({editGroupModalVisible: true, group_id: item._id, group_index: index})} />\r\n                        <Icon className=\"cursor\" type=\"close-square\" onClick={() => this.deleteGroup(item._id, index)} />\r\n                      </div>\r\n                    </div>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n              <div className=\"tc cursor userSelect\" style={addGroupStyle} onClick={this.openEditGroupModal}>+ 添加分组</div>\r\n            </Sider>\r\n            <Content>\r\n              <Card style={{padding: 20}}>\r\n                <Search placeholder=\"请输入公众号名称\" style={{width: 200, marginBottom: 20, marginTop: -10}} onSearch={this.searchGroupGonghao} />\r\n                <Button type=\"primary\" style={{display: 'block', marginBottom: 20}} onClick={this.openUpdateMoreModal}>批量修改</Button>\r\n                <Table rowSelection={rowSelection} bordered size=\"small\" rowKey={record => record._id} columns={this.columns} dataSource={gonghaoList} />\r\n              </Card>\r\n            </Content>\r\n          </Layout>\r\n        </div>\r\n        <Modal visible={gonghaoModal} onCancel={this.closeGonghaoModal} onOk={this.submitGonghaoModal}>\r\n          <Radio.Group value={selectGroup} onChange={this.changeSelectGroup}>\r\n            <Radio value=\"未分组\">未分组</Radio>\r\n            {gonghaoTagList.map(item => <Radio key={item._id} value={item.name}>{item.name}</Radio>)}\r\n          </Radio.Group>\r\n        </Modal>\r\n        <Modal visible={editGroupModalVisible} title=\"新建分组名称\" onCancel={this.closeEditGroupModal} onOk={this.confirmEditGroup}>\r\n          分组名称：<Input onChange={this.changeGroupValue} value={group} style={{width: 300}} placeholder=\"请输入分组名称\" />\r\n        </Modal>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GonghaoGroup;","import React, { Component } from 'react';\r\nimport { Table, Button } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport backTop from '../../../utils';\r\n\r\nimport {actionCreators} from \"./store\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    const { menuList, deleteMenu } = this.props;\r\n    const menuHeader =  [\r\n      {\r\n        title: \"菜单类型\",\r\n        key: \"individual\",\r\n        dataIndex: \"individual\",\r\n        align: \"center\",\r\n        render: (text, record) => record.individual ? \"个性化菜单\" : \"通用菜单\"\r\n      },\r\n      {\r\n        title: \"菜单性别\",\r\n        key: \"sex\",\r\n        dataIndex: \"sex\",\r\n        align: \"center\",\r\n        render: (text, record) => (record.individual ? (record.sex === '0' ? \"未知\"\r\n          : (record.sex === '1' ? '男' : '女')) : '——')\r\n      },\r\n      {\r\n        key: \"title\",\r\n        dataIndex: \"title\",\r\n        title: \"标题\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        key: \"Action\",\r\n        align: \"center\",\r\n        render: (text, record, index) => (\r\n          <div>\r\n            <Button size=\"small\" type=\"primary\" style={{marginRight: \"10px\"}}>\r\n              <Link to={{pathname: \"/admin/gonghao/menu/update\", query: record}}>编辑</Link>\r\n            </Button>\r\n            <Button size=\"small\" type=\"danger\" onClick={() => deleteMenu(record._id, index)}>删除</Button>\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n    \t<div>\r\n    \t\t<div className=\"container\">\r\n          <Button type=\"primary\" style={{marginBottom: \"20px\"}}>\r\n            <Link to=\"/admin/gonghao/menu/create\">配置新菜单栏</Link>\r\n          </Button>\r\n          <Table size=\"small\" rowKey={record => record._id} columns={menuHeader} dataSource={menuList} pagination={{onChange: () => backTop()}} />\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n  componentDidMount() {\r\n    this.props.getMenuList()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  menuList: state.gonghao.menu.menuList\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getMenuList() {\r\n    dispatch(actionCreators.getMenuList())\r\n  },\r\n  deleteMenu(id, index) {\r\n    dispatch(actionCreators.deleteMenu(id, index))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Menu);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Form, Button, Input, Radio, Transfer, Switch} from \"antd\";\r\nimport * as actionCreators from '../store/actionCreators';\r\nimport './index.scss';\r\n\r\nclass EditMenuInfo extends Component {\r\n\r\n  componentDidMount() {\r\n    let query = this.props.history.location.query;\r\n    query && this.props.initMenuInfo(query);\r\n  }\r\n\r\n  render() {\r\n    const {menuInfo, menuForm, sub_button, menuIndex, handleInputChange, handleSubInputChange, addFirstMenu, editMenu, submitMenu, addSecondMenu, editSecMenu, deleteFirMenu, deleteSubMenu, allCodes, targetKeys, changeGonghao, isSubmit, cancelMenu, handleInfoChange, handleIndividualChange, openModal, resetState} = this.props;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: {span: 4}\r\n      },\r\n      wrapperCol: {\r\n        sm: {span: 16, offset: 0}\r\n      },\r\n      colon: false\r\n    };\r\n    const menuList = menuInfo[\"values\"].map((item, index) => (\r\n      <div className=\"menu\"\r\n           style={{width: menuInfo[\"values\"].length === 1 ? \"50%\" : menuInfo[\"values\"].length === 2 ? \"33.33%\" : \"33.33%\"}}\r\n           key={index} onClick={() => editMenu(item, index)}>\r\n        <span className=\"nav-title cursor\">{item.name}</span>\r\n        <ul className=\"sub-menu-list\"\r\n            style={{top: item.sub_button ? (-item.sub_button.length * 46 - 55 + \"px\") : -55, display: menuIndex === index ? \"block\" : \"none\"}}>\r\n          {item.sub_button && item.sub_button.map((i, idx) => (\r\n            <li className=\"textEllipsis\" key={idx} onClick={() => editSecMenu(i, idx)}>{i.name}</li>\r\n          ))}\r\n          <li onClick={addSecondMenu}>+</li>\r\n          <div className=\"sanjiao sanjiao-out\"/>\r\n          <div className=\"sanjiao sanjiao-in\"/>\r\n        </ul>\r\n      </div>\r\n    ));\r\n    let keyOrUrl, subKeyOrUrl;\r\n    if (sub_button.type === 'view') {\r\n      subKeyOrUrl = <Form.Item label=\"链接\">\r\n        <Input value={sub_button.url} placeholder=\"请输入网页跳转链接\" onChange={(e) => handleSubInputChange(e, \"url\")}/>\r\n      </Form.Item>\r\n    } else if (sub_button.type === 'click') {\r\n      subKeyOrUrl = <Form.Item label=\"关键词\">\r\n        <Input value={sub_button.key} placeholder=\"请输入发送消息关键词\" onChange={(e) => handleSubInputChange(e, \"key\")}/>\r\n      </Form.Item>\r\n    }\r\n    if (menuForm.type === 'view') {\r\n      keyOrUrl = <Form.Item label=\"链接\">\r\n        <Input value={menuForm.url} placeholder=\"请输入网页跳转链接\" onChange={(e) => handleInputChange(e, \"url\")}/>\r\n      </Form.Item>\r\n    } else if (menuForm.type === 'click') {\r\n      keyOrUrl = <Form.Item label=\"关键词\">\r\n        <Input value={menuForm.key} placeholder=\"请输入发送消息关键词\" onChange={(e) => handleInputChange(e, \"key\")}/>\r\n      </Form.Item>\r\n    }\r\n    let menuInfoForm, submitButton;\r\n    if (menuInfo.values.length !== 0) {\r\n      if (menuForm.sub_button && menuForm.sub_button.length !== 0) {\r\n        menuInfoForm =\r\n          <div className=\"menu-right fl\">\r\n            <div className=\"menu-parent\">\r\n              <div className=\"menu-title\">\r\n                <h4 className=\"fl\">菜单编辑</h4>\r\n                <Button className=\"fr\" type=\"link\" onClick={deleteFirMenu}>删除菜单</Button>\r\n              </div>\r\n              <Form {...formItemLayout}>\r\n                <Form.Item label=\"菜单名称\">\r\n                  <Input value={menuForm.name} placeholder=\"仅支持中英文和数字，字数不超过4个汉字或8个字母\"\r\n                         onChange={(e) => handleInputChange(e, \"name\")}/>\r\n                </Form.Item>\r\n              </Form>\r\n              <div className=\"menu-children\">\r\n                <div className=\"menu-title\">\r\n                  <h4 className=\"fl\">子菜单编辑</h4>\r\n                  <Button className=\"fr\" type=\"link\" onClick={deleteSubMenu}>删除子菜单</Button>\r\n                </div>\r\n                <Form {...formItemLayout}>\r\n                  <Form.Item label=\"子菜单名称\">\r\n                    <Input value={sub_button.name} placeholder=\"仅支持中英文和数字，字数不超过8个汉字或16个字母\"\r\n                           onChange={(e) => handleSubInputChange(e, \"name\")}/>\r\n                  </Form.Item>\r\n                  <Form.Item label=\"子菜单内容\">\r\n                    <Radio.Group value={sub_button.type} onChange={(e) => handleSubInputChange(e, \"type\")}>\r\n                      <Radio value=\"view\">跳转网页</Radio>\r\n                      <Radio value=\"click\">发送消息</Radio>\r\n                    </Radio.Group>\r\n                  </Form.Item>\r\n                  {subKeyOrUrl}\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      } else {\r\n        menuInfoForm =\r\n          <div className=\"menu-right fl\">\r\n            <div className=\"menu-parent\">\r\n              <div className=\"menu-title\">\r\n                <h4 className=\"fl\">菜单编辑</h4>\r\n                <Button className=\"fr\" type=\"link\" onClick={deleteFirMenu}>删除菜单</Button>\r\n              </div>\r\n              <Form {...formItemLayout}>\r\n                <Form.Item label=\"菜单名称\">\r\n                  <Input value={menuForm.name} placeholder=\"仅支持中英文和数字，字数不超过4个汉字或8个字母\"\r\n                         onChange={(e) => handleInputChange(e, \"name\")}/>\r\n                </Form.Item>\r\n                <Form.Item label=\"菜单内容\">\r\n                  <Radio.Group value={menuForm.type} onChange={(e) => handleInputChange(e, \"type\")}>\r\n                    <Radio value=\"view\">跳转网页</Radio>\r\n                    <Radio value=\"click\">发送消息</Radio>\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n                {keyOrUrl}\r\n              </Form>\r\n            </div>\r\n          </div>\r\n      }\r\n      submitButton = <div className=\"menu-right-btm fl\">\r\n        <Button type=\"primary\" onClick={() => {openModal();this.props.getAllCodes()}\r\n        }>提交</Button>\r\n      </div>\r\n    }\r\n    let menuModal;\r\n    if (isSubmit) {\r\n      let individualSex;\r\n      if (menuInfo.individual) {\r\n        individualSex = <Form.Item label=\"性别\">\r\n          <Radio.Group value={menuInfo.sex} onChange={e => handleInfoChange(e, \"sex\")}>\r\n            <Radio value=\"0\">未知</Radio>\r\n            <Radio value=\"1\">男</Radio>\r\n            <Radio value=\"2\">女</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n      }\r\n      menuModal = <div className=\"menu-modal-wrapper\">\r\n        <div className=\"menu-modal\">\r\n          <Transfer\r\n            dataSource={allCodes}\r\n            showSearch\r\n            targetKeys={targetKeys}\r\n            onChange={changeGonghao}\r\n            render={item => item.nick_name}\r\n            rowKey={record => record.code}\r\n            className=\"menu-transfer fl\"\r\n          />\r\n          <Form className=\"fl\" colon={false} labelCol={{sm: {span: 30}}} wrapperCol={{sm: {span: 30, offset: 0}}}\r\n                labelAlign=\"left\">\r\n            <Form.Item label=\"标题\">\r\n              <Input value={menuInfo.title} placeholder=\"请输入标题\" onChange={(e) => handleInfoChange(e, \"title\")}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"个性化菜单\">\r\n              <Switch onChange={handleIndividualChange} checked={menuInfo.individual}/>\r\n            </Form.Item>\r\n            {individualSex}\r\n            <Form.Item label=\" \">\r\n              <Button style={{marginRight: \"10px\"}} type=\"primary\" onClick={() => submitMenu(this.props)}>提交</Button>\r\n              <Button onClick={cancelMenu}>取消</Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    }\r\n    return (\r\n      <div>\r\n        <div className='container edit-menu'>\r\n          <div className=\"title-wrapper\">\r\n            <h2>菜单配置</h2>\r\n            <Button className=\"fr\" onClick={() => resetState(this.props)}>返回上一级</Button>\r\n          </div>\r\n          <div className=\"menu-left fl\">\r\n            <div className=\"menu-wrapper\">\r\n              <div className=\"menu-cont\">\r\n                <div className=\"menu-list\">\r\n                  {menuList}\r\n                  <div className=\"menu add\"\r\n                       style={menuList.length === 1 ? {width: \"50%\"} : (menuList.length === 2 ? {width: \"33%\"} : (menuList.length === 3 ? {display: \"none\"} : {width: \"100%\"}))}\r\n                       onClick={addFirstMenu}>\r\n                    <span className=\"nav-title cursor\">+ 添加菜单</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {menuInfoForm}\r\n          {submitButton}\r\n        </div>\r\n        {menuModal}\r\n      </div>\r\n    )\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.unMountState();\r\n  }\r\n\r\n}\r\n\r\nconst mapState = state => ({\r\n  menuInfo: state.gonghao.menu.menuInfo,\r\n  menuForm: state.gonghao.menu.menuForm,\r\n  sub_button: state.gonghao.menu.sub_button,\r\n  menuIndex: state.gonghao.menu.menuIndex,\r\n  allCodes: state.gonghao.menu.allCodes,\r\n  isSubmit: state.gonghao.menu.isSubmit,\r\n  targetKeys: state.gonghao.menu.targetKeys\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  initMenuInfo(record) {\r\n    dispatch(actionCreators.initMenuInfo(record));\r\n  },\r\n  handleInfoChange(e, name) {\r\n    dispatch(actionCreators.handleInfoChange(e.target.value, name));\r\n  },\r\n  handleIndividualChange(value) {\r\n    dispatch(actionCreators.handleIndividualChange(value));\r\n  },\r\n  handleInputChange(e, name) {\r\n    dispatch(actionCreators.handleInputChange(name, e.target.value))\r\n  },\r\n  handleSubInputChange(e, name) {\r\n    dispatch(actionCreators.handleSubInputChange(name, e.target.value))\r\n  },\r\n  addFirstMenu() {\r\n    dispatch(actionCreators.addFirstMenu())\r\n  },\r\n  editMenu(item, index) {\r\n    dispatch(actionCreators.editMenu(item, index))\r\n  },\r\n  addSecondMenu(e) {\r\n    e.stopPropagation();\r\n    dispatch(actionCreators.addSecondMenu())\r\n  },\r\n  submitMenu(props) {\r\n    dispatch(actionCreators.submitMenu(props))\r\n  },\r\n  openModal() {\r\n    dispatch(actionCreators.openModal())\r\n  },\r\n  editSecMenu(data, idx) {\r\n    dispatch(actionCreators.editSecMenu(data, idx))\r\n  },\r\n  deleteFirMenu() {\r\n    dispatch(actionCreators.deleteFirMenu())\r\n  },\r\n  deleteSubMenu() {\r\n    dispatch(actionCreators.deleteSubMenu())\r\n  },\r\n  changeGonghao(targetKeys) {\r\n    dispatch(actionCreators.changeGonghao(targetKeys))\r\n  },\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  cancelMenu() {\r\n    dispatch(actionCreators.cancelMenu())\r\n  },\r\n  resetState(props) {\r\n    props.history.goBack();\r\n    dispatch(actionCreators.resetState());\r\n  },\r\n  unMountState() {\r\n    dispatch(actionCreators.resetState());\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Form.create({name: 'editMenuInfo'})(EditMenuInfo));","import React, {Component} from 'react';\r\nimport {Button, Table} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport {actionCreators} from './store';\r\nimport './index.scss';\r\n\r\nclass Config extends Component {\r\n\r\n  render() {\r\n    const {replyMessageList, allCodes, deleteReplyMessage} = this.props;\r\n    const configHeader = [\r\n      {\r\n        key: \"type\",\r\n        title: \"类型\",\r\n        dataIndex: \"type\",\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return (\r\n            <span>\r\n              {record.type === 0 ? \"文本\"\r\n                : (record.type === 1 ? \"点击\"\r\n                  : (record.type === 2 ? \"关注\"\r\n                    : (record.type === 4 ? \"默认回复\" : \"~~\")))}\r\n            </span>\r\n          )\r\n        }\r\n      }, {\r\n        key: \"name\",\r\n        dataIndex: \"name\",\r\n        title: \"消息名称\",\r\n        align: \"center\"\r\n      },{\r\n        key: \"sex\",\r\n        title: \"性别\",\r\n        dataIndex: \"sex\",\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return (\r\n            <span>\r\n              {record.sex === 1 ? \"男\" : (record.sex === 2\r\n                ? \"女\" : (record.sex === 0 ? \"未知\" : \"默认\"))}\r\n            </span>\r\n          )\r\n        }\r\n      }, {\r\n        key: \"text\",\r\n        title: \"用户回复文本\",\r\n        dataIndex: \"text\",\r\n        align: \"center\",\r\n        render: text => text ? text : \"——\"\r\n      }, {\r\n        key: \"key\",\r\n        title: \"点击关键词\",\r\n        dataIndex: \"key\",\r\n        align: \"center\",\r\n        render: text => text ? text : \"——\"\r\n      }, {\r\n        key: \"codes\",\r\n        title: \"公号名称\",\r\n        dataIndex: \"codes\",\r\n        align: \"center\",\r\n        render: text => text.length > 0 ? text.slice(0, 4).map(item => {\r\n          let a = allCodes.filter(i => i.code === item)[0];\r\n          return a && a.nick_name\r\n        }) : \"无\"\r\n      }, {\r\n        key: \"Action\",\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 120,\r\n        render: (text, record, index) => {\r\n          return (\r\n            <div className=\"btn-wrapper\">\r\n              <Button size=\"small\" type=\"primary\">\r\n                <Link to={{pathname: './update', state: {record, index}}}>编辑</Link>\r\n              </Button>\r\n              <Button size=\"small\" style={{background: \"red\", marginLeft: \"5px\"}}\r\n                      onClick={() => deleteReplyMessage(record._id, index)}>删除</Button>\r\n            </div>\r\n          )\r\n        }\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"edit-config\">\r\n          <Button type=\"primary\" className=\"edit-btn\">\r\n            <Link to='./create'>新建回复规则</Link>\r\n          </Button>\r\n          <Table className='config-table' size=\"small\" rowKey={(record => record._id)} columns={configHeader} dataSource={replyMessageList} bordered pagination={false}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getReplyMessageList();\r\n    this.props.getAllCodes();\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  allCodes: state.gonghao.reply.allCodes,\r\n  replyMessageList: state.gonghao.reply.replyMessageList\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  getReplyMessageList() {\r\n    dispatch(actionCreators.getReplyMessageList())\r\n  },\r\n  deleteReplyMessage(id, index) {\r\n    dispatch(actionCreators.deleteReplyMessage(id, index))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Config);","import React from 'react';\r\nimport {Card, List} from 'antd';\r\nimport \"./index.scss\";\r\n\r\nconst GraphicMessage = props => {\r\n  const {messageList, updateMessageItem} = props;\r\n  return (\r\n    <div className=\"graphic-message-list-wrapper\">\r\n      <Card className=\"message-list-card\" title={\r\n        messageList.length > 1 ?\r\n        <List className=\"message-list\">\r\n            <List.Item className=\"cursor\" onClick={() => updateMessageItem(messageList[0], 0)}>\r\n              <div className=\"head-message\">\r\n                <p className=\"ellipse-two\">{messageList[0].title}</p>\r\n                <img src={messageList[0].picurl} alt=\"\"/>\r\n              </div>\r\n          </List.Item>\r\n          {messageList.slice(1).map((message, index) => \r\n            <List.Item className=\"border_btm cursor\" onClick={() => updateMessageItem(message, index + 1)} key={index}>\r\n              <div className=\"rest-message\">\r\n                <p className=\"ellipse-two\">{message.title}</p>\r\n                <img src={message.picurl} alt=\"\"/>\r\n              </div>\r\n            </List.Item>)}\r\n        </List> : <div className=\"cursor\" onClick={() => updateMessageItem(messageList[0], 0)}>\r\n          <div className=\"head-other\">\r\n            <img src={messageList[0].picurl} alt=\"\"/>\r\n            <h3 className=\"title textEllipsis\">{messageList[0].title}</h3>\r\n            <p className=\"ellipse-two\">{messageList[0].description}</p>\r\n          </div>\r\n        </div>}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default GraphicMessage;","import React from 'react';\r\nimport { Checkbox, Row, Col, Modal, Button } from 'antd';\r\n\r\nconst MultiSelectModal = props => {\r\n  const {selectGonghaoModal, allCodes, codes = [], changeGonghao, closeSelectModal} = props;\r\n  return (\r\n    <Modal width={1000} visible={selectGonghaoModal} maskClosable={false} closable={false} mask={false}  footer={<Button type=\"primary\" disabled={codes.length === 0} onClick={closeSelectModal}>确定</Button>}>\r\n      <Checkbox.Group value={codes} style={{ width: '100%' }} onChange={changeGonghao}>\r\n        <Row>\r\n          {allCodes.map(item =>  <Col span={4} key={item._id}>\r\n            <Checkbox value={item.code}>{item.nick_name}</Checkbox>\r\n          </Col>)}\r\n        </Row>\r\n      </Checkbox.Group>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default MultiSelectModal;","import React, {Component, Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Form, Button, Input, Upload, Radio, Icon, Row, Col, Divider, Avatar} from \"antd\";\r\nimport * as actionCreators from '../store/actionCreators';\r\nimport \"./index.scss\";\r\nimport GraphicMessage from '../../../../common/components/GraphicMessage';\r\nimport MultiSelectModal from '../../../../common/components/SelectGonghao/MultiSelectModal';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    sm: {span: 4}\r\n  },\r\n  wrapperCol: {\r\n    sm: {span: 14, offset: 0}\r\n  },\r\n};\r\n\r\nclass EditConfigInfo extends Component {\r\n\r\n  UNSAFE_componentWillMount() {\r\n    const { location: {state}, getAllCodes, initState, closeSelectModal } = this.props;\r\n    getAllCodes();\r\n    state && initState(state.record, state.index);\r\n    state && closeSelectModal();\r\n  }\r\n  render() {\r\n    const {selectGonghaoModal, allCodes, closeSelectModal, openSelectModal, submitForm, messageInfo, updateMessageItem, addToList, changeMessageInfo, uploadImg, history, updateIndex, updateCurrentMessage, deleteCurrentMessage} = this.props;\r\n    let TextOrKey, MessageContent;\r\n    if (messageInfo.type === 0) {\r\n      TextOrKey = <Form.Item label=\"用户回复内容\">\r\n        <Input onChange={e => changeMessageInfo(\"text\", e.target.value)} value={messageInfo.text} placeholder='请输入用户回复内容'/>\r\n      </Form.Item>\r\n    } else if (messageInfo.type === 1) {\r\n      TextOrKey = <Form.Item label=\"点击关键词\">\r\n        <Input onChange={e => changeMessageInfo(\"key\", e.target.value)} value={messageInfo.key} placeholder='请输入菜单栏点击关键词'/>\r\n      </Form.Item>\r\n    }\r\n    if (messageInfo.replyType === 0) {\r\n      MessageContent = <Form.Item className=\"inputtxt\" label=\"文本消息\">\r\n        <Input.TextArea onChange={e => changeMessageInfo(\"content\", e.target.value)} value={messageInfo.content} autosize={{minRows: 3, maxRows: 6}} placeholder='请输入回复文本消息'/>\r\n      </Form.Item>\r\n    } else {\r\n      let UploadImg;\r\n      if (messageInfo.picurl) {\r\n        UploadImg = <img style={{width: \"100px\"}} src={messageInfo.picurl} alt=\"图片走丢啦~\"/>\r\n      } else {\r\n        UploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n      }\r\n      MessageContent = <Fragment>\r\n        <Form.Item label=\"图文标题\">\r\n          <Input onChange={e => changeMessageInfo(\"title\", e.target.value)} value={messageInfo.title} placeholder='请输入图文标题'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文链接\">\r\n          <Input onChange={e => changeMessageInfo(\"url\", e.target.value)} value={messageInfo.url} placeholder='请输入图文链接'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文描述\">\r\n          <Input.TextArea onChange={e => changeMessageInfo(\"description\", e.target.value)} value={messageInfo.description} autosize={{minRows: 3, maxRows: 6}} placeholder='请输入图文描述'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"上传图片\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" showUploadList={false} onChange={uploadImg}>\r\n            {UploadImg}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item label=\" \" colon={false}>\r\n          {updateIndex > -1 ? <div>\r\n            <Button onClick={updateCurrentMessage} type=\"primary\" style={{marginRight: 20}}>保存</Button>\r\n            <Button onClick={deleteCurrentMessage}>删除此条消息</Button>\r\n          </div> : <Button onClick={addToList}>添加到图文列表</Button>}\r\n        </Form.Item>\r\n      </Fragment>\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        {selectGonghaoModal && <MultiSelectModal allCodes={allCodes} selectGonghaoModal={selectGonghaoModal} changeGonghao={codes => changeMessageInfo(\"codes\", codes)} closeSelectModal={closeSelectModal} codes={messageInfo.codes} />}\r\n        <Form className=\"reply-form\" labelAlign=\"right\" {...formItemLayout}>\r\n          <Col span={17}>\r\n            <Form.Item label=\"选择公号\">\r\n              <Avatar className=\"cursor\" shape=\"square\" icon=\"user\" onClick={openSelectModal}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"消息名称\">\r\n              <Input onChange={e => changeMessageInfo(\"name\", e.target.value)} value={messageInfo.name} placeholder='请输入消息名称,(仅供备注，不会发送给粉丝)'/>\r\n            </Form.Item>\r\n          </Col>\r\n          <Divider style={{width: \"110%\", marginLeft: -50}}/>\r\n          <h2 className=\"block-title\">设置自动回复</h2>\r\n          <Row>\r\n            <Col span={17}>\r\n              <Form.Item wrapperCol={{offset: 1}}>\r\n                <Radio.Group value={messageInfo.replyType} onChange={e => changeMessageInfo(\"replyType\", e.target.value)}>\r\n                  <Radio.Button value={0}>文本消息</Radio.Button>\r\n                  <Radio.Button value={1}>图文消息</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              {MessageContent}\r\n            </Col>\r\n            <Col span={7}>\r\n              {messageInfo.articles.length > 0 && <GraphicMessage messageList={messageInfo.articles} updateMessageItem={updateMessageItem} />}\r\n            </Col>\r\n          </Row>\r\n          <Divider style={{width: \"110%\", marginLeft: -50}}/>\r\n          <h2 className=\"block-title\">设置模板消息</h2>\r\n          <Col span={17}>\r\n            <Form.Item wrapperCol={{offset: 1}}>\r\n              <Radio.Group value={messageInfo.type} onChange={e => changeMessageInfo(\"type\", e.target.value)}>\r\n                <Radio.Button value={0}>特定回复</Radio.Button>\r\n                <Radio.Button value={1}>用户点击</Radio.Button>\r\n                <Radio.Button value={2}>用户关注</Radio.Button>\r\n                <Radio.Button value={4}>默认回复</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item label=\"粉丝性别\">\r\n              <Radio.Group value={messageInfo.sex} onChange={e => changeMessageInfo(\"sex\", e.target.value)}>\r\n                <Radio value={3}>默认</Radio>\r\n                <Radio value={1}>男</Radio>\r\n                <Radio value={2}>女</Radio>\r\n                <Radio value={0}>未知</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item label=\"未知性别\">\r\n              <Radio.Group value={messageInfo.attribute} onChange={e => changeMessageInfo(\"attribute\", e.target.value)}>\r\n                <Radio value={1}>男</Radio>\r\n                <Radio value={2}>女</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            {TextOrKey}\r\n          </Col>\r\n          <Divider style={{width: \"110%\", marginLeft: -50}}/>\r\n          <Form.Item wrapperCol={{offset: 1}}>\r\n            <Button type=\"primary\" style={{marginRight: 20}} onClick={() => submitForm(messageInfo, this.props)}>提交</Button>\r\n            <Button onClick={() => history.goBack()}>取消</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  messageInfo: state.gonghao.reply.messageInfo,\r\n  allCodes: state.gonghao.reply.allCodes,\r\n  selectGonghaoModal: state.gonghao.reply.selectGonghaoModal,\r\n  updateIndex: state.gonghao.reply.updateIndex,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  closeSelectModal() {\r\n    dispatch(actionCreators.closeSelectModal())\r\n  },\r\n  openSelectModal() {\r\n    dispatch(actionCreators.openSelectModal())\r\n  },\r\n  changeMessageInfo(key, value) {\r\n    dispatch(actionCreators.changeMessageInfo(key, value))\r\n  },\r\n  uploadImg(info) {\r\n    if (info.file.status === 'done') {\r\n      let picurl = `http://t.dmmup.com/uploads/${info.file.response.filename}`;\r\n      dispatch(actionCreators.changeMessageInfo(\"picurl\", picurl))\r\n    }\r\n  },\r\n  addToList() {\r\n    dispatch(actionCreators.addToList())\r\n  },\r\n  updateMessageItem(item, index) {\r\n    dispatch(actionCreators.updateMessageItem(item, index))\r\n  },\r\n  updateCurrentMessage() {\r\n    dispatch(actionCreators.updateCurrentMessage())\r\n  },\r\n  deleteCurrentMessage() {\r\n    dispatch(actionCreators.deleteCurrentMessage())\r\n  },\r\n  submitForm(messageInfo, props) {\r\n    const { title, picurl, url, description } = messageInfo;\r\n    const {state} = props.location;\r\n    messageInfo.articles.length === 0 && (messageInfo.articles.push({ title, picurl, url, description }));\r\n    messageInfo.title = messageInfo.picurl = messageInfo.url = messageInfo.description = \"\";\r\n    if (state) {\r\n      messageInfo._id = state.record._id;\r\n      dispatch(actionCreators.updateConfigForm(messageInfo, props.history))\r\n    } else {\r\n      dispatch(actionCreators.createConfigForm(messageInfo, props.history))\r\n    }\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState());\r\n  },\r\n  initState(record, index) {\r\n    dispatch(actionCreators.initState(record, index))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Form.create({name: 'editConfigInfo'})(EditConfigInfo));","import React, { Component } from 'react';\r\nimport { Button, Table, Modal, message } from 'antd';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass QrCode extends Component {\r\n  state = {\r\n    qrCodeList: []\r\n  };\r\n  render() {\r\n    const { qrCodeList } = this.state;\r\n    const qrCodeHeader = [\r\n      {\r\n        key: \"name\",\r\n        dataIndex: \"name\",\r\n        title: \"二维码名称\",\r\n        align: \"center\",\r\n        width: 300\r\n      },\r\n      {\r\n        key: \"content\",\r\n        dataIndex: \"content\",\r\n        title: \"关注后回复内容\",\r\n        align: \"center\",\r\n      },\r\n      {\r\n        key: \"gonghao\",\r\n        dataIndex: \"gonghao\",\r\n        title: \"公号\",\r\n        align: \"center\",\r\n        width: 300\r\n      },\r\n      {\r\n        key: \"qr_code_url\",\r\n        dataIndex: \"qr_code_url\",\r\n        title: \"二维码\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record) => <img style={{width: \"100%\"}} src={text} alt=\"\"/>\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record, index) => <div>\r\n          <Button style={{marginRight: 10}} size=\"small\" type=\"primary\">\r\n            <Link to={{pathname: \"./update\", query: record}}>修改</Link>\r\n          </Button>\r\n          <Button size=\"small\" type=\"danger\" onClick={() => this.deleteQrCode(record._id, index)}>删除</Button>\r\n        </div>\r\n      }\r\n    ];\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Button type=\"primary\" style={{marginBottom: 20}}><Link to=\"./create\">新增参数二维码</Link></Button>\r\n          <Table rowKey={record => record._id} size=\"small\" bordered columns={qrCodeHeader} dataSource={qrCodeList} />\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getQrCodeList()\r\n  }\r\n\r\n  getQrCodeList() {\r\n    axios.get(\"/qr_code/show\").then(res => {\r\n      let {codes, data} = res.data;\r\n      for (var i = 0, codesLength = codes.length; i < codesLength; i++) {\r\n        for (var j = 0, dataLength = data.length; j < dataLength; j++) {\r\n          if (codes[i].code === parseInt(data[j].code)) {\r\n            data[j].gonghao = codes[i].name;\r\n          }\r\n        }\r\n      }\r\n      this.setState({qrCodeList: data.reverse()});\r\n    });\r\n  }\r\n\r\n  deleteQrCode(id, index) {\r\n    const { qrCodeList } = this.state;\r\n    Modal.confirm({\r\n      title: \"确定删除这条内容吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/qr_code/deleteOne\", { id })\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            qrCodeList.splice(index, 1);\r\n            this.setState({qrCodeList})\r\n          });\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default QrCode;","import React, { Component } from 'react';\r\nimport { Button, Input, Form, Modal, message, Select } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst { Option } = Select;\r\n\r\nconst initState = {\r\n  gonghaoList: [],\r\n  qrCodeInfo: {\r\n    name: \"\",\r\n    content: \"\",\r\n    code: null\r\n  }\r\n};\r\n\r\nclass EditQrCode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.cancelEdit = this.cancelEdit.bind(this);\r\n    this.submitEdit = this.submitEdit.bind(this);\r\n  }\r\n  state = JSON.parse(JSON.stringify(initState));\r\n  render() {\r\n    const { gonghaoList, qrCodeInfo } = this.state;\r\n    const { query } = this.props.history.location;\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <div className=\"title-wrapper\">\r\n            <h2>编辑二维码信息</h2>\r\n            <div className=\"fr\">\r\n              <Button type=\"primary\" style={{marginRight: 10}} onClick={this.submitEdit}>提交</Button>\r\n              <Button onClick={this.cancelEdit}>取消</Button>\r\n            </div>\r\n          </div>\r\n          <Form className=\"fl\" style={{width: \"40%\"}} labelCol={{sm: 6}} wrapperCol={{sm: 18}}>\r\n            <Form.Item label=\"二维码名称\">\r\n              <Input value={qrCodeInfo.name} placeholder=\"请输入二维码名称\" onChange={e => this.changeInputValue(e.target.value, \"name\")} />\r\n            </Form.Item>\r\n            <Form.Item label=\"关注回复内容\">\r\n              <Input.TextArea value={qrCodeInfo.content} placeholder=\"请输入关注回复内容\" onChange={e => this.changeInputValue(e.target.value, \"content\")} />\r\n            </Form.Item>\r\n            <Form.Item label=\"选择公号\">\r\n              <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"输入公号/选择公号\"\r\n                optionFilterProp=\"children\"\r\n                value={qrCodeInfo.code ? this.getGonghaoName(qrCodeInfo.code) : qrCodeInfo.gonghao}\r\n                onChange={value => this.changeInputValue(value, \"code\")}\r\n                filterOption={(input, option) =>\r\n                  option.props.children.indexOf(input) >= 0\r\n                }\r\n                disabled={!!query}\r\n              >\r\n                {gonghaoList.map(item => <Option key={item._id} value={item.code}>{item.nick_name}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { query } = this.props.history.location;\r\n    this.getGonghaoList();\r\n    query && this.initState(query)\r\n  }\r\n\r\n  getGonghaoName(code) {\r\n    if(code) {\r\n      const { gonghaoList } = this.state;\r\n      let result = gonghaoList.filter(item => item.code === parseInt(code));\r\n      return result.length > 0 && result[0].name\r\n    }\r\n  }\r\n\r\n  initState(query) {\r\n    axios.get(\"/tag/get_name\", { params: { tagId: query.tagId } })\r\n      .then(res => {\r\n        if(res.data.data) {\r\n          const { name } = res.data.data;\r\n          query.tagName = name;\r\n          this.setState(state => ({qrCodeInfo: {...query,}}))\r\n        }\r\n      });\r\n  }\r\n\r\n  getGonghaoList() {\r\n    axios.get(\"/qr_code/get_code\").then(res => {\r\n      const { codes: gonghaoList } = res.data;\r\n      this.setState({gonghaoList})\r\n    });\r\n  }\r\n\r\n  changeInputValue(value, name) {\r\n    const { qrCodeInfo } = this.state;\r\n    qrCodeInfo[name] = value;\r\n    this.setState(state => ({qrCodeInfo: {...state.qrCodeInfo, ...qrCodeInfo}}))\r\n  }\r\n\r\n  submitEdit() {\r\n    const { qrCodeInfo } = this.state;\r\n    const { query } = this.props.history.location;\r\n    let url = \"/qr_code/create\";\r\n    if(query) {\r\n      qrCodeInfo.id = qrCodeInfo._id;\r\n      url = \"/qr_code/update\";\r\n    }\r\n    Modal.confirm({\r\n      title: \"确定提交吗？\",\r\n      onOk: () => {\r\n        axios.post(url, {...qrCodeInfo})\r\n          .then(res => {\r\n            const { data } = res.data;\r\n            if (!data) {\r\n              message.error(query ? \"修改失败\" : \"创建失败\");\r\n            } else {\r\n              message.info(query ? \"修改成功\" : \"创建成功\");\r\n              this.cancelEdit();\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  cancelEdit() {\r\n    this.props.history.goBack();\r\n    this.resetState();\r\n  }\r\n\r\n  resetState() {\r\n    this.setState({...initState})\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.resetState();\r\n  }\r\n}\r\n\r\nexport default EditQrCode;","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Tuoguan from './tuoguan';\r\nimport GonghaoGroup from './tuoguan/group'\r\n\r\nimport Menu from './menu';\r\nimport editMenu from './menu/edit';\r\n\r\nimport Replay from './reply';\r\nimport editReplay from './reply/edit';\r\n\r\nimport QRCode from './qrcode';\r\nimport editQRCode from './qrcode/edit';\r\n\r\n\r\nclass TuoguanWrapper extends Component {\r\n  render() {\r\n    return (\r\n        <Route path=\"/admin/gonghao\" render={() =>\r\n          <Switch>\r\n            {/*接管公号*/}\r\n            <Route path='/admin/gonghao/tuoguan/'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/tuoguan/index\" component={Tuoguan} />\r\n                <Route path=\"/admin/gonghao/tuoguan/group\" component={GonghaoGroup} />\r\n                <Redirect from=\"/admin/gonghao/tuoguan\" exact to='/admin/gonghao/tuoguan/index' />\r\n              </Switch>\r\n            </Route>\r\n            {/*菜单配置*/}\r\n            <Route path='/admin/gonghao/menu/'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/menu/index\" component={Menu} />\r\n                <Route path='/admin/gonghao/menu/create' component={editMenu} />\r\n                <Route path='/admin/gonghao/menu/update' component={editMenu} />\r\n                <Redirect from=\"/admin/gonghao/menu\" exact to='/admin/gonghao/menu/index' />\r\n              </Switch>\r\n            </Route>\r\n            {/*自动回复*/}\r\n            <Route path='/admin/gonghao/reply'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/reply/index\" component={Replay} />\r\n                <Route path='/admin/gonghao/reply/create' component={editReplay} />\r\n                <Route path='/admin/gonghao/reply/update' component={editReplay} />\r\n                <Redirect from=\"/admin/gonghao/reply\" exact to='/admin/gonghao/reply/index' />\r\n              </Switch>\r\n            </Route>\r\n            {/*参数二维码*/}\r\n            <Route path='/admin/gonghao/qrcode/'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/qrcode/index\" component={QRCode} />\r\n                <Route path='/admin/gonghao/qrcode/create' component={editQRCode} />\r\n                <Route path='/admin/gonghao/qrcode/update' component={editQRCode} />\r\n                <Redirect from=\"/admin/gonghao/qrcode\" exact to='/admin/gonghao/qrcode/index' />\r\n              </Switch>\r\n            </Route>\r\n            <Redirect from=\"/admin/gonghao\" exact to='/admin/gonghao/tuoguan' />\r\n          </Switch>\r\n        } />\r\n    )\r\n  }\r\n}\r\n\r\nexport default TuoguanWrapper;","import React from 'react';\r\nimport {Card, List, Icon, Tooltip} from 'antd';\r\nimport \"./index.scss\";\r\nimport moment from 'moment';\r\n\r\nconst GraphicMessage = props => {\r\n  const {messageList, openSyncModal, openModal, openTimingModal, copy, deleteMaterial, openUpdateMaterialModal} = props;\r\n  return (\r\n    <div className=\"message-list-wrapper\">\r\n      <List grid={{gutter: 20, sm: 4, xxl: 6}} dataSource={messageList}\r\n            renderItem={(item, index) => <List.Item key={item._id}>\r\n              <Card className=\"message-list-card\" title={\r\n                <List className=\"message-list\">\r\n                  <div className=\"update-time\"><Icon\r\n                    type=\"sound\"/> 更新于 {moment(item.update_time * 1000).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                  <Tooltip title=\"\" key={item.content.news_item[0].thumb_media_id + \"0\"}>\r\n                    <List.Item className=\"cursor\" onClick={() => openUpdateMaterialModal(item.media_id, 0, item.content.news_item[0], item._id)}>\r\n                      <div className=\"head-message\">\r\n                        <p className=\"ellipse-two\">{item.content.news_item[0].title}</p>\r\n                        <img src={item.content.news_item[0].local_img_path} alt=\"\"/>\r\n                      </div>\r\n                  </List.Item>\r\n                  </Tooltip>\r\n                  {item.content.news_item.slice(1).map((message, index) => <Tooltip title=\"点击修改原文链接\" key={message.thumb_media_id + index + 1} placement=\"rightTop\">\r\n                    <List.Item className=\"border_btm cursor\" onClick={() => openUpdateMaterialModal(item.media_id, index + 1, item.content.news_item[index + 1], item._id)}>\r\n                      <div className=\"rest-message\">\r\n                        <p className=\"ellipse-two\">{message.title}</p>\r\n                        <img src={message.local_img_path} alt=\"\"/>\r\n                      </div>\r\n                    </List.Item>\r\n                  </Tooltip>)}\r\n                </List>}\r\n                    actions={[\r\n                      <Tooltip title=\"同步\"><Icon onClick={() => openSyncModal(item)} type=\"cloud-upload\"\r\n                                                key=\"sync\"/></Tooltip>,\r\n                      <Tooltip title=\"发送\"><Icon onClick={() => openModal(item)} type=\"message\" key=\"send\"/></Tooltip>,\r\n                      <Tooltip title=\"定时发送\"><Icon onClick={() => openTimingModal(item)} type=\"history\" key=\"timing\"/></Tooltip>,\r\n                      <Tooltip title=\"复制\"><Icon onClick={() => copy(item._id)} type=\"fork\" key=\"copy\"/></Tooltip>,\r\n                      <Tooltip title=\"删除\"><Icon onClick={() => deleteMaterial(item._id, index)} type=\"delete\"\r\n                                                key=\"del\"/></Tooltip>,\r\n                    ]}\r\n              />\r\n            </List.Item>}/>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default GraphicMessage;","import React, {PureComponent} from 'react';\r\nimport {message, Modal, Radio, Switch, DatePicker, TimePicker, Checkbox, Row, Col, Input} from \"antd\";\r\nimport moment from 'moment';\r\nimport {connect} from \"react-redux\";\r\nimport { actionCreators } from '../store';\r\nimport GraphicMessage from '../components/GraphicMessage';\r\n\r\nimport axios from 'axios';\r\n\r\nclass groupMessage extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      syncModal: false,\r\n      checkedList: [],\r\n      indeterminate: false,\r\n      checkAll: false,\r\n      messageInfo: {},\r\n      code: props.code,\r\n      gonghaoList: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { code } = this.state;\r\n    this.props.getMessageList(code);\r\n    this.props.getTagList(code);\r\n    this.props.getGroupGonghao();\r\n    this.getGonghaoList();\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\r\n    if(this.props.code !== nextProps.code) {\r\n      const { code } = nextProps;\r\n      this.props.getMessageList(code);\r\n    }\r\n  }\r\n\r\n  getGonghaoList = () => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        const { data, code } = res.data;\r\n        if (code === 1) {\r\n          this.setState({gonghaoList: data})\r\n        }\r\n      })\r\n  };\r\n\r\n  render() {\r\n    const { messageList, openModal, sendModal, sendMessage, sendInfo, tagList, closeModal, changeTagId, sendTimingModal, sendTimingMessage, sendTimingInfo, openTimingModal, changeTimingState, copy, changeTime, deleteMaterial, isComplete, openUpdateMaterialModal, closeUpdateMaterialModal, updateMaterialModal, updateMaterial, updateInfo, changeContentSourceUrl }  = this.props;\r\n    const { code, gonghaoList } = this.state;\r\n    let selectGonghaoList = gonghaoList.filter(item => item.code !== code);\r\n    const selectTagRadio = tagList.map(item => (\r\n      <Radio key={item._id} value={item.id}>{item.name}</Radio>\r\n    ));\r\n    return (\r\n      <div>\r\n        <div className=\"container\" style={{padding: 0}}>\r\n          <GraphicMessage messageList={messageList} openSyncModal={message => this.setState({syncModal: true, messageInfo: message})} openModal={openModal} openTimingModal={openTimingModal} copy={copy} deleteMaterial={deleteMaterial} isComplete={isComplete} openUpdateMaterialModal={openUpdateMaterialModal} />\r\n        </div>\r\n        <Modal\r\n          title=\"请选择要发送的标签\"\r\n          visible={sendModal}\r\n          onOk={() => sendMessage(sendInfo)}\r\n          onCancel={closeModal}\r\n        >\r\n          <Radio.Group value={sendInfo.tagId} onChange={e => changeTagId(e, false)}>\r\n            {selectTagRadio}\r\n          </Radio.Group>\r\n        </Modal>\r\n        <Modal\r\n          title=\"创建定时发送任务？\"\r\n          visible={sendTimingModal}\r\n          onOk={() => sendTimingMessage(sendTimingInfo, code)}\r\n          onCancel={closeModal}\r\n        >\r\n          <label htmlFor=\"tagId\">\r\n            标签：\r\n            <Radio.Group id=\"tagId\" value={sendTimingInfo.tagId} onChange={e => changeTagId(e, true)}>\r\n              {selectTagRadio}\r\n            </Radio.Group>\r\n          </label>\r\n          <label style={{display: \"block\", margin: \"20px 0\"}} htmlFor=\"isTiming\">\r\n            是否定时：\r\n            <Switch checked={sendTimingInfo.isTiming} onChange={changeTimingState} />\r\n          </label>\r\n          <label htmlFor=\"timing\" style={{display: sendTimingInfo.isTiming ? \"block\" : \"none\"}}>\r\n            时间选择：\r\n            <DatePicker\r\n              value={moment(new Date(sendTimingInfo.timing), 'YYYY-MM-DD')}\r\n              onChange={(time, timeString) => changeTime(timeString, \"date\")}\r\n            />\r\n            <TimePicker\r\n              value={moment(new Date(sendTimingInfo.timing), 'HH-MM-SS')}\r\n              onChange={(time, timeString) => changeTime(timeString, \"time\")}\r\n            />\r\n          </label>\r\n        </Modal>\r\n        <Modal width={640} title=\"请选择需要同步素材的公号：\" visible={this.state.syncModal} onOk={this.syncMaterial} onCancel={this.closeSyncModal}>\r\n          <div style={{ borderBottom: '1px solid #E9E9E9', paddingBottom: 10, marginBottom: 10 }}>\r\n            <Checkbox\r\n              indeterminate={this.state.indeterminate}\r\n              onChange={this.onCheckAllChange}\r\n              checked={this.state.checkAll}\r\n            >全选</Checkbox>\r\n          </div>\r\n          <Checkbox.Group style={{width: \"100%\"}} onChange={this.onChange} value={this.state.checkedList}>\r\n            <Row>\r\n              {selectGonghaoList.map(item => <Col span={6} key={item._id}>\r\n                <Checkbox value={item.code}>{item.nick_name}</Checkbox>\r\n              </Col>)}\r\n            </Row>\r\n          </Checkbox.Group>\r\n        </Modal>\r\n        <Modal visible={updateMaterialModal} onCancel={closeUpdateMaterialModal} onOk={() => updateMaterial(updateInfo, code)} title=\"修改原文链接\">\r\n          <Input value={updateInfo.articles.content_source_url} placeholder=\"请输入新的原文链接\" onChange={changeContentSourceUrl} />\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n\r\n  syncMaterial = () => {\r\n    const { messageInfo, checkedList: codes } = this.state;\r\n    Modal.confirm({\r\n      title: \"确定同步这条素材吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/material/syncMaterial\", {codes, docs: [messageInfo]})\r\n          .then(res => {\r\n            const {code, msg } = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.closeSyncModal();\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  closeSyncModal = () => {\r\n    this.setState({\r\n      syncModal: false,\r\n      checkedList: [],\r\n      indeterminate: false,\r\n      checkAll: false,\r\n      messageInfo: {}\r\n    })\r\n  };\r\n\r\n  onCheckAllChange = e => {\r\n    const { code } = this.props.location.state;\r\n    const plainOptions = this.props.gonghaoList.filter(item => item.code !== code);\r\n    const codes = plainOptions.map(item => item.code);\r\n    this.setState({\r\n      checkedList: e.target.checked ? codes : [],\r\n      indeterminate: false,\r\n      checkAll: e.target.checked,\r\n    });\r\n  };\r\n\r\n  onChange = checkedList => {\r\n    const { code } = this.props.location.state;\r\n    const plainOptions = this.props.gonghaoList.filter(item => item.code !== code);\r\n    const codes = plainOptions.map(item => item.code);\r\n    this.setState({\r\n      checkedList,\r\n      indeterminate: !!checkedList.length && checkedList.length < codes.length,\r\n      checkAll: checkedList.length === codes.length,\r\n    });\r\n  };\r\n}\r\n\r\n\r\nconst mapState = state => ({\r\n  tagList: state.message.group.tagList,\r\n  messageList: state.message.group.messageList,\r\n  sendInfo: state.message.group.sendInfo,\r\n  sendTimingInfo: state.message.group.sendTimingInfo,\r\n  sendModal: state.message.group.sendModal,\r\n  sendTimingModal: state.message.group.sendTimingModal,\r\n  gonghaoList: state.message.group.gonghaoList,\r\n  isComplete: state.message.group.isComplete,\r\n  updateMaterialModal: state.message.group.updateMaterialModal,\r\n  updateInfo: state.message.group.updateInfo,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getTagList(code) {\r\n    dispatch(actionCreators.getTagList(code))\r\n  },\r\n  getMessageList(code) {\r\n    dispatch(actionCreators.getMessageList(code))\r\n  },\r\n  openModal(record) {\r\n    dispatch(actionCreators.openModal(record));\r\n  },\r\n  sendMessage(sendInfo) {\r\n    dispatch(actionCreators.sendMessage(sendInfo));\r\n  },\r\n  changeTagId(e, isTiming) {\r\n    dispatch(actionCreators.changeTagId(e.target.value, isTiming));\r\n  },\r\n  openTimingModal(record) {\r\n    dispatch(actionCreators.openTimingModal(record));\r\n  },\r\n  closeModal() {\r\n    dispatch(actionCreators.closeModal());\r\n  },\r\n  sendTimingMessage(sendTimingInfo, code) {\r\n    dispatch(actionCreators.sendTimingMessage(sendTimingInfo, code));\r\n  },\r\n  changeTimingState(value) {\r\n    dispatch(actionCreators.changeTimingState(value));\r\n  },\r\n  changeTime(time, type) {\r\n    dispatch(actionCreators.changeTime(time, type));\r\n  },\r\n  copy(id) {\r\n    dispatch(actionCreators.copy(id));\r\n  },\r\n  deleteMaterial(id, index) {\r\n    dispatch(actionCreators.deleteMaterial(id, index));\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState());\r\n  },\r\n  getGroupGonghao() {\r\n    dispatch(actionCreators.getGroupGonghao());\r\n  },\r\n  openUpdateMaterialModal(media_id, index, articles, id) {\r\n    dispatch(actionCreators.openUpdateMaterialModal({media_id, index, articles, id}));\r\n  },\r\n  closeUpdateMaterialModal() {\r\n    dispatch(actionCreators.closeUpdateMaterialModal());\r\n  },\r\n  updateMaterial(updateInfo, code) {\r\n    dispatch(actionCreators.updateMaterial(updateInfo, code));\r\n  },\r\n  changeContentSourceUrl(e) {\r\n    let content_source_url = e.target.value;\r\n    dispatch(actionCreators.changeContentSourceUrl(content_source_url));\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(groupMessage);","import React, {Component} from 'react';\r\nimport {Avatar, Input, List, Layout, Collapse, message} from \"antd\";\r\nimport axios from 'axios';\r\nimport \"./index.scss\";\r\n\r\nconst {Sider, Content} = Layout;\r\nconst {Panel} = Collapse;\r\n\r\nclass SingleSelectByGroup extends Component {\r\n\r\n  state = {\r\n    gonghaoTagList: [],\r\n    gonghaoList: [],\r\n    nick_name: \"\",\r\n    _id: \"\",\r\n    activeKey: \"\"\r\n  };\r\n\r\n  search = nick_name => {\r\n    const {gonghaoTagList} = this.state;\r\n    if (nick_name !== \"\") {\r\n      axios.get(\"/conf/find_one\", {params: {nick_name}})\r\n        .then(res => {\r\n          if (res.data.data.length !== 0) {\r\n            const {data} = res.data;\r\n            this.props.setCode(data[0].code);\r\n            let selectGonghao = gonghaoTagList.filter(item => data[0].group === item.name);\r\n            this.setState({nick_name: \"\", _id: data[0]._id, activeKey: selectGonghao[0].name})\r\n          } else {\r\n            message.info(\"没有查询到包含该字符的公号，请检查后重新输入\")\r\n          }\r\n        })\r\n    } else {\r\n      message.info(\"公号名不能为空\")\r\n    }\r\n  };\r\n\r\n  changeSearchInput = e => {\r\n    let nick_name = e.target.value;\r\n    this.setState({nick_name})\r\n  };\r\n\r\n  selectGonghao = gonghao => {\r\n    const {code, _id} = gonghao;\r\n    this.props.setCode(code);\r\n    this.setState({_id})\r\n  };\r\n\r\n  handleChangeGroup = value => {\r\n    this.setState({activeKey: value || \"\"})\r\n  };\r\n\r\n  render() {\r\n    const {gonghaoTagList, gonghaoList, nick_name, _id, activeKey} = this.state;\r\n    const PanelList = name => (\r\n      <List className=\"gonghao-list\" dataSource={gonghaoList.length > 0 ? gonghaoList.filter(i => i.group === name) : null} locale={{emptyText: <span style={{display: \"none\"}}>123</span>}}\r\n        renderItem={gonghao =>\r\n          <List.Item className={gonghao._id === _id ? \"cursor selected\" : \"cursor\"} onClick={() => this.selectGonghao(gonghao)} key={gonghao._id}>\r\n            <Avatar shape=\"square\" size={22} icon=\"user\"/>{gonghao.nick_name}\r\n        </List.Item>\r\n      }/>\r\n    );\r\n    return (\r\n      <Layout style={{background: \"#fff\"}} className=\"message-group-wrapper\">\r\n        <Sider className=\"message-sider-wrapper\" theme=\"light\" width=\"180\">\r\n          <Input.Search\r\n            className=\"search-input\"\r\n            placeholder=\"请输入公号名称\"\r\n            onSearch={this.search}\r\n            value={nick_name}\r\n            onChange={this.changeSearchInput}\r\n          />\r\n          <List>\r\n            <List.Item>\r\n              <Collapse bordered={false} accordion activeKey={activeKey} onChange={this.handleChangeGroup}>\r\n                <Panel header=\"未分组\" key=\"未分组\">\r\n                  {PanelList(\"未分组\")}\r\n                </Panel>\r\n                {gonghaoTagList.map(item =>\r\n                  <Panel header={item.name} key={item.name}>\r\n                    {PanelList(item.name)}\r\n                  </Panel>\r\n                )}\r\n              </Collapse>\r\n            </List.Item>\r\n          </List>\r\n        </Sider>\r\n        <Content>{this.props.content}</Content>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  getGonghaoTagList = () => {\r\n    axios.get(\"/gonghaoTag\")\r\n      .then(res => {\r\n        if (res.data.code === 1) {\r\n          const {data: gonghaoTagList} = res.data;\r\n          this.setState({gonghaoTagList})\r\n        }\r\n      })\r\n  };\r\n\r\n  getGonghaoList = () => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        const {data, code} = res.data;\r\n        if (code === 1) {\r\n          this.setState({gonghaoList: data})\r\n        }\r\n      })\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGonghaoTagList();\r\n    this.getGonghaoList();\r\n  }\r\n}\r\n\r\nexport default SingleSelectByGroup;","import React, { Component } from 'react';\r\nimport {Modal, Table, Tooltip, Input} from 'antd';\r\nimport moment from 'moment';\r\nimport {connect} from \"react-redux\";\r\nimport { actionCreators } from '../store';\r\nimport Button from '../../../../common/components/Button';\r\n\r\n\r\nclass History extends Component {\r\n\r\n  componentWillMount() {\r\n    const { code } = this.props;\r\n    this.props.getTagList(code);\r\n    this.props.getHistoryList(code);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\r\n    if(this.props.code !== nextProps.code) {\r\n      const { code } = nextProps;\r\n      this.props.getTagList(code);\r\n      this.props.getHistoryList(code);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { historyList, tagList, checkSendState, openMsgModal, closeMsgModal, deleteMsg, changeArticleIdx, delMsgInfo, historyMsgModal, code } = this.props;\r\n    const historyHeader = [\r\n      {\r\n        key: \"update_time\",\r\n        title: \"发送消息时间\",\r\n        align: \"center\",\r\n        width: 120,\r\n        render: (text, record) => {\r\n          let time = moment(record.update_time * 1000).format(\"YYYY-MM-DD, HH:mm:ss\");\r\n          return (\r\n            <span>{time}</span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: \"发送对象\",\r\n        align: \"center\",\r\n        render: (text, record) => {\r\n          let tag = \"无\";\r\n          if(record.tagId) {\r\n            tag = tagList.map(item => {\r\n              return (record.tagId === item.id) && (tag = item.name);\r\n            });\r\n          }\r\n          return (\r\n            <div>\r\n              {tag}\r\n            </div>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: \"是否成功\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record) => {\r\n          let msg_id = record.msg_id;\r\n          let success;\r\n          if(msg_id === \"\") {\r\n            success = \"无msg_id,发送不成功\"\r\n          } else {\r\n            success = \"msg_id存在,发送成功\"\r\n          }\r\n          return <span>{success}</span>\r\n        }\r\n      },\r\n      {\r\n        title: \"图文标题\",\r\n        align: \"center\",\r\n        width: 300,\r\n        render: (text, record) => {\r\n          let arr =\r\n            record.content.news_item.length !== 0\r\n              ? record.content.news_item\r\n              : [];\r\n          let titles = [];\r\n          for (let i = 0; i < arr.length; i++) {\r\n            titles.push(i + 1 + \".\" + arr[i].title);\r\n          }\r\n          return (\r\n            <Tooltip placement=\"top\" title={titles}>\r\n              <p className=\"textEllipsis\" style={{width: 300}}>{titles}</p>\r\n            </Tooltip>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"isTiming\",\r\n        title: \"是否定时\",\r\n        align: \"center\",\r\n        render: (text, record) => {\r\n          let time = record.isTiming ? \"是\" : \"否\";\r\n          return (\r\n            <span>{time}</span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"timing\",\r\n        title: \"定时时间\",\r\n        align: \"center\",\r\n        render: (text, record) => {\r\n          let time = \"~~\";\r\n          if (record.timing) {\r\n            time = moment(record.timing).format(\"YYYY-MM-DD, HH:mm:ss\")\r\n          }\r\n          return (\r\n            <span>{time}</span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: (text, record) => (\r\n          <div>\r\n            <Button mb={10} onClick={() => checkSendState(code, record.msg_id)} buttonContent=\"发送状态\" />\r\n            <Button background=\"danger\" onClick={() => openMsgModal(record.code, record.msg_id)} buttonContent=\"删除消息\" />\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          {/*<Button size=\"default\" background=\"warning\" onClick={() => clearHistory(code)} buttonContent=\"清空列表\" />*/}\r\n            {/*<div className=\"fr\">*/}\r\n              {/*<DatePicker value={delDate ? moment(delDate): null} onChange={changeDate} />*/}\r\n              {/*<Button background=\"danger\" size=\"default\" ml={10} onClick={() => deleteMany(code, delDate)} buttonContent=\"批量删除\" />*/}\r\n            {/*</div>*/}\r\n          <Table size=\"small\" bordered rowKey={record => record._id} columns={historyHeader} dataSource={historyList} />\r\n        </div>\r\n        <Modal\r\n          title=\"请输入要删除的消息的索引\"\r\n          visible={historyMsgModal}\r\n          onOk={() => deleteMsg(delMsgInfo)}\r\n          onCancel={closeMsgModal}\r\n        >\r\n          <Input style={{width: 100}} value={delMsgInfo.article_idx} onChange={changeArticleIdx} />\r\n          <p style={{color: \"red\", marginTop: 10}}>Tips:   0为全部删除  1、2、3...为对应第几条</p>\r\n        </Modal>\r\n    \t</div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nconst mapState = state => ({\r\n  tagList: state.message.group.tagList,\r\n  historyList: state.message.group.historyList,\r\n  historyMsgModal: state.message.group.historyMsgModal,\r\n  delMsgInfo: state.message.group.delMsgInfo,\r\n  delDate: state.message.group.delDate\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getHistoryList(code) {\r\n    dispatch(actionCreators.getHistoryList(code))\r\n  },\r\n  getTagList(code) {\r\n    dispatch(actionCreators.getTagList(code))\r\n  },\r\n  checkSendState(code, msg_id) {\r\n    dispatch(actionCreators.checkSendState(code, msg_id))\r\n  },\r\n  openMsgModal(code, msg_id) {\r\n    dispatch(actionCreators.openMsgModal(code, msg_id))\r\n  },\r\n  closeMsgModal() {\r\n    dispatch(actionCreators.closeMsgModal())\r\n  },\r\n  deleteMsg(delMsgInfo) {\r\n    dispatch(actionCreators.deleteMsg(delMsgInfo))\r\n  },\r\n  changeArticleIdx(e) {\r\n    dispatch(actionCreators.changeArticleIdx(e.target.value))\r\n  },\r\n  clearHistory(code) {\r\n    dispatch(actionCreators.clearHistory(code))\r\n  },\r\n  changeDate(date, dataString) {\r\n    dispatch(actionCreators.changeDate(dataString))\r\n  },\r\n  deleteMany(code, delDate) {\r\n    let time = new Date(delDate).getTime()/1000;\r\n    dispatch(actionCreators.deleteMany(code, time))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(History);\r\n","import React from 'react';\r\nimport {Spin} from 'antd';\r\n\r\nconst loadingWrapper = {\r\n  width: \"100%\",\r\n  textAlign: \"center\",\r\n  background: \"rgba(241, 244, 245, .7)\",\r\n  position: \"absolute\",\r\n  padding: \"200px 0\",\r\n  top: 0,\r\n  left: 0,\r\n  zIndex: 1,\r\n};\r\n\r\nconst Loading = props => <div style={loadingWrapper}><Spin spinning={props.spinning}/></div>\r\n\r\nexport default Loading;","import React, {Component} from 'react';\r\nimport {Empty, Modal, message} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {actionCreators} from \"./store\";\r\nimport './index.scss';\r\nimport GroupMaterial from './material';\r\nimport SingleSelectByGroup from \"../../../common/components/SelectGonghao/SingleSelectByGroup\";\r\nimport Button from '../../../common/components/Button';\r\nimport History from './history';\r\nimport Loading from '../../../common/components/Loading';\r\n\r\nclass groupMessage extends Component {\r\n\r\n  state = {\r\n    code: null,\r\n    historyModalVisible: false,\r\n    spinning: true\r\n  };\r\n\r\n  timer = () => setTimeout(() => {\r\n    this.setState({spinning: false})\r\n  }, 1000);\r\n\r\n  setCode = code => {\r\n    clearTimeout(this.timer);\r\n    this.setState({spinning: true});\r\n    this.setState({code});\r\n    this.timer();\r\n  };\r\n\r\n  componentDidMount() {\r\n    message.warning(\"请选择公号进行操作\")\r\n  }\r\n\r\n  render() {\r\n    const {getMaterial, clearMaterial} = this.props;\r\n    const {code, historyModalVisible, spinning} = this.state;\r\n    const imageStyle = {\r\n      height: \"auto\",\r\n      margin: \"0 auto\"\r\n    };\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <SingleSelectByGroup setCode={this.setCode} content={\r\n            code\r\n              ? spinning\r\n                ? <div>\r\n                    <Loading spinning={spinning}/><Empty description=\"\" image=\"https://s.weituibao.com/static/1544235586856/empty.png\" imageStyle={imageStyle}/>\r\n                  </div>\r\n                : <div>\r\n                    <Button size=\"default\" background=\"success\" buttonContent=\"同步素材\" onClick={() => getMaterial(code)}/>\r\n                    <Button size=\"default\" buttonContent=\"群发记录\" onClick={() => this.setState({historyModalVisible: true})}/>\r\n                    <Button size=\"default\" mb={20} background=\"danger\" onClick={() => clearMaterial(code)} buttonContent=\"清空列表\"/>\r\n                    <GroupMaterial code={code}/>\r\n                  </div>\r\n              : <Empty description=\"\" image=\"https://s.weituibao.com/static/1544235586856/empty.png\" imageStyle={imageStyle}/>}/>\r\n        </div>\r\n        {code && <Modal title=\"发送记录\" visible={historyModalVisible} width={1200} footer=\"\" onCancel={() => this.setState({historyModalVisible: false})}><History code={code}/></Modal>}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getMaterial(code) {\r\n    dispatch(actionCreators.getMaterial(code))\r\n  },\r\n  clearMaterial(code) {\r\n    dispatch(actionCreators.clearMaterial(code));\r\n  },\r\n});\r\n\r\nexport default connect(null, mapDispatch)(groupMessage);","import React, { Component } from 'react';\r\nimport { Table, Select } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionCreators } from './store';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '../../../common/components/Button';\r\n\r\nconst { Option } = Select;\r\n\r\nclass Kefu extends Component {\r\n\r\n  state = {\r\n    messageType: \"请选择消息类型\"\r\n  };\r\n\r\n  UNSAFE_componentWillMount () {\r\n    this.props.getKefuMessageList()\r\n  }\r\n\r\n  render() {\r\n    const { kefuMessageList, copyMessage, deleteMessage, sendKefuMessage, messageType, handleChangeType }  = this.props;\r\n    const kefuMessageHeader = [\r\n      {\r\n        key: \"remarks\",\r\n        title: \"消息名称\",\r\n        dataIndex: \"remarks\",\r\n        align: \"center\",\r\n        render: text => !text ? \"请点击修改，编辑消息名称\" : text\r\n      },\r\n      {\r\n        key: \"delay\",\r\n        title: \"延时时间(分钟)\",\r\n        align: \"center\",\r\n        width: 120,\r\n        render: (text, record) => record.task ? record.delay : \"——\"\r\n      },\r\n      {\r\n        key: \"timing_time\",\r\n        title: \"定时时间(分钟)\",\r\n        align: \"center\",\r\n        sorter: (a, b) => (new Date(a.timing_time)).getTime() - (new Date(b.timing_time)).getTime(),\r\n        render: (text, record) => record.is_timing ? record.time : \"——\"\r\n      },\r\n      {\r\n        key: \"gonghaoList\",\r\n        dataIndex: \"gonghaoList\",\r\n        title: \"已选公号 (最多显示4个)\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: text => text.slice(0, 4).map(item => <p key={item._id}>{item.nick_name}</p>)\r\n      },\r\n      {\r\n        key: \"sex\",\r\n        title: \"群发粉丝\",\r\n        align: \"center\",\r\n        dataIndex: \"sex\",\r\n        width: 120,\r\n        render: text => text === \"0\" ? \"仅未知粉丝\" : text === \"1\"  ? \"仅男性粉丝\" : text === \"2\" ? \"仅女性粉丝\" : \"全部粉丝\"\r\n      },\r\n      {\r\n        key: \"action_type\",\r\n        title: \"互动行为\",\r\n        align: \"center\",\r\n        dataIndex: \"action_type\",\r\n        width: 100,\r\n        render: text => text === 0 ? \"全部\" : text === 3  ? \"用户回复\" : text === 2 ? \"点击菜单\" : \"用户关注\"\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 280,\r\n        render: (text, record, index) => (\r\n          <div>\r\n            <Button background=\"success\" onClick={() => copyMessage(record)} buttonContent=\"复制\" />\r\n            <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />\r\n            <Button disabled={record.is_timing || record.delay} background={(record.is_timing || record.delay) ? \"info\" : \"warning\"} onClick={() => sendKefuMessage(record._id, record.tagId)} buttonContent=\"发送消息\" />\r\n            <Button background=\"danger\" onClick={() => deleteMessage(record._id, index)} buttonContent=\"删除\" />\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Button size=\"default\" mb={20} buttonContent={<Link to=\"./create\">新建客服消息</Link>} />\r\n          <Select value={messageType} onChange={handleChangeType}>\r\n            <Option value={3}>全部</Option>\r\n            <Option value={0}>手动</Option>\r\n            <Option value={1}>延时</Option>\r\n            <Option value={2}>定时</Option>\r\n          </Select>\r\n          <Table size=\"middle\" rowKey={record => record._id} columns={kefuMessageHeader} dataSource={kefuMessageList} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  kefuMessageList: state.message.kefu.kefuMessageList,\r\n  messageType: state.message.kefu.messageType\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getKefuMessageList() {\r\n    dispatch(actionCreators.getKefuMessageList())\r\n  },\r\n  copyMessage(record) {\r\n    dispatch(actionCreators.createKefuMessage(record))\r\n  },\r\n  deleteMessage(id, index) {\r\n    dispatch(actionCreators.deleteMessage(id, index))\r\n  },\r\n  sendKefuMessage(id, tagId) {\r\n    dispatch(actionCreators.sendKefuMessage(id, tagId))\r\n  },\r\n  handleChangeType(value) {\r\n    dispatch(actionCreators.handleChangeType(value))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Kefu);","import React, {Component} from 'react';\r\nimport {Icon, Form, Button, Radio, DatePicker, Input, Upload, InputNumber, Avatar, Divider  } from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {actionCreators} from '../store';\r\nimport moment from \"moment\";\r\nimport \"./index.scss\";\r\nimport MultiSelectModal from '../../../../common/components/SelectGonghao/MultiSelectModal';\r\n\r\nclass EditMessage extends Component {\r\n  state = {\r\n    selectGonghaoModal: true\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.props.getAllCodes();\r\n    let query = this.props.history.location.query;\r\n    query && this.props.closeSelectModal();\r\n    query && this.props.initKefuMessageInfo(query);\r\n  }\r\n\r\n  render() {\r\n    const { kefuMessageInfo, content, changeContentValue, changeMessageValue, uploadImg, submitMessage, allCodes, changeGonghao, selectGonghaoModal, history, openSelectModal, closeSelectModal } = this.props;\r\n    // const mapMaterials = kefuMessageInfo.contents.map((item, index) => (\r\n    //   <li key={item._id || index} onClick={() => selectMessage(item, index)}>\r\n    //     <div className=\"material-item\">\r\n    //       <div className=\"material-title fl textEllipsis\">{item.title || \"标题\"}</div>\r\n    //       <div className=\"material-img fl\">\r\n    //         <img src={item.picurl} alt=\"\"/>\r\n    //       </div>\r\n    //     </div>\r\n    //   </li>\r\n    // ));\r\n    // isImgAndText,\r\n      // if (kefuMessageInfo.type === 0) {\r\n    //   isImgAndText = <div className=\"show-material-wrapper fr\">\r\n    //     <ul>\r\n    //       {mapMaterials}\r\n    //       {kefuMessageInfo.contents.length < 8 && <li className=\"add-material tc\" onClick={addMessage}><Icon type=\"plus\"/></li>}\r\n    //     </ul>\r\n    //   </div>\r\n    // }\r\n    let isUploadImg, isTextUploadImg, FormItemWrapper;\r\n    if (content.picurl) {\r\n      isTextUploadImg = <img style={{width: \"100px\"}} src={content.picurl} alt=\"\"/>\r\n    } else {\r\n      isTextUploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n    }\r\n    if (kefuMessageInfo.img) {\r\n      isUploadImg = <img style={{width: \"100px\"}} src={kefuMessageInfo.img} alt=\"\"/>\r\n    } else {\r\n      isUploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n    }\r\n    if (kefuMessageInfo.type === 1) {\r\n      FormItemWrapper = <Form.Item label=\"文本消息\" className=\"text-message\">\r\n        <Input.TextArea autosize={{minRows: 6}} value={content.description} placeholder=\"请输入文本消息\" onChange={e => changeContentValue(e, \"description\")}/>\r\n      </Form.Item>\r\n    } else if (kefuMessageInfo.type === 0) {\r\n      FormItemWrapper = <div>\r\n        <Form.Item label=\"图片封面\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" onChange={(info) => {\r\n            uploadImg(kefuMessageInfo, info)\r\n          }} showUploadList={false}>\r\n            {isTextUploadImg}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文标题\">\r\n          <Input placeholder=\"请输入图文标题\" value={content.title} onChange={e => changeContentValue(e, \"title\")}/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文描述\" className=\"text-message\">\r\n          <Input.TextArea autosize={{minRows: 6}} value={content.description} placeholder=\"请输入图文描述\" onChange={e => changeContentValue(e, \"description\")}/>\r\n        </Form.Item>\r\n        <Form.Item label=\"跳转链接\">\r\n          <Input placeholder=\"请输入跳转链接\" value={content.url} onChange={e => changeContentValue(e, \"url\")}/>\r\n        </Form.Item>\r\n      </div>\r\n    } else if (kefuMessageInfo.type === 2) {\r\n      FormItemWrapper =\r\n        <Form.Item label=\"图片消息\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" onChange={(info) => {\r\n            uploadImg(kefuMessageInfo, info)\r\n          }} showUploadList={false}>\r\n            {isUploadImg}\r\n          </Upload>\r\n        </Form.Item>;\r\n    }\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: {span: 4}\r\n      },\r\n      wrapperCol: {\r\n        sm: {span: 20, offset: 0}\r\n      },\r\n    };\r\n    let Channel;\r\n    if(kefuMessageInfo.channel === 1) {\r\n      Channel = <><Form.Item label=\"延时时间\">\r\n        <InputNumber formatter={value => `${value}分钟`}\r\n                              parser={value => value.replace('分钟', '')} value={kefuMessageInfo.delay} min={1} onChange={value => changeMessageValue(value, \"delay\")} />\r\n      </Form.Item>\r\n        <Form.Item label=\"互动类型\">\r\n          <Radio.Group value={kefuMessageInfo.action_type} onChange={e => changeMessageValue(e.target.value, \"action_type\")}>\r\n            <Radio value={0}>全部</Radio>\r\n            <Radio value={1}>用户关注</Radio>\r\n            <Radio value={3}>用户回复</Radio>\r\n            <Radio value={2}>点击菜单</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        </>\r\n    } else if(kefuMessageInfo.channel === 2) {\r\n      Channel =\r\n        <Form.Item label=\"定时时间\">\r\n          <DatePicker showTime placeholder=\"选择时间\" value={moment(kefuMessageInfo.timing_time)} onChange={(value, dateString) => changeMessageValue(dateString, 'timing_time')} />\r\n        </Form.Item>\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"container edit-message\">\r\n          {/*{isImgAndText}*/}\r\n          <div className=\"kefu-form fl\">\r\n            <Form {...formItemLayout}>\r\n              <Form.Item label=\"选择公号\">\r\n                <Avatar onClick={openSelectModal} className=\"cursor\" shape=\"square\" icon=\"user\" />\r\n              </Form.Item>\r\n              <Form.Item label=\"消息名称\">\r\n                <Input value={kefuMessageInfo.remarks} placeholder=\"请输入消息名称,(仅供备注，不会发送给粉丝)\" onChange={e => changeMessageValue(e.target.value, \"remarks\")} />\r\n              </Form.Item>\r\n              <Divider style={{width: \"205%\", marginLeft: -50}} />\r\n              <h2 className=\"block-title\">设置客服消息</h2>\r\n              <Form.Item>\r\n                <Radio.Group buttonStyle=\"solid\" value={kefuMessageInfo.type} onChange={e => changeMessageValue(e.target.value, \"type\")}>\r\n                  <Radio.Button value={0}>图文消息</Radio.Button>\r\n                  <Radio.Button value={1}>文本消息</Radio.Button>\r\n                  <Radio.Button value={2}>图片消息</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              {FormItemWrapper}\r\n              <Divider style={{width: \"175%\", marginLeft: -50}} />\r\n              <h2 className=\"block-title\">选择群发对象</h2>\r\n              <Form.Item label=\"群发粉丝\">\r\n                <Radio.Group value={kefuMessageInfo.sex} onChange={e => changeMessageValue(e.target.value, \"sex\")}>\r\n                  <Radio value=\"all\">全部粉丝</Radio>\r\n                  <br/>\r\n                  <Radio value=\"1\">仅男性粉丝</Radio>\r\n                  <Radio value=\"2\">仅女性粉丝</Radio>\r\n                  <Radio value=\"0\">仅未知粉丝</Radio>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              <Divider style={{width: \"175%\", marginLeft: -50}} />\r\n              <h2 className=\"block-title\">设置群发方式</h2>\r\n              <Form.Item label=\"发送方式\">\r\n                <Radio.Group value={kefuMessageInfo.channel} onChange={e => changeMessageValue(e.target.value, \"channel\")}>\r\n                  <Radio.Button value={0}>人工</Radio.Button>\r\n                  <Radio.Button value={1}>延时</Radio.Button>\r\n                  <Radio.Button value={2}>定时</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              {Channel}\r\n              <Divider style={{width: \"175%\", marginLeft: -50}} />\r\n              <Form.Item>\r\n                <Button size=\"large\" type=\"primary\" onClick={() => submitMessage(kefuMessageInfo, history, allCodes)}>确定{!kefuMessageInfo._id ? \"并创建消息\" : \"并保存消息\"}</Button>\r\n                {kefuMessageInfo._id && <Button style={{marginLeft: 20}} type=\"info\" size=\"large\" onClick={() => history.goBack()}>取消编辑</Button>}\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n        {selectGonghaoModal && <MultiSelectModal allCodes={allCodes} selectGonghaoModal={selectGonghaoModal} changeGonghao={changeGonghao} closeSelectModal={closeSelectModal} codes={kefuMessageInfo.codes} />}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  kefuMessageInfo: state.message.kefu.kefuMessageInfo,\r\n  content: state.message.kefu.content,\r\n  allCodes: state.message.kefu.allCodes,\r\n  selectGonghaoModal: state.message.kefu.selectGonghaoModal,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  initKefuMessageInfo(query) {\r\n    dispatch(actionCreators.initKefuMessageInfo(query));\r\n\r\n  },\r\n  changeContentValue(e, name) {\r\n    dispatch(actionCreators.changeContentValue(e.target.value, name));\r\n  },\r\n  uploadImg(kefuMessageInfo, info) {\r\n    if (info.file.status === 'done') {\r\n      let img = `http://t.dmmup.com//uploads/${info.file.response.filename}`,\r\n        img_path = `./public/uploads/${info.file.response.filename}`;\r\n      if (kefuMessageInfo.type === 0) {\r\n        dispatch(actionCreators.changeContentValue(img, \"picurl\"));\r\n      } else {\r\n        dispatch(actionCreators.changeMessageValue(img, \"img\"));\r\n        dispatch(actionCreators.changeMessageValue(img_path, \"img_path\"));\r\n      }\r\n    }\r\n  },\r\n  changeMessageValue(value, name) {\r\n    dispatch(actionCreators.changeMessageValue(value, name));\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState());\r\n  },\r\n  selectParams() {\r\n    dispatch(actionCreators.selectParams());\r\n  },\r\n  submitMessage(info, history, allCodes) {\r\n    dispatch(actionCreators.submitMessage(info, history, allCodes));\r\n  },\r\n  changeGonghao(codes) {\r\n    dispatch(actionCreators.changeGonghao(codes))\r\n  },\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  openSelectModal() {\r\n    dispatch(actionCreators.openSelectModal())\r\n  },\r\n  closeSelectModal() {\r\n    dispatch(actionCreators.closeSelectModal())\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(EditMessage);","import React, {Component} from 'react';\r\nimport {Input, Table} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../../common/components/Button';\r\nimport {actionCreators} from './store';\r\n\r\nconst {Search} = Input;\r\n\r\nclass Template extends Component {\r\n  render() {\r\n    const {confName, templateMessageList, deleteTemplate, sendTemplate, changeConfNickName, searchConfName} = this.props;\r\n    const templateColumns = [\r\n      {\r\n        key: \"confName\",\r\n        dataIndex: \"confName\",\r\n        title: \"公众号\",\r\n        align: \"center\"\r\n      }, {\r\n        key: \"name\",\r\n        dataIndex: \"name\",\r\n        title: \"消息名称\",\r\n        align: \"center\"\r\n      }, {\r\n        key: \"templateName\",\r\n        dataIndex: \"templateName\",\r\n        title: \"模板名称\",\r\n        align: \"center\"\r\n      // }, {\r\n      //   key: \"sendAt\",\r\n      //   dataIndex: \"sendAt\",\r\n      //   title: \"发送时间\",\r\n      //   align: \"center\"\r\n      }, {\r\n        key: \"Action\",\r\n        title: \"操作\",\r\n        align: \"center\",\r\n        width: 240,\r\n        render: (text, record, index) => <div>\r\n          <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />\r\n          <Button buttonContent=\"发送\" onClick={() => sendTemplate(record)} background=\"success\"/>\r\n          <Button buttonContent=\"删除\" onClick={() => deleteTemplate(record._id, index)} background=\"danger\"/>\r\n        </div>\r\n      }\r\n    ];\r\n    return (\r\n      <div className=\"container\">\r\n        <Search style={{width: 200}} placeholder=\"搜索公众号\" value={confName} onChange={changeConfNickName} onSearch={searchConfName}/>\r\n        <div className=\"fr\"><Button size=\"default\" className=\"fr\" mb={20} buttonContent={<Link to=\"./create\">+ 新建模板消息</Link>}/></div>\r\n        <Table rowKey={record => record._id} size=\"middle\" dataSource={templateMessageList} columns={templateColumns}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getTemplateList()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  templateMessageList: state.message.template.templateMessageList,\r\n  confName: state.message.template.confName,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getTemplateList() {\r\n    dispatch(actionCreators.getTemplateList())\r\n  },\r\n  deleteTemplate(id, index) {\r\n    dispatch(actionCreators.deleteTemplate(id, index))\r\n  },\r\n  sendTemplate(record) {\r\n    dispatch(actionCreators.sendTemplate(record))\r\n  },\r\n  changeConfNickName(e) {\r\n    dispatch(actionCreators.changeConfNickName(e.target.value))\r\n  },\r\n  searchConfName(value) {\r\n    dispatch(actionCreators.searchConfName(value))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Template);","import React from 'react';\r\nimport { Radio, Row, Col, Modal, Button } from 'antd';\r\n\r\nconst SingleSelectModal = props => {\r\n  const {selectGonghaoModal, allCodes, code, confirmSelect, closeSelectModal} = props;\r\n  return (\r\n    <Modal width={1000} visible={selectGonghaoModal} maskClosable={false} closable={false} mask={false}  footer={<Button type=\"primary\" disabled={!code} onClick={closeSelectModal}>确定</Button>}>\r\n      <Radio.Group value={code} style={{ width: '100%' }} onChange={e => confirmSelect(e.target.value, code)}>\r\n        <Row>\r\n          {allCodes.map(item => <Col span={4} key={item._id}>\r\n            <Radio value={item.code}>{item.nick_name}</Radio>\r\n          </Col>)}\r\n        </Row>\r\n      </Radio.Group>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default SingleSelectModal;","import React from 'react';\r\nimport {Modal, Input, Button} from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport {actionCreators} from \"../store\";\r\n\r\nconst colors = [\"#000\", \"rgb(208, 2, 27)\", \"rgb(245, 166, 35)\", \"rgb(59, 116, 255)\", \"rgb(189, 16, 224)\", \"rgb(153, 153, 153)\"];\r\nconst colorWrapperStyle = {\r\n  width: 20,\r\n  height: 20,\r\n  marginLeft: 10,\r\n  display: \"inline-block\",\r\n  marginTop: 5\r\n};\r\n\r\nconst TemplateModal = props => {\r\n  const { show, content, closeTemplateModal, saveTemplateModal, editTemplate } = props;\r\n  const footer = (\r\n    <div style={{overflow: \"hidden\", lineHeight: 1.5}}>\r\n      <div className=\"fl\">\r\n        {colors.map(item => <span className=\"cursor\" style={{...colorWrapperStyle, background: item}} key={item} onClick={() => editTemplate('color', item)} />)}\r\n      </div>\r\n      <Button type=\"primary\" className=\"fr\" onClick={saveTemplateModal}>保存</Button>\r\n    </div>);\r\n  return(\r\n    <Modal\r\n      visible={show}\r\n      onCancel={closeTemplateModal}\r\n      closable={false}\r\n      footer={footer}\r\n      mask={false}\r\n    >\r\n      <Input.TextArea style={{color: content[\"color\"]}} value={content[\"value\"]} autosize={{ minRows: 3, maxRows: 6 }} onChange={e => editTemplate('value', e.target.value)} />\r\n    </Modal>\r\n  )\r\n};\r\n\r\nconst mapState = state => ({\r\n  content: state.message.template.content,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  closeTemplateModal() {\r\n    dispatch(actionCreators.closeTemplateModal())\r\n  },\r\n  saveTemplateModal() {\r\n    dispatch(actionCreators.saveTemplateModal())\r\n  },\r\n  editTemplate(key, value) {\r\n    dispatch(actionCreators.editTemplate(key, value))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(TemplateModal);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Icon, Form, Button, Radio, Input, Avatar, Divider, Select, Row, Col } from \"antd\";\r\nimport SingleSelectModal from '../../../../common/components/SelectGonghao/SingleSelectModal';\r\nimport {actionCreators} from \"../store\";\r\nimport './index.scss';\r\nimport TemplateModal from '../components/TemplateModal';\r\n\r\nconst { Option } = Select;\r\n\r\nclass EditTemplate extends Component {\r\n\r\n  async componentWillMount() {\r\n    this.props.getAllCodes();\r\n    const { query } = this.props.location;\r\n    query && await this.props.initMessageInfo(query);\r\n  }\r\n\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: {span: 4}\r\n      },\r\n      wrapperCol: {\r\n        sm: {span: 20, offset: 0}\r\n      },\r\n    };\r\n\r\n    const { openSelectModal, messageInfo, changeMessageInfo, selectGonghaoModal, allCodes, openEditModal, templateList, templateInfo, templateModalVisible, changeTemplate, history, submitMessage, confirmSelect, closeSelectModal } =this.props;\r\n    let template = [];\r\n    for(let key in templateInfo.data) {\r\n      let content = messageInfo.content[key];\r\n      if(key === \"first\") {\r\n        template.unshift(<Form.Item label={templateInfo.data[\"first\"].pre || \"\"} key=\"first\">\r\n          <span className=\"mr5\">{content.value}</span>\r\n          <Icon className=\"cursor\" onClick={() => openEditModal(key, content)} type=\"edit\" />\r\n        </Form.Item>)\r\n      } else {\r\n        template.push(<Form.Item label={templateInfo.data[key].pre || \"\"} key={key}>\r\n          <span className=\"mr5\">{content.value}</span>\r\n          <Icon className=\"cursor\" onClick={() => openEditModal(key, content)} type=\"edit\" />\r\n        </Form.Item>)\r\n      }\r\n    }\r\n    let GonghaoModal;\r\n    selectGonghaoModal && (GonghaoModal = <SingleSelectModal code={messageInfo.code} confirmSelect={confirmSelect} closeSelectModal={closeSelectModal} allCodes={allCodes} selectGonghaoModal={selectGonghaoModal} />);\r\n    return (\r\n    \t<div className=\"container edit-message\">\r\n        <Form className=\"kefu-form\" {...formItemLayout} style={{width: 520}}>\r\n          <Form.Item label=\"选择公号\">\r\n            <Avatar onClick={openSelectModal} className=\"cursor\" shape=\"square\" icon=\"user\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"消息名称\">\r\n            <Input value={messageInfo.name}  onChange={e => changeMessageInfo(\"name\", e.target.value)} placeholder=\"请输入消息名称,(仅供备注，不会发送给粉丝)\" />\r\n          </Form.Item>\r\n          <Divider style={{width: \"175%\", marginLeft: -50}} />\r\n          <h2 className=\"block-title\">设置模板消息</h2>\r\n          <Form.Item label=\"选择模板\">\r\n            <Select value={messageInfo.templateId} onChange={changeTemplate}>\r\n              {templateList.map(item => <Option value={item.template_id} key={item.template_id}>{item.title}</Option>)}\r\n            </Select>\r\n          </Form.Item>\r\n          <Row className=\"template-wrapper\">\r\n            <Col span={4}/>\r\n            <Col span={20}>\r\n              <div className=\"message-block\">\r\n                {template}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item label=\"点击跳转\">\r\n            <Input value={messageInfo.url} placeholder=\"输入跳转链接，且必须以http://或https://开头\" onChange={e => changeMessageInfo(\"url\", e.target.value)} />\r\n          </Form.Item>\r\n          <Divider style={{width: \"175%\", marginLeft: -50}} />\r\n          <h2 className=\"block-title\">选择群发对象</h2>\r\n          <Form.Item label=\"群发粉丝\">\r\n            <Radio.Group defaultValue=\"all\">\r\n              <Radio value=\"all\">全部粉丝</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Divider style={{width: \"175%\", marginLeft: -50}} />\r\n          <Form.Item>\r\n            <Button size=\"large\" type=\"primary\" onClick={() => submitMessage(messageInfo, history, templateList)}>确定{!messageInfo._id ? \"并创建消息\" : \"并保存消息\"}</Button>\r\n            {messageInfo._id && <Button style={{marginLeft: 20}} type=\"info\" size=\"large\" onClick={() => history.goBack()}>取消编辑</Button>}\r\n          </Form.Item>\r\n        </Form>\r\n        {GonghaoModal}\r\n        <TemplateModal show={templateModalVisible} />\r\n    \t</div>\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  messageInfo: state.message.template.messageInfo,\r\n  templateList: state.message.template.templateList,\r\n  templateInfo: state.message.template.templateInfo,\r\n  templateModalVisible: state.message.template.templateModalVisible,\r\n  selectGonghaoModal: state.message.template.selectGonghaoModal,\r\n  allCodes: state.message.template.allCodes,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  openEditModal(key, content) {\r\n    !content.color && (content.color = \"#000\");\r\n    dispatch(actionCreators.openEditModal(key, content))\r\n  },\r\n  changeTemplate(value){\r\n    dispatch(actionCreators.changeTemplate(value))\r\n  },\r\n  submitMessage(info, history, templateList) {\r\n    dispatch(actionCreators.submitMessage(info, history, templateList));\r\n  },\r\n  openSelectModal() {\r\n    dispatch(actionCreators.openSelectModal())\r\n  },\r\n  changeMessageInfo(key, value) {\r\n    dispatch(actionCreators.changeMessageInfo(key, value))\r\n  },\r\n  initMessageInfo(record) {\r\n    dispatch(actionCreators.initMessageInfo(record))\r\n  },\r\n  confirmSelect(code) {\r\n    dispatch(actionCreators.confirmSelect(code))\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState())\r\n  },\r\n  closeSelectModal() {\r\n    dispatch(actionCreators.closeSelectModal())\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(EditTemplate);","import React, { Component } from 'react';\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Group from \"./group\";\r\nimport GroupMaterial from \"./group/material\";\r\nimport History from './group/history';\r\nimport Kefu from './kefu';\r\nimport EditKefuMSg from './kefu/edit';\r\nimport Template from './template';\r\nimport EditTemplate from './template/edit';\r\n\r\nclass GroupRouter extends Component {\r\n  render() {\r\n    return (\r\n    \t<div>\r\n        <Route path='/admin/message'>\r\n          <Switch>\r\n            <Route path=\"/admin/message/group/index\" component={Group} />\r\n            <Route path=\"/admin/message/group/material\" component={GroupMaterial} />\r\n            <Route path=\"/admin/message/group/history\" component={History} />\r\n            <Route path=\"/admin/message/kefu/index\" component={Kefu} />\r\n            <Route path=\"/admin/message/kefu/create\" component={EditKefuMSg} />\r\n            <Route path=\"/admin/message/kefu/update\" component={EditKefuMSg} />\r\n            <Route path=\"/admin/message/template/index\" component={Template} />\r\n            <Route path=\"/admin/message/template/create\" component={EditTemplate} />\r\n            <Route path=\"/admin/message/template/update\" component={EditTemplate} />\r\n            <Redirect from=\"/admin/message\" exact to='/admin/message/group' />\r\n            <Redirect from=\"/admin/message/group\" exact to='/admin/message/group/index' />\r\n            <Redirect from=\"/admin/message/kefu\" exact to='/admin/message/kefu/index' />\r\n            <Redirect from=\"/admin/message/template\" exact to='/admin/message/template/index' />\r\n          </Switch>\r\n        </Route>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroupRouter;","import React, {Component} from 'react';\r\nimport {Table, Modal, message, Tabs} from 'antd';\r\nimport axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '../../../common/components/Button';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\nclass Advertise extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeTab = this.changeTab.bind(this);\r\n  }\r\n\r\n  state = {\r\n    spreadData: [],\r\n    domain_names: [],\r\n    tagList: [],\r\n    dataList: []\r\n  };\r\n\r\n  render() {\r\n    const {spreadData, tagList} = this.state;\r\n    const tabsRender = tagList.map(item => (\r\n      <TabPane tab={item.name} key={item.name}/>\r\n    ));\r\n    const spreadHeader = [\r\n      {\r\n        key: \"links\",\r\n        title: \"链接\",\r\n        align: \"center\",\r\n        width: 280,\r\n        render: (text, record) => <p\r\n          style={{width: 280, wordWrap: \"break-word\", userSelect: \"all\"}}>{'http://tiexie0.wang/cmst/' + record.id}</p>\r\n      },\r\n      {\r\n        key: \"group\",\r\n        dataIndex: \"group\",\r\n        title: \"分组\",\r\n        align: \"center\",\r\n        width: 120\r\n      },\r\n      {\r\n        key: \"title\",\r\n        dataIndex: \"title\",\r\n        title: \"标题\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        key: \"remarks\",\r\n        dataIndex: \"remarks\",\r\n        title: \"备注\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: text => text ? text : \"无\"\r\n      },\r\n      {\r\n        title: \"数据\",\r\n        align: \"center\",\r\n        width: 80,\r\n        render: (text, record) => <a href={'http://tiexie0.wang/transfer/' + record.id} target={\"_blank\"}>查看数据</a>\r\n      },\r\n      {\r\n        title: \"置顶\",\r\n        align: \"center\",\r\n        width: 80,\r\n        render: (text, record) => <Button background=\"warning\" onClick={() => this.goTop(record._id)} buttonContent=\"置顶\" />\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record, index) => <div>\r\n          <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />\r\n          <Button background=\"danger\" buttonContent=\"删除\" onClick={() => this.deleteLink(record._id, index)} />\r\n          <Button background=\"success\" mr={0} buttonContent=\"复制\" onClick={() => this.copyLink({...record})} />\r\n        </div>\r\n      }\r\n    ];\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <Button size=\"default\" background=\"success\" mb={20} buttonContent={<Link to=\"./create\">添加新链接</Link>} />\r\n          <Tabs animated={false} defaultActiveKey=\"ALL\" tabBarGutter={0} onChange={this.changeTab}\r\n                size='small'>\r\n            <TabPane tab=\"ALL\" key=\"ALL\"/>\r\n            {tabsRender}\r\n          </Tabs>\r\n          <Table rowKey={record => record._id} size=\"small\" bordered columns={spreadHeader} dataSource={spreadData}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSpreadList();\r\n    this.getTagList();\r\n  }\r\n\r\n  getSpreadList() {\r\n    axios.get(\"/transfer\").then(res => {\r\n      let spreadData = res.data.messages;\r\n      let domain_names = res.data.domain_names;\r\n      this.setState({\r\n        spreadData,\r\n        dataList: spreadData,\r\n        domain_names\r\n      })\r\n    });\r\n  }\r\n\r\n  getTagList() {\r\n    axios.get(\"/tuiguangTag\").then(res => {\r\n      const {data: tagList} = res.data;\r\n      this.setState({tagList})\r\n    });\r\n  }\r\n\r\n  changeTab(key) {\r\n    const {dataList} = this.state;\r\n    if (key === 'ALL') {\r\n      this.setState({\r\n        spreadData: dataList\r\n      });\r\n    } else {\r\n      let data = [];\r\n      for (let i = 0; i < dataList.length; i++) {\r\n        if (key === dataList[i].group) {\r\n          data.push(dataList[i]);\r\n        }\r\n      }\r\n      this.setState({spreadData: [...data]})\r\n    }\r\n  }\r\n\r\n  goTop(id) {\r\n    Modal.confirm({\r\n      title: \"确定置顶这条链接吗？\",\r\n      onOk: () => {\r\n        axios.post('/transfer/goTop', {id})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            this.getSpreadList();\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteLink(id, index) {\r\n    const {spreadData} = this.state;\r\n    Modal.confirm({\r\n      title: '确认删除这条内容吗？:',\r\n      onOk: () => {\r\n        axios.get('/transfer/delete', {params: {id}})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            spreadData.splice(index, 1);\r\n            this.setState({spreadData});\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  copyLink(record) {\r\n    record.id += '_copy';\r\n    const {spreadData} = this.state;\r\n    Modal.confirm({\r\n      title: \"确定复制一条推广链接吗？\",\r\n      onOk: () => {\r\n        axios.post('/transfer/create', {...record})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.info('复制成功');\r\n              spreadData.unshift(res.data.data);\r\n              this.setState({spreadData})\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default Advertise;","import React, {Component, Fragment} from 'react';\r\nimport {Form, Input, Button, Switch, InputNumber, message, Modal, List, Tag } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst initState = {\r\n  spreadLinkInfo: {\r\n    id: \"\",\r\n    title: \"\",\r\n    links: [],\r\n    weights: [],\r\n    back_urls: [],\r\n    link: \"\",\r\n    back_url: \"\",\r\n    weight: \"\",\r\n    type: false,\r\n    status: false,\r\n    granularity: 1,\r\n    group: \"\",\r\n    remarks: \"\"\r\n  },\r\n  tagList: [],\r\n  index: -1\r\n};\r\n\r\nclass EditAdvertise extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addTag = this.addTag.bind(this);\r\n    this.cancelSelectTag = this.cancelSelectTag.bind(this);\r\n    this.cancelEdit = this.cancelEdit.bind(this);\r\n    this.submitSpreadLink = this.submitSpreadLink.bind(this);\r\n    this.cancelUpdate= this.cancelUpdate.bind(this);\r\n  }\r\n\r\n  state = {...initState};\r\n\r\n  componentWillMount() {\r\n    let query = this.props.history.location.query;\r\n    query && this.initData(query);\r\n    this.getTagList();\r\n  }\r\n\r\n  render() {\r\n    const {spreadLinkInfo, tagList, index} = this.state;\r\n    const {id, title, links, weights, back_urls, link, back_url, weight, type, status, granularity, group, remarks} = spreadLinkInfo;\r\n    let isAddWeight, hasLink, hasBackUrl, hasWeight, selectedTag;\r\n    links.length > 0 && (hasLink = <Form.Item label=\"链接组\">\r\n      <List\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={links}\r\n        renderItem={(item, index) => (\r\n          <List.Item actions={[<span className=\"cursor\" style={{color: \"#f00\"}} onClick={() => this.delLink(index, \"links\")}>del</span>]}>\r\n            {item}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </Form.Item>);\r\n    back_urls.length > 0 && (hasBackUrl = <Form.Item label=\"返回链接组\">\r\n      <List\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={back_urls}\r\n        renderItem={(item, index) => (\r\n          <List.Item actions={[<span className=\"cursor\" style={{color: \"#f00\"}} onClick={() => this.delLink(index, \"back_urls\")}>del</span>]}>\r\n            {item}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </Form.Item>);\r\n    weights.length > 0 && (hasWeight = <Form.Item label=\"权重组\">\r\n      <List\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={weights}\r\n        renderItem={(item, i) => {\r\n          let isUpdate;\r\n          if(index === i) {\r\n            isUpdate = [<span className=\"cursor\" style={{color: \"#f00\"}} onClick={this.cancelUpdate}>取消</span>]\r\n          } else {\r\n            isUpdate = [<span className=\"cursor\" style={{color: \"#f00\"}} onClick={e => this.delLink(i, \"weights\", e)}>删除</span>]\r\n          }\r\n          return (\r\n          <List.Item onClick={() => this.updateWeight(i)} actions={isUpdate}>\r\n            {index === i ? <Input.Search size=\"small\" enterButton=\"保存\" onSearch={(value, e) => this.saveUpdate(value, e)} /> : item}\r\n          </List.Item>\r\n        )}}\r\n      />\r\n    </Form.Item>);\r\n    if (type) {\r\n      isAddWeight = <Fragment>\r\n        <Form.Item label=\"权重\">\r\n          <Input.Search value={weight} enterButton=\"添加\" placeholder=\"请输入权重\"\r\n                        onChange={e => this.changeInputValue(e.target.value, \"weight\")} onSearch={value => this.addLink(value, \"weights\", \"weight\")}/>\r\n        </Form.Item>\r\n        {hasWeight}\r\n        <Form.Item label=\"投放状态\">\r\n          <Switch checked={status} onChange={value => this.changeInputValue(value, \"status\")}/>\r\n        </Form.Item>\r\n        <Form.Item label=\"时间颗粒度\">\r\n          <InputNumber min={1} value={granularity} placeholder=\"请输入标题\"\r\n                       onChange={value => this.changeInputValue(value, \"granularity\")}/>\r\n        </Form.Item>\r\n      </Fragment>\r\n    }\r\n    if(group) {\r\n      selectedTag = <Tag closable onClose={this.cancelSelectTag}>{group}</Tag>\r\n    } else {\r\n     selectedTag = <Input.Search enterButton=\"确定\" placeholder=\"请输入标签\" onSearch={this.addTag}/>\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"title-wrapper\">\r\n            <h2>编辑推广链接</h2>\r\n            <div className=\"fr\">\r\n              <Button type=\"primary\" style={{marginRight: 10}} onClick={this.submitSpreadLink}>提交</Button>\r\n              <Button onClick={this.cancelEdit}>取消</Button>\r\n            </div>\r\n          </div>\r\n          <Form className=\"fl\" style={{width: \"60%\", borderRight: \"1px solid #eee\"}} labelCol={{sm: 3}} wrapperCol={{sm: 18, offset: 0}} colon={false}>\r\n            <Form.Item label=\"id\">\r\n              <Input value={id} placeholder=\"请输入id\"\r\n                     onChange={e => this.changeInputValue(e.target.value, \"id\")}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"标题\">\r\n              <Input value={title} placeholder=\"请输入标题\"\r\n                     onChange={e => this.changeInputValue(e.target.value, \"title\")}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"链接\">\r\n              <Input.Search value={link} enterButton=\"添加\" placeholder=\"请输入链接\" onChange={e => this.changeInputValue(e.target.value, \"link\")} onSearch={value => this.addLink(value, \"links\", \"link\")}/>\r\n            </Form.Item>\r\n            {hasLink}\r\n            <Form.Item label=\"返回链接\">\r\n              <Input.Search value={back_url} enterButton=\"添加\" placeholder=\"请输入返回链接\" onChange={e => this.changeInputValue(e.target.value, \"back_url\")} onSearch={value => this.addLink(value, \"back_urls\", \"back_url\")}/>\r\n            </Form.Item>\r\n            {hasBackUrl}\r\n            <Form.Item label=\"选择标签\">\r\n              {selectedTag}\r\n            </Form.Item>\r\n            <Form.Item label=\"标签选项\">\r\n              {tagList.map((item, index) => <Tag className=\"cursor\" closable onClose={(e) => this.deleteTag(e, item._id, index)} key={item._id} onClick={() => this.selectTag(item.name)}>{item.name}</Tag>)}\r\n            </Form.Item>\r\n          </Form>\r\n          <Form className=\"fl\" style={{width: \"36%\", paddingLeft: \"4%\"}} labelCol={{sm: 7}} wrapperCol={{sm: 17, offset: 0}} colon={false}>\r\n            <Form.Item label=\"是否增加权重\">\r\n              <Switch checked={type} onChange={value => this.changeInputValue(value, \"type\")}/>\r\n            </Form.Item>\r\n            {isAddWeight}\r\n            <Form.Item label=\"链接备注\">\r\n              <Input value={remarks} placeholder=\"请输入备注\" onChange={e => this.changeInputValue(e.target.value, \"remarks\")}/>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  initData(query) {\r\n    query.type = query.type === 1;\r\n    query.status = query.status === 1;\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...query}}))\r\n  }\r\n\r\n  changeInputValue(value, name) {\r\n    let {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo[name] = value;\r\n    this.setState({spreadLinkInfo})\r\n  }\r\n\r\n  addLink(value, list, item) {\r\n    const {spreadLinkInfo} = this.state;\r\n    if(!value.trim()) {\r\n      message.error(\"链接不能为空\")\r\n    } else {\r\n      spreadLinkInfo[list].push(value.trim());\r\n      spreadLinkInfo[item] = \"\";\r\n      this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}))\r\n    }\r\n  }\r\n\r\n  delLink(index, list, e) {\r\n    e && e.stopPropagation();\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo[list].splice(index, 1);\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}))\r\n  }\r\n\r\n  updateWeight(index) {\r\n    this.setState({index})\r\n  }\r\n\r\n  saveUpdate(value, e) {\r\n    e.stopPropagation();\r\n    const {spreadLinkInfo, index} = this.state;\r\n    spreadLinkInfo[\"weights\"].splice(index, 1, value);\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}, index: -1}));\r\n  }\r\n\r\n  cancelUpdate(e) {\r\n    e.stopPropagation();\r\n    this.setState({index: -1})\r\n  }\r\n\r\n  getTagList() {\r\n    axios.get(\"/tuiguangTag\").then(res => {\r\n      let tagList = res.data.data;\r\n      this.setState({tagList});\r\n    });\r\n  }\r\n\r\n  addTag(value) {\r\n    const { spreadLinkInfo } = this.state;\r\n    if(!value.trim()) {\r\n      message.error(\"标签名不能为空\")\r\n    } else {\r\n      axios.post(\"/tuiguangTag\", {name: value.trim()})\r\n        .then(res => {\r\n          if (res.data.exist === 0) {\r\n            const { data } = res.data;\r\n            this.setState(state => ({tagList: [...state.tagList, data]}));\r\n          }\r\n          spreadLinkInfo.group = value;\r\n          this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\r\n        })\r\n    }\r\n  }\r\n\r\n  selectTag(group) {\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo.group = group;\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\r\n  }\r\n\r\n  cancelSelectTag() {\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo.group = \"\";\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\r\n  }\r\n\r\n  deleteTag(e, id, index) {\r\n    e.stopPropagation();\r\n    const {tagList} = this.state;\r\n    axios.delete('/tuiguangTag', {params: {id}})\r\n      .then(res => {\r\n        tagList.splice(index, 1)\r\n        this.setState({tagList})\r\n      });\r\n  }\r\n\r\n  submitSpreadLink() {\r\n    const { query } = this.props.history.location;\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo.type = spreadLinkInfo.type ? 1 : 0;\r\n    spreadLinkInfo.status = spreadLinkInfo.status ? 1 : 0;\r\n    let url = '/transfer/create';\r\n    if(query) {\r\n      url = '/transfer/update'\r\n    }\r\n    Modal.confirm({\r\n      title: \"确定提交吗？\",\r\n      onOk: () => {\r\n        axios.post(url, {...spreadLinkInfo})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.info(res.data.success);\r\n              this.cancelEdit()\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  cancelEdit() {\r\n    this.props.history.goBack();\r\n    this.resetState();\r\n  }\r\n\r\n  resetState() {\r\n    this.setState({...initState})\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.resetState()\r\n  }\r\n}\r\n\r\nexport default EditAdvertise;","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Spread from './spread';\r\nimport EditSpread from './spread/edit';\r\n\r\nclass ChannelWrapper extends Component {\r\n  render() {\r\n    return (\r\n        <Route path=\"/admin/channel\" render={\r\n          () =>\r\n            <Switch>\r\n              <Route path=\"/admin/channel/spread/index\" component={Spread} />\r\n              <Route path=\"/admin/channel/spread/create\" component={EditSpread} />\r\n              <Route path=\"/admin/channel/spread/update\" component={EditSpread} />\r\n              <Redirect from=\"/admin/channel\" exact to='/admin/channel/spread' />\r\n              <Redirect from=\"/admin/channel/spread\" exact to='/admin/channel/spread/index' />\r\n            </Switch>\r\n          }\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChannelWrapper;","import React, { Component } from 'react';\r\nimport { Input, Table, message, Modal } from 'antd';\r\nimport Button from '../../common/components/Button';\r\nimport axios from 'axios';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nconst Search = Input.Search;\r\n\r\nclass Account extends Component {\r\n\r\n  state = {\r\n    accountList: [],\r\n    searchValue: \"\"\r\n  };\r\n\r\n  columns = [\r\n    {\r\n      key: 'username',\r\n      dataIndex: 'username',\r\n      title: '账户名',\r\n      align: 'center'\r\n    }, {\r\n      key: 'password',\r\n      dataIndex: 'password',\r\n      title: '密码（点击自动复制，打开解密网站）',\r\n      align: 'center',\r\n      render: text => <CopyToClipboard text={text} onCopy={() => message.success(\"复制成功\")}><a href=\"https://www.somd5.com/\" target=\"__blank\">{text}</a></CopyToClipboard>\r\n    }, {\r\n      key: 'role',\r\n      dataIndex: 'role',\r\n      title: '权限',\r\n      align: 'center',\r\n      render: text => text === 0 ? \"超级管理员\" : (text === 1 ? \"一级代理\" : \"二级代理\")\r\n    }, {\r\n      title: 'Action',\r\n      key: 'action',\r\n      align: 'center',\r\n      render: (text, record, index) => <Button mr={0} background=\"danger\" disabled={record.role === 0} buttonContent=\"删除\" onClick={() => this.deleteAccount(record._id, index)} />\r\n    }\r\n  ];\r\n\r\n  searchAccount = () => {\r\n    const { searchValue } = this.state;\r\n    axios.get('/account', {params: {username: searchValue}})\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          const {data: accountList, msg} = res.data;\r\n          this.setState({accountList, searchValue: \"\"});\r\n          message.success(msg)\r\n        } else {\r\n          message.error(res.data.msg);\r\n          this.getAccountList()\r\n        }\r\n      })\r\n  };\r\n\r\n  deleteAccount(_id, index) {\r\n    Modal.confirm({\r\n      title: \"确定删除这个账户吗？\",\r\n      onOk: () => {\r\n        axios.delete('/account', {params: {_id}})\r\n          .then(res => {\r\n            if(res.data.code === 1) {\r\n              this.setState(state => {\r\n                let accountList = state.accountList;\r\n                accountList.splice(index, 1);\r\n                message.success(res.data.msg);\r\n                return {accountList}\r\n              })\r\n            } else {\r\n              message.error(res.data.msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  getAccountList = () => {\r\n    axios.get('/account')\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          const { data: accountList } = res.data;\r\n          this.setState({accountList});\r\n        }\r\n      })\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAccountList()\r\n  }\r\n\r\n  handleChangeSearchValue = e => {\r\n    this.setState({searchValue: e.target.value})\r\n  };\r\n\r\n  render() {\r\n    const {accountList, searchValue} = this.state;\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Search onChange={this.handleChangeSearchValue} value={searchValue} style={{width: 300, marginBottom: 20}} placeholder=\"请输入账户名\" enterButton=\"查询\" onSearch={this.searchAccount} />\r\n          <Table rowKey={record => record._id} size=\"small\" dataSource={accountList} columns={this.columns} />\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","import React, { Component } from 'react';\r\nimport { Form, Input, message, Modal, Select } from 'antd';\r\nimport Button from '../../../common/components/Button';\r\nimport axios from 'axios';\r\n\r\nconst { Option  } = Select;\r\n\r\nclass AddAccount extends Component {\r\n\r\n  addAccount = () => {\r\n    const { form: {validateFields} } = this.props;\r\n    validateFields((errors, values) => {\r\n      if(errors) {\r\n        message.error(\"输入有误，请检查输入是否有误\");\r\n        return\r\n      }\r\n      values.password = this.$MD5(values.password).toString();\r\n      Modal.confirm({\r\n        title: \"确定创建一个新账户吗？\",\r\n        onOk: () => {\r\n          axios.post('/account', {...values})\r\n            .then(res => {\r\n              if(res.data.code === 1) {\r\n                this.resetForm()\r\n                message.success(res.data.msg)\r\n              } else {\r\n                message.error(res.data.msg)\r\n              }\r\n            })\r\n        }\r\n      })\r\n    })\r\n    // console.log(getFieldsValue())\r\n  };\r\n\r\n  resetForm = () => {\r\n    const { form: {setFieldsValue} } = this.props;\r\n    setFieldsValue({username: \"\", password: \"\", role: 2})\r\n  };\r\n\r\n  render() {\r\n    const { form: {getFieldDecorator} } = this.props;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 2 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      colon: false\r\n    };\r\n    return (\r\n\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Form {...formItemLayout}>\r\n            <Form.Item label=\"用户名\">\r\n              {getFieldDecorator('username', {\r\n                rules: [{ required: true, message: '用户名不能为空' }],\r\n              })(\r\n                <Input placeholder=\"请输入用户名\"/>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"密码\">\r\n              {getFieldDecorator('password', {\r\n                rules: [{ required: true, message: '密码不能为空' }],\r\n              })(\r\n                <Input placeholder=\"请输入密码\"/>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"管理员权限\">\r\n              {getFieldDecorator('role', {\r\n                rules: [{ required: true }],\r\n                initialValue: 2\r\n              })(\r\n                <Select>\r\n                  <Option value={0}>超级管理员</Option>\r\n                  <Option value={1}>一级代理</Option>\r\n                  <Option value={2}>二级代理</Option>\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\" \">\r\n              <Button size=\"default\" buttonContent=\"新增\" onClick={this.addAccount} />\r\n              <Button ml={20} background=\"info\" size=\"default\" buttonContent=\"清空\" onClick={this.resetForm}  />\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddAccount);","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Account from './index';\r\nimport AddAccount from './add';\r\nclass AccountRouter extends Component {\r\n  render() {\r\n    return (\r\n    \t<Switch>\r\n        <Route path=\"/admin/account/list\" component={Account} />\r\n        <Route path=\"/admin/account/add\" component={AddAccount} />\r\n        <Redirect from=\"/admin/account\" exact to=\"/admin/account/list\"/>\r\n    \t</Switch>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AccountRouter;","import React, { Component } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\nclass Index extends Component {\r\n  handleInputChange = e => {\r\n    console.log(e.target.getContent())\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    \t<div className=\"container\">\r\n        <Editor\r\n          apiKey=\"0716d4da8zojzntbxderqtt6hahy4pg7832a1gj024wxtzdp\"\r\n          init={{\r\n            menubar: \"edit\",\r\n            max_height: 750,\r\n            plugins: [\r\n              'image code lists emoticons advlist link charmap codesample fullscreen help hr insertdatetime nonbreaking preview searchreplace table'\r\n            ],\r\n            toolbar: 'formatselect | fontsizeselect | fontselect | bold italic underline strikethrough forecolor backcolor | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent | charmap nonbreaking hr | table | insertdatetime link image emoticons codesample | preview fullscreen code | searchreplace help',\r\n            min_height:500,\r\n            default_link_target: \"_blank\",\r\n            fontsize_formats: \"12px 14px 16px 18px 20px 22px 24px 30px 36px 40px 48px 50px\",\r\n          }}\r\n          onChange={this.handleInputChange}\r\n        />\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Index;","import React, { Component } from 'react';\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Index from './index';\r\n\r\nclass EditRouter extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Route path='/admin/edit'>\r\n          <Switch>\r\n            <Route path=\"/admin/edit/index\" component={Index} />\r\n            <Redirect from=\"/admin/edit\" exact to='/admin/edit/index' />\r\n          </Switch>\r\n        </Route>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditRouter;","import React, { Component } from 'react';\r\nimport { Table, Button, Tooltip } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport backTop from '../../../utils';\r\n\r\nimport {actionCreators} from \"./store\";\r\n\r\nclass Reply extends Component {\r\n  render() {\r\n    const { replyList, deleteReply, copy } = this.props;\r\n    const replyHeader =  [\r\n      {\r\n        title: \"msgId\",\r\n        key: \"msgId\",\r\n        dataIndex: \"msgId\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: \"类型\",\r\n        key: \"type\",\r\n        dataIndex: \"type\",\r\n        align: \"center\",\r\n        render: (text, record) => (record.type === 0 ? \"文本消息\"\r\n          : \"图文消息\")\r\n      },\r\n      {\r\n        key: \"title\",\r\n        dataIndex: \"title\",\r\n        title: \"标题\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: (text, record) => {\r\n          let title = record.contents ? record.contents[0].title : \"\";\r\n          return (\r\n            <Tooltip placement=\"top\" title={title}><span className=\"textEllipsis\" style={{width: 100}}>{title}</span></Tooltip>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"description\",\r\n        dataIndex: \"description\",\r\n        title: \"详细信息\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record) => {\r\n          let content = record.contents ? record.contents[0].description : \"\";\r\n          return (\r\n            <Tooltip placement=\"top\" title={content}><span className=\"textEllipsis\" style={{width: 200}}>{content}</span></Tooltip>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"url\",\r\n        dataIndex: \"url\",\r\n        title: \"链接\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: (text, record) => {\r\n          let url = record.contents ? record.contents[0].url : \"\";\r\n          return (\r\n            <Tooltip placement=\"top\" title={url}><span className=\"textEllipsis\" style={{width: 100}}>{url}</span></Tooltip>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"picurl\",\r\n        dataIndex: \"picurl\",\r\n        title: \"图片\",\r\n        align: \"center\",\r\n        render: (text, record) => (record.contents ? <img style={{width: 80, verticalAlign: \"middle\"}} src={record.contents[0].picurl} alt=\"图片找不到啦~\"/> : <span></span>)\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        key: \"Action\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record, index) => (\r\n          <div>\r\n            <Button size=\"small\" onClick={() => copy(record, this.props)}>复制</Button>\r\n            <Button size=\"small\" type=\"primary\" style={{margin: \"0 10px\"}}>\r\n              <Link to={{pathname: \"/admin/source/reply/update\", query: record}}>编辑</Link>\r\n            </Button>\r\n            <Button size=\"small\" type=\"danger\" onClick={() => deleteReply(record._id, index)}>删除</Button>\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n    \t<div>\r\n    \t\t<div className=\"container\">\r\n          <Button type=\"primary\" style={{marginBottom: \"20px\"}}>\r\n            <Link to=\"/admin/source/reply/create\">添加新素材</Link>\r\n          </Button>\r\n          <Table size=\"small\" rowKey={record => record._id} columns={replyHeader} dataSource={replyList} pagination={{onChange: () => backTop()}} />\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n  componentDidMount() {\r\n    this.props.getReplyList()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  replyList: state.source.group.replyList\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getReplyList() {\r\n    dispatch(actionCreators.getReplyList())\r\n  },\r\n  deleteReply(id, index) {\r\n    dispatch(actionCreators.deleteReply(id, index))\r\n  },\r\n  copy(record, props) {\r\n    dispatch(actionCreators.copy(record, props))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Reply);","import React, {Component, Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Form, Button, Input, Radio, Icon, Upload} from \"antd\";\r\nimport * as actionCreators from '../store/actionCreators';\r\n\r\nclass EditReplyInfo extends Component {\r\n\r\n  componentDidMount() {\r\n    let query = this.props.history.location.query;\r\n    query && this.props.initReplyInfo(query);\r\n  }\r\n\r\n  render() {\r\n    const { replyInfo, content, uploadImg, handleReplyChange, handleContentChange, submitReply, cancel } = this.props;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: {span: 6}\r\n      },\r\n      wrapperCol: {\r\n        sm: {span: 16, offset: 0}\r\n      },\r\n      colon: false\r\n    };\r\n    let textOrImgText;\r\n    if(replyInfo.type === 0) {\r\n      textOrImgText = <Form.Item label=\"详细信息\">\r\n        <Input type=\"textarea\" value={content.description} placeholder=\"请输入详细信息\" onChange={e => handleContentChange(e, \"description\")} />\r\n      </Form.Item>\r\n    } else {\r\n      let UploadImg;\r\n      if(content.picurl) {\r\n        UploadImg = <img style={{width: \"100px\"}} src={content.picurl} alt=\"图片走丢啦~\" />\r\n      } else {\r\n        UploadImg = <Button><Icon type=\"upload\" /> 上传图片 </Button>\r\n      }\r\n      textOrImgText = <Fragment>\r\n        <Form.Item label=\"图文标题\">\r\n          <Input value={content.title} placeholder=\"请输入图文标题\" onChange={e => handleContentChange(e, \"title\")} />\r\n        </Form.Item>\r\n        <Form.Item label=\"图文链接\">\r\n          <Input value={content.url} placeholder=\"请输入图文链接\" onChange={e => handleContentChange(e, \"url\")} />\r\n        </Form.Item>\r\n        <Form.Item label=\"图片\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" onChange={(info) => {uploadImg(content, info)}} showUploadList={false}>\r\n            {UploadImg}\r\n          </Upload>\r\n        </Form.Item>\r\n      </Fragment>\r\n    }\r\n    return (\r\n      <div>\r\n        <div className='container'>\r\n          <div className=\"title-wrapper\">\r\n            <h2>编辑素材</h2>\r\n          </div>\r\n          <Form style={{width: 400}} {...formItemLayout}>\r\n            <Form.Item label=\"类型\">\r\n              <Radio.Group value={replyInfo.type} onChange={e => handleReplyChange(e, \"type\")}>\r\n                <Radio.Button value={0}>文本</Radio.Button>\r\n                <Radio.Button value={1}>图文</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            {textOrImgText}\r\n            <Form.Item label=\" \">\r\n              <Button type=\"primary\" style={{marginRight: 10}} onClick={() => submitReply(content, replyInfo, this.props)}>提交</Button>\r\n              <Button onClick={() => cancel(this.props)}>取消</Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.unMountState();\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  replyInfo: state.source.group.replyInfo,\r\n  content: state.source.group.content\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  uploadImg(content, info) {\r\n    if (info.file.status === 'done') {\r\n      let picurl = `http://t.dmmup.com/uploads/${info.file.response.filename}`\r\n      dispatch(actionCreators.handleContentChange(picurl, \"picurl\"))\r\n    }\r\n  },\r\n  handleContentChange(e, name) {\r\n    dispatch(actionCreators.handleContentChange(e.target.value, name))\r\n  },\r\n  handleReplyChange(e, name) {\r\n    dispatch(actionCreators.handleReplyChange(e.target.value, name))\r\n  },\r\n  cancel(props) {\r\n    props.history.goBack();\r\n    dispatch(actionCreators.resetState())\r\n  },\r\n  submitReply(content, replyInfo, props) {\r\n    if(props.history.location.query) {\r\n      replyInfo.contents.splice(0, 1, content);\r\n    } else {\r\n      replyInfo.contents.push(content);\r\n    }\r\n    dispatch(actionCreators.submitReply(replyInfo, props))\r\n  },\r\n  initReplyInfo(record) {\r\n    dispatch(actionCreators.initReplyInfo(record))\r\n  },\r\n  unMountState() {\r\n    dispatch(actionCreators.resetState())\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Form.create({name: 'editReplyInfo'})(EditReplyInfo));","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Group from './group';\r\nimport editGroup from './group/edit';\r\n\r\nclass SourceWrapper extends Component {\r\n  render() {\r\n    return (\r\n      <Route path=\"/admin/source\" render={() =>\r\n        <Switch>\r\n          {/*图文素材*/}\r\n          <Route path='/admin/source/group'>\r\n            <Switch>\r\n              <Route path=\"/admin/source/group/index\" component={Group} />\r\n              <Route path='/admin/source/group/create' component={editGroup} />\r\n              <Route path='/admin/source/group/update' component={editGroup} />\r\n              <Redirect from=\"/admin/source/group\" exact to='/admin/source/group/index' />\r\n            </Switch>\r\n          </Route>\r\n          <Redirect from=\"/admin/source\" exact to='/admin/source/group' />\r\n        </Switch>\r\n      } />\r\n    )\r\n  }\r\n}\r\n\r\nexport default SourceWrapper;","import React, { Component } from 'react';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport store from './store';\n\nimport Login from './pages/login';\n\nimport BasicLayout from './common/BasicLayout';\nimport TuoguanRouter from './pages/gonghao/router';\nimport MessageRouter from './pages/message/router';\nimport ChannelRouter from './pages/channel/router';\nimport AccountRouter from './pages/account/router';\nimport EditRouter from './pages/edit/router';\nimport SourceWrapper from './pages/source/router';\n\nclass App extends Component{\n\n  state = {\n    userInfo: {}\n  };\n\n  componentDidMount() {\n    let userInfo = localStorage.getItem(\"userInfo\");\n    if(userInfo && Date.now() - (+ new Date(JSON.parse(userInfo).loginAt)) < 12 * 60 * 60 * 1000) {\n      this.setState({userInfo: JSON.parse(userInfo)});\n    }\n  }\n\n  render() {\n    const { userInfo } = this.state;\n    const needLogin = Object.keys(userInfo).length > 0;\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/admin/login\" render={() => needLogin ? <Redirect to={window.location.search ? decodeURIComponent(window.location.search.split(\"=\")[1]) : \"/admin\"} /> : <Login />} />\n            <Route path=\"/admin\" render={() => (\n              needLogin ?\n                <BasicLayout content={\n                    <Switch>\n                      <Route path='/admin/gonghao' component={TuoguanRouter} />\n                      <Route path='/admin/message' component={MessageRouter} />\n                      <Route path='/admin/channel' component={ChannelRouter} />\n                      <Route path='/admin/account' component={AccountRouter} />\n                      <Route path='/admin/edit' component={EditRouter} />\n                      <Route path='/admin/source' component={SourceWrapper} />\n                      <Redirect from=\"/admin\" exact to={userInfo.role === 2 ? \"/admin/gonghao\" : \"/admin/account\"} />\n                    </Switch>\n                } />\n                : <Redirect to={\"/admin/login?redirect=\" + encodeURIComponent(window.location.pathname)} />\n            )} />\n            <Redirect from=\"/\" exact to=\"/admin\" />\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './assets/css/reset.css';\nimport App from './App.jsx';\nimport MD5 from 'crypto-js/md5'\n\nReact.Component.prototype.$MD5 = MD5;\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}