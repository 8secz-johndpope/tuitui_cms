{"version":3,"sources":["assets/images/login_bg.png","assets/images/logo.png","pages/gonghao/tuoguan/store/reducer.js","utils/http.js","utils/index.js","pages/gonghao/tuoguan/store/actionCreators.js","pages/gonghao/tuoguan/store/constants.js","pages/gonghao/menu/store/constants.js","pages/gonghao/menu/store/reducer.js","pages/gonghao/menu/store/actionCreators.js","pages/gonghao/reply/store/reducer.js","pages/gonghao/reply/store/actionCreators.js","pages/gonghao/reply/store/constants.js","pages/gonghao/reducer.js","pages/message/group/store/constants.js","pages/message/group/store/reducer.js","pages/message/group/store/actionCreators.js","pages/message/kefu/store/reducer.js","pages/message/kefu/store/actionCreators.js","pages/message/kefu/store/constants.js","pages/message/template/store/reducer.js","pages/message/template/store/actionCreators.js","pages/message/template/store/constants.js","pages/message/reducer.js","store/reducer.js","store/index.js","pages/login/index.jsx","common/BasicLayout/header/index.jsx","common/BasicLayout/sider/index.jsx","common/BasicLayout/bread/index.jsx","common/BasicLayout/index.jsx","common/components/Button/index.jsx","pages/gonghao/tuoguan/index.jsx","pages/gonghao/tuoguan/group/index.jsx","pages/gonghao/menu/index.jsx","common/components/GraphicMessage/index.jsx","pages/gonghao/menu/components/MenuReplyMessage.jsx","pages/gonghao/menu/edit/index.jsx","pages/gonghao/reply/index.jsx","common/components/SelectGonghao/MultiSelectSider/index.jsx","pages/gonghao/reply/edit/index.jsx","pages/gonghao/router.jsx","pages/message/group/components/GraphicMessage/index.jsx","pages/message/group/material/index.jsx","pages/message/group/components/EditTextMaterialModal/index.jsx","pages/message/group/textMaterial/index.jsx","common/components/SelectGonghao/SingleSelectByGroup/index.jsx","pages/message/group/history/index.jsx","common/components/Loading/index.jsx","pages/message/group/index.jsx","pages/message/kefu/index.jsx","pages/message/kefu/edit/index.jsx","pages/message/template/index.jsx","common/components/SelectGonghao/SingleSelectModal/index.jsx","pages/message/template/edit/index.jsx","pages/message/router.jsx","pages/channel/spread/index.jsx","pages/channel/spread/edit/index.jsx","pages/channel/router.jsx","pages/account/index.jsx","pages/account/add/index.jsx","pages/account/router.jsx","App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","defaultState","gonghaoTagList","allGonghaoList","originalGonghaoList","gonghaoList","group","status","currentPage","searchName","isSelectTag","selectedTag","isCreate","gonghaoModal","gonghaoInfo","id","attribute","ab_test","configList","configForm","type","sex","text","replyType","msgId","key","urlList","axios","defaults","timeout","userInfo","localStorage","getItem","account_id","JSON","parse","_id","interceptors","request","use","config","method","url","indexOf","Date","getTime","data","_t","err","Promise","reject","response","message","concat","resolve","backTop","timer","setInterval","osTop","document","documentElement","scrollTop","body","ispeed","Math","floor","clearInterval","getGroupList","dispatch","get","then","res","code","getAllGonghaoList","length","changePage","page","action","regenerator_default","a","async","_context","prev","next","awrap","stop","changeSearchInput","searchByName","nick_name","params","success","changeSelectValue","value","deleteGonghao","index","Modal","confirm","okText","cancelText","content","title","onOk","jieguan","addNewGonghao","window","open","openGonghaoModal","closeGonghaoModal","updateGonghaoInfo","console","log","put","Object","objectSpread2","msg","changeGroup","name","changeAttribute","changeAbTest","selectTag","removeTag","tagConfirm","props","post","exist","form","setFieldsValue","deleteTagItem","delete","createForm","history","goBack","updateForm","checkPageAttr","getConfigList","deleteConfig","changeConfigForm","formInfo","createConfigForm","configInfo","updateConfigForm","SAVE_TO_CONTENTS","firstMenuForm","sub_button","messageInfo","articles","menuList","menuForm","stringify","menuInfo","individual","values","codes","contents","menuIndex","secMenuIndex","isSubmit","updateIndex","currentKey","getMenuList","reverse","deleteMenu","handleInfoChange","handleIndividualChange","handleInputChange","randomString","handleSubInputChange","constants","addFirstMenu","editMenu","addSecondMenu","editSecMenu","deleteFirMenu","deleteSubMenu","openModal","submitMenu","validateArray","location","query","resetState","cancelMenu","getAllCodes","allCodes","changeGonghao","targetKeys","initMenuInfo","record","changeMessageInfo","addToList","updateMessageItem","item","updateCurrentMessage","deleteCurrentMessage","chars","result","i","random","j","warning","replyMessageList","is_nickname","messageIndex","getReplyMessageList","deleteReplyMessage","selectGonghao","error","initState","reducer","combineReducers","tuoguan","_start","_end","state","arguments","undefined","newState","toConsumableArray","filter","slice","splice","push","menu","_newState$messageInfo","picurl","description","assign","currentMessage","_newState$messageInfo2","reply","COPY","messageList","isComplete","tagList","sendModal","sendTimingModal","date","time","sendInfo","tagId","mediaId","sendTimingInfo","isTiming","timing","updateInfo","media_id","content_source_url","updateMaterialModal","historyList","historyMsgModal","delMsgInfo","msg_id","article_idx","delDate","getGroupGonghao","sent","getMaterial","setTimeout","getMessageList","openUpdateMaterialModal","closeUpdateMaterialModal","updateMaterial","_res$data","catch","changeContentSourceUrl","Number","getTagList","changeTagId","closeModal","sendMessage","info","openTimingModal","sendTimingMessage","changeTimingState","changeTime","timeType","copy","dipatch","deleteMaterial","clearMaterial","getHistoryList","checkSendState","msg_status","openMsgModal","closeMsgModal","changeArticleIdx","deleteMsg","clearHistory","changeDate","deleteMany","initContent","allMessageList","kefuMessageList","messageType","messageGroup","selectedMessages","updateGroupModal","kefuMessageInfo","img","img_path","channel","timing_time","daily_time_show","delay","tagName","remarks","action_type","isHour","paramsModal","allGroup","previewModal","openid","groupInputVisible","groupValue","getKefuMessageList","sort","messages","createKefuMessage","deleteMessage","sendKefuMessage","take_over","handleChangeSelect","changeSelectedMessages","openUpdateGroupModal","cancelUpdateGroup","updateMoreGroup","changeSearchName","searchInputChange","clearCondition","deleteMultiMsg","changeContentValue","changeMessageValue","addMessage","selectMessage","selectParams","hideParamsModal","getAllGroup","showGroupInput","that","handleGroupInputChange","handleGroupInputConfirm","_res$data2","handleClose","_res$data3","cancelSelectGroup","submitMessage","task","is_timing","is_daily","_d","initKefuMessageInfo","openPreviewModal","closePreviewModal","preview","_ref","_res$data4","changeOpenId","templateMessageList","confName","selectGonghaoModal","templateId","templateName","templateList","templateInfo","template_id","templateModalVisible","color","getTemplateList","deleteTemplate","sendTemplate","changeConfNickName","searchConfName","test","openSelectModal","openEditModal","closeTemplateModal","changeTemplate","saveTemplateModal","editTemplate","confirmSelect","closeSelectModal","initMessageInfo","now","dateTime","unshift","kefu","gonghaoList1","map","gonghaoList2","input","focus","keys","_newState2","template","gonghao","gonghaoReducer","messageReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","login","bind","assertThisInitialized","loginInfo","username","password","_this2","bgStyle","minHeight","backgroundSize","backgroundRepeat","backgroundAttachment","backgroundImage","require","_react_16_12_0_react_default","createElement","className","style","size","onChange","e","changeInputValue","target","prefix","icon","marginRight","marginBottom","placeholder","onKeyUp","keyCode","onClick","setState","_this3","$MD5","toString","setItem","href","Component","HeaderWrapper","getFieldsValue","_getFieldsValue","trim","md5Password","cancelUpdate","showUpdateModal","_this$state","getFieldDecorator","react_router_dom","to","src","alt","tooltip","avatar","backgroundColor","popover","Fragment","fontSize","logout","modal","visible","onCancel","es_form","labelCol","span","wrapperCol","Item","label","initialValue","rules","required","Form","create","SubMenu","Menu","MenuItem","SideWrapper","keyIndex","role","subMenuList","path","selectedKeys","onSelect","selectItem","latestSelectedKey","selectList","find","pathname","split","pathName","MenuListRender","SubMenuList","subItem","mode","theme","defaultOpenKeys","defaultSelectedKeys","breadList","/gonghao","/gonghao/tuoguan","/gonghao/tuoguan/group","/gonghao/tuoguan/error","/gonghao/tuoguan/config","/gonghao/tuoguan/config/create","/gonghao/tuoguan/config/update","/gonghao/menu","/gonghao/menu/create","/gonghao/menu/update","/gonghao/reply","/gonghao/reply/create","/gonghao/reply/update","/message","/message/kefu","/message/kefu/create","/message/kefu/update","/message/group","/message/group/material","/message/group/history","/message/template","/message/template/create","/message/template/update","/channel","/channel/spread","/channel/spread/create","/channel/spread/update","/source","/source/group","/source/group/create","/source/group/update","/wechat/qrcode","/wechat/qrcode/create","/wechat/qrcode/update","/account","/account/list","/account/add","BreadWrapper","getPath","pathSnippets","extraBreadcrumbItems","_","join","breadcrumb","seeDetail","notification","width","marginLeft","withRouter","Content","Layout","Sider","Header","Footer","BasicLayout","layout","BasicLayout_header","collapsible","BasicLayout_sider","card","BasicLayout_bread","ButtonList","danger","update","ButtonWrapper","buttonStyle","background","_this$props","_this$props$backgroun","_this$props$color","_this$props$mr","mr","_this$props$ml","ml","_this$props$mb","mb","_this$props2","_this$props2$size","buttonContent","_this$props2$disabled","disabled","es_button","Search","Input","Option","Select","Grid","Card","Tuoguan","pagination","pageSize","innerWidth","onSearch","es_select","Button","es_list","grid","gutter","sm","xxl","dataSource","renderItem","actions","yesterdayCount","todayCount","head_img","shape","marginTop","tag","es_radio","Group","connect","actionCreators","GonghaoGroup","columns","dataIndex","align","render","gonghao_id","gonghao_index","editGroupModalVisible","group_id","group_index","selectGroup","selectedRowKeys","getGonghaoTagList","openEditGroupModal","closeEditGroupModal","confirmEditGroup","updateGroup","addGroup","deleteGroup","changeGroupValue","searchGroupGonghao","submitGonghaoModal","_this$state2","ids","updateOne","updateMore","openUpdateMoreModal","_res$data5","_res$data6","changeSelectGroup","_this$state3","rowSelection","group_Sider","header","bordered","display","flexDirection","justifyContent","lineHeight","margin","padding","borderRadius","border","group_Content","group_Search","table","rowKey","menuHeader","GraphicMessage","MenuReplyMessage","MessageContent","UploadImg","uploadImg","TextArea","autoSize","minRows","maxRows","_react_16_12_0_react","upload","showUploadList","colon","divider","dashed","common_components_GraphicMessage","offset","EditMenuInfo","keyOrUrl","subKeyOrUrl","menuInfoForm","submitButton","menuModal","individualSex","formItemLayout","top","idx","components_MenuReplyMessage","maxLength","allowClear","transfer","showSearch","labelAlign","es_switch","checked","unMountState","resetMessageInfo","stopPropagation","file","filename","Config","configHeader","MultiSelectByGroup","AllGonghaoList","search","handleChangeGroup","getGonghaoList","nextProps","MultiSelectSider_Sider","MultiSelectSider_Option","locale","emptyText","MultiSelectSider_Content","EditConfigInfo","TextOrKey","submitForm","SelectGonghao_MultiSelectSider","col","closable","onClose","row","TuoguanWrapper","react_router","component","from","exact","Replay","editReplay","openSyncModal","moment","format","news_item","thumb_media_id","local_img_path","placement","groupMessage","syncMaterial","checkedList","docs","closeSyncModal","syncModal","indeterminate","checkAll","onCheckAllChange","nextContext","_this$state4","selectGonghaoList","config_provider","zhCN","message_group_components_GraphicMessage","htmlFor","date_picker","timeString","time_picker","borderBottom","paddingBottom","es_checkbox","PureComponent","EditTextMaterialModal","openidModalVisible","initMaterial","openOpenidModal","prevTextMaterial","cancelPrev","submitTextMaterial","resetFields","cancelEditMaterial","_this$props2$form","getFieldValue","editMaterialModalVisible","_this$props2$initMate","footer","rows","valuePropName","showTime","TextMaterial","textMaterialList","openEditMaterialModal","updateTextMaterial","textMaterial","_this$state$initMater","parseInt","prevState","isSend","_this4","_this5","_this6","xl","userSelect","sendMaterial","components_EditTextMaterialModal","Panel","Collapse","SingleSelectByGroup","activeKey","setCode","PanelList","SingleSelectByGroup_Sider","collapse","accordion","SingleSelectByGroup_Content","History","historyHeader","update_time","arr","titles","dataString","loadingWrapper","textAlign","position","left","zIndex","Loading","spin","spinning","TabPane","Tabs","historyModalVisible","clearTimeout","imageStyle","height","components_SelectGonghao_SingleSelectByGroup","components_Loading","empty","image","tabs","tabPosition","tab","material","message_group_textMaterial","group_history","Kefu","copyMessage","kefuMessageHeader","sorter","b","showQuickJumper","hideOnSinglePage","current","kefu_Option","EditMessage","isUploadImg","isTextUploadImg","FormItemWrapper","Channel","input_number","min","edit_Option","dateString","borderStyle","ref","onBlur","onPressEnter","borderColor","preventDefault","Template","templateColumns","template_Search","SingleSelectModal","maskClosable","mask","colors","colorWrapperStyle","EditTemplate","GonghaoModal","show","overflow","_loop","pre","SelectGonghao_SingleSelectModal","template_edit_Option","GroupRouter","GroupMaterial","EditKefuMSg","Advertise","spreadData","domain_names","dataList","changeTab","tabsRender","spread_TabPane","spreadHeader","wordWrap","goTop","deleteLink","copyLink","animated","defaultActiveKey","tabBarGutter","getSpreadList","_this7","spreadLinkInfo","links","weights","back_urls","link","back_url","weight","granularity","EditAdvertise","addTag","cancelSelectTag","cancelEdit","submitSpreadLink","initData","isAddWeight","hasLink","hasBackUrl","hasWeight","delLink","isUpdate","updateWeight","enterButton","saveUpdate","addLink","borderRight","deleteTag","paddingLeft","list","ChannelWrapper","Spread","EditSpread","Account","accountList","searchValue","updateRemarksIndex","searchAccount","getAccountList","handleChangeSearchValue","lib","onCopy","deleteAccount","account_Search","AddAccount","addAccount","validateFields","errors","resetForm","xs","add_Option","AccountRouter","App","loginAt","needLogin","es","decodeURIComponent","src_pages_login","src_common_BasicLayout","TuoguanRouter","MessageRouter","ChannelRouter","encodeURIComponent","React","prototype","MD5","ReactDOM","src_App","getElementById"],"mappings":"+JAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gFCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,q+OCElCC,EAAe,CAEnBC,eAAgB,GAChBC,eAAgB,GAChBC,oBAAqB,GACrBC,YAAa,GACbC,MAAO,eACPC,OAAQ,eACRC,YAAa,EACbC,WAAY,GACZC,aAAa,EACbC,YAAa,GACbC,UAAU,EACVC,cAAc,EACdC,YAAa,CACXR,MAAO,GACPS,GAAI,GACJC,UAAW,EACXC,QAAS,GAGXC,WAAY,GACZC,WAAY,CAACC,KAAM,EAAGC,IAAK,EAAGL,UAAW,EAAGM,KAAM,GAAIC,UAAW,EAAGC,MAAO,KAAMC,IAAK,GAAIC,QAAS,+CCtBrGC,IAAMC,SAASC,QAAU,IAMzB,IAAIC,EAAWC,aAAaC,QAAQ,YAEhCC,EAAaH,EAAWI,KAAKC,MAAML,GAAUM,IAAO,GAExDT,IAAMU,aAAaC,QAAQC,IACzB,SAAAC,GAWE,MAVqB,QAAlBA,EAAOC,QAAsC,WAAlBD,EAAOC,OAC/BD,EAAOE,IAAIC,QAAQ,MAAQ,EAC7BH,EAAOE,KAAQ,eAAiBT,EAAa,QAAS,IAAIW,MAAOC,UAEjEL,EAAOE,KAAQ,eAAiBT,EAAa,QAAS,IAAIW,MAAOC,UAEzC,SAAlBL,EAAOC,QAAuC,QAAlBD,EAAOC,SAC3CD,EAAOM,KAAKb,WAAaA,EACzBO,EAAOM,KAAKC,IAAK,IAAIH,MAAOC,WAEvBL,GAET,SAAAQ,GACE,OAAOC,QAAQC,OAAOF,KAK1BrB,IAAMU,aAAac,SAASZ,IAC1B,SAAAY,GACE,OAAOA,GAET,SAAAH,GACE,GAAIA,GAAOA,EAAIG,SACb,OAAQH,EAAIG,SAAS5C,QACnB,KAAK,IACHyC,EAAII,QAAU,2BACd,MACF,KAAK,IACHJ,EAAII,QAAU,uCACd,MACF,KAAK,IACHJ,EAAII,QAAU,2BACd,MACF,KAAK,IACHJ,EAAII,QAAU,gEACd,MACF,KAAK,IACHJ,EAAII,QAAU,6CACd,MACF,KAAK,IACHJ,EAAII,QAAU,2BACd,MACF,KAAK,IACHJ,EAAII,QAAU,uCACd,MACF,KAAK,IACHJ,EAAII,QAAU,iCACd,MACF,KAAK,IACHJ,EAAII,QAAU,2BACd,MACF,KAAK,IACHJ,EAAII,QAAU,iCACd,MACF,KAAK,IACHJ,EAAII,QAAU,2BACd,MACF,KAAK,IACHJ,EAAII,QAAU,uDACd,MACF,QACEJ,EAAII,QAAJ,2BAAAC,OAAqBL,EAAIG,SAAS5C,aAGtCyC,EAAII,QAAU,mDAEhB,OAAOH,QAAQK,QAAQN,EAAIG,YAIhBxB,QAAf,oBCpEe4B,EAjBC,WACd,OAAO,IAAIN,QAAQ,SAACK,EAASJ,GAC3B,IAAIM,EACJA,EAAQC,YAAY,WAClB,IAAIC,EACFC,SAASC,gBAAgBC,WAAaF,SAASG,KAAKD,UAClDE,EAASC,KAAKC,OAAOP,EAAQ,KACjCC,SAASC,gBAAgBC,UAAYF,SAASG,KAAKD,UACjDH,EAAQK,EACI,IAAVL,GACFQ,cAAcV,IAEf,IACHF,EAAQ,SCRCa,EAAe,WAC1B,OAAO,SAACC,GACNzC,EAAM0C,IAAI,eACPC,KAAK,SAAAC,GACJ,GAAsB,IAAlBA,EAAIzB,KAAK0B,KAAY,CACvB,IAAItE,EAAiBqE,EAAIzB,KAAKA,KAK9BsB,EAJe,CACbhD,KCZwB,oCDaxBlB,wBAQCuE,EAAoB,WAC/B,OAAO,SAAAL,GACLzC,EAAM0C,IAAI,SACPC,KAAK,SAAAC,GACJ,GAAIA,EAAIzB,KAAKA,KAAK4B,OAAS,EAAG,CAC5B,IAAIvE,EAAiBoE,EAAIzB,KAAKA,KAM9BsB,EALe,CACbhD,KC3BwB,oCD4BxBjB,iBACAE,YAAaF,SAQZwE,EAAa,SAACC,GACzB,OAAO,SAAMR,GAAN,IAAAS,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACCN,EAAS,CACbzD,KCvCqB,6BDwCrBwD,QAHGK,EAAAE,KAAA,EAAAL,EAAAC,EAAAK,MAKC7B,KALD,cAAA0B,EAAAE,KAAA,EAAAL,EAAAC,EAAAK,MAMChB,EAASS,IANV,wBAAAI,EAAAI,YAWIC,EAAoB,SAAA7E,GAAU,MAAK,CAC9CW,KC7CiC,oCD8CjCX,eAGW8E,EAAe,SAAAC,GAC1B,OAAO,SAAApB,GACLzC,EAAM0C,IAAI,iBAAkB,CAACoB,OAAQ,CAACD,eACnClB,KAAK,SAAAC,GACJ,GAAIA,EAAIzB,KAAKA,KAAK4B,OAAS,EAAG,CAC5B,IAAIvE,EAAiBoE,EAAIzB,KAAKA,KAM9BsB,EAJe,CACbhD,KC5DkB,+BD6DlBjB,iBAAgBE,YAHFF,IAMhBiD,IAAQsC,QAAQ,iCAMbC,EAAoB,SAAClE,EAAKmE,GAAN,MAAiB,CAChDxE,KCvDiC,oCDwDjCK,MAAKmE,UAGMC,EAAgB,SAAC9E,EAAI+E,GAChC,OAAO,SAAA1B,GACL2B,IAAMC,QAAQ,CACZC,OAAQ,eACRC,WAAY,eACZC,QAAS,uCACfC,MAAO,eACDC,KAAM,WACJ1E,EAAM0C,IAAI,YAAa,CACrBoB,OAAQ,CAAC1E,QACRuD,KAAK,SAAAC,GAKNH,EAJe,CACbhD,KCtFkB,gCDuFlB0E,UAGF1C,IAAQsC,QAAQ,mCAObY,EAAU,SAAC9B,EAAMsB,GAC5B,OAAO,SAAA1B,GACL2B,IAAMC,QAAQ,CACZC,OAAQ,eACRC,WAAY,eACZC,QAAS,uCACfC,MAAO,eACDC,KAAM,WACJ1E,EAAM0C,IAAI,gBAAiB,CACzBoB,OAAQ,CAACjB,UACRF,KAAK,SAAAC,GAKNH,EAJe,CACbhD,KC5GmB,0BD6GnB0E,iBASCS,EAAgB,WAC3B,OAAO,SAAAnC,GACLzC,EAAM0C,IAAI,iCACPC,KAAK,SAAAC,GACJiC,OAAOC,KAAKlC,EAAIzB,UAKX4D,EAAmB,SAAC3F,EAAIT,EAAOU,EAAWC,GAAvB,MAAoC,CAClEG,KCvHgC,mCDwHhCL,KAAIT,QAAOU,YAAWC,YAGX0F,EAAoB,iBAAO,CACtCvF,KC3HiC,sCD8HtBwF,EAAoB,SAAA9F,GAC/B,OAAO,SAAAsD,GACLyC,QAAQC,IAAIhG,GACZa,EAAMoF,IAAI,QAAVC,OAAAC,EAAA,EAAAD,CAAA,GAAuBlG,IACpBwD,KAAK,SAAAC,GACiB,IAAlBA,EAAIzB,KAAK0B,OACVpB,IAAQsC,QAAQnB,EAAIzB,KAAKoE,KACzB9C,EAASuC,UAMNQ,EAAc,SAAAC,GAAI,MAAK,CAClChG,KC3I0B,8BD4I1BgG,SAGWC,EAAkB,SAAArG,GAAS,MAAK,CAC3CI,KC/I8B,kCDgJ9BJ,cAGWsG,EAAe,SAAArG,GAAO,MAAK,CACtCG,KCnJ4B,+BDoJ5BH,YAGWsG,EAAY,SAAC5G,GAAD,MAAkB,CACzCS,KCnKwB,4BDoKxBT,gBAGW6G,EAAY,iBAAO,CAC9BpG,KCvKwB,8BD0KbqG,EAAa,SAACnH,EAAOoH,GAChC,OAAO,SAACtD,GACN,IAAIgD,EACJzF,EAAMgG,KAAK,cAAe,CAACP,KAAM9G,IAC9BgE,KAAK,SAAAC,GACmB,IAAnBA,EAAIzB,KAAK8E,QACXR,EAAO7C,EAAIzB,KAAKA,MAElB4E,EAAMG,KAAKC,eAAe,CAACxH,UAK3B8D,EAJe,CACbhD,KCnLiB,6BDoLjBgG,OAAM9G,cAOHyH,GAAgB,SAAChH,EAAI+E,GAChC,OAAO,SAAC1B,GACNzC,EAAMqG,OAAO,eAAiBjH,GAC3BuD,KAAK,SAAAC,GAKJH,EAJe,CACbhD,KC/LqB,gCDgMrB0E,cAOGmC,GAAa,SAACnH,EAAaoH,GACtC,OAAO,SAAC9D,GACNzC,EAAMgG,KAAK,eAAgB7G,GAAawD,KAAK,SAAAC,GAC3C2D,EAAQC,SAKR/D,EAJe,CACbhD,KC3MmB,6BD4MnBN,gBAGFsC,IAAQsC,QAAQ,gCAKT0C,GAAa,SAACtH,EAAaoH,GACtC,OAAO,SAAC9D,GACNzC,EAAMgG,KAAK,eAAgB7G,GAAawD,KAAK,SAAAC,GAC3C2D,EAAQC,SACR1D,IAKAL,EAJe,CACbhD,KCzNmB,6BD0NnBN,gBAGFsC,IAAQsC,QAAQ,gCAKT2C,GAAgB,iBAAO,CAClCjH,KClO6B,kCDuOlBkH,GAAgB,SAAC9D,GAC5B,OAAO,SAACJ,GACNzC,EAAM0C,IAAI,SAAU,CAACoB,OAAQ,CAACjB,UAC3BF,KAAK,SAAAC,GACJ,IAAIrD,EAAaqD,EAAIzB,KAAKA,KAK1BsB,EAJe,CACbhD,KCpOqB,gCDqOrBF,mBAOGqH,GAAe,SAACxH,EAAI+E,GAC/B,OAAO,SAAC1B,GACN2B,IAAMC,QAAQ,CACZC,OAAQ,eACRC,WAAY,eACZC,QAAS,uCACTC,MAAO,eACPC,KAAM,WACJ1E,EAAM0C,IAAI,aAAc,CAACoB,OAAQ,CAAC1E,QAC/BuD,KAAK,SAAAC,GAKNH,EAJe,CACbhD,KCtPiB,+BDuPjB0E,UAGF1C,IAAQsC,QAAQ,mCAQb8C,GAAmB,SAACC,GAAD,MAAe,CAC7CrH,KChQgC,mCDiQhCqH,aAGWC,GAAmB,SAACC,EAAYT,GAC3C,OAAO,SAAC9D,GACN2B,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,EAAMgG,KAAK,gBAAiBgB,GAAYrE,KAAK,SAAAC,GAC3C2D,EAAQC,SAKR/D,EAJe,CACbhD,KC9QsB,mCD+QtBuH,eAGFvF,IAAQsC,QAAQ,mCAObkD,GAAmB,SAACD,EAAYT,EAASpC,GACpD,OAAO,SAAC1B,GACN2B,IAAMC,QAAQ,CACZI,MAAO,uCACPC,KAAM,WACJ1E,EAAMgG,KAAK,gBAAiBgB,GAAYrE,KAAK,SAAAC,GAC3C2D,EAAQC,SAKR/D,EAJe,CACbhD,KChSsB,mCDiStBuH,aAAY7C,UAGd1C,IAAQsC,QAAQ,mCEpSbmD,GAAmB,8BCvB1BC,GAAgB,CACpB1B,KAAM,GACNhG,KAAM,OACNK,IAAK,GACLiB,IAAK,GACLqG,WAAY,IAGRA,GAAa,CACjB3B,KAAM,GACNhG,KAAM,OACNK,IAAK,GACLiB,IAAK,IAYDsG,GAAc,CAClBzH,UAAW,EACX0H,SAAU,GACV9C,QAAS,IAGLlG,GAAe,CACnBiJ,SAAU,GACVC,SAAUjH,KAAKC,MAAMD,KAAKkH,UAAUN,KACpCO,SAAUnH,KAAKC,MAAMD,KAAKkH,UAlBJ,CACtBhD,MAAO,GACPkD,YAAY,EACZjI,IAAK,IACLkI,OAAQ,GACRC,MAAO,GACPC,SAAU,MAaVC,WAAY,EACZX,WAAY7G,KAAKC,MAAMD,KAAKkH,UAAUL,KACtCY,cAAe,EACfC,UAAU,EACVC,aAAc,EACdb,YAAa9G,KAAKC,MAAMD,KAAKkH,UAAUJ,KACvCc,WAAY,ICrCDC,GAAc,WACzB,OAAO,SAAA3F,GACLzC,EAAM0C,IAAI,SACPC,KAAK,SAAAC,GACJ,GAAIA,EAAIzB,KAAKA,KAAK4B,OAAS,EAAG,CAC5B,IAAIwE,EAAW3E,EAAIzB,KAAKA,KAAKkH,UAK7B5F,EAJe,CACbhD,KFZiB,2BEajB8H,kBAQCe,GAAa,SAAClJ,EAAI+E,GAC7B,OAAO,SAAA1B,GACL2B,IAAMC,QAAQ,CACZI,MAAO,eACPD,QAAS,uCACTE,KAAM,WACJ1E,EAAM0C,IAAI,YAAa,CAACoB,OAAQ,CAAC1E,GAAIA,KAClCuD,KAAK,SAAAC,GACAA,EAAIzB,KAAK4C,UAKXtB,EAJe,CACbhD,KF9BW,0BE+BX0E,UAGF1C,IAAQsC,QAAQnB,EAAIzB,KAAK4C,iBAQ1BwE,GAAmB,SAACtE,EAAOwB,GAAR,MAAkB,CAChDhG,KF1CgC,gCE2ChCwE,QAAOwB,SAGI+C,GAAyB,SAAAvE,GAAK,MAAK,CAC9CxE,KF9CsC,sCE+CtCwE,UAGWwE,GAAoB,SAAChD,EAAMxB,GACtC,OAAO,SAAAxB,GACS,UAAVwB,GACFxB,EAASiG,MAEXjG,EAAS,CACPhD,KFvD6B,iCEwD7BgG,OAAMxB,YAKC0E,GAAuB,SAAClD,EAAMxB,GACzC,OAAO,SAAAxB,GACS,UAAVwB,IACFxB,EAASiG,MACTjG,EAAS,CAAChD,KAAMmJ,MAElBnG,EAAS,CACPhD,KFnEiC,oCEoEjCgG,OAAMxB,YAKC4E,GAAe,WAC1B,OAAO,SAAApG,GACLA,EAAS,CAAChD,KAAMmJ,KAChBnG,EAAS,CAAChD,KF3EgB,gCE+EjBqJ,GAAW,SAAC3H,EAAMgD,GAC7B,OAAO,SAAA1B,GACLA,EAAS,CAAChD,KAAMmJ,KAChBnG,EAAS,CACPhD,KFjFmB,wBEkFnB0E,QAAOhD,WAKA4H,GAAgB,WAC3B,OAAO,SAAAtG,GACLA,EAAS,CAAChD,KAAMmJ,KAChBnG,EAAS,CAAChD,KF3FiB,iCE+FlBuJ,GAAc,SAAC7H,EAAMgD,GAChC,OAAO,SAAA1B,GACDtB,EAAKrB,KACP2C,EAAS,CAAChD,KAAMmJ,KAElBnG,EAAS,CACPhD,KFnGuB,2BEoGvB0E,QAAOhD,WAKA8H,GAAgB,WAC3B,OAAO,SAAAxG,GACL2B,IAAMC,QAAQ,CACZI,MAAO,eACPD,QAAS,uCACTE,KAAM,WACJjC,EAAS,CAAChD,KF3Ga,oCEiHlByJ,GAAgB,WAC3B,OAAO,SAAAzG,GACL2B,IAAMC,QAAQ,CACZI,MAAO,eACPD,QAAS,uCACTE,KAAM,WACJjC,EAAS,CAAChD,KFtHa,oCE4HlB0J,GAAY,WACvB,OAAO,SAAA1G,GACLA,EAAS,CAAChD,KFjIY,2BEkItBgD,EAAS,CAAChD,KAAMmJ,OAIPQ,GAAa,SAAArD,GACxB,OAAO,SAAAtD,GACD,IAACiF,EAAY3B,EAAZ2B,SAAoBE,EAAUF,EAAVE,OACJyB,GAAczB,IACjBxD,IAAMC,QAAQ,CAC9BI,MAAO,eACPD,QAAS,uCACTE,KAAM,WACJ1E,EAAMgG,KAAKD,EAAMQ,QAAQ+C,SAASC,MAAQ,eAAiB,eAA3DlE,OAAAC,EAAA,EAAAD,CAAA,GAA+EqC,IAC5E/E,KAAK,SAAAC,GAIJH,EAHe,CACbhD,KFlJa,4BEqJfsG,EAAMQ,QAAQC,SACd/D,EAAS+G,aAORA,GAAa,iBAAO,CAC/B/J,KFtJyB,4BEyJdgK,GAAa,iBAAO,CAC/BhK,KFhKyB,4BEoKdiK,GAAc,WACzB,OAAO,SAAAjH,GACLzC,EAAM0C,IAAI,SACPC,KAAK,SAAAC,GACJ,IAAI+G,EAAW/G,EAAIzB,KAAKA,KAKxBsB,EAJe,CACbhD,KFvKmB,2BEwKnBkK,iBAOGC,GAAgB,SAAAC,GAAU,MAAK,CAC1CpK,KF/K4B,6BEgL5BoK,eAGWC,GAAe,SAAAC,GAAM,MAAK,CACrCtK,KFnL4B,4BEoL5BsK,WAGWC,GAAoB,SAAClK,EAAKmE,GAAN,MAAiB,CAChDxE,KFtLiC,iCEuLjCK,MAAKmE,UAGMgG,GAAY,iBAAO,CAC9BxK,KF1LyB,2BE6LdyK,GAAoB,SAACC,EAAMhG,GAAP,MAAkB,CACjD1E,KF7LiC,iCE8LjC0K,OAAMhG,UAIKiG,GAAuB,iBAAO,CACzC3K,KFlMoC,sCEqMzB4K,GAAuB,iBAAO,CACzC5K,KFrMoC,sCEwMzBiJ,GAAe,WAC1B,OAAO,SAAAjG,GAGL,IAFA,IAAI6H,EAAQ,iEACRC,EAAS,GACJC,EAAI,EAAGA,EAAI,IAAKA,EAAGD,GAAUD,EAAMjI,KAAKC,MAAMD,KAAKoI,SAAWH,EAAMvH,SAC7EN,EAAS,CAAChD,KF1Me,4BE0MgB8K,aAIvClB,GAAgB,SAAAzB,GACpB,IAAI,IAAI8C,EAAI,EAAGA,EAAI9C,EAAO7E,OAAQ2H,IAAM,CACtC,IAAIP,EAAOvC,EAAO8C,GAClB,GAAGP,EAAK/C,YACN,IAAK,IAAIoD,EAAI,EAAGA,EAAIL,EAAK/C,WAAWrE,OAAQyH,IAC1C,GAA+B,SAA5BL,EAAK/C,WAAWoD,GAAG/K,OAChB0K,EAAK/C,WAAWoD,GAAGzJ,IAErB,OADAU,IAAQkJ,QAAQ,mFACT,OAKb,GAAiB,SAAdR,EAAK1K,OACF0K,EAAKpJ,IAEP,OADAU,IAAQkJ,QAAQ,mFACT,EAKf,OAAO,GChPHrM,GAAe,CAEnBsM,iBAAkB,GAClBvD,YAAa9G,KAAKC,MAAMD,KAAKkH,UAdX,CAClBhI,KAAM,EACNC,IAAK,EACLL,UAAW,EACXO,UAAW,EACXiI,MAAO,GACPP,SAAU,GACVuD,aAAa,EACbrG,QAAS,MAOTmF,SAAU,GACVzB,aAAc,EACd4C,cAAe,GCZJC,GAAsB,WACjC,OAAO,SAAAtI,GACLzC,EAAM0C,IAAI,UACPC,KAAK,SAAAC,GACJ,IAAIgI,EAAmBhI,EAAIzB,KAAKA,KAKhCsB,EAJe,CACbhD,KCb4B,oCDc5BmL,yBAOGI,GAAqB,SAACvK,EAAK0D,GACtC,OAAO,SAAC1B,GACN2B,IAAMC,QAAQ,CACZC,OAAQ,eACRC,WAAY,eACZC,QAAS,uCACTC,MAAO,eACPC,KAAM,WACJ1E,EAAM0C,IAAI,aAAc,CAACoB,OAAQ,CAACrD,SAC/BkC,KAAK,SAAAC,GAKNH,EAJe,CACbhD,KC/BwB,mCDgCxB0E,UAGF1C,IAAQsC,QAAQ,mCASb2F,GAAc,WACzB,OAAO,SAAAjH,GACLzC,EAAM0C,IAAI,SACPC,KAAK,SAAAC,GACJ,GAAIA,EAAIzB,KAAKA,KAAK4B,OAAS,EAAG,KACf4G,EAAY/G,EAAIzB,KAAtBA,KACPsB,EAAS,CAAEhD,KC9CQ,4BD8CuBkK,kBAMvCsB,GAAgB,SAAApD,GAAK,MAAK,CACrCpI,KCpD4B,8BDqD5BoI,UAGWmC,GAAoB,SAAClK,EAAKmE,GAAN,MAAiB,CAChDxE,KCvDiC,kCDwDjCK,MAAKmE,UAGMgG,GAAY,iBAAO,CAC9BxK,KC7DyB,4BDgEdyK,GAAoB,SAACC,EAAMhG,GAAP,MAAkB,CACjD1E,KC/DiC,kCDgEjC0K,OAAMhG,UAGKiG,GAAuB,iBAAO,CACzC3K,KCnEoC,uCDsEzB4K,GAAuB,iBAAO,CACzC5K,KCtEoC,uCDyEzBsH,GAAmB,SAACC,EAAYT,GAC3C,OAAO,SAAC9D,GACFuE,EAAWa,MAAM9E,OAIrBqB,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,EAAMgG,KAAK,gBAAiBgB,GAAYrE,KAAK,SAAAC,GAC3C2D,EAAQC,SAKR/D,EAJe,CACbhD,KClFsB,iCDmFtBuH,eAGFvF,IAAQsC,QAAQ,iCAbpBtC,IAAQyJ,MAAM,sDAoBPjE,GAAmB,SAACD,EAAYT,EAASpC,GACpD,OAAO,SAAC1B,GACFuE,EAAWa,MAAM9E,OAIrBqB,IAAMC,QAAQ,CACZI,MAAO,uCACPC,KAAM,WACJ1E,EAAMgG,KAAK,gBAAiBgB,GAAYrE,KAAK,SAAAC,GAC3C2D,EAAQC,SAKR/D,EAJe,CACbhD,KCxGsB,iCDyGtBuH,aAAY7C,UAGd1C,IAAQsC,QAAQ,iCAbpBtC,IAAQyJ,MAAM,sDAoBP1B,GAAa,iBAAO,CAC/B/J,KCjHyB,6BDoHd0L,GAAY,SAACpB,EAAQ5F,GAAT,MAAoB,CAC3C1E,KCpIwB,0BDqIxBsK,SAAQ5F,UEnIJiH,GAAUC,YAAgB,CAC9BC,QXsBa,WAAkC,IACGC,EAAQC,EAD5CC,EAAiCC,UAAA3I,OAAA,QAAA4I,IAAAD,UAAA,GAAAA,UAAA,GAAzBpN,EAAc4E,EAAWwI,UAAA3I,OAAA,EAAA2I,UAAA,QAAAC,EAC3CC,EAAWrL,KAAKC,MAAMD,KAAKkH,UAAUgE,IACzC,OAAQvI,EAAOzD,MACb,II/BgC,oCJiC9B,OADAmM,EAASrN,eAAiB2E,EAAO3E,eAC1BqN,EACT,IIjCgC,oCJoC9B,OAFAA,EAASpN,eAAiBoN,EAASnN,oBAAsByE,EAAO1E,eAChEoN,EAASlN,YAAcwE,EAAOxE,YACvBkN,EACT,IInB+B,oCJ2B7B,OAPAA,EAASjN,MAAQiN,EAAShN,OAAS,eACnCgN,EAAS1I,EAAOpD,KAAOoD,EAAOe,MACF,iBAAzB2H,EAAS1I,EAAOpD,KACjB8L,EAASlN,YAAT2G,OAAAwG,EAAA,EAAAxG,CAA2BuG,EAASpN,gBAEpCoN,EAASlN,YAAT2G,OAAAwG,EAAA,EAAAxG,CAA2BuG,EAASpN,eAAesN,OAAO,SAAA3B,GAAI,OAAIA,EAAKjH,EAAOpD,OAASoD,EAAOe,SAEzF2H,EACT,II7CuB,6BJkDrB,OAJAL,EAA6B,IAAnBrI,EAAOD,KAAO,GACxBuI,EAAqB,GAAdtI,EAAOD,KACd2I,EAASlN,YAAckN,EAASpN,eAAeuN,MAAMR,EAAQC,GAC7DI,EAAS/M,YAAcqE,EAAOD,KACvB2I,EACT,II/C+B,oCJiD7B,OADAA,EAAS9M,WAAaoE,EAAOpE,WACtB8M,EACT,IIrD0B,+BJyDxB,OAHAA,EAASpN,eAAiB0E,EAAO1E,eACjCoN,EAASlN,YAAcwE,EAAOxE,YAC9BkN,EAAS9M,WAAa,GACf8M,EACT,II/C8B,mCJkD5B,OAFAA,EAAS1M,cAAe,EACxB0M,EAASzM,YAAc,CAACC,GAAI8D,EAAO9D,GAAIT,MAAOuE,EAAOvE,MAAOU,UAAW6D,EAAO7D,UAAWC,QAAS4D,EAAO5D,SAClGsM,EACT,IIlD+B,oCJqD7B,OAFAA,EAAS1M,cAAe,EACxB0M,EAASzM,YAAc,CAACE,UAAW,GAC5BuM,EACT,IIrDwB,8BJuDtB,OADAA,EAASzM,YAAYR,MAAQuE,EAAOuC,KAC7BmG,EACT,IIvD4B,kCJyD1B,OADAA,EAASzM,YAAYE,UAAY6D,EAAO7D,UACjCuM,EACT,IIzD0B,+BJ2DxB,OADAA,EAASzM,YAAYG,QAAU4D,EAAO5D,QAC/BsM,EACT,II1E0B,gCJ4ExB,OADAA,EAASlN,YAAYsN,OAAO9I,EAAOiB,MAAO,GACnCyH,EACT,II1EsB,4BJ6EpB,OAFAA,EAAS7M,aAAc,EACvB6M,EAAS5M,YAAckE,EAAOlE,YACvB4M,EACT,II7EsB,4BJgFpB,OAFAA,EAAS7M,aAAc,EACvB6M,EAAS5M,YAAc,GAChB4M,EACT,IIhFuB,6BJoFrB,OAHAA,EAAS7M,aAAc,EACvB6M,EAAS5M,YAAckE,EAAOvE,MAC9BuE,EAAOuC,MAAQmG,EAASrN,eAAe0N,KAAK/I,EAAOuC,MAC5CmG,EACT,IIpF2B,gCJwFzB,OAHAA,EAAS7M,aAAc,EACvB6M,EAAS5M,YAAc,GACvB4M,EAASrN,eAAeyN,OAAO9I,EAAOiB,MAAO,GACtCyH,EACT,IItF2B,gCJwFzB,OADAA,EAAS3M,UAAW,EACb2M,EACT,IIjG2B,0BJmGzB,OADAA,EAASlN,YAAYwE,EAAOiB,OAAOvF,OAAS,EACrCgN,EACT,QACE,OAAOH,IWnGXS,KLsCa,WAAkC,IAAjCT,EAAiCC,UAAA3I,OAAA,QAAA4I,IAAAD,UAAA,GAAAA,UAAA,GAAzBpN,GAAc4E,EAAWwI,UAAA3I,OAAA,EAAA2I,UAAA,QAAAC,EAC3CC,EAAWrL,KAAKC,MAAMD,KAAKkH,UAAUgE,IACzC,OAAQvI,EAAOzD,MAEb,IDjDyB,2BCmDvB,OADAmM,EAASrE,SAAWrE,EAAOqE,SACpBqE,EACT,IDnDuB,0BCqDrB,OADAA,EAASrE,SAASyE,OAAO9I,EAAOiB,MAAO,GAChCyH,EAGT,ID1CyB,2BC4CvB,OADAA,EAASjC,SAATtE,OAAAwG,EAAA,EAAAxG,CAAwBnC,EAAOyG,UACxBiC,EACT,ID5C0B,6BC8CxB,OADAA,EAASlE,SAASG,MAAQ+D,EAAS/B,WAATxE,OAAAwG,EAAA,EAAAxG,CAA0BnC,EAAO2G,YACpD+B,EACT,IDzD0B,4BC6DxB,OAHAA,EAASpE,SAAWjH,KAAKC,MAAMD,KAAKkH,UAAUN,KAC9CyE,EAASlE,SAASE,OAAOqE,KAAzB5G,OAAAC,EAAA,EAAAD,CAAA,GAAkCuG,EAASpE,WAC3CoE,EAAS7D,UAAY6D,EAASlE,SAASE,OAAO7E,OAAS,EAChD6I,EACT,ID5DqB,wBC+EnB,OAlBAA,EAAS5D,cAAgB,EACzB4D,EAAS7D,UAAY7E,EAAOiB,MAC5ByH,EAASpE,SAATnC,OAAAC,EAAA,EAAAD,CAAA,GAAwBnC,EAAO/B,MAC5ByK,EAASpE,SAASJ,YAAcwE,EAASpE,SAASJ,WAAWrE,SAC9D6I,EAASxE,WAAT/B,OAAAC,EAAA,EAAAD,CAAA,GAA0BuG,EAASpE,SAASJ,WAAW,IACvDwE,EAAS5D,aAAe,GAE1B4D,EAASzD,WAAa,GACnByD,EAAS7D,WAAa,IACpB6D,EAASxE,WAAWtH,KAAO8L,EAAS5D,cAAgB,GACrD4D,EAASlE,SAASE,OAAOgE,EAAS7D,WAAWjI,IAAM8L,EAASpE,SAAS1H,IAAM,GAC3E8L,EAASzD,WAAayD,EAASxE,WAAWtH,IAC1C8L,EAASvE,YAAcuE,EAASlE,SAASI,SAAS8D,EAASzD,aACnDjF,EAAO/B,KAAKrB,MACpB8L,EAASzD,WAAayD,EAASpE,SAAS1H,IAAM8L,EAASlE,SAASE,OAAOgE,EAAS7D,WAAWjI,IAC3F8L,EAASvE,YAAcuE,EAASlE,SAASI,SAAS8D,EAASzD,cAGxDyD,EACT,ID3E2B,6BCiFzB,OALAA,EAASlE,SAASE,OAAOoE,OAAOJ,EAAS7D,UAAW,GACpD6D,EAAS7D,UAAY,EACrB6D,EAASpE,SAAWoE,EAASlE,SAASE,OAAO,IAAMrH,KAAKC,MAAMD,KAAKkH,UAAUN,YACtEyE,EAASlE,SAASI,SAAS8D,EAASzD,YAC3CyD,EAASpE,SAAS1H,MAAQ8L,EAASvE,YAAcuE,EAASlE,SAASI,SAAS8D,EAASpE,SAAS1H,MACvF8L,EACT,ID3F+B,iCCwG7B,MAZmB,SAAhB1I,EAAOuC,OACRmG,EAASpE,SAASzG,IAAM,GACxB6K,EAASvE,YAAc9G,KAAKC,MAAMD,KAAKkH,UAAUJ,KAC7B,UAAjBnE,EAAOe,MAER2H,EAASpE,SAAS1H,IAAM8L,EAASlE,SAASE,OAAOgE,EAAS7D,WAAWjI,IAAO8L,EAASzD,WAErFyD,EAASpE,SAAS1H,IAAM8L,EAASlE,SAASE,OAAOgE,EAAS7D,WAAWjI,IAAM8L,EAASzD,WAAa,IAGrGyD,EAASpE,SAAStE,EAAOuC,MAAQvC,EAAOe,MACxC2H,EAASlE,SAASE,OAAOoE,OAAOJ,EAAS7D,UAAW,EAApD1C,OAAAC,EAAA,EAAAD,CAAA,GAA2DuG,EAASpE,WAC7DoE,EACT,IDtG2B,6BC4GzB,OALAA,EAASxE,WAAa7G,KAAKC,MAAMD,KAAKkH,UAAUL,KAChDwE,EAASpE,SAASJ,WAAW6E,KAA7B5G,OAAAC,EAAA,EAAAD,CAAA,GAAsCuG,EAASxE,aAC/CwE,EAASvE,YAAc9G,KAAKC,MAAMD,KAAKkH,UAAUJ,KACjDuE,EAASlE,SAASE,OAAOoE,OAAOJ,EAAS7D,UAAW,EAApD1C,OAAAC,EAAA,EAAAD,CAAA,GAA2DuG,EAASpE,WACpEoE,EAAS5D,aAAe4D,EAASpE,SAASJ,WAAWrE,OAAS,EACvD6I,EACT,ID3GyB,2BCqHvB,OATAA,EAASzD,aAAeyD,EAASlE,SAASI,SAAS8D,EAASzD,YAAcyD,EAASvE,aACnFuE,EAAS5D,aAAe9E,EAAOiB,MAC/ByH,EAASxE,WAAT/B,OAAAC,EAAA,EAAAD,CAAA,GAA0BnC,EAAO/B,MACjCyK,EAASzD,WAAa,GACnBjF,EAAO/B,KAAKrB,KAAO8L,EAAS5D,cAAgB,IAC7C4D,EAASlE,SAASE,OAAOgE,EAAS7D,WAAWjI,IAAM8L,EAASpE,SAAS1H,IAAM,GAC3E8L,EAASzD,WAAayD,EAASxE,WAAWtH,IAC1C8L,EAASvE,YAAcuE,EAASlE,SAASI,SAAS8D,EAASzD,aAEtDyD,EACT,IDjH2B,6BCwHzB,OANAA,EAASpE,SAASJ,WAAW4E,OAAOJ,EAAS5D,aAAc,GAC3D4D,EAASlE,SAASE,OAAOgE,EAAS7D,WAAWX,WAAW4E,OAAOJ,EAAS5D,aAAc,GACtF4D,EAAS5D,aAAe,EACxB4D,EAASxE,WAAawE,EAASpE,SAASJ,WAAW,IAAK7G,KAAKC,MAAMD,KAAKkH,UAAUL,YAC3EwE,EAASlE,SAASI,SAAS8D,EAASzD,YAC3CyD,EAASxE,WAAWtH,MAAQ8L,EAASvE,YAAcuE,EAASlE,SAASI,SAAS8D,EAASxE,WAAWtH,MAC3F8L,EACT,IDlImC,oCCgJjC,MAbmB,SAAhB1I,EAAOuC,OACRmG,EAASxE,WAAWrG,IAAM,GAC1B6K,EAASvE,YAAc9G,KAAKC,MAAMD,KAAKkH,UAAUJ,KAC7B,UAAjBnE,EAAOe,OACR2H,EAASlE,SAASE,OAAOgE,EAAS7D,WAAWjI,IAAM8L,EAASpE,SAAS1H,IAAM,GAC3E8L,EAASxE,WAAWtH,IAAM8L,EAASzD,YAEnCyD,EAASxE,WAAWtH,IAAM8L,EAASzD,WAAa,IAGpDyD,EAASxE,WAAWlE,EAAOuC,MAAQvC,EAAOe,MAC1C2H,EAASpE,SAASJ,WAAW4E,OAAOJ,EAAS5D,aAAc,EAA3D3C,OAAAC,EAAA,EAAAD,CAAA,GAAkEuG,EAASxE,aAC3EwE,EAASlE,SAASE,OAAOoE,OAAOJ,EAAS7D,UAAW,EAApD1C,OAAAC,EAAA,EAAAD,CAAA,GAA2DuG,EAASpE,WAC7DoE,EACT,IDnI+B,iCC0I7B,MANkB,cAAf1I,EAAOpD,KACR8L,EAASvE,YAAc9G,KAAKC,MAAMD,KAAKkH,UAAUJ,KACjDuE,EAASvE,YAAYzH,UAAYsD,EAAOe,OAExC2H,EAASvE,YAAYnE,EAAOpD,KAAOoD,EAAOe,MAErC2H,EACT,ID1IuB,yBC0IvB,IAAAO,EAC8CP,EAASvE,YAA7C5C,EADV0H,EACU1H,MAAO2H,EADjBD,EACiBC,OAAQrL,EADzBoL,EACyBpL,IAAKsL,EAD9BF,EAC8BE,YAG5B,OAFAT,EAASvE,YAAYC,SAAS2E,KAA9B5G,OAAAC,EAAA,EAAAD,CAAA,GAAuC,CAAEZ,QAAO2H,SAAQrL,MAAKsL,iBAC7DT,EAASvE,YAAY5C,MAAQmH,EAASvE,YAAY+E,OAASR,EAASvE,YAAYtG,IAAM6K,EAASvE,YAAYgF,YAAc,GAClHT,EACT,ID9I+B,iCC8I/B,IACUzB,EAAgBjH,EAAhBiH,KAAMhG,EAAUjB,EAAViB,MAGd,OAFAkB,OAAOiH,OAAOV,EAASvE,YAAvBhC,OAAAC,EAAA,EAAAD,CAAA,GAAwC8E,IACxCyB,EAAS1D,YAAc/D,EAChByH,EACT,IDlJkC,oCCmJhC,IAAIW,EAAiB,CACnB9H,MAAOmH,EAASvE,YAAY5C,MAC5B2H,OAAQR,EAASvE,YAAY+E,OAC7BrL,IAAK6K,EAASvE,YAAYtG,IAC1BsL,YAAaT,EAASvE,YAAYgF,aAIpC,OAHAT,EAASvE,YAAYC,SAAS0E,OAAOJ,EAAS1D,YAAa,EAA3D7C,OAAAC,EAAA,EAAAD,CAAA,GAAkEkH,IAClEX,EAASvE,YAAY5C,MAAQmH,EAASvE,YAAY+E,OAASR,EAASvE,YAAYtG,IAAM6K,EAASvE,YAAYgF,YAAc,GACzHT,EAAS1D,aAAe,EACjB0D,EACT,ID3JkC,oCC+JhC,OAHAA,EAASvE,YAAYC,SAAS0E,OAAOJ,EAAS1D,YAAa,GAC3D0D,EAASvE,YAAY5C,MAAQmH,EAASvE,YAAY+E,OAASR,EAASvE,YAAYtG,IAAM6K,EAASvE,YAAYgF,YAAc,GACzHT,EAAS1D,aAAe,EACjB0D,EACT,ID/JoC,qCCkKlC,OAFAA,EAASvE,YAAY5C,MAAQmH,EAASvE,YAAY+E,OAASR,EAASvE,YAAYtG,IAAM6K,EAASvE,YAAYgF,YAAc,GACzHT,EAAS1D,aAAe,EACjB0D,EACT,KAAKhD,GAAL,IAAA4D,EACuCZ,EAASvE,YAC1C5F,EAAU,CAAC6F,SAFjBkF,EACOlF,SACoB9C,QAF3BgI,EACiBhI,QACmB5E,UAFpC4M,EAC0B5M,WAGxB,OADAgM,EAASzD,aAAeyD,EAASlE,SAASI,SAAS8D,EAASzD,YAApC9C,OAAAC,EAAA,EAAAD,CAAA,GAAsD5D,IACvEmK,EACT,IDtKyB,4BCwKvB,OADAA,EAASzD,WAAajF,EAAOqH,OACtBqB,EAET,IDzLsB,yBC2LpB,OADAA,EAAS3D,UAAW,EACb2D,EACT,ID7LuB,0BCgMvB,ID9LuB,0BCgMrB,OADAA,EAAS3D,UAAW,EACb2D,EACT,ID3M8B,gCC6M5B,OADAA,EAASlE,SAASxE,EAAOuC,MAAQvC,EAAOe,MACjC2H,EACT,ID7MoC,sCCkNlC,OAJAA,EAASlE,SAASC,WAAazE,EAAOe,MACtCoB,OAAOiH,OAAOV,EAASpE,SAAU,CAC/B9H,IAAK,IAEAkM,EAET,IDtM0B,4BCuNxB,OAhBAA,EAASlE,SAATrC,OAAAC,EAAA,EAAAD,CAAA,GAAwBnC,EAAO6G,OAA/B,CAAuCjC,SAAU,KACjD8D,EAASlE,SAAStI,GAAK8D,EAAO6G,OAAOtJ,IACrCmL,EAAS/B,WAATxE,OAAAwG,EAAA,EAAAxG,CAA0BuG,EAASlE,SAASG,OAC5C+D,EAASpE,SAATnC,OAAAC,EAAA,EAAAD,CAAA,GAAwBuG,EAASlE,SAASE,OAAO,IACjDgE,EAAS7D,UAAY,EAClB6D,EAASpE,SAASJ,YAAcwE,EAASpE,SAASJ,WAAWrE,QAC9D6I,EAASxE,WAAT/B,OAAAC,EAAA,EAAAD,CAAA,GAA0BuG,EAASpE,SAASJ,WAAW,IACvDwE,EAAS5D,aAAe,EACrB4D,EAASxE,WAAWtH,MACrB8L,EAASzD,WAAayD,EAASxE,WAAWtH,IAC1C8L,EAASvE,YAAcuE,EAASlE,SAASI,SAAS8D,EAASzD,eAG7DyD,EAASpE,SAAS1H,MAAQ8L,EAASzD,WAAayD,EAASpE,SAAS1H,KAClE8L,EAASzD,aAAeyD,EAASvE,YAAcuE,EAASlE,SAASI,SAAS8D,EAASzD,cAE9EyD,EAET,IDxNuB,0BC0NrB,OADAA,EAAWtN,GAEb,QACE,OAAOmN,IKtOXgB,MHca,WAAkC,IAAjChB,EAAiCC,UAAA3I,OAAA,QAAA4I,IAAAD,UAAA,GAAAA,UAAA,GAAzBpN,GAAc4E,EAAWwI,UAAA3I,OAAA,EAAA2I,UAAA,QAAAC,EAC3CC,EAAWrL,KAAKC,MAAMD,KAAKkH,UAAUgE,IACzC,OAAQvI,EAAOzD,MAEb,IE1BkC,oCF4BhC,OADAmM,EAAShB,iBAAmB1H,EAAO0H,iBAAiBkB,OAAO,SAAA3B,GAAI,OAAkB,IAAdA,EAAK1K,OACjEmM,EACT,IE5BgC,mCF8B9B,OADAA,EAAShB,iBAAiBoB,OAAO9I,EAAOiB,MAAO,GACxCyH,EACT,IE3ByB,4BF6BvB,OADAA,EAASjC,SAAWzG,EAAOyG,SACpBiC,EACT,IE7B0B,8BF+BxB,OADAA,EAASvE,YAAYQ,MAArBxC,OAAAwG,EAAA,EAAAxG,CAAiCnC,EAAO2E,OACjC+D,EACT,IE9B+B,kCFgC7B,OADAA,EAASvE,YAAYnE,EAAOpD,KAAOoD,EAAOe,MACnC2H,EACT,IElCuB,0BFkCvB,IAAAO,EAC8CP,EAASvE,YAA7C5C,EADV0H,EACU1H,MAAO2H,EADjBD,EACiBC,OAAQrL,EADzBoL,EACyBpL,IAAKsL,EAD9BF,EAC8BE,YAG5B,OAFAT,EAASvE,YAAYC,SAAS2E,KAA9B5G,OAAAC,EAAA,EAAAD,CAAA,GAAuC,CAAEZ,QAAO2H,SAAQrL,MAAKsL,iBAC7DT,EAASvE,YAAY5C,MAAQmH,EAASvE,YAAY+E,OAASR,EAASvE,YAAYtG,IAAM6K,EAASvE,YAAYgF,YAAc,GAClHT,EACT,IErC+B,kCFqC/B,IACUzB,EAAejH,EAAfiH,KAAMhG,EAASjB,EAATiB,MAGd,OAFAkB,OAAOiH,OAAOV,EAASvE,YAAvBhC,OAAAC,EAAA,EAAAD,CAAA,GAAwC8E,IACxCyB,EAAS1D,YAAc/D,EAChByH,EACT,IEzCkC,qCF0ChC,IAAInK,EAAU,CACZgD,MAAOmH,EAASvE,YAAY5C,MAC5B2H,OAAQR,EAASvE,YAAY+E,OAC7BrL,IAAK6K,EAASvE,YAAYtG,IAC1BsL,YAAaT,EAASvE,YAAYgF,aAKpC,OAHAT,EAASvE,YAAYC,SAAS0E,OAAOJ,EAAS1D,YAAa,EAA3D7C,OAAAC,EAAA,EAAAD,CAAA,GAAkE5D,IAClEmK,EAASvE,YAAY5C,MAAQmH,EAASvE,YAAY+E,OAASR,EAASvE,YAAYtG,IAAM6K,EAASvE,YAAYgF,YAAc,GACzHT,EAAS1D,aAAe,EACjB0D,EACT,IEnDkC,qCFuDhC,OAHAA,EAASvE,YAAYC,SAAS0E,OAAOJ,EAAS1D,YAAa,GAC3D0D,EAASvE,YAAY5C,MAAQmH,EAASvE,YAAY+E,OAASR,EAASvE,YAAYtG,IAAM6K,EAASvE,YAAYgF,YAAc,GACzHT,EAAS1D,aAAe,EACjB0D,EAET,IEjEsB,0BFwEpB,OANAA,EAASvE,YAAc9G,KAAKC,MAAMD,KAAKkH,UAAUvE,EAAO6G,SACxD6B,EAASd,aAAe5H,EAAOiB,MACO,IAAnCyH,EAASvE,YAAYzH,YACtByF,OAAOiH,OAAOV,EAASvE,YAAauE,EAASvE,YAAYC,SAAS,IAClEsE,EAAS1D,YAAc,GAElB0D,EAET,IE3DuB,2BF6DrB,OADAA,EAAWrL,KAAKC,MAAMD,KAAKkH,UAAUnJ,KAGvC,QACE,OAAOmN,MGvEEL,MCEFsB,GAAO,qBCXdpO,GAAe,CACnBqO,YAAa,GACbC,YAAY,EACZC,QAAS,GACTC,WAAW,EACXC,iBAAiB,EACjBC,KAAM,GACNC,KAAM,GACNC,SAAU,CACR9N,GAAI,GACJ+N,MAAO,KACPC,QAAS,IAEXC,eAAgB,CACdjO,GAAI,GACJ+N,MAAO,KACPG,UAAU,EACVC,OAAQ,MAEVC,WAAY,CACVC,SAAY,GACZtJ,MAAS,KACTmD,SAAY,CACVoG,mBAAsB,IAExBtO,GAAI,IAENuO,qBAAqB,EAErBC,YAAa,GACbC,iBAAiB,EACjBC,WAAY,CACVjL,KAAM,KACNkL,OAAQ,GACRC,YAAa,IAEfC,QAAS,ICfEC,GAAkB,WAC7B,OAAO,SAAMzL,GAAN,IAAAS,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAAL,EAAAC,EAAAK,MAlBA,IAAInC,QAAQ,SAACK,EAASJ,GAC3BvB,EAAM0C,IAAI,SACPC,KAAK,SAAAC,GACJ,GAAIA,EAAIzB,KAAKA,KAAK4B,OAAS,EAAG,CAC5B,IAAIrE,EAAckE,EAAIzB,KAAKA,KAK3BQ,EAJe,CACblC,KFZqB,gCEarBf,qBAIF6C,EAAO,gDAOR,OACD2B,EADCI,EAAA6K,KAEL1L,EAASS,GAFJ,wBAAAI,EAAAI,YAMI0K,GAAc,SAAAvL,GACzB,OAAO,SAAAJ,GACFI,EACD7C,EAAM0C,IAAI,YAAa,CAACoB,OAAQ,CAACjB,UAC9BF,KAAK,SAAAC,GACJnB,IAAQsC,QAAQnB,EAAIzB,KAAK4C,SACzBsK,WAAW,WACT5L,EAAS6L,GAAezL,KACvB,OAGPpB,IAAQkJ,QAAQ,sDAKT4D,GAA0B,SAAAf,GAAU,MAAK,CACpD/N,KF/BwC,wCEgCxC+N,eAGWgB,GAA2B,iBAAO,CAC7C/O,KFnCyC,2CEsC9BgP,GAAiB,SAACjB,EAAY3K,GACzC,OAAO,SAAAJ,GACLzC,EAAMoF,IAAI,6BAAVC,OAAAC,EAAA,EAAAD,CAAA,GAA4CmI,EAA5C,CAAwD3K,UACrDF,KAAK,SAAAC,GAAO,IAAA8L,EACW9L,EAAIzB,KAAlB0B,EADG6L,EACH7L,KAAM0C,EADHmJ,EACGnJ,IACF,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChB9C,EAAS+L,OAET/M,IAAQyJ,MAAM3F,KAGjBoJ,MAAM,SAAAzD,GACLhG,QAAQC,IAAI+F,OAKP0D,GAAyB,SAAAlB,GAAkB,MAAK,CAC3DjO,KFxDuC,uCEyDvCiO,uBAKWY,GAAiB,SAAAzL,GAC5B,OAAO,SAAAJ,GACLzC,EACG0C,IAAI,iBAAkB,CAAEoB,OAAQ,CAAEjB,KAAMgM,OAAOhM,MAC/CF,KAAK,SAAAC,GAAO,IACHzB,EAASyB,EAAIzB,KAAbA,KAKRsB,EAJe,CACbhD,KFlFwB,+BEmFxB0B,aAOG2N,GAAa,SAAAjM,GACxB,OAAO,SAAAJ,GACLzC,EAAM0C,IAAI,gBAAiB,CAACoB,OAAQ,CAACjB,UAClCF,KAAK,SAAAC,GAAO,IACHzB,EAASyB,EAAIzB,KAAbA,KAKRsB,EAJe,CACbhD,KF5FkB,2BE6FlB0B,aAOG4N,GAAc,SAAC9K,EAAOqJ,GAAR,MAAsB,CAC/C7N,KFtG2B,4BEuG3BwE,QAAOqJ,aAGI0B,GAAa,iBAAO,CAC/BvP,KFzGyB,6BE4Gd0J,GAAY,SAAAY,GAAM,MAAK,CAClCtK,KFjHwB,0BEkHxBsK,WAGWkF,GAAc,SAAA/B,GACzB,OAAO,SAAAzK,GACL2B,IAAMC,QAAQ,CACZI,MAAO,mDACPC,KAAM,WACJ1E,EAAM0C,IAAI,oBAAqB,CAACoB,OAAOuB,OAAAC,EAAA,EAAAD,CAAA,GAAK6H,KACzCvK,KAAK,SAAAC,GACJnB,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SACtBtB,EAASuM,aAORG,GAAkB,SAAApF,GAAM,MAAK,CACxCtK,KFpI+B,gCEqI/BsK,WAGWqF,GAAoB,SAAC/B,EAAgBxK,GAChD,OAAO,SAAAJ,GACL2B,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,EAAM0C,IAAI,wBAAyB,CAACoB,OAAOuB,OAAAC,EAAA,EAAAD,CAAA,GAAKgI,KAC7C1K,KAAK,SAAAC,GACJnB,IAAQyN,KAAK,4BACbzM,EAAS6L,GAAezL,IACxBJ,EAASuM,aAORK,GAAoB,SAAApL,GAAK,MAAK,CACzCxE,KFrJiC,kCEsJjCwE,UAGWqL,GAAa,SAACrC,EAAMsC,GAAP,MAAqB,CAC7C9P,KFzJyB,2BE0JzBwN,OAAMsC,aAGKC,GAAO,SAAApQ,GAClB,OAAO,SAAAqQ,GACLrL,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,EAAMgG,KAAK,iBAAkB,CAAC5G,OAC3BuD,KAAK,SAAAC,GACJ,GAAIA,EAAIzB,KAAK4C,QAAS,KACZ5C,EAASyB,EAAIzB,KAAbA,KACRM,IAAQsC,QAAQnB,EAAIzB,KAAK4C,SAKzB0L,EAJe,CACbhQ,KAAMmJ,GACNzH,cAIFM,IAAQyN,KAAKtM,EAAIzB,KAAKE,YAQvBqO,GAAiB,SAACtQ,EAAI+E,GACjC,OAAO,SAAA1B,GACL2B,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,EAAM0C,IAAI,gBAAiB,CAACoB,OAAQ,CAAC1E,QAClCuD,KAAK,SAAAC,GACAA,EAAIzB,KAAK4C,SACXtC,IAAQsC,QAAQnB,EAAIzB,KAAK4C,SAKzBtB,EAJe,CACbhD,KF7Le,+BE8Ld0E,WAIH1C,IAAQyN,KAAKtM,EAAIzB,KAAKE,YAQvBsO,GAAgB,SAAA9M,GAC3B,OAAO,SAAAJ,GACFI,EACDuB,IAAMC,QAAQ,CACZI,MAAO,mDACPC,KAAM,WACJ1E,EAAM0C,IAAI,kBAAmB,CAAEoB,OAAQ,CAAEjB,UACtCF,KAAK,SAAAC,GACJnB,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SAItBtB,EAHe,CACbhD,KFnNc,qCE0NxBgC,IAAQkJ,QAAQ,sDAOTiF,GAAiB,SAAA/M,GAC5B,OAAO,SAAAJ,GACLzC,EAAM0C,IAAI,WAAY,CAACoB,OAAQ,CAACjB,UAC7BF,KAAK,SAAAC,GAAO,IACHzB,EAASyB,EAAIzB,KAAbA,KAKRsB,EAJe,CACbhD,KFjOsB,+BEkOtB0B,aAOG0O,GAAiB,SAAChN,EAAMkL,GACnC,OAAO,SAAAtL,GACLzC,EAAM0C,IAAI,iBAAkB,CAAEoB,OAAQ,CAAEjB,OAAMkL,YAC3CpL,KAAK,SAAAC,GACJnB,IAAQyN,KAAKtM,EAAIzB,KAAKA,KAAK2O,gBAKtBC,GAAe,SAAClN,EAAMkL,GAAP,MAAmB,CAC7CtO,KFlP4B,6BEmP5BoD,OAAMkL,WAGKiC,GAAgB,iBAAO,CAClCvQ,KFtP6B,gCEyPlBwQ,GAAmB,SAAAhM,GAAK,MAAK,CACxCxE,KFzPgC,iCE0PhCwE,UAGWiM,GAAY,SAACpC,GACxB,OAAO,SAAArL,GACL2B,IAAMC,QAAQ,CACZI,MAAO,uCACPC,KAAM,WACJ1E,EAAM0C,IAAI,mBAAoB,CAC5BoB,OAAOuB,OAAAC,EAAA,EAAAD,CAAA,GAAKyI,KACXnL,KAAK,SAAAC,GACNnB,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SACtBtB,EAASuN,aAONG,GAAe,SAAAtN,GAC1B,OAAO,SAAAJ,GACL2B,IAAMC,QAAQ,CACZI,MAAO,6CACPC,KAAM,WACJ1E,EAAM0C,IAAI,iBAAkB,CAACoB,OAAQ,CAACjB,UACnCF,KAAK,SAAAC,GACJnB,IAAQsC,QAAQnB,EAAIzB,KAAK4C,SAIzBtB,EAHe,CACbhD,KFrRe,sCE8RhB2Q,GAAa,SAAAnC,GAAO,MAAK,CACpCxO,KF9RyB,2BE+RzBwO,YAGWoC,GAAa,SAACxN,EAAMmK,GAC/B,OAAO,SAAAvK,GACL2B,IAAMC,QAAQ,CACZI,MAAO,mCACPC,KAAM,WACJ1E,EAAM0C,IAAI,qBAAsB,CAACoB,OAAQ,CAACkJ,OAAMnK,UAC7CF,KAAK,SAAAC,GACJnB,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SACtBtB,EAASmN,aAORpG,GAAa,iBAAO,CAC/B/J,KF7SyB,6BG7BrB6Q,GAAc,CAClBjE,YAAa,GACb5H,MAAO,GACP1D,IAAK,GACLqL,OAAQ,IAGJ9N,GAAe,CACnBiS,eAAgB,GAChBC,gBAAiB,GACjBC,YAAa,EACbC,aAAc,2BACdC,iBAAkB,GAClBC,kBAAkB,EAClBjS,MAAO,GACPE,YAAa,EACbC,gBAAY6M,EACZkF,gBAAiB,CACf/I,SAAU,GACVrI,KAAM,EACNqR,IAAK,GACLC,SAAU,GACVC,QAAS,EACTtR,IAAK,MACLuR,YAAa,IAAIhQ,KACjBiQ,gBAAiB,IAAIjQ,KACrBkQ,MAAO,EACPhE,MAAO,GACPiE,QAAS,GACTvJ,MAAO,GACPwJ,QAAS,GACTC,YAAa,EACbC,OAAQ,EACR5S,MAAO,sBAET6F,QAAS8L,GACTxF,cAAe,EACf0G,aAAa,EACb7H,SAAU,GACV8H,SAAU,GACVC,cAAc,EACdC,OAAQ,GACRC,mBAAmB,EACnBC,WAAY,ICtBDC,GAAqB,WAChC,OAAO,SAAMrP,GAAN,IAAAS,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAAL,EAAAC,EAAAK,MAlBA,IAAInC,QAAQ,SAACK,EAASJ,GAC3BvB,EAAM0C,IAAI,WAAY,CAACoB,OAAQ,CAACiO,KAAM,SACnCpP,KAAK,SAAAC,GACJ,GAAIA,EAAIzB,KAAK6Q,SAASjP,OAAS,EAAG,CAChC,IAAIyN,EAAkB5N,EAAIzB,KAAK6Q,SAK/BrQ,EAJe,CACblC,KCZyB,kCDazB+Q,yBAIFjP,EAAO,gDAOR,OACD2B,EADCI,EAAA6K,KAEL1L,EAASS,GAFJ,wBAAAI,EAAAI,YAMIuO,GAAoB,SAAAlI,GAC/B,OAAO,SAAAtH,GACLsH,EAAOoH,OAASpH,EAAOwH,SAAWxH,EAAOoH,OAAS,IAClD/M,IAAMC,QAAQ,CACZI,MAAO,2EACPC,KAAM,WACJ1E,EAAMgG,KAAK,kBAAXX,OAAAC,EAAA,EAAAD,CAAA,GAAkC0E,IAC/BpH,KAAK,SAAAC,GACJ,GAAIA,EAAIzB,KAAK4C,QAAS,CACpB,IAAI5C,EAAOyB,EAAIzB,KAAKA,KACpBM,IAAQyN,KAAKnF,EAAOtJ,IAAM,2BAASmC,EAAIzB,KAAK4C,SAK5CtB,EAJe,CACbhD,KCzCmB,iCD0CnB0B,cAIFM,IAAQyN,KAAKtM,EAAIzB,KAAKE,YAQvB6Q,GAAgB,SAAC9S,EAAI+E,GAChC,OAAO,SAAA1B,GACL2B,IAAMC,QAAQ,CACZI,MAAO,2EACPC,KAAM,WACJ1E,EAAM0C,IAAI,kBAAmB,CAAEoB,OAAQ,CAAE1E,QACtCuD,KAAK,SAAAC,IACJH,EAASqP,MACoB,IAAzBlP,EAAIzB,KAAKA,KAAK4B,SAChBtB,IAAQyN,KAAK,0DAIbzM,EAHe,CACbhD,KChEmB,qCDoErBgC,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SAKtBtB,EAJe,CACbhD,KCrEc,6BDsEd0E,kBAUHgO,GAAkB,SAAC/S,EAAI+N,GAClC,OAAO,SAAA1K,GACL2B,IAAMC,QAAQ,CACZI,MAAO,mDACPC,KAAM,WACJ1E,EAAM0C,IAAI,gBAAiB,CAAEoB,OAAQ,CAAE1E,KAAI+N,QAAOiF,WAAW,KAC1DzP,KAAK,SAAAC,GACJnB,IAAQyN,KAAKtM,EAAIzB,KAAK4C,gBAOrBsO,GAAqB,SAACpO,EAAOwB,GAAR,MAAkB,CAClDhG,KC5FkC,kCD6FlCwE,QAAOwB,SAGI6M,GAAyB,SAAA3B,GAAgB,MAAK,CACzDlR,KChGsC,sCDiGtCkR,qBAGW4B,GAAuB,iBAAO,CACzC9S,KCpGqC,sCDuG1B+F,GAAc,SAAAvB,GAAK,MAAK,CACnCxE,KCvG0B,2BDwG1BwE,UAGWuO,GAAoB,iBAAO,CACtC/S,KC3GiC,mCD8GtBgT,GAAkB,SAAC9B,EAAkBhS,GAChD,OAAO,SAAA8D,GACLzC,EAAMoF,IAAI,uBAAwB,CAACuL,mBAAkBhS,UAClDgE,KAAK,SAAAC,GAAO,IAAA8L,EACW9L,EAAIzB,KAAlB0B,EADG6L,EACH7L,KAAM0C,EADHmJ,EACGnJ,IACF,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChB9C,EAASqP,MACTrP,EAAS,CAAChD,KCrHa,iCDsHvBgD,EAAS+P,OAET/Q,IAAQyJ,MAAM3F,OAMXmN,GAAmB,SAAAzO,GAAK,MAAK,CACxCxE,KC9HgC,gCD+HhCwE,QAAOxC,cAGIkR,GAAoB,SAAA1O,GAAK,MAAK,CACzCxE,KClIgC,iCDmIhCwE,UAGW2O,GAAiB,iBAAO,CACnCnT,KCtI6B,gCDyIlBoT,GAAiB,SAAAlC,GAC5B,OAAO,SAAAlO,GACL2B,IAAMC,QAAQ,CACZI,MAAO,iFACPC,KAAM,WACJ1E,EAAMqG,OAAO,qBAAsB,CAACvC,OAAQ,CAAC6M,sBAC1ChO,KAAK,SAAAC,GACJnB,IAAQsC,QAAQnB,EAAIzB,KAAKoE,KACzB9C,EAASqP,aAQRgB,GAAqB,SAAC7O,EAAOwB,GAAR,MAAkB,CAClDhG,KCpKkC,kCDqKlCwE,QAAOwB,SAGIsN,GAAqB,SAAC9O,EAAOwB,GAAR,MAAkB,CAClDhG,KCxKkC,kCDyKlCwE,QAAOwB,SAIIuN,GAAa,iBAAO,CAC/BvT,KCnKyB,4BDsKdwT,GAAgB,SAAC/D,EAAM/K,GAAP,MAAkB,CAC7C1E,KCtK4B,6BDuK5ByP,OAAM/K,UAGK+O,GAAe,iBAAO,CACjCzT,KCxK2B,8BD2KhB0T,GAAkB,iBAAO,CACpC1T,KC3K+B,iCD8KpBiK,GAAc,WACzB,OAAO,SAAAjH,GACLzC,EAAM0C,IAAI,SACPC,KAAK,SAAAC,GACJ,IAAI+G,EAAW/G,EAAIzB,KAAKA,KAKxBsB,EAJe,CACbhD,KCvLmB,2BDwLnBkK,iBAOGyJ,GAAc,WACzB,OAAO,SAAA3Q,GACLzC,EAAM0C,IAAI,iBACPC,KAAK,SAAAC,GAAO,IACA6O,EAAY7O,EAAIzB,KAAtBA,KAKLsB,EAJe,CACbhD,KC3LmB,2BD4LnBgS,iBAOG4B,GAAiB,SAAAC,GAAI,MAAK,CACrC7T,KCnM8B,8BDoM9B6T,SAGWC,GAAyB,SAAAtP,GAAK,MAAK,CAC9CxE,KCvMuC,sCDwMvCwE,UAGWuP,GAA0B,SAAA7U,GACrC,OAAO,SAAA8D,GACF9D,EACDqB,EAAMgG,KAAK,gBAAiB,CAACrH,UAC1BgE,KAAK,SAAAC,GAAO,IAAA6Q,EACe7Q,EAAIzB,KAAvB0B,EADI4Q,EACJ5Q,KAAM0C,EADFkO,EACElO,IAAKpE,EADPsS,EACOtS,KACL,IAAT0B,GACFpB,IAAQsC,QAAQwB,GAChB9C,EAAS,CAAChD,KClNoB,uCDkNwB0B,UAEtDM,IAAQyJ,MAAM3F,KAIpB9C,EAAS,CAAChD,KCxN0B,uCDwNkB0B,KAAM,OAKrDuS,GAAc,SAACjT,EAAK0D,GAC/B,OAAO,SAAA1B,GACL2B,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,EAAMqG,OAAO,gBAAiB,CAACvC,OAAQ,CAACrD,SACrCkC,KAAK,SAAAC,GAAO,IAAA+Q,EACS/Q,EAAIzB,KAAjB0B,EADI8Q,EACJ9Q,KAAM0C,EADFoO,EACEpO,IACD,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChB9C,EAAS,CAAChD,KCtOI,2BDsO0B0E,WAExC1C,IAAQyJ,MAAM3F,UAQfqO,GAAoB,iBAAO,CACtCnU,KChPiC,mCDmPtBwL,GAAgB,SAAApD,GAAK,MAAK,CACrCpI,KClQ4B,6BDmQ5BoI,UAGWgM,GAAgB,SAAC3E,EAAM3I,EAASoD,GAC3C,OAAO,SAAAlH,GACLyM,EAAKxQ,YAAciL,EAASmC,OAAO,SAAA3B,GAAI,OAAI+E,EAAKrH,MAAM7G,QAAQmJ,EAAKtH,OAAS,KAC3EqM,EAAK4B,KAAO5B,EAAKpH,SAAS/E,OAAS,IAAMmM,EAAK4B,IAAM5B,EAAKpH,SAAS,GAAGsE,QACrD,IAAjB8C,EAAK8B,QAAgB9B,EAAK4E,MAAO,EAAO5E,EAAK4E,MAAO,EACnC,IAAjB5E,EAAK8B,QAAgB9B,EAAK6E,WAAY,EAAO7E,EAAK6E,WAAY,EAC1C,IAAjB7E,EAAK8B,UACN9B,EAAKiC,MAAQ,MAEK,IAAjBjC,EAAK8B,SACN9B,EAAK8E,UAAW,EACb9E,EAAKgC,gBAAgB+C,GACtB/E,EAAKgC,gBAAkB,IAAIjQ,KAAKiO,EAAKgC,gBAAgB+C,IAAI/S,UAEzDgO,EAAKgC,gBAAkB,IAAIjQ,KAAKiO,EAAKgC,iBAAiBhQ,YAGxDgO,EAAK8E,UAAW,EAChB9E,EAAKgC,gBAAkB,GAErBhC,EAAKrH,MAAM9E,OAIfqB,IAAMC,QAAQ,CACZI,MAAO,uCACPC,KAAM,WACJ,IAAI3D,EAAM,kBACPwF,EAAQ+C,SAASC,QAClBxI,EAAM,kBACNmO,EAAK9P,GAAK8P,EAAKzO,KAEjBT,EAAMgG,KAAKjF,EAAXsE,OAAAC,EAAA,EAAAD,CAAA,GAAoB6J,IACjBvM,KAAK,SAAAC,GACAA,EAAIzB,KAAK4C,SACXtC,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SACtBwC,EAAQC,SACR/D,EAAS+G,OAET/H,IAAQyN,KAAKtM,EAAIzB,KAAKE,UAlB9BI,IAAQyJ,MAAM,sDA0BPgJ,GAAsB,SAAA3K,GACjC,OAAO,SAAA9G,GACD8G,EAAM4D,MACRnN,EAAM0C,IAAI,gBAAiB,CAAEoB,OAAQ,CAAEqJ,MAAO5D,EAAM4D,SACjDxK,KAAK,SAAAC,GACJ2G,EAAM6H,QAAUxO,EAAIzB,KAAKA,KAAKsE,KAK9BhD,EAJe,CACbhD,KCzT0B,mCD0T1B8J,YASN9G,EAJe,CACbhD,KChU8B,mCDiU9B8J,YAQK4K,GAAmB,iBAAO,CACrC1U,KCxUgC,kCD2UrB2U,GAAoB,iBAAO,CACtC3U,KC3UiC,mCD8UtB4U,GAAU,SAAAC,EAAoC3C,GAAW,IAA7C9J,EAA6CyM,EAA7CzM,MAAOpI,EAAsC6U,EAAtC7U,KAAMqI,EAAgCwM,EAAhCxM,SAAUiJ,EAAsBuD,EAAtBvD,SAC9C,OAAO,SAAAtO,GACLzC,EAAMgG,KAAK,mBAAoB,CAAC6B,QAAOpI,OAAMqI,WAAUiJ,WAAUY,WAC9DhP,KAAK,SAAAC,GAAO,IAAA2R,EACW3R,EAAIzB,KAAlB0B,EADG0R,EACH1R,KAAM0C,EADHgP,EACGhP,IACF,IAAT1C,EACDpB,IAAQsC,QAAQwB,GAEhB9D,IAAQkJ,QAAQpF,GAElB9C,EAAS2R,UAKJI,GAAe,SAAAvQ,GAAK,MAAK,CACpCxE,KC7V2B,4BD8V3BwE,UAGWjB,GAAa,SAAAC,GAAI,MAAK,CACjCxD,KCzVyB,0BD0VzBwD,SAGWuG,GAAa,iBAAO,CAC/B/J,KC3VyB,4BCpCrBnB,GAAe,CACnBmW,oBAAqB,GACrBC,SAAU,GAEVC,oBAAoB,EACpBtN,YAAa,CACX5B,KAAM,GACN5C,KAAM,KACN+R,WAAY,GACZC,aAAc,GACd9T,IAAK,GACLrB,IAAK,MACL8E,QAAS,GACTuP,WAAW,EACX9C,YAAa,IAAIhQ,MAEnB0I,SAAU,GACVmL,aAAc,GACdC,aAAc,CACZC,YAAa,IAEfvP,KAAM,GACNwP,sBAAsB,EACtBzQ,QAAS,CACPP,MAAO,GACPiR,MAAO,QAETxD,cAAc,EACdC,OAAQ,ICxBGwD,GAAkB,WAC7B,OAAO,SAAA1S,GACLzC,EAAM0C,IAAI,aACPC,KAAK,SAAAC,GAAO,IACJzB,EAAQyB,EAAIzB,KAAZA,KACPsB,EAAS,CAAEhD,KCTc,mCDSqB0B,aAKzCiU,GAAiB,SAAChW,EAAI+E,GACjC,OAAO,SAAA1B,GACL2B,IAAMC,QAAQ,CACZI,MAAO,2EACPC,KAAM,WACJ1E,EAAM0C,IAAI,gBAAiB,CAACoB,OAAQ,CAAC1E,QAClCuD,KAAK,SAAAC,GACDA,EAAIzB,KAAK4C,UACVtC,IAAQsC,QAAQnB,EAAIzB,KAAK4C,SACzBtB,EAAS,CAAEhD,KCtBM,kCDsB2B0E,kBAQ7CkR,GAAe,SAACjW,EAAI+E,GAC/B,OAAO,SAAA1B,GACL2B,IAAMC,QAAQ,CACZI,MAAO,2EACPC,KAAM,WACJ1E,EAAM0C,IAAI,iBAAkB,CAACoB,OAAQ,CAAC1E,QACnCuD,KAAK,SAAAC,GACJnB,IAAQsC,QAAQnB,EAAIzB,MACpBsB,EAAS,CACPhD,KCpCmB,gCDqCnBL,cAQDkW,GAAqB,SAAArR,GAAK,MAAK,CAC1CxE,KChD8B,sCDiD9BwE,UAGWsR,GAAiB,SAAAb,GAC5B,OAAO,SAAAjS,GACF,QAAQ+S,KAAKd,IAChB1U,EAAM0C,IAAI,mBAAoB,CAACoB,OAAQ,CAAC4Q,cACrC/R,KAAK,SAAAC,GACDA,EAAIzB,KAAKA,KAAK4B,OAAS,GACxBN,EAAS,CAAChD,KCzDY,kCDyDsB0B,KAAMyB,EAAIzB,KAAKA,OAC3DM,IAAQsC,QAAQnB,EAAIzB,KAAKoE,OAEzB9C,EAAS0S,MACT1T,IAAQyJ,MAAM,+DAQXxB,GAAc,WACzB,OAAO,SAAAjH,GACLzC,EAAM0C,IAAI,SACPC,KAAK,SAAAC,GACJ,IAAMM,EAAS,CACbzD,KCpEmB,+BDqEnBkK,SAAU/G,EAAIzB,KAAKA,MAErBsB,EAASS,OAKJuS,GAAkB,iBAAO,CACpChW,KC1E+B,qCD6EpBiW,GAAgB,SAAC5V,EAAK0E,GAAN,MAAmB,CAC9C/E,KCzE6B,iCD0E7BK,MAAK0E,YAGMmR,GAAqB,iBAAO,CACvClW,KC5EkC,wCD+EvBmW,GAAiB,SAAA3R,GAAK,MAAK,CACtCxE,KC9E6B,kCD+E7BwE,UAGW4R,GAAoB,iBAAO,CACtCpW,KC/EiC,uCDmFtBqW,GAAe,SAAChW,EAAKmE,GAAN,MAAiB,CAC3CxE,KCtF2B,gCDuF3BK,MAAKmE,UAGM+F,GAAoB,SAAClK,EAAKmE,GAAN,MAAiB,CAChDxE,KCtFiC,qCDuFjCK,MAAKmE,UAGM8R,GAAgB,SAAAlT,GAC3B,OAAO,SAAAJ,GACLA,EAASuH,GAAkB,OAAQnH,IACnC7C,EAAM0C,IAAI,iBAAkB,CAACoB,OAAQ,CAACjB,UACnCF,KAAK,SAAAC,GACJ,IAAMM,EAAS,CACbzD,KC9FoB,iCD+FpBqV,aAAclS,EAAIzB,KAAM4T,aAAa1P,OAAAC,EAAA,EAAAD,CAAA,GAAKzC,EAAIzB,KAAK,IAAK0B,QAE1DJ,EAASS,OAKJ8S,GAAmB,iBAAO,CACrCvW,KCvHgC,sCD2HrB0U,GAAmB,iBAAO,CACrC1U,KC1GgC,sCD6GrB2U,GAAoB,iBAAO,CACtC3U,KC7GiC,uCDgHtB4U,GAAU,SAAAC,EAAmC3C,GAAW,IAA5C9O,EAA4CyR,EAA5CzR,KAAM+R,EAAsCN,EAAtCM,WAAY7T,EAA0BuT,EAA1BvT,IAAKyD,EAAqB8P,EAArB9P,QAC9C,OAAO,SAAA/B,GACLzC,EAAMgG,KAAK,oBAAqB,CAACnD,OAAM+R,aAAY7T,MAAKyD,UAASmN,WAC9DhP,KAAK,SAAAC,GACJnB,IAAQsC,QAAQnB,EAAIzB,KAAKoE,KACzB9C,EAAS2R,UAKJI,GAAe,SAAAvQ,GAAK,MAAK,CACpCxE,KC1H2B,gCD2H3BwE,UAGW4P,GAAgB,SAAC3E,EAAM3I,EAASuO,GAC3C,OAAO,SAAArS,GACL,IAAI1B,EAAM,mBACVmO,EAAK2F,aAAeC,EAAahJ,OAAO,SAAA3B,GAAI,OAAIA,EAAK6K,cAAgB9F,EAAK0F,aAAY,GAAGnQ,MACzFyK,EAAKzO,MAAQM,EAAM,sBAAwBmO,EAAK9P,GAAK8P,EAAKzO,KAC1DyO,EAAK6E,YAAc7E,EAAK+B,YAAc,IAAIhQ,KAAKiO,EAAK+B,cACpD7M,IAAMC,QAAQ,CACZI,MAAO,gBAAQyK,EAAKzO,IAAM,qBAAQ,sBAAS,6CAC3CiE,KAAM,WACJ1E,EAAMgG,KAAKjF,EAAXsE,OAAAC,EAAA,EAAAD,CAAA,GAAoB6J,IACjBvM,KAAK,SAAAC,GACDA,EAAIzB,KAAK4C,SACVtC,IAAQsC,QAAQnB,EAAIzB,KAAK4C,SACzBwC,EAAQC,UAER/E,IAAQyJ,MAAMtI,EAAIzB,KAAKE,YASxB4U,GAAkB,SAAAlM,GAC7B,OAAO,SAAAtH,GACLA,EAASuT,MACThW,EAAM0C,IAAI,iBAAkB,CAACoB,OAAQ,CAACjB,KAAMkH,EAAOlH,QAChDF,KAAK,SAAAC,GACJ,IAAMM,EAAS,CACbzD,KCzJuB,mCD0JvBqV,aAAclS,EAAIzB,KAClB4I,UAEFtH,EAASS,OASJsG,GAAa,iBAAO,CAC/B/J,KCnKyB,gCChCZ2L,GANCC,YAAgB,CAC9B1M,MRmCa,WAAkC,IAAjC8M,EAAiCC,UAAA3I,OAAA,QAAA4I,IAAAD,UAAA,GAAAA,UAAA,GAAzBpN,GAAc4E,EAAWwI,UAAA3I,OAAA,EAAA2I,UAAA,QAAAC,EAC3CC,EAAWrL,KAAKC,MAAMD,KAAKkH,UAAUgE,IACzC,OAAQvI,EAAOzD,MAIb,ID1C8B,+BC4C5B,OADAmM,EAASe,YAATtH,OAAAwG,EAAA,EAAAxG,CAA2BnC,EAAO/B,MAC3ByK,EACT,IDzCwB,2BC2CtB,OADAA,EAASiB,QAATxH,OAAAwG,EAAA,EAAAxG,CAAuBnC,EAAO/B,MACvByK,EACT,ID7CyB,4BCgDvB,OAFC1I,EAAOoK,WAAa1B,EAASsB,SAASC,MAAQjK,EAAOe,OACtDf,EAAOoK,WAAa1B,EAASyB,eAAeF,MAAQjK,EAAOe,OACpD2H,EACT,ID/CuB,2BCmDrB,OAHAA,EAASsB,SAAWtB,EAASyB,eAAiB,GAC9CzB,EAASyB,eAAeE,OAAStM,KAAKiV,MACtCtK,EAASyB,eAAeC,SAAW1B,EAASmB,gBAAkBnB,EAASkB,WAAY,EAC5ElB,EACT,IDxDsB,0BC6DpB,OAJAA,EAASsB,SAAS9N,GAAK8D,EAAO6G,OAAOtJ,IACrCmL,EAASsB,SAASC,MAAQjK,EAAO6G,OAAOoD,MACxCvB,EAASsB,SAASE,QAAUlK,EAAO6G,OAAO0D,SAC1C7B,EAASkB,WAAY,EACdlB,EACT,ID7D6B,gCCmE3B,OALAA,EAASyB,eAAejO,GAAK8D,EAAO6G,OAAOtJ,IAC3CmL,EAASyB,eAAeF,MAAQjK,EAAO6G,OAAOoD,MAC9CvB,EAASyB,eAAeC,SAAWpK,EAAO6G,OAAOuD,SACjD1B,EAASyB,eAAeE,OAASrK,EAAO6G,OAAOwD,OAC/C3B,EAASmB,iBAAkB,EACpBnB,EACT,IDhE+B,kCCkE7B,OADAA,EAASyB,eAAeC,SAAWpK,EAAOe,MACnC2H,EACT,IDlEuB,2BCmEG,SAApB1I,EAAOqM,SACT3D,EAASoB,KAAO9J,EAAO+J,KAEvBrB,EAASqB,KAAO/J,EAAO+J,KAEzB,IAAIkJ,EAAW,IAAIlV,KAAK2K,EAASoB,KAAO,IAAMpB,EAASqB,MAEvD,OADArB,EAASyB,eAAeE,OAAS4I,EAASjV,UACnC0K,EACT,KAAKhD,GAEH,OADAgD,EAASe,YAAYyJ,QAArB/Q,OAAAC,EAAA,EAAAD,CAAA,GAAiCnC,EAAO/B,OACjCyK,EACT,ID5E2B,+BC8EzB,OADAA,EAASe,YAAYX,OAAO9I,EAAOiB,MAAO,GACnCyH,EACT,ID9E0B,8BCgFxB,OADAA,EAASe,YAAc,GAChBf,EACT,IDhFsC,wCCmFpC,OAFAA,EAAS+B,qBAAsB,EAC/B/B,EAAS4B,WAAatK,EAAOsK,WACtB5B,EACT,IDnFuC,yCCsFrC,OAFAA,EAAS+B,qBAAsB,EAC/B/B,EAAS4B,WAAWlG,SAASoG,mBAAqB,GAC3C9B,EACT,IDtFqC,uCCwFnC,OADAA,EAAS4B,WAAWlG,SAASoG,mBAAqBxK,EAAOwK,mBAClD9B,EAGT,IDxF4B,+BC0F1B,OADAA,EAASgC,YAATvI,OAAAwG,EAAA,EAAAxG,CAA2BnC,EAAO/B,MAC3ByK,EACT,ID1F0B,6BC8FxB,OAHAA,EAASiC,iBAAkB,EAC3BjC,EAASkC,WAAWjL,KAAOK,EAAOL,KAClC+I,EAASkC,WAAWC,OAAS7K,EAAO6K,OAC7BnC,EACT,ID9F2B,8BCiGzB,OAFAA,EAASiC,iBAAkB,EAC3BjC,EAASkC,WAAWE,YAAc,GAC3BpC,EACT,IDjG8B,iCCmG5B,OADAA,EAASkC,WAAWE,YAAc9K,EAAOe,MAClC2H,EACT,IDnGyB,6BCqGvB,OADAA,EAASgC,YAAc,GAChBhC,EACT,IDrGuB,2BCuGrB,OADAA,EAASqC,QAAU/K,EAAO+K,QACnBrC,EAET,IDpGuB,2BCsGrB,OADAA,EAAWtN,GAEb,QACE,OAAOmN,IQhIX4K,KNyCa,WAAkC,IAAjC5K,EAAiCC,UAAA3I,OAAA,QAAA4I,IAAAD,UAAA,GAAAA,UAAA,GAAzBpN,GAAc4E,EAAWwI,UAAA3I,OAAA,EAAA2I,UAAA,QAAAC,EAC3CC,EAAWrL,KAAKC,MAAMD,KAAKkH,UAAUgE,IACzC,OAAQvI,EAAOzD,MACb,IEnDiC,kCFkE/B,OAdAmM,EAAS2E,eAATlL,OAAAwG,EAAA,EAAAxG,CAA8BnC,EAAOsN,iBACR,6BAA1B5E,EAAS8E,aACV9E,EAAS4E,gBAAkB5E,EAAS2E,eAAezE,OAAO,SAAA3B,GAAI,OAAIA,EAAKxL,QAAUiN,EAAS8E,eACjF9E,EAAS9M,WAClB8M,EAAS4E,gBAAkB5E,EAAS2E,eAAezE,OAAO,SAAA3B,GACxD,IAAImM,EAAe,GAInB,OAHAnM,EAAKzL,YAAY6X,IAAI,SAAA/L,GACnBA,EAAE3G,YAAc+H,EAAS9M,YAAcwX,EAAarK,KAAKzB,KAEpD8L,EAAavT,OAAS,IAG/B6I,EAAS4E,gBAAkB5E,EAAS2E,eAE/B3E,EACT,IElE+B,iCFoE7B,OADAA,EAAS4E,gBAAgB4F,QAAzB/Q,OAAAC,EAAA,EAAAD,CAAA,GAAqCnC,EAAO/B,OACrCyK,EACT,IEpE+B,iCFsE7B,OADAA,EAAS4E,gBAAkB,GACpB5E,EACT,IEtE0B,6BFwExB,OADAA,EAAS4E,gBAAgBxE,OAAO9I,EAAOiB,MAAO,GACvCyH,EACT,IEtEgC,kCFyE9B,GAFAA,EAAS6E,YAAc,EACvB7E,EAAS8E,aAAe,2BACL,gBAAhBxN,EAAOuC,KAAwB,KACjBhG,EAASyD,EAAhBe,MACR2H,EAAS6E,YAAchR,EACd,IAATA,IAAemM,EAAS4E,gBAAkB5E,EAAS2E,eAAezE,OAAO,SAAA3B,GAAI,QAAMA,EAAKgH,OAAShH,EAAK4J,WAAa5J,EAAK6J,aAC/G,IAATvU,IAAemM,EAAS4E,gBAAkB5E,EAAS2E,eAAezE,OAAO,SAAA3B,GAAI,QAAMA,EAAKgH,SAC/E,IAAT1R,IAAemM,EAAS4E,gBAAkB5E,EAAS2E,eAAezE,OAAO,SAAA3B,GAAI,QAAMA,EAAK4J,aAC/E,IAATtU,IAAemM,EAAS4E,gBAAkB5E,EAAS2E,eAAezE,OAAO,SAAA3B,GAAI,QAAMA,EAAK6J,YAC/E,IAATvU,IAAemM,EAAS4E,gBAAkB5E,EAAS2E,eAAezE,OAAO,SAAA3B,GAAI,QAAMA,SAC9E,KACUxL,EAAUuE,EAAjBe,MACR2H,EAAS8E,aAAe/R,EAEtBiN,EAAS4E,gBADG,6BAAV7R,EACyBiN,EAAS2E,eAAezE,OAAO,SAAA3B,GAAI,MAAmB,6BAAfA,EAAKxL,QAE5CiN,EAAS2E,eAAezE,OAAO,SAAA3B,GAAI,OAAIA,EAAKxL,QAAUA,IAYrF,OATGiN,EAAS9M,aACV8M,EAAS4E,gBAAkB5E,EAAS4E,gBAAgB1E,OAAO,SAAA3B,GACzD,IAAIqM,EAAe,GAInB,OAHArM,EAAKzL,YAAY6X,IAAI,SAAA/L,GACnBA,EAAE3G,YAAc+H,EAAS9M,YAAc0X,EAAavK,KAAKzB,KAEpDgM,EAAazT,OAAS,KAG1B6I,EACT,IEnGoC,sCFqGlC,OADAA,EAAS+E,iBAAmBzN,EAAOyN,iBAC5B/E,EACT,IErGmC,oCFuGjC,OADAA,EAASgF,kBAAmB,EACrBhF,EACT,IEvGwB,2BFyGtB,OADAA,EAASjN,MAAQuE,EAAOe,MACjB2H,EACT,IEzG+B,iCF4G7B,OAFAA,EAASgF,kBAAmB,EAC5BhF,EAASjN,MAAQ,GACViN,EACT,IE5G6B,+BF8G3B,OADAA,EAAS+E,iBAAmB,GACrB/E,EACT,IE9G8B,gCF8G9B,IACQ2E,EAAmB3E,EAAnB2E,eAiBN,OAhBA3E,EAAS9M,WAAaoE,EAAOe,MAC7B2H,EAAS6E,YAAc,EACvB7E,EAAS8E,aAAe,2BACxB9E,EAAS4E,gBAAkBD,EAAezE,OAAO,SAAA3B,GAC/C,IAAIzL,EAAc,GAIlB,OAHAyL,EAAKzL,YAAY6X,IAAI,SAAA/L,GACnBA,EAAE3G,YAAcX,EAAOe,OAASvF,EAAYuN,KAAKzB,KAE5C9L,EAAYqE,OAAS,IAE3B6I,EAAS4E,gBAAgBzN,OAAS,EACnCG,EAAOzB,QAAQsC,QAAQ,6BAEvB6H,EAAS4E,gBAAkBD,EAC3BrN,EAAOe,OAASf,EAAOzB,QAAQkJ,QAAQ,2DAElCiB,EACT,IEhI8B,iCFmI5B,OAFAA,EAAS9M,WAAaoE,EAAOe,OAC5B2H,EAAS9M,aAAe8M,EAAS4E,gBAAkB5E,EAAS2E,gBACtD3E,EACT,IEnI2B,8BFwIzB,OAJAA,EAASjN,MAAQiN,EAAS9M,WAAa,GACvC8M,EAAS8E,aAAe,2BACxB9E,EAAS/M,YAAc,EACvB+M,EAAS4E,gBAAkB5E,EAAS2E,eAC7B3E,EAGT,IErJgC,kCFwJ9B,OAFAA,EAASpH,QAAQtB,EAAOuC,MAAQvC,EAAOe,MACvC2H,EAASiF,gBAAgB/I,SAASkE,OAAOJ,EAASd,aAAc,EAAGc,EAASpH,SACrEoH,EACT,IExJgC,kCFuK9B,OAdAA,EAASiF,gBAAgB3N,EAAOuC,MAAQvC,EAAOe,MAC5B,SAAhBf,EAAOuC,OACRmG,EAASpH,QAAU8L,GACnB1E,EAASiF,gBAAgB/I,SAAW,GACpC8D,EAASiF,gBAAgBC,IAAMlF,EAASiF,gBAAgBE,SAAY,GACpEnF,EAASd,cAAgB,EACL,IAAjB5H,EAAOe,QACR2H,EAASiF,gBAAgB/I,SAASmE,KAAKL,EAASpH,SAChDoH,EAASd,aAAe,IAGT,YAAhB5H,EAAOuC,MACRJ,OAAOiH,OAAOV,EAASiF,gBAAiB,CAACI,YAAa,IAAIhQ,KAAQkQ,MAAO,EAAGD,gBAAiB,IAAIjQ,OAE5F2K,EACT,IE7JuB,0BFiKrB,OAHAA,EAASpH,QAAU8L,GACnB1E,EAASiF,gBAAgB/I,SAASmE,KAAKL,EAASpH,SAChDoH,EAASd,aAAec,EAASiF,gBAAgB/I,SAAS/E,OAAS,EAC5D6I,EACT,IEjK0B,6BFoKxB,OAFAA,EAASpH,QAATa,OAAAC,EAAA,EAAAD,CAAA,GAAuBnC,EAAOgM,MAC9BtD,EAASd,aAAe5H,EAAOiB,MACxByH,EACT,IElKyB,4BFoKvB,OADAA,EAAS4F,aAAc,EAChB5F,EACT,IEpK6B,+BFsK3B,OADAA,EAAS4F,aAAc,EAChB5F,EACT,IE1KyB,2BF4KvB,OADAA,EAASjC,SAATtE,OAAAwG,EAAA,EAAAxG,CAAwBnC,EAAOyG,UACxBiC,EACT,IE5K0B,6BF8KxB,OADAA,EAASiF,gBAAgBhJ,MAAzBxC,OAAAwG,EAAA,EAAAxG,CAAqCnC,EAAO2E,OACrC+D,EACT,IE5KkC,mCF2LhC,OAdAA,EAASiF,gBAATxL,OAAAC,EAAA,EAAAD,CAAA,GAA+BnC,EAAOqG,OACtCqC,EAASiF,gBAAgB/I,SAAS/E,OAAS,IAAM6I,EAASpH,QAATa,OAAAC,EAAA,EAAAD,CAAA,GAAuBuG,EAASiF,gBAAgB/I,SAAS,KACrE,IAAlC8D,EAASiF,gBAAgBpR,OAAYmM,EAASd,aAAe,GAC7D5H,EAAOqG,MAAMuK,KACdlI,EAASiF,gBAAgBG,QAAU,EAC3B9N,EAAOqG,MAAMwK,UACrBnI,EAASiF,gBAAgBG,QAAU,EAC3B9N,EAAOqG,MAAMyK,SACrBpI,EAASiF,gBAAgBG,QAAU,EAEnCpF,EAASiF,gBAAgBG,QAAU,EAErCpF,EAASiF,gBAAgBU,SAAW3F,EAASiF,gBAAgBM,MAAQvF,EAASiF,gBAAgBM,MAAM,KACnGvF,EAASiF,gBAAgBU,SAAW3F,EAASiF,gBAAgBU,OAAS,GAChE3F,EACT,IE1L8B,gCF4L5B,OADAA,EAAS8F,cAAe,EACjB9F,EACT,IE5L+B,iCF+L7B,OAFAA,EAAS8F,cAAe,EACxB9F,EAAS+F,OAAS,GACX/F,EACT,IE/LyB,4BFiMvB,OADAA,EAAS+F,OAASzO,EAAOe,MAClB2H,EAET,IEjMyB,2BFmMvB,OADAA,EAAS6F,SAATpM,OAAAwG,EAAA,EAAAxG,CAAwBnC,EAAOuO,UACxB7F,EACT,IEnM4B,8BFwM1B,OAJAA,EAASgG,mBAAoB,EAC7BvD,WAAW,WACTnL,EAAOoQ,KAAKmD,MAAMC,SACjB,KACI9K,EACT,IExMqC,sCF0MnC,OADAA,EAASiG,WAAa3O,EAAOe,MACtB2H,EACT,IE1MsC,uCF8MpC,OAHAvG,OAAOsR,KAAKzT,EAAO/B,MAAM4B,OAAS,GAAK6I,EAAS6F,SAASxF,KAAK/I,EAAO/B,MACrEyK,EAASgG,mBAAoB,EAC7BhG,EAASiG,WAAa,GACfjG,EACT,IE9MwB,2BFgNtB,OADAA,EAAS6F,SAASzF,OAAO9I,EAAOiB,MAAO,GAChCyH,EACT,IEhN+B,iCFkN7B,OADAA,EAASiF,gBAAgBlS,MAAQ,qBAC1BiN,EAET,IElNuB,0BFoNrB,OADAA,EAAS/M,YAAcqE,EAAOD,KACvB2I,EAET,IEnNuB,0BFmNvB,IAAAgL,EACgDhL,EAAzC/M,EADP+X,EACO/X,YAAa6R,EADpBkG,EACoBlG,aAAc5R,EADlC8X,EACkC9X,WAKhC,OAJA8M,EAAWtN,IACFO,YAAcA,EACvB+M,EAAS8E,aAAeA,EACxB9E,EAAS9M,WAAaA,EACf8M,EACT,QACE,OAAOH,IMzPXoL,SHyBa,WAAkC,IAAjCpL,EAAiCC,UAAA3I,OAAA,QAAA4I,IAAAD,UAAA,GAAAA,UAAA,GAAzBpN,GAAc4E,EAAWwI,UAAA3I,OAAA,EAAA2I,UAAA,QAAAC,EAC3CC,EAAWrL,KAAKC,MAAMD,KAAKkH,UAAUgE,IACzC,OAAQvI,EAAOzD,MAEb,IEnC6B,mCFsC3B,OAFAmM,EAAS6I,oBAAsBvR,EAAO/B,KACtCyK,EAAS8I,SAAW,GACb9I,EACT,IEtC2B,kCFwCzB,OADAA,EAAS6I,oBAAoBzI,OAAO9I,EAAOiB,MAAO,GAC3CyH,EACT,IExC4B,sCF0C1B,OADAA,EAAS8I,SAAWxR,EAAOe,MACpB2H,EACT,IE1C4B,kCF6C1B,OAFAA,EAAS6I,oBAAsBvR,EAAO/B,KACtCyK,EAAS8I,SAAW,GACb9I,EACT,IE7C6B,gCF8C3B,IAAI6I,EAAsB7I,EAAS6I,oBAAoB8B,IAAI,SAAApM,GAEzD,OADAA,EAAK1J,MAAQyC,EAAO9D,KAAO+K,EAAKvL,OAAS,GAClCuL,IAGT,OADAyB,EAAS6I,oBAAsBA,EACxB7I,EAET,IEhDyB,+BFkDvB,OADAA,EAASjC,SAAWzG,EAAOyG,SACpBiC,EAET,IEjD6B,mCFmD3B,OADAA,EAAS+I,oBAAqB,EACvB/I,EACT,IE/C2B,iCFmDzB,OAHAA,EAASnG,KAAOvC,EAAOpD,IACvB8L,EAASpH,QAAUtB,EAAOsB,QAC1BoH,EAASqJ,sBAAuB,EACzBrJ,EACT,IElDgC,sCFsD9B,OAHAA,EAASnG,KAAO,GAChBmG,EAASqJ,sBAAuB,EAChCrJ,EAASpH,QAAU,CAAEP,MAAO,GAAIiR,MAAO,QAChCtJ,EACT,IErD2B,kCFyDzB,IAAI,IAAI9L,KAHR8L,EAASmJ,aAAenJ,EAASkJ,aAAahJ,OAAO,SAAA3B,GAAI,OAAIA,EAAK6K,cAAgB9R,EAAOe,QAAO,GAChG2H,EAASvE,YAAYuN,WAAahJ,EAASmJ,aAAaC,YACxDpJ,EAASvE,YAAY7C,QAAU,GAChBoH,EAASmJ,aAAa5T,KACnCyK,EAASvE,YAAY7C,QAAQ1E,GAAO,CAClCmE,MAAO,GACPiR,MAAO,QAGX,OAAOtJ,EACT,IE9DyB,gCFgEvB,OADAA,EAASpH,QAAQtB,EAAOpD,KAAOoD,EAAOe,MAC/B2H,EACT,IE/D+B,qCFoE7B,OAJAA,EAASvE,YAAY7C,QAAQoH,EAASnG,MAAQmG,EAASpH,QACvDoH,EAASnG,KAAO,GAChBmG,EAASqJ,sBAAuB,EAChCrJ,EAASpH,QAAU,CAAEP,MAAO,GAAIiR,MAAO,QAChCtJ,EAET,IEnE+B,qCFwE7B,OAJAA,EAASvE,YAAYnE,EAAOpD,KAAOoD,EAAOe,MACxB,cAAff,EAAOpD,MACR8L,EAASvE,YAAY4J,YAAc,IAAIhQ,MAElC2K,EACT,IEvE0B,iCF2ExB,IAAI,IAAI9L,KAHR8L,EAASkJ,aAAe5R,EAAO4R,aAC/BlJ,EAASmJ,aAAe7R,EAAO6R,aAC/BnJ,EAASvE,YAAYuN,WAAahJ,EAASmJ,aAAaC,YACzCpJ,EAASmJ,aAAa5T,KACnCyK,EAASvE,YAAY7C,QAAQ1E,GAAO,CAClCmE,MAAO,GACPiR,MAAO,QAGX,OAAOtJ,EACT,IElG8B,oCFoG5B,OADAA,EAAS+I,oBAAqB,EACvB/I,EACT,IEnF8B,oCFqF5B,OADAA,EAAS8F,cAAe,EACjB9F,EACT,IErF+B,qCFwF7B,OAFAA,EAAS8F,cAAe,EACxB9F,EAAS+F,OAAS,GACX/F,EACT,IExFyB,gCF0FvB,OADAA,EAAS+F,OAASzO,EAAOe,MAClB2H,EAET,IEzF6B,mCF6F3B,OAHAA,EAASvE,YAAc9G,KAAKC,MAAMD,KAAKkH,UAAUvE,EAAO6G,SACxD6B,EAASkJ,aAAe5R,EAAO4R,aAC/BlJ,EAASmJ,aAAenJ,EAASkJ,aAAahJ,OAAO,SAAA3B,GAAI,OAAIA,EAAK6K,cAAgB9R,EAAO6G,OAAO6K,aAAY,GACrGhJ,EAET,IE3FuB,8BF6FrB,OADAA,EAAWtN,GAEb,QACE,OAAOmN,MIjIEL,GALCC,YAAgB,CAC9ByL,QAASC,GACTtV,QAASuV,KCALC,GAAmBpS,OAAOqS,sCAAwCC,IAMzDC,GAJDC,YAAYjM,GAAS6L,GACjCK,YAAgBC,2CCqFHC,eAvFb,SAAAA,EAAYzR,GAAO,IAAA0R,EAAA,OAAApS,OAAAqS,EAAA,EAAArS,CAAAsS,KAAAH,IACjBC,EAAApS,OAAAuS,EAAA,EAAAvS,CAAAsS,KAAAtS,OAAAwS,EAAA,EAAAxS,CAAAmS,GAAAM,KAAAH,KAAM5R,KACDgS,MAAQN,EAAKM,MAAMC,KAAX3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IACbA,EAAKhM,MAAQ,CACXyM,UAAW,CACTC,SAAU,GACVC,SAAU,KANGX,wEAWV,IAAAY,EAAAV,KACCO,EAAcP,KAAKlM,MAAnByM,UACFI,EAAU,CACdC,UAAW,QACXC,eAAgB,OAChBC,iBAAkB,YAClBC,qBAAsB,QACtBC,gBAAe,OAAAjX,OAASkX,EAAQ,KAAjB,MAEjB,OACEC,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,WAAWC,MAAOV,GAC/BO,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,YACfF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,mBACbF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,WACbF,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,SAAb,0DACAF,EAAAzV,EAAA0V,cAAA,6GACAD,EAAAzV,EAAA0V,cAAA,qHAGJD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,sBACbF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,cACbF,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,gBACAF,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CACExS,MAAOiU,EAAUC,SACjBc,KAAK,QACLC,SAAU,SAAAC,GAAC,OAAId,EAAKe,iBAAiBD,EAAEE,OAAOpV,MAAO,aACrDqV,OAAQT,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,OAAOuZ,MAAO,CAAC9D,MAAO,kBAAmBsE,YAAa,MACzER,MAAO,CAACS,aAAc,IACtBC,YAAY,qBACZC,QAAS,SAAAR,GAAC,OAAkB,KAAdA,EAAES,SAAkBvB,EAAKN,WAEzCc,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CACExS,MAAOiU,EAAUE,SACjBa,KAAK,QACLxZ,KAAK,WACLyZ,SAAU,SAAAC,GAAC,OAAId,EAAKe,iBAAiBD,EAAEE,OAAOpV,MAAO,aACrDqV,OAAQT,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,OAAOuZ,MAAO,CAAC9D,MAAO,kBAAmBsE,YAAa,MACzEE,YAAY,eACZC,QAAS,SAAAR,GAAC,OAAkB,KAAdA,EAAES,SAAkBvB,EAAKN,WAEzCc,EAAAzV,EAAA0V,cAAA,UAAQC,UAAU,mBAAmBc,QAASlC,KAAKI,OAAnD,4DAOO9T,EAAOwB,GAAM,IACpByS,EAAcP,KAAKlM,MAAnByM,UACRA,EAAUzS,GAAQxB,EAClB0T,KAAKmC,SAAS,SAAArO,GAAK,MAAK,CAACyM,UAAU7S,OAAAC,EAAA,EAAAD,CAAA,GAAKoG,EAAMyM,UAAZ,GAA0BA,sCAGtD,IAAA6B,EAAApC,KACEO,EAAcP,KAAKlM,MAAnByM,UACLA,EAAUC,UAAYD,EAAUE,UACjCF,EAAUE,SAAWT,KAAKqC,KAAK9B,EAAUE,UAAU6B,WACnDja,EAAMgG,KAAK,iBAAXX,OAAAC,EAAA,EAAAD,CAAA,GAAiC6S,IAC9BvV,KAAK,SAAAC,GAAO,IAAA8L,EACiB9L,EAAIzB,KAAxB0B,EADG6L,EACH7L,KAAM0C,EADHmJ,EACGnJ,IAAKpE,EADRuN,EACQvN,KACnB,IAAa,IAAV0B,EACDpB,IAAQyJ,MAAM3F,OACT,CACL,IAAMpF,EAAWI,KAAKkH,UAAUtG,EAAK,IACrCf,aAAa8Z,QAAQ,WAAY/Z,GACjC0E,OAAOyE,SAAS6Q,KAAO,SACvBJ,EAAKD,SAAS,CAAC5B,UAAW,KAC1BzW,IAAQsC,QAAQwB,OAItB9D,IAAQkJ,QAAQ,uEAnFFyP,yECCdC,sNAEJ5O,MAAQ,CACNtL,SAAU,MA+DZqN,WAAa,WAAM,IACT8M,EAAmB7C,EAAK1R,MAAMG,KAA9BoU,eACgBlb,EAAQqY,EAAKhM,MAA7BtL,SAAWM,IAFF8Z,EAGcD,IAAvBnC,EAHSoC,EAGTpC,SAAUC,EAHDmC,EAGCnC,SACfA,EAASoC,QAAUrC,EAASqC,OAC7BpW,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ,IAAI+V,EAAchD,EAAKuC,KAAK5B,GAAU6B,WACtCja,IAAMoF,IAAI,WAAY,CAAChG,KAAI+Y,WAAUC,SAAUqC,IAC5C9X,KAAK,SAAAC,GAAO,IAAA8L,EACS9L,EAAIzB,KAAjB0B,EADI6L,EACJ7L,KAAM0C,EADFmJ,EACEnJ,IACD,IAAT1C,GACDpB,IAAQsC,QAAQwB,EAAM,kCACtBkS,EAAKiD,eACLta,aAAa8Z,QAAQ,WAAY,IACjCrV,OAAOyE,SAAS6Q,KAAO,gBAEvB1Y,IAAQyJ,MAAM3F,QAMxB9D,IAAQyJ,MAAM,yHAIlBwP,aAAe,WAAM,IACXvU,EAAmBsR,EAAK1R,MAAMG,KAA9BC,eACRsR,EAAKqC,SAAS,CAACa,iBAAiB,IAChCxU,EAAe,CAACiS,SAAU,yFA1F1B,IAAIjY,EAAWC,aAAaC,QAAQ,YACjCF,IACDA,EAAWI,KAAKC,MAAML,GACtBwX,KAAKmC,SAAS,CAAC3Z,+CAIV,IAAAkY,EAAAV,KAAAiD,EAC+BjD,KAAKlM,MAAnCtL,EADDya,EACCza,SAAUwa,EADXC,EACWD,gBACVE,EAAsBlD,KAAK5R,MAAMG,KAAjC2U,kBACR,OACEhC,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,kBACbF,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAG,KACPlC,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,UAAUiC,IAAKpC,EAAQ,KAAoCqC,IAAI,MAEhFpC,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACbF,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,4BACboU,EAAAzV,EAAA0V,cAAA,KAAGqB,KAAK,gFAAmCd,OAAO,WAChDR,EAAAzV,EAAA0V,cAACqC,GAAA,EAAD,CAAQlC,KAAM,GAAIM,KAAK,WAAWP,MAAO,CAACQ,YAAa,GAAItE,MAAO,UAAWkG,gBAAiB,eAGlGvC,EAAAzV,EAAA0V,cAACqC,GAAA,EAAD,CAAQlC,KAAM,GAAIM,KAAK,SACvBV,EAAAzV,EAAA0V,cAACuC,GAAA,EAAD,CAAS7W,QACPqU,EAAAzV,EAAA0V,cAAAD,EAAAzV,EAAAkY,SAAA,KACEzC,EAAAzV,EAAA0V,cAAA,KAAGE,MAAO,CAACuC,SAAU,GAAI9B,aAAc,IAAKV,UAAU,SAASc,QAAS,kBAAMxB,EAAKyB,SAAS,CAACa,iBAAiB,MAAQ9B,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMP,MAAO,CAACQ,YAAa,GAAI/Z,KAAK,SAA1J,4BACAoZ,EAAAzV,EAAA0V,cAAA,KAAGE,MAAO,CAACuC,SAAU,IAAKxC,UAAU,SAASc,QAAS2B,IAAQ3C,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMP,MAAO,CAACQ,YAAa,GAAI/Z,KAAK,WAAlG,kBAGFoZ,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,kBACbF,EAAAzV,EAAA0V,cAAA,SAAI3Y,EAASgY,SAAb,KACAU,EAAAzV,EAAA0V,cAAA,oCAAOD,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,YAGtBoZ,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOC,QAASf,EAAiBlW,MAAM,uCAASC,KAAMiT,KAAKnK,WAAYmO,SAAUhE,KAAK+C,cACpF7B,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAD,CAAMC,SAAU,CAACC,KAAM,GAAIC,WAAY,CAACD,KAAM,KAC5CjD,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACdpB,EAAkB,WAAY,CAC7BqB,aAAc/b,EAASgY,UADxB0C,CAGChC,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOiD,YAAY,2CAGvBb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACdpB,EAAkB,WAAY,CAC7BsB,MAAO,CAAC,CACNC,UAAU,EACV3a,QAAS,sDAHZoZ,CAMChC,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOhX,KAAK,WAAWia,YAAY,sDAxDzBU,cAsGtBoB,GAAS,WACbpb,aAAa8Z,QAAQ,WAAY,IACjCzY,IAAQsC,QAAQ,wCAChBsK,WAAW,WACTxJ,OAAOyE,SAAS6Q,KAAO,gBACtB,MAGUkC,QAAKC,QAALD,CAAchC,cC/GtBkC,WAAWC,KAAXD,SACDE,GAAWD,KAAKR,KA+IPU,8MA5IbnV,SAAW,CACT,CACEoV,SAAU,UACVlY,MAAO,2BACP8U,KAAM,WACNqD,KAAM,EACNC,YAAa,CACX,CACEF,SAAU,UACVlY,MAAO,2BACPqY,KAAM,0BACL,CACDH,SAAU,OACVlY,MAAO,2BACPqY,KAAM,uBACL,CACDH,SAAU,QACVlY,MAAO,2BACPqY,KAAM,0BAOT,CACDH,SAAU,UACVlY,MAAO,2BACP8U,KAAM,WACNqD,KAAM,EACNC,YAAa,CACX,CACEF,SAAU,OACVlY,MAAO,2BACPqY,KAAM,uBACL,CACDH,SAAU,QACVlY,MAAO,2BACPqY,KAAM,wBACL,CACDH,SAAU,WACVlY,MAAO,2BACPqY,KAAM,6BAGT,CACDH,SAAU,UACVlY,MAAO,2BACP8U,KAAM,UACNqD,KAAM,EACNC,YAAa,CACX,CACEF,SAAU,SACVlY,MAAO,2BACPqY,KAAM,2BAGT,CACDH,SAAU,UACVlY,MAAO,2BACP8U,KAAM,OACNqD,KAAM,EACNC,YAAa,CACX,CACEF,SAAU,OACVlY,MAAO,2BACPqY,KAAM,uBACL,CACDH,SAAU,MACVlY,MAAO,2BACPqY,KAAM,2BAMdrR,MAAQ,CACNsR,aAAc,GACdH,KAAM,QAGRI,SAAW,SAAOC,GAAP,IAAAC,EAAAC,EAAA,OAAAha,EAAAC,EAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACH0Z,EAAoBD,EAAWF,aAAaK,KAAK,SAAAtd,GAAG,OAA8C,IAA1C2X,EAAKhM,MAAMsR,aAAa/b,QAAQlB,KAC1Fqd,EAAa,GAFR7Z,EAAAE,KAAA,EAAAL,EAAAC,EAAAK,MAGHgU,EAAKlQ,SAASgP,IAAI,SAAApM,GAAI,OAAKgT,EAAU,GAAAzb,OAAA2D,OAAAwG,EAAA,EAAAxG,CAAO8X,GAAP9X,OAAAwG,EAAA,EAAAxG,CAAsB8E,EAAK0S,iBAH7D,cAAAvZ,EAAAE,KAAA,EAAAL,EAAAC,EAAAK,MAIH0Z,EAAWC,KAAK,SAAAjT,GAAI,OACxBA,EAAKwS,WAAaO,GACfzF,EAAKqC,SAAS,CAAEiD,aAAcG,EAAoB,CAACA,GAAqB,CAAqB,IAApBzF,EAAKhM,MAAMmR,KAAa,UAAY,aANzG,wBAAAtZ,EAAAI,sGAWT,IAAIvD,EAAWC,aAAaC,QAAQ,YACjCF,IACDA,EAAWI,KAAKC,MAAML,GACtBwX,KAAKmC,SAAS,CACZ8C,KAAMzc,EAASyc,KACfG,aAAc,CAAClY,OAAOyE,SAAS+T,SAASC,MAAM,KAAK,KAAyB,IAAlBnd,EAASyc,KAAa,UAAY,6CAKzF,IAAAvE,EAAAV,KACD4F,EAAW1Y,OAAOyE,SAAS+T,SAC3BG,EAAiB7F,KAAKpQ,SAASgP,IAAI,SAACpM,EAAMhG,GAC9C,GAAGgG,EAAKyS,OAASvE,EAAK5M,MAAMmR,KAAM,CAChC,IAAMa,EAActT,EAAK0S,YAAYtG,IAAI,SAAAmH,GAAO,OAC9C7E,EAAAzV,EAAA0V,cAAC2D,GAAD,CAAU3c,IAAK4d,EAAQf,UAAU9D,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAI2C,EAAQZ,MAAOY,EAAQjZ,UAEpE,OAAQoU,EAAAzV,EAAA0V,cAACyD,GAAD,CACNzc,IAAKqK,EAAKwS,SACVlY,MACEoU,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,aAChBF,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMR,UAAU,YAAYtZ,KAAM0K,EAAKoP,OACvCV,EAAAzV,EAAA0V,cAAA,YAAO3O,EAAK1F,SAIbgZ,GAGL,MAAO,KAET,OACE5E,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACbF,EAAAzV,EAAA0V,cAAC5M,GAAA,EAAD,CACEyR,KAAK,SACLC,MAAM,QACNb,aAAcpF,KAAKlM,MAAMsR,aACzBc,gBAAiB,CAAChZ,OAAOyE,SAAS+T,SAASC,MAAM,KAAK,KAA2B,IAApB3F,KAAKlM,MAAMmR,KAAa,UAAY,YACjGI,SAAUrF,KAAKqF,SACfc,oBAAqB,CAACP,IAErBC,WAtIepD,iCCJpB2D,WAAY,CAChBC,WAAY,2BAEZC,mBAAoB,2BACpBC,yBAA0B,2BAE1BC,yBAA0B,2BAE1BC,0BAA2B,2BAC3BC,iCAAkC,2BAClCC,iCAAkC,2BAElCC,gBAAiB,2BACjBC,uBAAwB,2BACxBC,uBAAwB,2BAExBC,iBAAkB,2BAClBC,wBAAyB,2BACzBC,wBAAyB,2BAEzBC,WAAY,2BAEZC,gBAAiB,2BACjBC,uBAAwB,2BACxBC,uBAAwB,2BAExBC,iBAAkB,2BAClBC,0BAA2B,2BAC3BC,yBAA0B,2BAE1BC,oBAAqB,2BACrBC,2BAA4B,2BAC5BC,2BAA4B,2BAE5BC,WAAY,2BACZC,kBAAmB,2BACnBC,yBAA0B,2BAC1BC,yBAA0B,2BAE1BC,UAAW,qBACXC,gBAAiB,2BACjBC,uBAAwB,2BACxBC,uBAAwB,2BAExBC,iBAAkB,iCAClBC,wBAAyB,iCACzBC,wBAAyB,iCAEzBC,WAAY,2BACZC,gBAAiB,2BACjBC,eAAgB,6BAGZC,eACJ,SAAAA,EAAYta,GAAO,IAAA0R,EAAA,OAAApS,OAAAqS,EAAA,EAAArS,CAAAsS,KAAA0I,IACjB5I,EAAApS,OAAAuS,EAAA,EAAAvS,CAAAsS,KAAAtS,OAAAwS,EAAA,EAAAxS,CAAAgb,GAAAvI,KAAAH,KAAM5R,KAORua,QAAU,WACR7I,EAAKqC,SAAS,CACZyG,aAAc1b,OAAOyE,SAAS+T,SAASC,MAAM,KAAKvR,MAAM,KAE1D0L,EAAKqC,SAAS,SAACvW,GACb,MAAO,CACLid,qBAAsBjd,EAAKgd,aAAahK,IAAI,SAACkK,EAAGtc,GAC9C,IAAIpD,EAAG,IAAAW,OAAO6B,EAAKgd,aAAaxU,MAAM,EAAG5H,EAAQ,GAAGuc,KAAK,MACzD,OACE7H,EAAAzV,EAAA0V,cAAC6H,GAAA,EAAW3E,KAAZ,CAAiBlc,IAAKiB,GACnBgd,GAAUhd,UAlBJ0W,EA0BnBmJ,UAAY,WACVC,KAAa3R,KAAK,CAChBzN,QAAS,mDACT4K,YAAa,qgBACb2M,MAAO,CACL8H,MAAO,IACPC,YAAY,QA9BhBtJ,EAAKhM,MAAQ,CACX8U,aAAc,KACdC,qBAAsB,MAJP/I,kGAsCjBE,KAAK2I,sDAIL3I,KAAK2I,2CAGE,IACCE,EAAyB7I,KAAKlM,MAA9B+U,qBACR,OACC3H,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACdF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACXF,EAAAzV,EAAA0V,cAAC6H,GAAA,EAAD,KACGH,IAGL3H,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,UACbF,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,gBAAhB,wCACAF,EAAAzV,EAAA0V,cAAA,QAAMe,QAASlC,KAAKiJ,UAAW7H,UAAU,4BAAzC,+gBAzDiBqB,aAmEZ4G,eAAWX,ICtHnBY,WAAkCC,KAAlCD,SAASE,GAAyBD,KAAzBC,MAAOC,GAAkBF,KAAlBE,OAAQC,GAAUH,KAAVG,OA8BhBC,GA5BK,SAAAvb,GAAK,OAAI8S,EAAAzV,EAAA0V,cAACyI,GAAA,EAAD,CAAQxI,UAAU,gBAC7CF,EAAAzV,EAAA0V,cAAC0I,GAAD,MACA3I,EAAAzV,EAAA0V,cAACyI,GAAA,EAAD,KACE1I,EAAAzV,EAAA0V,cAACqI,GAAD,CAAOM,aAAW,EAAC1I,UAAU,cAAc6E,MAAM,QAAQkD,MAAM,OAC7DjI,EAAAzV,EAAA0V,cAAC4I,GAAD,OAEF7I,EAAAzV,EAAA0V,cAACyI,GAAA,EAAD,KACE1I,EAAAzV,EAAA0V,cAACmI,GAAD,CAASlI,UAAU,iBACjBF,EAAAzV,EAAA0V,cAAC6I,GAAA,EAAD,CAAM5I,UAAU,cACdF,EAAAzV,EAAA0V,cAACyI,GAAA,EAAD,KACE1I,EAAAzV,EAAA0V,cAACsI,GAAD,CAAQrI,UAAU,gBAAeF,EAAAzV,EAAA0V,cAAC8I,GAAD,OACjC/I,EAAAzV,EAAA0V,cAACmI,GAAD,KAAUlb,EAAMvB,SAChBqU,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,WACbF,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,mBAAmBme,MAAM,WACpC/E,EAAAzV,EAAA0V,cAAA,yBACAD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,kBACbF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBAAiBiC,IAAI,kEAAkEC,IAAI,KAC1GpC,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,iBAAb,iFAMVF,EAAAzV,EAAA0V,cAACuI,GAAD,CAAQtI,UAAU,gBAAlB,uJC7BA8I,GAAa,CACjBlX,QAAW,UACXmX,OAAU,UACV/d,QAAW,UACXmL,KAAQ,UACR6S,OAAU,WA8BGC,8MAzBbvW,MAAQ,CACNwW,YAAa,CACXC,WAAY,UACZhN,MAAO,OACPsE,YAAa,EACbuH,WAAY,EACZtH,aAAc,uFAGE,IAAA0I,EACwDxK,KAAK5R,MAD7Dqc,EAAAD,EACVD,kBADU,IAAAE,EACG,SADHA,EAAAC,EAAAF,EACajN,aADb,IAAAmN,EACqB,OADrBA,EAAAC,EAAAH,EAC6BI,UAD7B,IAAAD,EACkC,EADlCA,EAAAE,EAAAL,EACqCM,UADrC,IAAAD,EAC0C,EAD1CA,EAAAE,EAAAP,EAC6CQ,UAD7C,IAAAD,EACkD,EADlDA,EAElB/K,KAAKmC,SAAS,CACZmI,YAAa,CAAEC,WAAYL,GAAWK,GAAahN,QAAOsE,YAAa+I,EAAIxB,WAAY0B,EAAIhJ,aAAckJ,sCAIpG,IAAAC,EAC8DjL,KAAK5R,MADnE8c,EAAAD,EACC3J,YADD,IAAA4J,EACQ,QADRA,EACiBC,EADjBF,EACiBE,cADjBC,EAAAH,EACgCI,gBADhC,IAAAD,KACkDlJ,EADlD+I,EACkD/I,QACjDoI,EAAgBtK,KAAKlM,MAArBwW,YACR,OACCpJ,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQhK,KAAMA,EAAM+J,SAAUA,EAAUhK,MAAOiJ,EAAapI,QAASA,GAAUiJ,UArBxD1I,aCJrB8I,GAAUC,KAAVD,OACAE,GAAUC,KAAVD,OACCE,GAASC,KAATD,KAEFE,+LAGF7L,KAAK5R,MAAMvD,eACXmV,KAAK5R,MAAMjD,qDAGJ,IAAAqf,EACoRxK,KAAK5R,MAAzRxH,EADA4jB,EACA5jB,eAAgBG,EADhByjB,EACgBzjB,YAAakF,EAD7Bue,EAC6Bve,aAAc9E,EAD3CqjB,EAC2CrjB,WAAY6E,EADvDwe,EACuDxe,kBAAmBgB,EAD1Ewd,EAC0Exd,QAASC,EADnFud,EACmFvd,cAAeG,EADlGod,EACkGpd,iBAAkB7F,EADpHijB,EACoHjjB,aAAc8F,EADlImd,EACkInd,kBAAmB7F,EADrJgjB,EACqJhjB,YAAa8F,EADlKkd,EACkKld,kBAAmBO,EADrL2c,EACqL3c,YAAaE,EADlMyc,EACkMzc,gBAAiBC,EADnNwc,EACmNxc,aAAczB,EADjOie,EACiOje,cAAevF,EADhPwjB,EACgPxjB,MAAOqF,EADvPme,EACuPne,kBAAmBpF,EAD1QujB,EAC0QvjB,OAE3Q6kB,EAAa,CACjBC,SAFe7e,OAAO8e,WAAa,KAEZ,GAAK,IAE9B,OACE9K,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAACoK,GAAD,CACExJ,YAAY,6CACZX,UAAU,aACV9U,MAAOnF,EACPoa,SAAUvV,EACVigB,SAAU,SAAA9kB,GAAU,OAAI8E,EAAa9E,MAEvC+Z,EAAAzV,EAAA0V,cAAC+K,GAAA,EAAD,CAAQ5f,MAAOtF,EAAOua,SAAU,SAAAjV,GAAK,OAAID,EAAkB,QAASC,IAAQ+U,MAAO,CAAC8H,MAAO,IAAKC,WAAY,KAC1GlI,EAAAzV,EAAA0V,cAACsK,GAAD,CAAQnf,MAAM,gBAAd,4BACA4U,EAAAzV,EAAA0V,cAACsK,GAAD,CAAQnf,MAAM,sBAAd,sBACC1F,EAAegY,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAACsK,GAAD,CAAQtjB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAK1E,MAAO0E,EAAK1E,SAE7EoT,EAAAzV,EAAA0V,cAAC+K,GAAA,EAAD,CAAQ5f,MAAOrF,EAAQsa,SAAU,SAAAjV,GAAK,OAAID,EAAkB,SAAUC,IAAQ+U,MAAO,CAAC8H,MAAO,IAAKC,WAAY,KAC5GlI,EAAAzV,EAAA0V,cAACsK,GAAD,CAAQnf,MAAM,gBAAd,gBACA4U,EAAAzV,EAAA0V,cAACsK,GAAD,CAAQnf,MAAO,GAAf,sBACA4U,EAAAzV,EAAA0V,cAACsK,GAAD,CAAQnf,OAAQ,GAAhB,sBACA4U,EAAAzV,EAAA0V,cAACsK,GAAD,CAAQnf,MAAO,GAAf,sBACA4U,EAAAzV,EAAA0V,cAACsK,GAAD,CAAQnf,OAAQ,GAAhB,uBAEF4U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,kBACbF,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ5B,WAAW,UAAUjJ,KAAK,UAC1B6J,cAAejK,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAG,gCAAT,8BACvBlC,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ7K,KAAK,UAAU6J,cAAc,iCAAQjJ,QAASjV,KAExDiU,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACbF,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CACEC,KAAM,CAACC,OAAQ,GAAIC,GAAI,EAAGC,IAAK,GAC/BC,WAAY1lB,EACZ+kB,WAAYA,EACZY,WAAY,SAACla,EAAMhG,GAAP,OACV0U,EAAAzV,EAAA0V,cAACiL,GAAA,EAAK/H,KAAN,KACEnD,EAAAzV,EAAA0V,cAACwK,GAAD,CAAMvK,UAAU,aAEhBF,EAAAzV,EAAA0V,cAAC6I,GAAA,EAAD,CAAM5I,UAAU,YACVuL,QACE,CACEzL,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,0DAAYoU,EAAAzV,EAAA0V,cAAA,QAAMe,QAAS,kBAAM9U,EAAiBoF,EAAK1J,IAAK0J,EAAKxL,MAAOwL,EAAK9K,UAAW8K,EAAK7K,WAAjF,iBAC3BuZ,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,OAAwB,IAAjB0F,EAAKvL,OAAgB,oDAA+B,IAAjBuL,EAAKvL,OAAgB,mDAA8B,IAAhBuL,EAAKvL,OAAe,gEAAiC,IAAjBuL,EAAKvL,OAAgB,+DAAe,4BAAWia,EAAAzV,EAAA0V,cAAA,QAAMC,WAA4B,IAAjB5O,EAAKvL,OAAgB,GAAK,iBAAkBib,QAAS,kBAAuB,IAAjB1P,EAAKvL,OAAgB+F,EAAQwF,EAAKtH,KAAMsB,GAASe,QAAQC,IAAI,iDAA8B,IAAjBgF,EAAKvL,OAAgB,gBAAyB,IAAjBuL,EAAKvL,OAAgB,qBAAyB,IAAhBuL,EAAKvL,OAAe,sBAA0B,IAAjBuL,EAAKvL,OAAgB,2BAAS,uBACrbia,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAOoU,EAAAzV,EAAA0V,cAAA,gDAASD,EAAAzV,EAAA0V,cAAA,WAAT,6EAAiCD,EAAAzV,EAAA0V,cAAA,QAAMe,QAAS,kBAAM3V,EAAciG,EAAK1J,IAAK0D,KAA7C,mBAGzD0U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,wBACbF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBAAf,2BACMF,EAAAzV,EAAA0V,cAAA,gBAAQ3O,EAAKoa,gBAAkB,IAErC1L,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBAAf,4BACOF,EAAAzV,EAAA0V,cAAA,YAAO3O,EAAKqa,YAAc,KAGlCra,EAAKsa,SAAW5L,EAAAzV,EAAA0V,cAAA,OAAKkC,IAAK7Q,EAAKsa,SAAUxJ,IAAI,KAAOpC,EAAAzV,EAAA0V,cAACqC,GAAA,EAAD,CAAQuJ,MAAM,SAASzL,KAAM,GAAIM,KAAK,OAAOP,MAAO,CAACQ,YAAa,EAAGmL,WAAY,MACtI9L,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACbF,EAAAzV,EAAA0V,cAAA,SAAI3O,EAAKtG,WACTgV,EAAAzV,EAAA0V,cAAC8L,GAAA,EAAD,KAAMza,EAAKxL,gBASzBka,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOC,QAASxc,EAAcuF,MAAM,uCAASkX,SAAU3W,EAAmBN,KAAM,kBAAMO,EAAkB9F,KACtG0Z,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAD,CAAMC,SAAU,CAACC,KAAM,GAAIC,WAAY,CAACD,KAAM,KAC5CjD,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAC+K,GAAA,EAAD,CAAQ5f,MAAO9E,EAAYR,OAAS,qBAAOua,SAAU1T,GACnDqT,EAAAzV,EAAA0V,cAACsK,GAAD,CAAQnf,MAAM,sBAAd,sBACC1F,EAAegY,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAACsK,GAAD,CAAQtjB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAK1E,MAAO0E,EAAK1E,UAG/EoT,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAO9E,EAAYE,UAAW6Z,SAAUxT,GACnDmT,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAO,GAAd,gBACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAO,GAAd,UACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAO,GAAd,YAGJ4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAOpD,EAAAzV,EAAA0V,cAAA,wCAAWD,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAOoU,EAAAzV,EAAA0V,cAAA,wIAA2BD,EAAAzV,EAAA0V,cAAA,WAA3B,+EAAwDD,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMR,UAAU,SAAStZ,KAAK,kBAAkBme,MAAM,cACzJ/E,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAO9E,EAAYG,QAAS4Z,SAAUvT,GACjDkT,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAO,GAAd,gBACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAO,GAAd,UACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAO,GAAd,sBAhGMmW,aAwKP2K,eA9DE,SAAAtZ,GAAK,MAAK,CACzBlN,eAAgBkN,EAAMqL,QAAQxL,QAAQ/M,eACtCC,eAAgBiN,EAAMqL,QAAQxL,QAAQ9M,eACtCE,YAAa+M,EAAMqL,QAAQxL,QAAQ5M,YACnCG,YAAa4M,EAAMqL,QAAQxL,QAAQzM,YACnCC,WAAY2M,EAAMqL,QAAQxL,QAAQxM,WAClCI,aAAcuM,EAAMqL,QAAQxL,QAAQpM,aACpCC,YAAasM,EAAMqL,QAAQxL,QAAQnM,YACnCR,MAAO8M,EAAMqL,QAAQxL,QAAQ3M,MAC7BC,OAAQ6M,EAAMqL,QAAQxL,QAAQ1M,SAGZ,SAAA6D,GAAQ,MAAK,CAC/BD,aAD+B,WAE7BC,EAASuiB,EAAexiB,iBAE1BM,kBAJ+B,WAK7BL,EAASuiB,EAAeliB,sBAE1BE,WAP+B,SAOpBC,GACTR,EAASuiB,EAAehiB,WAAWC,KAErCU,kBAV+B,SAUbwV,GAChB1W,EAASuiB,EAAerhB,kBAAkBwV,EAAEE,OAAOpV,SAErDL,aAb+B,SAalBK,GACXxB,EAASuiB,EAAephB,aAAaK,KAEvCC,cAhB+B,SAgBjB9E,EAAI+E,GAChB1B,EAASuiB,EAAe9gB,cAAc9E,EAAI+E,KAE5CQ,QAnB+B,SAmBvB9B,EAAMsB,GACZ1B,EAASuiB,EAAergB,QAAQ9B,EAAMsB,KAExCS,cAtB+B,WAuB7BnC,EAASuiB,EAAepgB,kBAE1BG,iBAzB+B,SAyBd3F,EAAIT,EAAOU,EAAWC,GACrCmD,EAASuiB,EAAejgB,iBAAiB3F,EAAIT,EAAOU,EAAWC,KAEjE0F,kBA5B+B,WA6B7BvC,EAASuiB,EAAehgB,sBAE1BC,kBA/B+B,SA+Bb9F,GAChBsD,EAASuiB,EAAe/f,kBAAkB9F,KAE5CqG,YAlC+B,SAkCnBC,GACVhD,EAASuiB,EAAexf,YAAYC,KAEtCC,gBArC+B,SAqCfyT,GACd,IAAI9Z,EAAY8Z,EAAEE,OAAOpV,MACzBxB,EAASuiB,EAAetf,gBAAgBrG,KAE1CsG,aAzC+B,SAyClBwT,GACX,IAAI7Z,EAAU6Z,EAAEE,OAAOpV,MACvBxB,EAASuiB,EAAerf,aAAarG,KAEvC0E,kBA7C+B,SA6CblE,EAAKmE,GACrBxB,EAASuiB,EAAehhB,kBAAkBlE,EAAKmE,OAIpC8gB,CAA+BvB,cChLtCrC,GAAmBD,KAAnBC,MAAOF,GAAYC,KAAZD,QACPiC,GAAWC,KAAXD,OAiUO+B,8MA7TbC,QAAU,CACR,CACEplB,IAAK,YACLqlB,UAAW,YACX1gB,MAAO,2BACP2gB,MAAO,SACPtE,MAAO,KACN,CACDhhB,IAAK,QACLqlB,UAAW,QACX1gB,MAAO,eACP2gB,MAAO,UACN,CACDtlB,IAAK,SACL2E,MAAO,eACP2gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC1lB,EAAMoK,EAAQ5F,GAAf,OAAyB0U,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQxjB,KAAK,UAAUwZ,KAAK,QAAQY,QAAS,kBAAMpC,EAAKqC,SAAS,CAAC5a,cAAc,EAAMomB,WAAYvb,EAAOtJ,IAAK8kB,cAAephB,MAA7H,iCAIrCsH,MAAQ,CACNlN,eAAgB,GAChBW,cAAc,EACdsmB,uBAAuB,EACvB7mB,MAAO,GACPD,YAAa,GACb+mB,SAAU,GACVC,aAAc,EACdJ,WAAY,GACZC,eAAgB,EAChBI,YAAa,GACbC,gBAAiB,MAQnBC,kBAAoB,WAClB7lB,IAAM0C,IAAI,eACPC,KAAK,SAAAC,GACJ,GAAqB,IAAlBA,EAAIzB,KAAK0B,KAAY,KACRtE,EAAmBqE,EAAIzB,KAA7BA,KACRsW,EAAKqC,SAAS,CAACvb,yBAKvB2P,gBAAkB,SAAAvP,GAChBqB,IAAM0C,IAAI,cAAe,CAAEoB,OAAQ,CAACnF,WACjCgE,KAAK,SAAAC,GAAO,IACClE,EAAgBkE,EAAIzB,KAA1BA,KACNsW,EAAKqC,SAAS,CAACpb,gBACQ,IAAvBA,EAAYqE,QAAgBtB,IAAQkJ,QAAQ,uFAIlDmb,mBAAqB,WACnBrO,EAAKqC,SAAS,CAAC0L,uBAAuB,OAGxCO,oBAAsB,WACpBtO,EAAKqC,SAAS,CAAC0L,uBAAuB,EAAO7mB,MAAO,QAGtDqnB,iBAAmB,WAAM,IAAApL,EACwBnD,EAAKhM,MAArChG,EADQmV,EACfjc,MAAa8mB,EADE7K,EACF6K,SAAUC,EADR9K,EACQ8K,YAC3BD,EAGFhO,EAAKwO,YAAYxgB,EAAMggB,EAAUC,GAFjCjO,EAAKyO,SAASzgB,MAMlBygB,SAAW,SAAAzgB,GACTrB,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACDe,EACDzF,IAAMgG,KAAK,cAAe,CAACP,SACxB9C,KAAK,SAAAC,GACJ,GAAqB,IAAlBA,EAAIzB,KAAK0B,MAAiC,IAAnBD,EAAIzB,KAAK8E,MAAa,KAAAyI,EACxB9L,EAAIzB,KAAlBA,EADsCuN,EACtCvN,KAAMoE,EADgCmJ,EAChCnJ,IACdkS,EAAKqC,SAAS,SAAArO,GACZ,IAAIlN,EAAc8G,OAAAwG,EAAA,EAAAxG,CAAOoG,EAAMlN,gBAE/B,OADAA,EAAe0N,KAAK9K,GACb,CAAC5C,oBAEVkD,IAAQsC,QAAQwB,GAChBkS,EAAKsO,2BACsB,IAAlBnjB,EAAIzB,KAAK0B,MAAiC,IAAnBD,EAAIzB,KAAK8E,MACzCxE,IAAQkJ,QAAQ,kFAEhBlJ,IAAQyJ,MAAMtI,EAAIzB,KAAKoE,OAI7B9D,IAAQyJ,MAAM,0DAMtB+a,YAAc,SAACxgB,EAAMrG,EAAI+E,GACvBC,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACDe,EACDzF,IAAMoF,IAAI,cAAe,CAACK,OAAMrG,OAC7BuD,KAAK,SAAAC,GACJ,GAAqB,IAAlBA,EAAIzB,KAAK0B,KAAY,KAAA4Q,EACA7Q,EAAIzB,KAAlBA,EADcsS,EACdtS,KAAMoE,EADQkO,EACRlO,IACdkS,EAAKqC,SAAS,SAAArO,GACZ,IAAIlN,EAAiBkN,EAAMlN,eAE3B,OADA8G,OAAOiH,OAAO/N,EAAe4F,GAAQhD,GAC9B,CAAC5C,oBAEVkD,IAAQsC,QAAQwB,GAChBkS,EAAKsO,2BAELtkB,IAAQyJ,MAAMtI,EAAIzB,KAAKoE,OAI7B9D,IAAQyJ,MAAM,0DAMtBib,YAAc,SAAC/mB,EAAI+E,GACjBC,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,IAAMqG,OAAO,eAAiBjH,GAC3BuD,KAAK,SAAAC,GAAO,IAAA+Q,EACU/Q,EAAIzB,KAAlB0B,EADI8Q,EACJ9Q,KAAO0C,EADHoO,EACGpO,IACF,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChBkS,EAAKvJ,kBACLuJ,EAAKqC,SAAS,SAAArO,GACZ,IAAIlN,EAAiBkN,EAAMlN,eAE3B,OADAA,EAAeyN,OAAO7H,EAAO,GACtB,CAAC5F,qBAGVkD,IAAQyJ,MAAM3F,WAO1B6gB,iBAAmB,SAAAjN,GACjB,IAAIxa,EAAQwa,EAAEE,OAAOpV,MACrBwT,EAAKqC,SAAS,CAACnb,aAGjB0nB,mBAAqB,SAAAxiB,GAChBA,EACD7D,IAAM0C,IAAI,iBAAkB,CAACoB,OAAQ,CAACD,eACnClB,KAAK,SAAAC,GAAO,IAAA2R,EAC4B3R,EAAIzB,KAA9BzC,EADF6V,EACJpT,KAAmB0B,EADf0R,EACe1R,KAAM0C,EADrBgP,EACqBhP,IACpB,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChBkS,EAAKqC,SAAS,CAACpb,iBAEf+C,IAAQyJ,MAAM,wHAIpBzJ,IAAQyJ,MAAM,uDAKlBlG,kBAAoB,WAClByS,EAAKqC,SAAS,CACZ5a,cAAc,EACdomB,WAAY,GACZC,eAAgB,EAChBI,YAAa,QAIjBW,mBAAqB,WAAM,IAAAC,EAC2D9O,EAAKhM,MAArErM,EADKmnB,EACjBjB,WAAgBC,EADCgB,EACDhB,cAA4B5mB,EAD3B4nB,EACcZ,YAAqCa,EADnDD,EACkCX,gBACxDxmB,EACDqY,EAAKgP,UAAUrnB,EAAImmB,EAAe5mB,GAElC8Y,EAAKiP,WAAWF,EAAK7nB,MAIzBgoB,oBAAsB,WAEU,IADJlP,EAAKhM,MAAxBma,gBACY7iB,OACjBtB,IAAQkJ,QAAQ,wCAEhB8M,EAAKqC,SAAS,CACZ5a,cAAc,OAKpBunB,UAAY,SAACrnB,EAAImmB,EAAe5mB,GAC9ByF,IAAMC,QAAQ,CACZI,MAAO,mDACPC,KAAM,WACJ1E,IAAMoF,IAAI,QAAS,CAAChG,KAAIT,UACrBgE,KAAK,SAAAC,GAAO,IAAAgkB,EACUhkB,EAAIzB,KAAjB0B,EADG+jB,EACH/jB,KAAM0C,EADHqhB,EACGrhB,IACF,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChBkS,EAAKqC,SAAS,SAAArO,GACZ,IAAI/M,EAAW2G,OAAAwG,EAAA,EAAAxG,CAAOoG,EAAM/M,aAE5B,OADAA,EAAYsN,OAAOuZ,EAAe,GAC3B,CAAC7mB,iBAEV+Y,EAAKzS,qBAELvD,IAAQyJ,MAAM3F,WAO1BmhB,WAAa,SAACF,EAAK7nB,GACjByF,IAAMC,QAAQ,CACZI,MAAO,oDACPC,KAAM,WACJ1E,IAAMoF,IAAI,qBAAsB,CAACohB,MAAK7nB,UACnCgE,KAAK,SAAAC,GAAO,IAAAikB,EACWjkB,EAAIzB,KAAlB0B,EADGgkB,EACHhkB,KAAM0C,EADHshB,EACGthB,IACF,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChBkS,EAAKvJ,kBACLuJ,EAAKzS,oBACLyS,EAAKqC,SAAS,CAAC8L,gBAAiB,MAEhCnkB,IAAQyJ,MAAM3F,WAO1BuhB,kBAAoB,SAAA3N,GAClB,IAAIwM,EAAcxM,EAAEE,OAAOpV,MAC3BwT,EAAKqC,SAAS,CAAC6L,oGAxNfhO,KAAKkO,oBACLlO,KAAKzJ,mDA0NE,IAAAmK,EAAAV,KAAAoP,EAC0FpP,KAAKlM,MAA9FlN,EADDwoB,EACCxoB,eAAgBW,EADjB6nB,EACiB7nB,aAAcsmB,EAD/BuB,EAC+BvB,sBAAuB9mB,EADtDqoB,EACsDroB,YAAaC,EADnEooB,EACmEpoB,MAAOgnB,EAD1EoB,EAC0EpB,YAQ3EqB,EAAe,CACnBpB,gBAAiBjO,KAAKlM,MAAMma,gBAC5B1M,SAAU,SAAA0M,GACRvN,EAAKyB,SAAS,CAAC8L,sBAGnB,OACC/M,EAAAzV,EAAA0V,cAAA,WACGD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAACyI,GAAA,EAAD,KACE1I,EAAAzV,EAAA0V,cAACmO,GAAD,CAAOrJ,MAAM,SACX/E,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CACEmD,OAAQrO,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,oBAAoBc,QAAS,kBAAMxB,EAAKnK,gBAAgB,wBAAvE,sBACRiZ,UAAQ,EACR/C,WAAY7lB,EACZya,MAAO,CAACQ,YAAa,IACrB6K,WAAY,SAACla,EAAMhG,GAAP,OACV0U,EAAAzV,EAAA0V,cAACiL,GAAA,EAAK/H,KAAN,CAAWjD,UAAU,cACnBF,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAACoO,QAAS,OAAQC,cAAe,MAAOC,eAAgB,gBAAiBxG,MAAO,OAAQyG,WAAY,IAC9G1O,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,SAASc,QAAS,kBAAMxB,EAAKnK,gBAAgB/D,EAAK1E,QAAQ0E,EAAK1E,MAC5EoT,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMR,UAAU,SAASC,MAAO,CAACQ,YAAa,IAAK/Z,KAAK,OAAOoa,QAAS,kBAAMxB,EAAKyB,SAAS,CAAC0L,uBAAuB,EAAMC,SAAUtb,EAAK1J,IAAKilB,YAAavhB,OAC3J0U,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMR,UAAU,SAAStZ,KAAK,eAAeoa,QAAS,kBAAMxB,EAAK8N,YAAYhc,EAAK1J,IAAK0D,YAMjG0U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,uBAAuBC,MAnC1B,CACpB8H,MAAO,MACP0G,OAAQ,cACRC,QAAS,SACTC,aAAc,EACdC,OAAQ,mBA8B4D9N,QAASlC,KAAKmO,oBAA1E,+BAEFjN,EAAAzV,EAAA0V,cAAC8O,GAAD,KACE/O,EAAAzV,EAAA0V,cAAC6I,GAAA,EAAD,CAAM3I,MAAO,CAACyO,QAAS,KACrB5O,EAAAzV,EAAA0V,cAAC+O,GAAD,CAAQnO,YAAY,mDAAWV,MAAO,CAAC8H,MAAO,IAAKrH,aAAc,GAAIkL,WAAY,IAAKf,SAAUjM,KAAK0O,qBACrGxN,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQxjB,KAAK,UAAUuZ,MAAO,CAACoO,QAAS,QAAS3N,aAAc,IAAKI,QAASlC,KAAKgP,qBAAlF,4BACA9N,EAAAzV,EAAA0V,cAACgP,GAAA,EAAD,CAAOd,aAAcA,EAAcG,UAAQ,EAAClO,KAAK,QAAQ8O,OAAQ,SAAAhe,GAAM,OAAIA,EAAOtJ,KAAKykB,QAASvN,KAAKuN,QAASd,WAAY1lB,QAKlIma,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOC,QAASxc,EAAcyc,SAAUhE,KAAK3S,kBAAmBN,KAAMiT,KAAK2O,oBACzEzN,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAO0hB,EAAazM,SAAUvB,KAAKmP,mBAC9CjO,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAM,sBAAb,sBACC1F,EAAegY,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO/kB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAK1E,MAAO0E,EAAK1E,UAG9EoT,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOC,QAAS8J,EAAuB/gB,MAAM,uCAASkX,SAAUhE,KAAKoO,oBAAqBrhB,KAAMiT,KAAKqO,kBAArG,iCACOnN,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAUvB,KAAKyO,iBAAkBniB,MAAOtF,EAAOqa,MAAO,CAAC8H,MAAO,KAAMpH,YAAY,wDAvT3EU,aCArBoC,oLACK,IAAA2F,EAC0BxK,KAAK5R,MAA9BwB,EADD4a,EACC5a,SAAUe,EADX6Z,EACW7Z,WACZ0f,EAAc,CAClB,CACEvjB,MAAO,2BACP3E,IAAK,aACLqlB,UAAW,aACXC,MAAO,SACPC,OAAQ,SAAC1lB,EAAMoK,GAAP,OAAkBA,EAAOpC,WAAa,iCAAU,6BAE1D,CACElD,MAAO,2BACP3E,IAAK,MACLqlB,UAAW,MACXC,MAAO,SACPC,OAAQ,SAAC1lB,EAAMoK,GAAP,OAAmBA,EAAOpC,WAA6B,MAAfoC,EAAOrK,IAAc,eACjD,MAAfqK,EAAOrK,IAAc,SAAM,SAAQ,iBAE1C,CACEI,IAAK,QACLqlB,UAAW,QACX1gB,MAAO,eACP2gB,MAAO,UAET,CACE3gB,MAAO,SACP3E,IAAK,SACLslB,MAAO,SACPC,OAAQ,SAAC1lB,EAAMoK,EAAQ5F,GAAf,OACN0U,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQhK,KAAK,QAAQxZ,KAAK,UAAUuZ,MAAO,CAACQ,YAAa,SACvDX,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAI,CAACsC,SAAU,6BAA8B9T,MAAOQ,IAA1D,iBAEF8O,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQhK,KAAK,QAAQxZ,KAAK,SAASoa,QAAS,kBAAMvR,EAAWyB,EAAOtJ,IAAK0D,KAAzE,oBAMR,OACC0U,EAAAzV,EAAA0V,cAAA,WACCD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACXF,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQxjB,KAAK,UAAUuZ,MAAO,CAACS,aAAc,SAC3CZ,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAG,8BAAT,yCAEFlC,EAAAzV,EAAA0V,cAACgP,GAAA,EAAD,CAAO7O,KAAK,QAAQ8O,OAAQ,SAAAhe,GAAM,OAAIA,EAAOtJ,KAAKykB,QAAS8C,EAAY5D,WAAY7c,EAAUkc,WAAY,CAACvK,SAAU,kBAAMtX,sDAMhI+V,KAAK5R,MAAMqC,qBApDIgS,aAqEJ2K,eAbE,SAAAtZ,GAAK,MAAK,CACzBlE,SAAUkE,EAAMqL,QAAQ5K,KAAK3E,WAGX,SAAA9E,GAAQ,MAAK,CAC/B2F,YAD+B,WAE7B3F,EAASuiB,EAAe5c,gBAE1BE,WAJ+B,SAIpBlJ,EAAI+E,GACb1B,EAASuiB,EAAe1c,WAAWlJ,EAAI+E,OAI5B4gB,CAA+BvI,qDCzC/ByL,WAhCQ,SAAAliB,GAAS,IACvB4G,EAAkC5G,EAAlC4G,YAAazC,EAAqBnE,EAArBmE,kBACpB,OACE2O,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gCACbF,EAAAzV,EAAA0V,cAAC6I,GAAA,EAAD,CAAM5I,UAAU,oBAAoBtU,MAClCkI,EAAY5J,OAAS,EACrB8V,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CAAMhL,UAAU,gBACZF,EAAAzV,EAAA0V,cAACiL,GAAA,EAAK/H,KAAN,CAAWjD,UAAU,SAASc,QAAS,kBAAM3P,EAAkByC,EAAY,GAAI,KAC7EkM,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACbF,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,eAAepM,EAAY,GAAGlI,OAC3CoU,EAAAzV,EAAA0V,cAAA,OAAKkC,IAAKrO,EAAY,GAAGP,OAAQ6O,IAAI,OAG1CtO,EAAYZ,MAAM,GAAGwK,IAAI,SAAC9U,EAAS0C,GAAV,OACxB0U,EAAAzV,EAAA0V,cAACiL,GAAA,EAAK/H,KAAN,CAAWjD,UAAU,oBAAoBc,QAAS,kBAAM3P,EAAkBzI,EAAS0C,EAAQ,IAAIrE,IAAKqE,GAClG0U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACbF,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,eAAetX,EAAQgD,OACpCoU,EAAAzV,EAAA0V,cAAA,OAAKkC,IAAKvZ,EAAQ2K,OAAQ6O,IAAI,UAG5BpC,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,SAASc,QAAS,kBAAM3P,EAAkByC,EAAY,GAAI,KACjFkM,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,cACbF,EAAAzV,EAAA0V,cAAA,OAAKkC,IAAKrO,EAAY,GAAGP,OAAQ6O,IAAI,KACrCpC,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,sBAAsBpM,EAAY,GAAGlI,OACnDoU,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,eAAepM,EAAY,GAAGN,oBC8BxC6b,oLArDJ,IAEHC,EAMEC,EARCjG,EACoIxK,KAAK5R,MAAzIsB,EADA8a,EACA9a,YAAa2C,EADbmY,EACanY,kBAAmBqe,EADhClG,EACgCkG,UAAWje,EAD3C+X,EAC2C/X,qBAAsBC,EADjE8X,EACiE9X,qBAAsBJ,EADvFkY,EACuFlY,UAAW/B,EADlGia,EACkGja,YAAagC,EAD/GiY,EAC+GjY,kBAExF,IAA1B7C,EAAYzH,UACduoB,EAAiBtP,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWjD,UAAU,WAAWkD,MAAM,4BACrDpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM6R,SAAP,CAAgBpP,SAAU,SAAAC,GAAC,OAAInP,EAAkB,UAAWmP,EAAEE,OAAOpV,QAAQA,MAAOoD,EAAY7C,QAAS+jB,SAAU,CAACC,QAAS,EAAGC,QAAS,GAAI/O,YAAY,6DAKzJ0O,EADE/gB,EAAY+E,OACFyM,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAAC8H,MAAO,SAAU9F,IAAK3T,EAAY+E,OAAQ6O,IAAI,oCAE3DpC,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,KAAQpK,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,WAAnB,8BAEd0oB,EAAiBtP,EAAAzV,EAAA0V,cAAC4P,EAAA,SAAD,KACf7P,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU,SAAAC,GAAC,OAAInP,EAAkB,QAASmP,EAAEE,OAAOpV,QAAQA,MAAOoD,EAAY5C,MAAOiV,YAAY,gDAE1Gb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU,SAAAC,GAAC,OAAInP,EAAkB,MAAOmP,EAAEE,OAAOpV,QAAQA,MAAOoD,EAAYtG,IAAK2Y,YAAY,uGAEtGb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM6R,SAAP,CAAgBpP,SAAU,SAAAC,GAAC,OAAInP,EAAkB,cAAemP,EAAEE,OAAOpV,QAAQA,MAAOoD,EAAYgF,YAAakc,SAAU,CAACC,QAAS,EAAGC,QAAS,GAAI/O,YAAY,gDAEnKb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAC6P,GAAA,EAAD,CAAQljB,KAAK,YAAYvC,OAAO,gBAAgB0lB,gBAAgB,EAAO1P,SAAUmP,GAC9ED,IAGLvP,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,IAAI4M,OAAO,GACzB3gB,GAAe,EAAI2Q,EAAAzV,EAAA0V,cAAA,WAClBD,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQpJ,QAASzP,EAAsB3K,KAAK,UAAUuZ,MAAO,CAACQ,YAAa,KAA3E,gBACAX,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQpJ,QAASxP,GAAjB,yCACOwO,EAAAzV,EAAA0V,cAAA,WAAKD,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQpJ,QAAS5P,GAAjB,8CAA4C4O,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,QAAb,sUAE5DF,EAAAzV,EAAA0V,cAACgQ,GAAA,EAAD,CAASC,QAAM,IACflQ,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAAC8H,MAAO,MAAO0G,OAAQ,SAAUngB,EAAYC,SAASvE,OAAS,GAAK8V,EAAAzV,EAAA0V,cAACkQ,GAAD,CAAgBrc,YAAatF,EAAYC,SAAU4C,kBAAmBA,OAG1J,OACC2O,EAAAzV,EAAA0V,cAAA,WACGD,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWD,WAAY,CAACkN,OAAQ,IAC9BpQ,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAOoD,EAAYzH,UAAWsZ,SAAU,SAAAC,GAAC,OAAInP,EAAkB,YAAamP,EAAEE,OAAOpV,SAChG4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMf,OAAP,CAAc7f,MAAO,GAArB,4BACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMf,OAAP,CAAc7f,MAAO,GAArB,8BAGHkkB,UAhDsB/N,aCEzB8O,+LAGE,IAAI3f,EAAQoO,KAAK5R,MAAMQ,QAAQ+C,SAASC,MACxCA,GAASoO,KAAK5R,MAAM+D,aAAaP,oCAG5B,IAwBD4f,EAAUC,EAoBVC,EAAcC,EAmEdC,EAEIC,EAjHH/R,EAAAE,KAAAwK,EACobxK,KAAK5R,MAAvb2B,EADFya,EACEza,SAAUF,EADZ2a,EACY3a,SAAUJ,EADtB+a,EACsB/a,WAAYW,EADlCoa,EACkCpa,UAAWU,EAD7C0Z,EAC6C1Z,kBAAmBE,EADhEwZ,EACgExZ,qBAAsBE,EADtFsZ,EACsFtZ,aAAcC,EADpGqZ,EACoGrZ,SAAUM,EAD9G+Y,EAC8G/Y,WAAYL,EAD1HoZ,EAC0HpZ,cAAeC,EADzImZ,EACyInZ,YAAaC,EADtJkZ,EACsJlZ,cAAeC,EADrKiZ,EACqKjZ,cAAeS,EADpLwY,EACoLxY,SAAUE,EAD9LsY,EAC8LtY,WAAYD,EAD1MuY,EAC0MvY,cAAe3B,EADzNka,EACyNla,SAAUwB,EADnO0Y,EACmO1Y,WAAYlB,EAD/O4Z,EAC+O5Z,iBAAkBC,EADjQ2Z,EACiQ3Z,uBAAwBW,EADzRgZ,EACyRhZ,UAAWK,EADpS2Y,EACoS3Y,WAAYnC,EADhT8a,EACgT9a,YAAa2C,EAD7TmY,EAC6TnY,kBAAmBqe,EADhVlG,EACgVkG,UAAWpe,EAD3VkY,EAC2VlY,UAAWC,EADtWiY,EACsWjY,kBAAmBE,EADzX+X,EACyX/X,qBAAsBC,EAD/Y8X,EAC+Y9X,qBAAsBnC,EADraia,EACqaja,YACpauhB,EAAiB,CACnB5N,SAAU,CACNqI,GAAI,CAACpI,KAAM,IAEfC,WAAY,CACRmI,GAAI,CAACpI,KAAM,GAAImN,OAAQ,IAE3BJ,OAAO,GAELthB,EAAWG,EAAQ,OAAW6O,IAAI,SAACpM,EAAMhG,GAAP,OACpC0U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,OAAOC,MAAO,CAAC8H,MAAqC,IAA9BpZ,EAAQ,OAAW3E,OAAe,OAAQ2E,EAAQ,OAAW3E,OAAe,WAAsBjD,IAAKqE,EAAO0V,QAAS,kBAAM/Q,EAASqB,EAAMhG,KAC7K0U,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,oBAAoB5O,EAAK1E,MAAQ,4BACjDoT,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,gBAAgBC,MAAO,CAAC0Q,IAAMvf,EAAK/C,YAAc+C,EAAK/C,WAAWrE,OAAsC,IAA3BoH,EAAK/C,WAAWrE,QAAgB,IAA2C,IAAzBoH,EAAK/C,WAAWrE,OAAc,IAAO,GAAIqkB,QAASrf,IAAc5D,EAAQ,QAAU,SACzNgG,EAAK/C,YAAc+C,EAAK/C,WAAWmP,IAAI,SAAC/L,EAAGmf,GAAJ,OACpC9Q,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAejZ,IAAK6pB,EAAK9P,QAAS,SAAAV,GAAC,OAAGnQ,EAAYmQ,EAAG3O,EAAGmf,KAAOnf,EAAE/E,MAAQ,oCAE3FoT,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,MAAMC,MAAO,CAACoO,QAASjd,EAAK/C,YAAc+C,EAAK/C,WAAWrE,OAAS,EAAI,QAAU,QAAS8W,QAAS9Q,GAAjH,KACA8P,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,wBACfF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,4BAKH,SAApB3R,EAAW3H,KACX2pB,EAAcvQ,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBAC3BpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOmD,EAAWrG,IAAK2Y,YAAY,gHAAgCR,SAAU,SAACC,GAAD,OAAOxQ,EAAqBwQ,EAAG,WAE5F,UAApB/R,EAAW3H,OAClB2pB,EAAcvQ,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,mBACxB1R,GAAewR,EAAAzV,EAAA0V,cAAC8Q,GAAD,CAAkBviB,YAAaA,EAAa2C,kBAAmBA,EAAmBqe,UAAWA,EAAWpe,UAAWA,EAAWC,kBAAmBA,EAAmBE,qBAAsBA,EAAsBC,qBAAsBA,EAAsBnC,YAAaA,MAG3Q,SAAlBV,EAAS/H,KACT0pB,EAAWtQ,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBACxBpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOuD,EAASzG,IAAK2Y,YAAY,gHAAgCR,SAAU,SAACC,GAAD,OAAO1Q,EAAkB0Q,EAAG,WAEzF,UAAlB3R,EAAS/H,OAChB0pB,EACItQ,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,mBACXF,EAAAzV,EAAA0V,cAAC8Q,GAAD,CAAkBviB,YAAaA,EAAa2C,kBAAmBA,EAAmBqe,UAAWA,EAAWpe,UAAWA,EAAWC,kBAAmBA,EAAmBE,qBAAsBA,EAAsBC,qBAAsBA,EAAsBnC,YAAaA,MAItP,IAA3BR,EAASE,OAAO7E,SAEZsmB,EADA7hB,EAASJ,YAA6C,IAA/BI,EAASJ,WAAWrE,OAEvC8V,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,eACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,cACXF,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,MAAd,4BACAF,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQlK,UAAU,KAAKtZ,KAAK,OAAOoa,QAAS5Q,GAA5C,6BAEJ4P,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAS6N,EACN5Q,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOuD,EAAS/B,KAAMiU,YAAY,uCAASmQ,UAAW,EAAGC,YAAU,EACnE5Q,SAAU,SAACC,GAAD,OAAO1Q,EAAkB0Q,EAAG,WAC7CN,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,kBAAhB,4LAGRF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,cACXF,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,MAAd,kCACAF,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQlK,UAAU,KAAKtZ,KAAK,OAAOoa,QAAS3Q,GAA5C,mCAEJ2P,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAS6N,EACN5Q,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,kCACbpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOmD,EAAW3B,KAAMiU,YAAY,8IAA2BmQ,UAAW,GAC1E3Q,SAAU,SAACC,GAAD,OAAOxQ,EAAqBwQ,EAAG,YAEpDN,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,kCACbpD,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAOmD,EAAW3H,KAAMyZ,SAAU,SAACC,GAAD,OAAOxQ,EAAqBwQ,EAAG,UAC1EN,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAM,QAAb,4BACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAM,SAAb,8BAGPmlB,MAOjBvQ,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,eACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,cACXF,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,MAAd,4BACAF,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQlK,UAAU,KAAKtZ,KAAK,OAAOoa,QAAS5Q,GAA5C,6BAEJ4P,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAS6N,EACN5Q,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOuD,EAAS/B,KAAMokB,UAAW,EAAGC,YAAU,EAACpQ,YAAY,uCAASR,SAAU,SAACC,GAAD,OAAO1Q,EAAkB0Q,EAAG,WACjHN,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,kBAAhB,2LAEJF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAOuD,EAAS/H,KAAMyZ,SAAU,SAACC,GAAD,OAAO1Q,EAAkB0Q,EAAG,UACrEN,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAM,QAAb,4BACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAM,SAAb,8BAGPklB,KAKrBG,EAAezQ,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,qBAC1BF,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQxjB,KAAK,UAAUoa,QAAS,WAAO1Q,IAAYsO,EAAK1R,MAAM2D,gBAA9D,kBAKJzB,KAEIP,EAASC,aACT6hB,EAAgB3Q,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBAC7BpD,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAOyD,EAAShI,IAAKwZ,SAAU,SAAAC,GAAC,OAAI5Q,EAAiB4Q,EAAG,SACjEN,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAM,KAAb,gBACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAM,KAAb,UACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAM,KAAb,aAIZslB,EAAY1Q,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,sBACvBF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,cACXF,EAAAzV,EAAA0V,cAACiR,GAAA,EAAD,CACI3F,WAAYza,EACZqgB,YAAU,EACVngB,WAAYA,EACZqP,SAAUtP,EACVyb,OAAQ,SAAAlb,GAAI,OAAIA,EAAKtG,WACrBkkB,OAAQ,SAAAhe,GAAM,OAAIA,EAAOlH,MACzBkW,UAAU,qBAEdF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAD,CAAM7C,UAAU,KAAK8P,OAAO,EAAOhN,SAAU,CAACqI,GAAI,CAACpI,KAAM,KAAMC,WAAY,CAACmI,GAAI,CAACpI,KAAM,GAAImN,OAAQ,IAC7FgB,WAAW,QACbpR,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBACbpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOyD,EAASjD,MAAOiV,YAAY,iCAAQR,SAAU,SAACC,GAAD,OAAO5Q,EAAiB4Q,EAAG,aAE3FN,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,kCACbpD,EAAAzV,EAAA0V,cAACoR,GAAA,EAAD,CAAQhR,SAAU1Q,EAAwB2hB,QAASziB,EAASC,cAE/D6hB,EACD3Q,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,KACbpD,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQjK,MAAO,CAACQ,YAAa,QAAS/Z,KAAK,UAAUoa,QAAS,kBAAMzQ,EAAWqO,EAAK1R,SAApF,gBACA8S,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQpJ,QAASpQ,GAAjB,qBAMpB,OACIoP,EAAAzV,EAAA0V,cAAA,WACID,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,uBACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACXF,EAAAzV,EAAA0V,cAAA,sCACAD,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQlK,UAAU,KAAKc,QAAS,kBAAMrQ,EAAWiO,EAAK1R,SAAtD,mCAEJ8S,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACVxR,EACDsR,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,WACVC,MAA2B,IAApBzR,EAASxE,OAAe,CAAC+d,MAAO,OAA8B,IAApBvZ,EAASxE,OAAe,CAAC+d,MAAO,OAA8B,IAApBvZ,EAASxE,OAAe,CAACqkB,QAAS,QAAU,CAACtG,MAAO,QAC/IjH,QAAShR,GACVgQ,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,oBAAhB,mCAMnBsQ,EACAC,GAEJC,kDAKT5R,KAAK5R,MAAMqkB,eACXzS,KAAK5R,MAAMskB,0BA5LQjQ,aAiSZ2K,eAhGE,SAAAtZ,GAAK,MAAK,CACvB/D,SAAU+D,EAAMqL,QAAQ5K,KAAKxE,SAC7BF,SAAUiE,EAAMqL,QAAQ5K,KAAK1E,SAC7BJ,WAAYqE,EAAMqL,QAAQ5K,KAAK9E,WAC/BW,UAAW0D,EAAMqL,QAAQ5K,KAAKnE,UAC9B4B,SAAU8B,EAAMqL,QAAQ5K,KAAKvC,SAC7B1B,SAAUwD,EAAMqL,QAAQ5K,KAAKjE,SAC7B4B,WAAY4B,EAAMqL,QAAQ5K,KAAKrC,WAC/BxC,YAAaoE,EAAMqL,QAAQ5K,KAAK7E,YAChCa,YAAauD,EAAMqL,QAAQ5K,KAAKhE,cAGhB,SAAAzF,GAAQ,MAAK,CAC7BqH,aAD6B,SAChBC,GACTtH,EAASuiB,GAA4Bjb,KAEzCxB,iBAJ6B,SAIZ4Q,EAAG1T,GAChBhD,EAASuiB,GAAgC7L,EAAEE,OAAOpV,MAAOwB,KAE7D+C,uBAP6B,SAONvE,GACnBxB,EAASuiB,GAAsC/gB,KAEnDwE,kBAV6B,SAUX0Q,EAAG1T,GACjBhD,EAASuiB,GAAiCvf,EAAM0T,EAAEE,OAAOpV,SAE7D0E,qBAb6B,SAaRwQ,EAAG1T,GACpBhD,EAASuiB,GAAoCvf,EAAM0T,EAAEE,OAAOpV,SAEhE4E,aAhB6B,WAiBzBpG,EAASuiB,OAEblc,SAnB6B,SAmBpBqB,EAAMhG,GACX1B,EAASuiB,GAAwB7a,EAAMhG,KAE3C4E,cAtB6B,SAsBfoQ,GACVA,EAAEmR,kBACF7nB,EAASuiB,OAEb5b,WA1B6B,SA0BlBrD,GACPtD,EAASuiB,GAA0Bjf,KAEvCoD,UA7B6B,WA8BzB1G,EAASuiB,OAEbhc,YAhC6B,SAgCjBmQ,EAAGhY,EAAMwoB,GACjBxQ,EAAEmR,kBACF7nB,EAASuiB,GAA2B7jB,EAAMwoB,KAE9C1gB,cApC6B,WAqCzBxG,EAASuiB,OAEb9b,cAvC6B,WAwCzBzG,EAASuiB,OAEbpb,cA1C6B,SA0CfC,GACVpH,EAASuiB,GAA6Bnb,KAE1CH,YA7C6B,WA8CzBjH,EAASuiB,OAEbvb,WAhD6B,WAiDzBhH,EAASuiB,OAEbxb,WAnD6B,SAmDlBzD,GACPA,EAAMQ,QAAQC,SACd/D,EAASuiB,OAEboF,aAvD6B,WAwDzB3nB,EAASuiB,OAEbqD,UA1D6B,SA0DnBnZ,GACN,GAAyB,SAArBA,EAAKqb,KAAK3rB,OAAmB,CAC7B,IAAIwN,EAAM,8BAAA1K,OAAiCwN,EAAKqb,KAAK/oB,SAASgpB,UAC9D/nB,EAASuiB,GAAiC,SAAU5Y,MAG5DpC,kBAhE6B,SAgEXlK,EAAKmE,GACnBxB,EAASuiB,GAAiCllB,EAAKmE,KAEnDgG,UAnE6B,WAoEzBxH,EAASuiB,OAEb9a,kBAtE6B,SAsEXC,EAAMhG,GACpB1B,EAASuiB,GAAiC7a,EAAMhG,KAEpDiG,qBAzE6B,WA0EzB3H,EAASuiB,OAEb3a,qBA5E6B,WA6EzB5H,EAASuiB,OAEbqF,iBA/E6B,WAgFzB5nB,EAASuiB,SAIFD,CAA+B1I,KAAKC,OAAO,CAAC7W,KAAM,gBAAnB4W,CAAoC6M,KChS5EuB,4LAEK,IAAAtI,EACkDxK,KAAK5R,MAAvD6E,EADAuX,EACAvX,iBAAkBjB,EADlBwY,EACkBxY,SAAUqB,EAD5BmX,EAC4BnX,mBAC7B0f,EAAe,CACnB,CACE5qB,IAAK,YACL2E,MAAO,2BACP0gB,UAAW,YACXC,MAAO,SACPC,OAAQ,SAAA1lB,GAAI,OAAa,IAATA,EAAa,2BAAS,6BACrC,CACDG,IAAK,OACL2E,MAAO,2BACP0gB,UAAW,OACXC,MAAO,SACPC,OAAQ,SAAA1lB,GAAI,OAAa,IAATA,EAAa,2BAAmB,IAATA,EAAa,2BAAmB,IAATA,EAAa,2BAAS,OACnF,CACDG,IAAK,OACLqlB,UAAW,OACX1gB,MAAO,2BACP2gB,MAAO,UACP,CACAtlB,IAAK,MACL2E,MAAO,eACP0gB,UAAW,MACXC,MAAO,SACPC,OAAQ,SAAC1lB,EAAMoK,EAAQ5F,GACrB,OACE0U,EAAAzV,EAAA0V,cAAA,YACkB,IAAf/O,EAAOrK,IAAY,SAAsB,IAAfqK,EAAOrK,IAC9B,SAAsB,IAAfqK,EAAOrK,IAAY,eAAO,kBAI1C,CACDI,IAAK,OACL2E,MAAO,uCACP0gB,UAAW,OACXC,MAAO,SACPC,OAAQ,SAAA1lB,GAAI,OAAIA,GAAc,iBAC7B,CACDG,IAAK,QACL2E,MAAO,2BACP0gB,UAAW,QACXC,MAAO,SACPC,OAAQ,SAAA1lB,GAAI,OAAIA,EAAKoD,OAAS,EAAIpD,EAAKoM,MAAM,EAAG,GAAGwK,IAAI,SAAApM,GACrD,IAAI/G,EAAIuG,EAASmC,OAAO,SAAAtB,GAAC,OAAIA,EAAE3H,OAASsH,IAAM,GAC9C,OAAO/G,GAAKA,EAAES,YACX,WACJ,CACD/D,IAAK,SACL2E,MAAO,SACP2gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC1lB,EAAMoK,EAAQ5F,GACrB,OACE0U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,eACbF,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQhK,KAAK,QAAQxZ,KAAK,WACxBoZ,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAI,CAACsC,SAAU,WAAY5R,MAAO,CAAC1B,SAAQ5F,WAAjD,iBAEF0U,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQhK,KAAK,QAAQD,MAAO,CAACkJ,WAAY,MAAOnB,WAAY,OACpDlH,QAAS,kBAAM7O,EAAmBjB,EAAOtJ,IAAK0D,KADtD,oBAOV,OACE0U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,eACbF,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQxjB,KAAK,UAAUsZ,UAAU,YAC/BF,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAG,YAAT,yCAEFlC,EAAAzV,EAAA0V,cAACgP,GAAA,EAAD,CAAO/O,UAAU,eAAeE,KAAK,QAAQ8O,OAAS,SAAAhe,GAAM,OAAIA,EAAOtJ,KAAMykB,QAASwF,EAActG,WAAYxZ,EAAkBuc,UAAQ,EAAC1D,YAAY,kDAO7J9L,KAAK5R,MAAMgF,sBACX4M,KAAK5R,MAAM2D,qBAlFM0Q,cAuGN2K,eAjBE,SAAAtZ,GAAK,MAAK,CACzB9B,SAAU8B,EAAMqL,QAAQrK,MAAM9C,SAC9BiB,iBAAkBa,EAAMqL,QAAQrK,MAAM7B,mBAGpB,SAAAnI,GAAQ,MAAK,CAC/BiH,YAD+B,WAE7BjH,EAASuiB,EAAetb,gBAE1BqB,oBAJ+B,WAK7BtI,EAASuiB,EAAeja,wBAE1BC,mBAP+B,SAOZ5L,EAAI+E,GACrB1B,EAASuiB,EAAeha,mBAAmB5L,EAAI+E,OAIpC4gB,CAA+B0F,uBCzGvCtJ,kBAAkBD,KAAlBC,OAAOF,GAAWC,KAAXD,QACPmC,GAAUC,KAAVD,OAqHQuH,8MAjHXlf,MAAQ,CACJlN,eAAgB,GAChBG,YAAa,GACbmF,UAAW,GACXlF,MAAO,eACPkJ,MAAO,GACP+iB,eAAgB,MAOpBC,OAAS,SAAAhnB,GACL,GAAkB,KAAdA,EACA7D,IAAM0C,IAAI,iBAAkB,CAACoB,OAAQ,CAACD,eACjClB,KAAK,SAAAC,GACF,GAA6B,IAAzBA,EAAIzB,KAAKA,KAAK4B,OAAc,KACfrE,EAAekE,EAAIzB,KAAzBA,KACPsW,EAAKqC,SAAS,CAACpb,qBAEf+C,IAAQyN,KAAK,8IAGtB,KACkBxQ,EAAe+Y,EAAKhM,MAApCmf,eACLnT,EAAKqC,SAAS,CAACpb,oBAIvBiF,kBAAoB,SAAAwV,GAChB,IAAItV,EAAYsV,EAAEE,OAAOpV,MACzBwT,EAAKqC,SAAS,CAACjW,YAAWlF,MAAO,oBAGrCsM,cAAgB,SAAA6L,GAAW,IAClBjP,EAAS4P,EAAKhM,MAAd5D,MACEhF,EAAQiU,EAARjU,KACD8Z,EAAW9U,EAAM7G,QAAQ6B,GAC5B8Z,GAAY,EACX9U,EAAMmE,OAAO2Q,EAAU,GAEvB9U,EAAMoE,KAAKpJ,GAEf4U,EAAKqC,SAAS,CAACjS,UACf4P,EAAK1R,MAAMkF,cAAcpD,MAG7BijB,kBAAoB,SAAAnsB,GAAS,IACFD,EAAe+Y,EAAKhM,MAApCmf,eACPnT,EAAKqC,SAAS,CAACnb,QAAOkF,UAAW,GAAInF,mBAqCzCmnB,kBAAoB,WAChB7lB,IAAM0C,IAAI,eACLC,KAAK,SAAAC,GACF,GAAsB,IAAlBA,EAAIzB,KAAK0B,KAAY,KACRtE,EAAkBqE,EAAIzB,KAA5BA,KACPsW,EAAKqC,SAAS,CAACvb,yBAK/BwsB,eAAiB,WACb/qB,IAAM0C,IAAI,SACLC,KAAK,SAAAC,GAAO,IAAA8L,EACY9L,EAAIzB,KAAlBA,EADEuN,EACFvN,KACM,IAFJuN,EACI7L,MAET4U,EAAKqC,SAAS,CAACpb,YAAayC,EAAMypB,eAAgBzpB,uGA7FhC6pB,GAC9BrT,KAAKmC,SAAS,CAACjS,MAAOmjB,EAAUnjB,yCA2C3B,IAAAwQ,EAAAV,KAAAiD,EAC0DjD,KAAKlM,MAA7DlN,EADFqc,EACErc,eAAgBG,EADlBkc,EACkBlc,YAAamF,EAD/B+W,EAC+B/W,UAAWlF,EAD1Cic,EAC0Cjc,MAAOkJ,EADjD+S,EACiD/S,MACtD,OACIgR,EAAAzV,EAAA0V,cAACyI,GAAA,EAAD,CAAQvI,MAAO,CAACkJ,WAAY,QAASnJ,UAAU,yBAC3CF,EAAAzV,EAAA0V,cAACmS,GAAD,CAAOlS,UAAU,wBAAwB6E,MAAM,QAAQkD,MAAM,OACzDjI,EAAAzV,EAAA0V,cAAC+K,GAAA,EAAD,CAAQnK,YAAY,iCAAQzV,MAAOtF,EAAOoa,UAAU,eAAeG,SAAUvB,KAAKmT,mBAC9EjS,EAAAzV,EAAA0V,cAACoS,GAAD,CAAQjnB,MAAM,gBAAd,4BACC1F,EAAegY,IAAI,SAAApM,GAAI,OACpB0O,EAAAzV,EAAA0V,cAACoS,GAAD,CAAQprB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAK1E,MAAO0E,EAAK1E,SAGvDoT,EAAAzV,EAAA0V,cAACrC,GAAA,EAAMyM,OAAP,CACInK,UAAU,eACVW,YAAY,6CACZkK,SAAUjM,KAAKkT,OACf5mB,MAAOJ,EACPimB,YAAU,EACV5Q,SAAUvB,KAAKhU,oBAEnBkV,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CAAMhL,UAAU,eACVqL,WAAsB,iBAAVzlB,EAAiBD,EAAYoN,OAAO,SAAAtB,GAAC,OAAIA,EAAE7L,QAAUA,IAASD,EAC1EysB,OAAQ,CAACC,UAAWvS,EAAAzV,EAAA0V,cAAA,QAAME,MAAO,CAACoO,QAAS,SAAvB,QACpB/C,WAAY,SAAAvN,GAAO,OACf+B,EAAAzV,EAAA0V,cAACiL,GAAA,EAAK/H,KAAN,CAAWjD,UAAWlR,EAAM7G,QAAQ8V,EAAQjU,OAAS,EAAI,kBAAoB,SAClEgX,QAAS,kBAAMxB,EAAKpN,cAAc6L,IAAUhX,IAAKgX,EAAQrW,KAChEoY,EAAAzV,EAAA0V,cAACqC,GAAA,EAAD,CAAQuJ,MAAM,SAASzL,KAAM,GAAI+B,IAAKlE,EAAQ2N,WAAa3N,EAAQjT,eAIrFgV,EAAAzV,EAAA0V,cAACuS,GAAD,KAAU1T,KAAK5R,MAAMvB,sDA0B7BmT,KAAKkO,oBACLlO,KAAKoT,wBA/GoB3Q,aCA3BqP,GAAiB,CACnB5N,SAAU,CACNqI,GAAI,CAACpI,KAAM,IAEfC,WAAY,CACRmI,GAAI,CAACpI,KAAM,GAAImN,OAAQ,KAIzBqC,uMAE0B,IAAAnJ,EAC4BxK,KAAK5R,MAAvC0F,EADM0W,EACjB7Y,SAAWmC,MAAQ/B,EADFyY,EACEzY,YAAayB,EADfgX,EACehX,UACvCzB,IACA+B,GAASN,EAAUM,EAAM1B,OAAQ0B,EAAMtH,wCAGlC,IAEDonB,EAAWpD,EAoBPC,EAtBH3Q,EAAAE,KAAAiL,EACmMjL,KAAK5R,MAAtM4D,EADFiZ,EACEjZ,SAAUsB,EADZ2X,EACY3X,cAAe/G,EAD3B0e,EAC2B1e,cAAesnB,EAD1C5I,EAC0C4I,WAAYnkB,EADtDub,EACsDvb,YAAa6C,EADnE0Y,EACmE1Y,kBAAmBD,EADtF2Y,EACsF3Y,UAAWD,EADjG4Y,EACiG5Y,kBAAmBqe,EADpHzF,EACoHyF,UAAW9hB,EAD/Hqc,EAC+Hrc,QAAS2B,EADxI0a,EACwI1a,YAAakC,EADrJwY,EACqJxY,qBAAsBC,EAD3KuY,EAC2KvY,sBAEvJ,IAArBhD,EAAY5H,KACZ8rB,EAAY1S,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,wCACzBpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU,SAAAC,GAAC,OAAInP,EAAkB,OAAQmP,EAAEE,OAAOpV,QAAQA,MAAOoD,EAAY1H,KAC7E+Z,YAAY,4DAEK,IAArBrS,EAAY5H,OACnB8rB,EAAY1S,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,kCACzBpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU,SAAAC,GAAC,OAAInP,EAAkB,MAAOmP,EAAEE,OAAOpV,QAAQA,MAAOoD,EAAYvH,IAC5E4Z,YAAY,yEAIG,IAA1BrS,EAAYzH,WACZuoB,EAAgBtP,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWjD,UAAU,WAAWkD,MAAM,4BAClDpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM6R,SAAP,CAAgBpP,SAAU,SAAAC,GAAC,OAAInP,EAAkB,UAAWmP,EAAEE,OAAOpV,QACrDA,MAAOoD,EAAY7C,QAAS+jB,SAAU,CAACC,QAAS,EAAGC,QAAS,GAC5D/O,YAAY,6DAK5B0O,EADA/gB,EAAY+E,OACAyM,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAAC8H,MAAO,SAAU9F,IAAK3T,EAAY+E,OAAQ6O,IAAI,oCAE3DpC,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,KAAQpK,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,WAAnB,8BAEhB0oB,EAAiBtP,EAAAzV,EAAA0V,cAAC4P,EAAA,SAAD,KACb7P,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU,SAAAC,GAAC,OAAInP,EAAkB,QAASmP,EAAEE,OAAOpV,QAAQA,MAAOoD,EAAY5C,MAC9EiV,YAAY,gDAEvBb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU,SAAAC,GAAC,OAAInP,EAAkB,MAAOmP,EAAEE,OAAOpV,QAAQA,MAAOoD,EAAYtG,IAC5E2Y,YAAY,gDAEvBb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM6R,SAAP,CAAgBpP,SAAU,SAAAC,GAAC,OAAInP,EAAkB,cAAemP,EAAEE,OAAOpV,QACzDA,MAAOoD,EAAYgF,YAAakc,SAAU,CAACC,QAAS,EAAGC,QAAS,GAChE/O,YAAY,gDAEhCb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAAC6P,GAAA,EAAD,CAAQljB,KAAK,YAAYvC,OAAO,gBAAgB0lB,gBAAgB,EAAO1P,SAAUmP,GAC5ED,IAGTvP,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,IAAI4M,OAAO,GACvB3gB,GAAe,EAAI2Q,EAAAzV,EAAA0V,cAAA,WAChBD,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQpJ,QAASzP,EAAsB3K,KAAK,UAAUuZ,MAAO,CAACQ,YAAa,KAA3E,gBACAX,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQpJ,QAASxP,GAAjB,yCACKwO,EAAAzV,EAAA0V,cAAA,WAAKD,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQpJ,QAAS5P,GAAjB,8CAA4C4O,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,QAAb,wUAKtE,OACIF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACXF,EAAAzV,EAAA0V,cAAC2S,GAAD,CAAkBxgB,cAAeA,EAAepD,MAAOR,EAAYQ,MAAOrD,QACtEqU,EAAAzV,EAAA0V,cAAC8C,GAAA,EAADvW,OAAAiH,OAAA,CAAMyM,UAAU,aAAakR,WAAW,SAAYR,IAChD5Q,EAAAzV,EAAA0V,cAAC4S,GAAA,EAAD,CAAK5P,KAAM,IACPjD,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAAC8H,MAAO,SACfnX,EAAS4M,IAAI,SAAApM,GAAI,OAAI9C,EAAYQ,MAAM7G,QAAQmJ,EAAKtH,OAAS,GAC1DgW,EAAAzV,EAAA0V,cAAC8L,GAAA,EAAD,CAAK9kB,IAAKqK,EAAK1J,IAAKsY,UAAU,qBAAqB4S,UAAQ,EACtDC,QAAS,kBAAM1nB,EAAcmD,EAAYQ,MAAOsC,EAAKtH,QAAQsH,EAAKtG,eAGnFgV,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU,SAAAC,GAAC,OAAInP,EAAkB,OAAQmP,EAAEE,OAAOpV,QAClDA,MAAOoD,EAAY5B,KAAMiU,YAAY,4HAGpDb,EAAAzV,EAAA0V,cAACgQ,GAAA,EAAD,CAAS9P,MAAO,CAAC8H,MAAO,OAAQC,YAAa,MAC7ClI,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,wCACAF,EAAAzV,EAAA0V,cAAC+S,GAAA,EAAD,KACIhT,EAAAzV,EAAA0V,cAAC4S,GAAA,EAAD,CAAK5P,KAAM,IACPjD,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWD,WAAY,CAACkN,OAAQ,IAC5BpQ,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAOoD,EAAYzH,UACnBsZ,SAAU,SAAAC,GAAC,OAAInP,EAAkB,YAAamP,EAAEE,OAAOpV,SAChE4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMf,OAAP,CAAc7f,MAAO,GAArB,4BACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMf,OAAP,CAAc7f,MAAO,GAArB,8BAGR4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAACoR,GAAA,EAAD,CAAQC,QAAS9iB,EAAYwD,YAAaqO,SAAU,SAAAjV,GAAK,OAAI+F,EAAkB,cAAe/F,MAC9F4U,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,QAC3B1R,EAAYwD,aAAe,mIAGnBsd,GAELtP,EAAAzV,EAAA0V,cAAC4S,GAAA,EAAD,CAAK5P,KAAM,GACNzU,EAAYC,SAASvE,OAAS,GAAK8V,EAAAzV,EAAA0V,cAACkQ,GAAD,CAAgBrc,YAAatF,EAAYC,SACzB4C,kBAAmBA,MAG/E2O,EAAAzV,EAAA0V,cAACgQ,GAAA,EAAD,CAAS9P,MAAO,CAAC8H,MAAO,OAAQC,YAAa,MAC7ClI,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,wCACAF,EAAAzV,EAAA0V,cAAC4S,GAAA,EAAD,CAAK5P,KAAM,IACPjD,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWD,WAAY,CAACkN,OAAQ,IAC5BpQ,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAOoD,EAAY5H,KACnByZ,SAAU,SAAAC,GAAC,OAAInP,EAAkB,OAAQmP,EAAEE,OAAOpV,SAC3D4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMf,OAAP,CAAc7f,MAAO,GAArB,4BACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMf,OAAP,CAAc7f,MAAO,GAArB,4BACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMf,OAAP,CAAc7f,MAAO,GAArB,8BAGR4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAOoD,EAAY3H,IACnBwZ,SAAU,SAAAC,GAAC,OAAInP,EAAkB,MAAOmP,EAAEE,OAAOpV,SAC1D4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAO,GAAd,gBACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAO,GAAd,UACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAO,GAAd,UACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAO,GAAd,kBAGR4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAOpD,EAAAzV,EAAA0V,cAAA,uCAAUD,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,sFAAoBoU,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMR,UAAU,SACVtZ,KAAK,kBACLme,MAAM,YAFzD,MAGd/E,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAOoD,EAAYhI,UACnB6Z,SAAU,SAAAC,GAAC,OAAInP,EAAkB,YAAamP,EAAEE,OAAOpV,SAChE4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAO,GAAd,UACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAO,GAAd,YAGPsnB,GAEL1S,EAAAzV,EAAA0V,cAACgQ,GAAA,EAAD,CAAS9P,MAAO,CAAC8H,MAAO,OAAQC,YAAa,MAC7ClI,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWD,WAAY,CAACkN,OAAQ,IAC5BpQ,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQxjB,KAAK,UAAUuZ,MAAO,CAACQ,YAAa,IACpCK,QAAS,kBAAM2R,EAAWnkB,EAAaoQ,EAAK1R,SADpD,gBAEA8S,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQpJ,QAAS,kBAAMtT,EAAQC,WAA/B,oEAWpBmR,KAAK5R,MAAMyD,oBAvJU4Q,aAsNd2K,eA3DE,SAAAtZ,GAAK,MAAK,CACvBpE,YAAaoE,EAAMqL,QAAQrK,MAAMpF,YACjCsC,SAAU8B,EAAMqL,QAAQrK,MAAM9C,SAC9BgL,mBAAoBlJ,EAAMqL,QAAQrK,MAAMkI,mBACxCzM,YAAauD,EAAMqL,QAAQrK,MAAMvE,cAGjB,SAAAzF,GAAQ,MAAK,CAC7BiH,YAD6B,WAEzBjH,EAASuiB,OAEb/Z,cAJ6B,SAIfpD,GACVpF,EAASuiB,GAA6Bnd,KAE1C3D,cAP6B,SAOf2D,EAAOhF,GACjBgF,EAAMmE,OAAOnE,EAAM7G,QAAQ6B,GAAO,GAClCJ,EAASuiB,GAA6Bnd,KAE1CmC,kBAX6B,SAWXlK,EAAKmE,GACnBxB,EAASuiB,GAAiCllB,EAAKmE,KAEnDokB,UAd6B,SAcnBnZ,GACN,GAAyB,SAArBA,EAAKqb,KAAK3rB,OAAmB,CAC7B,IAAIwN,EAAM,8BAAA1K,OAAiCwN,EAAKqb,KAAK/oB,SAASgpB,UAC9D/nB,EAASuiB,GAAiC,SAAU5Y,MAG5DnC,UApB6B,WAqBzBxH,EAASuiB,OAEb9a,kBAvB6B,SAuBXC,EAAMhG,GACpB1B,EAASuiB,GAAiC7a,EAAMhG,KAEpDiG,qBA1B6B,WA2BzB3H,EAASuiB,OAEb3a,qBA7B6B,WA8BzB5H,EAASuiB,OAEbwG,WAhC6B,SAgClBnkB,EAAatB,GAAO,IACpBtB,EAAmC4C,EAAnC5C,MAAO2H,EAA4B/E,EAA5B+E,OAAQrL,EAAoBsG,EAApBtG,IAAKsL,EAAehF,EAAfgF,YACpBZ,EAAS1F,EAAMuD,SAAfmC,MACyB,IAAhCpE,EAAYC,SAASvE,QAAiBsE,EAAYC,SAAS2E,KAAK,CAACxH,QAAO2H,SAAQrL,MAAKsL,gBACrFhF,EAAY5C,MAAQ4C,EAAY+E,OAAS/E,EAAYtG,IAAMsG,EAAYgF,YAAc,GACjFZ,GACApE,EAAY5G,IAAMgL,EAAM1B,OAAOtJ,IAC/BgC,EAASuiB,GAAgC3d,EAAatB,EAAMQ,WAE5D9D,EAASuiB,GAAgC3d,EAAatB,EAAMQ,WAGpEiD,WA5C6B,WA6CzB/G,EAASuiB,OAEb7Z,UA/C6B,SA+CnBpB,EAAQ5F,GACd1B,EAASuiB,GAAyBjb,EAAQ5F,OAInC4gB,CAA+B1I,KAAKC,OAAO,CAAC7W,KAAM,kBAAnB4W,CAAsCiP,KCtLrEQ,oLApCX,OACIjT,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,iBAAiBuI,OAAQ,kBACnCxM,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,KAEElT,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,2BACVjE,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,KACElT,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,+BAA+BkP,UAAWxI,KACtD3K,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,+BAA+BkP,UAAW/G,KACtDpM,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAUE,KAAK,yBAAyBC,OAAK,EAACnR,GAAG,mCAIrDlC,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,wBACVjE,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,KACElT,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,4BAA4BkP,UAAWxP,KACnD3D,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,6BAA6BkP,UAAWljB,KACpD+P,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,6BAA6BkP,UAAWljB,KACpD+P,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAUE,KAAK,sBAAsBC,OAAK,EAACnR,GAAG,gCAIlDlC,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,wBACVjE,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,KACElT,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,6BAA6BkP,UAAWG,KACpDtT,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,8BAA8BkP,UAAWI,KACrDvT,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,8BAA8BkP,UAAWI,KACrDvT,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAUE,KAAK,uBAAuBC,OAAK,EAACnR,GAAG,iCAGnDlC,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAUE,KAAK,iBAAiBC,OAAK,EAACnR,GAAG,sCA/BxBX,8GCqCd6N,kBA3CQ,SAAAliB,GAAS,IACvB4G,EAAyG5G,EAAzG4G,YAAa0f,EAA4FtmB,EAA5FsmB,cAAeljB,EAA6EpD,EAA7EoD,UAAWgG,EAAkEpJ,EAAlEoJ,gBAAiBK,EAAiDzJ,EAAjDyJ,KAAME,EAA2C3J,EAA3C2J,eAAgBnB,EAA2BxI,EAA3BwI,wBACrF,OACEsK,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,wBACbF,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CAAMC,KAAM,CAACC,OAAQ,GAAIC,GAAI,EAAGC,IAAK,GAAIC,WAAYzX,EAC/C0X,WAAY,SAACla,EAAMhG,GAAP,OAAiB0U,EAAAzV,EAAA0V,cAACiL,GAAA,EAAK/H,KAAN,CAAWlc,IAAKqK,EAAK1J,KAChDoY,EAAAzV,EAAA0V,cAAC6I,GAAA,EAAD,CAAM5I,UAAU,oBAAoBtU,MAClCoU,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CAAMhL,UAAU,gBACdF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,eACbF,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,gBAAgB0K,EAAKmD,SAAL,UAAA5L,OAAqB4qB,KAAOniB,EAAKoD,QAAQgf,OAAO,uBAAhD,iBAA8E,kFAC3G1T,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,GAAG3E,IAAKqK,EAAK3F,QAAQgoB,UAAU,GAAGC,eAAiB,KAChE5T,EAAAzV,EAAA0V,cAACiL,GAAA,EAAK/H,KAAN,CAAWjD,UAAU,SAASc,QAAS,kBAAMtL,EAAwBpE,EAAKsD,SAAU,EAAGtD,EAAK3F,QAAQgoB,UAAU,GAAIriB,EAAK1J,OACrHoY,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACbF,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,eAAe5O,EAAK3F,QAAQgoB,UAAU,GAAG/nB,OACtDoU,EAAAzV,EAAA0V,cAAA,OAAKkC,IAAK7Q,EAAK3F,QAAQgoB,UAAU,GAAGE,eAAgBzR,IAAI,0EAI7D9Q,EAAK3F,QAAQgoB,UAAUzgB,MAAM,GAAGwK,IAAI,SAAC9U,EAAS+I,GAAV,OAAgBqO,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,mDAAW3E,IAAK2B,EAAQgrB,eAAiBjiB,EAAI,EAAGmiB,UAAU,YAC5H9T,EAAAzV,EAAA0V,cAACiL,GAAA,EAAK/H,KAAN,CAAWjD,UAAU,oBAAoBc,QAAS,kBAAMtL,EAAwBpE,EAAKsD,SAAUjD,EAAI,EAAGL,EAAK3F,QAAQgoB,UAAUhiB,EAAI,GAAIL,EAAK1J,OACxIoY,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACbF,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,eAAetX,EAAQgD,OACpCoU,EAAAzV,EAAA0V,cAAA,OAAKkC,IAAKvZ,EAAQirB,eAAgBzR,IAAI,eAK1CqJ,QAAS,CACPzL,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,gBAAKoU,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMM,QAAS,kBAAMwS,EAAcliB,IAAO1K,KAAK,eACzCK,IAAI,UAC9B+Y,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,gBAAKoU,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMM,QAAS,kBAAM1Q,EAAUgB,IAAO1K,KAAK,UAAUK,IAAI,UAC7E+Y,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,4BAAOoU,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMM,QAAS,kBAAM1K,EAAgBhF,IAAO1K,KAAK,UAAUK,IAAI,YACrF+Y,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,gBAAKoU,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMM,QAAS,kBAAMrK,EAAKrF,EAAK1J,MAAMhB,KAAK,OAAOK,IAAI,UACzE+Y,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,gBAAKoU,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMM,QAAS,kBAAMnK,EAAevF,EAAK1J,IAAK0D,IAAQ1E,KAAK,SACrDK,IAAI,mBC5B9C8sB,eAEJ,SAAAA,EAAY7mB,GAAO,IAAA0R,EAAA,OAAApS,OAAAqS,EAAA,EAAArS,CAAAsS,KAAAiV,IACjBnV,EAAApS,OAAAuS,EAAA,EAAAvS,CAAAsS,KAAAtS,OAAAwS,EAAA,EAAAxS,CAAAunB,GAAA9U,KAAAH,KAAM5R,KA2BRglB,eAAiB,WACf/qB,IAAM0C,IAAI,SACPC,KAAK,SAAAC,GAAO,IAAA8L,EACY9L,EAAIzB,KAAnBA,EADGuN,EACHvN,KACK,IAFFuN,EACG7L,MAEZ4U,EAAKqC,SAAS,CAACpb,YAAayC,OAjCjBsW,EAqHnBoV,aAAe,WAAM,IAAAjS,EACyBnD,EAAKhM,MAAzCpE,EADWuT,EACXvT,YAA0BQ,EADf+S,EACEkS,YACrB1oB,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,IAAMgG,KAAK,yBAA0B,CAAC6B,QAAOklB,KAAM,CAAC1lB,KACjD1E,KAAK,SAAAC,GAAO,IAAA6Q,EACU7Q,EAAIzB,KAAlB0B,EADI4Q,EACJ5Q,KAAM0C,EADFkO,EACElO,IACD,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChBkS,EAAKuV,kBAELvrB,IAAQyJ,MAAM3F,SAjIPkS,EAwInBuV,eAAiB,WACfvV,EAAKqC,SAAS,CACZmT,WAAW,EACXH,YAAa,GACbI,eAAe,EACfC,UAAU,EACV9lB,YAAa,MA9IEoQ,EAkJnB2V,iBAAmB,SAAAjU,GAAK,IAAAoN,EACQ9O,EAAKhM,MAA3B5I,EADc0jB,EACd1jB,KAEFgF,EAHgB0e,EACR7nB,YACmBoN,OAAO,SAAA3B,GAAI,OAAIA,EAAKtH,OAASA,IACnC0T,IAAI,SAAApM,GAAI,OAAIA,EAAKtH,OAC5C4U,EAAKqC,SAAS,CACZgT,YAAa3T,EAAEE,OAAO8Q,QAAUtiB,EAAQ,GACxCqlB,eAAe,EACfC,SAAUhU,EAAEE,OAAO8Q,WAzJJ1S,EA6JnByB,SAAW,SAAA4T,GAAe,IAAA/F,EACMtP,EAAKhM,MAA3B5I,EADgBkkB,EAChBlkB,KAEFgF,EAHkBkf,EACVroB,YACmBoN,OAAO,SAAA3B,GAAI,OAAIA,EAAKtH,OAASA,IACnC0T,IAAI,SAAApM,GAAI,OAAIA,EAAKtH,OAC5C4U,EAAKqC,SAAS,CACZgT,cACAI,gBAAiBJ,EAAY/pB,QAAU+pB,EAAY/pB,OAAS8E,EAAM9E,OAClEoqB,SAAUL,EAAY/pB,SAAW8E,EAAM9E,UAlKzC0U,EAAKhM,MAAQ,CACXwhB,WAAW,EACXH,YAAa,GACbI,eAAe,EACfC,UAAU,EACV9lB,YAAa,GACbxE,KAAMkD,EAAMlD,KACZnE,YAAa,IATE+Y,mFAaC,IACV5U,EAAS8U,KAAKlM,MAAd5I,KACR8U,KAAK5R,MAAMuI,eAAezL,GAC1B8U,KAAK5R,MAAM+I,WAAWjM,GACtB8U,KAAK5R,MAAMmI,kBACXyJ,KAAKoT,0EAG0BC,EAAWqC,GAC1C,GAAG1V,KAAK5R,MAAMlD,OAASmoB,EAAUnoB,KAAM,KAC7BA,EAASmoB,EAATnoB,KACR8U,KAAK5R,MAAMuI,eAAezL,qCAcrB,IAAAwV,EAAAV,KAAAwK,EACmWxK,KAAK5R,MAAvW4G,EADDwV,EACCxV,YAAaxD,EADdgZ,EACchZ,UAAW2D,EADzBqV,EACyBrV,UAAWmC,EADpCkT,EACoClT,YAAa/B,EADjDiV,EACiDjV,SAAUL,EAD3DsV,EAC2DtV,QAASmC,EADpEmT,EACoEnT,WAAYD,EADhFoT,EACgFpT,YAAahC,EAD7FoV,EAC6FpV,gBAAiBqC,EAD9G+S,EAC8G/S,kBAAmB/B,EADjI8U,EACiI9U,eAAgB8B,EADjJgT,EACiJhT,gBAAiBE,EADlK8S,EACkK9S,kBAAmBG,EADrL2S,EACqL3S,KAAMF,EAD3L6S,EAC2L7S,WAAYI,EADvMyS,EACuMzS,eAAgB9C,EADvNuV,EACuNvV,WAAY2B,EADnO4T,EACmO5T,wBAAyBC,EAD5P2T,EAC4P3T,yBAA0Bb,EADtRwU,EACsRxU,oBAAqBc,EAD3S0T,EAC2S1T,eAAgBjB,EAD3T2U,EAC2T3U,WAAYoB,EADvUuT,EACuUvT,uBADvU0e,EAEuB3V,KAAKlM,MAA3B5I,EAFDyqB,EAECzqB,KACJ0qB,EAHGD,EAEO5uB,YACsBoN,OAAO,SAAA3B,GAAI,OAAIA,EAAKtH,OAASA,IACjE,OACEgW,EAAAzV,EAAA0V,cAAC0U,GAAA,EAAD,CAAgBrC,OAAQsC,MACtB5U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,YAAYC,MAAO,CAACyO,QAAS,IAC1C5O,EAAAzV,EAAA0V,cAAC4U,GAAD,CAAgB/gB,YAAaA,EAAa0f,cAAe,SAAA5qB,GAAO,OAAI4W,EAAKyB,SAAS,CAACmT,WAAW,EAAM5lB,YAAa5F,KAAW0H,UAAWA,EAAWgG,gBAAiBA,EAAiBK,KAAMA,EAAME,eAAgBA,EAAgB9C,WAAYA,EAAY2B,wBAAyBA,KAEnRsK,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CACEhX,MAAM,yDACNiX,QAAS5O,EACTpI,KAAM,kBAAMuK,EAAY/B,IACxByO,SAAU3M,GAEV6J,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAOiJ,EAASC,MAAO+L,SAAU,SAAAC,GAAC,OAAIpK,EAAYoK,GAAG,KAChEN,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,OAAQ,GAAf,gBACC4I,EAAQ0J,IAAI,SAAApM,GAAI,OACb0O,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO/kB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAK/K,IAAK+K,EAAK1E,UAIpDoT,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CACEhX,MAAM,yDACNiX,QAAS3O,EACTrI,KAAM,kBAAM0K,EAAkB/B,EAAgBxK,IAC9C8Y,SAAU3M,GAEV6J,EAAAzV,EAAA0V,cAAA,SAAO6U,QAAQ,SAAf,qBAEE9U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa1lB,GAAG,QAAQ6E,MAAOoJ,EAAeF,MAAO+L,SAAU,SAAAC,GAAC,OAAIpK,EAAYoK,GAAG,KACjFN,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,OAAQ,GAAf,gBACC4I,EAAQ0J,IAAI,SAAApM,GAAI,OACb0O,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO/kB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAK/K,IAAK+K,EAAK1E,UAIpDoT,EAAAzV,EAAA0V,cAAA,SAAOE,MAAO,CAACoO,QAAS,QAASI,OAAQ,UAAWmG,QAAQ,YAA5D,iCAEE9U,EAAAzV,EAAA0V,cAACoR,GAAA,EAAD,CAAQC,QAAS9c,EAAeC,SAAU4L,SAAU7J,KAEtDwJ,EAAAzV,EAAA0V,cAAA,SAAO6U,QAAQ,SAAS3U,MAAO,CAACoO,QAAS/Z,EAAeC,SAAW,QAAU,SAA7E,iCAEEuL,EAAAzV,EAAA0V,cAAC8U,GAAA,EAAD,CACE3pB,MAAOqoB,KAAO,IAAIrrB,KAAKoM,EAAeE,QAAS,cAC/C2L,SAAU,SAACjM,EAAM4gB,GAAP,OAAsBve,EAAWue,EAAY,WAEzDhV,EAAAzV,EAAA0V,cAACgV,GAAA,EAAD,CACE7pB,MAAOqoB,KAAO,IAAIrrB,KAAKoM,EAAeE,QAAS,YAC/C2L,SAAU,SAACjM,EAAM4gB,GAAP,OAAsBve,EAAWue,EAAY,aAI7DhV,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOqF,MAAO,IAAKrc,MAAM,iFAAgBiX,QAAS/D,KAAKlM,MAAMwhB,UAAWvoB,KAAMiT,KAAKkV,aAAclR,SAAUhE,KAAKqV,gBAC9GnU,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAAE+U,aAAc,oBAAqBC,cAAe,GAAIvU,aAAc,KAChFZ,EAAAzV,EAAA0V,cAACmV,GAAA,EAAD,CACEf,cAAevV,KAAKlM,MAAMyhB,cAC1BhU,SAAUvB,KAAKyV,iBACfjD,QAASxS,KAAKlM,MAAM0hB,UAHtB,iBAMFtU,EAAAzV,EAAA0V,cAACmV,GAAA,EAASnJ,MAAV,CAAgB9L,MAAO,CAAC8H,MAAO,QAAS5H,SAAUvB,KAAKuB,SAAUjV,MAAO0T,KAAKlM,MAAMqhB,aACjFjU,EAAAzV,EAAA0V,cAAC+S,GAAA,EAAD,KACG0B,EAAkBhX,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAAC4S,GAAA,EAAD,CAAK5P,KAAM,EAAGhc,IAAKqK,EAAK1J,KACrDoY,EAAAzV,EAAA0V,cAACmV,GAAA,EAAD,CAAUhqB,MAAOkG,EAAKtH,MAAOsH,EAAKtG,iBAK1CgV,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOC,QAAS/N,EAAqBgO,SAAUnN,EAA0B9J,KAAM,kBAAM+J,EAAejB,EAAY3K,IAAO4B,MAAM,wCAC3HoU,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOuJ,EAAWlG,SAASoG,mBAAoBgM,YAAY,yDAAYR,SAAUtK,qDAM9F+I,KAAK5R,MAAMyD,oBApHY0kB,iBAmPZnJ,eAvEE,SAAAtZ,GAAK,MAAK,CACzBoB,QAASpB,EAAMhK,QAAQ9C,MAAMkO,QAC7BF,YAAalB,EAAMhK,QAAQ9C,MAAMgO,YACjCO,SAAUzB,EAAMhK,QAAQ9C,MAAMuO,SAC9BG,eAAgB5B,EAAMhK,QAAQ9C,MAAM0O,eACpCP,UAAWrB,EAAMhK,QAAQ9C,MAAMmO,UAC/BC,gBAAiBtB,EAAMhK,QAAQ9C,MAAMoO,gBACrCrO,YAAa+M,EAAMhK,QAAQ9C,MAAMD,YACjCkO,WAAYnB,EAAMhK,QAAQ9C,MAAMiO,WAChCe,oBAAqBlC,EAAMhK,QAAQ9C,MAAMgP,oBACzCH,WAAY/B,EAAMhK,QAAQ9C,MAAM6O,aAGd,SAAA/K,GAAQ,MAAK,CAC/BqM,WAD+B,SACpBjM,GACTJ,EAASuiB,EAAelW,WAAWjM,KAErCyL,eAJ+B,SAIhBzL,GACbJ,EAASuiB,EAAe1W,eAAezL,KAEzCsG,UAP+B,SAOrBY,GACRtH,EAASuiB,EAAe7b,UAAUY,KAEpCkF,YAV+B,SAUnB/B,GACVzK,EAASuiB,EAAe/V,YAAY/B,KAEtC6B,YAb+B,SAanBoK,EAAG7L,GACb7K,EAASuiB,EAAejW,YAAYoK,EAAEE,OAAOpV,MAAOqJ,KAEtD6B,gBAhB+B,SAgBfpF,GACdtH,EAASuiB,EAAe7V,gBAAgBpF,KAE1CiF,WAnB+B,WAoB7BvM,EAASuiB,EAAehW,eAE1BI,kBAtB+B,SAsBb/B,EAAgBxK,GAChCJ,EAASuiB,EAAe5V,kBAAkB/B,EAAgBxK,KAE5DwM,kBAzB+B,SAyBbpL,GAChBxB,EAASuiB,EAAe3V,kBAAkBpL,KAE5CqL,WA5B+B,SA4BpBrC,EAAMxN,GACfgD,EAASuiB,EAAe1V,WAAWrC,EAAMxN,KAE3C+P,KA/B+B,SA+B1BpQ,GACHqD,EAASuiB,EAAexV,KAAKpQ,KAE/BsQ,eAlC+B,SAkChBtQ,EAAI+E,GACjB1B,EAASuiB,EAAetV,eAAetQ,EAAI+E,KAE7CqF,WArC+B,WAsC7B/G,EAASuiB,EAAexb,eAE1B0E,gBAxC+B,WAyC7BzL,EAASuiB,EAAe9W,oBAE1BK,wBA3C+B,SA2CPd,EAAUtJ,EAAOmD,EAAUlI,GACjDqD,EAASuiB,EAAezW,wBAAwB,CAACd,WAAUtJ,QAAOmD,WAAUlI,SAE9EoP,yBA9C+B,WA+C7B/L,EAASuiB,EAAexW,6BAE1BC,eAjD+B,SAiDhBjB,EAAY3K,GACzBJ,EAASuiB,EAAevW,eAAejB,EAAY3K,KAErD+L,uBApD+B,SAoDRuK,GACrB,IAAIzL,EAAqByL,EAAEE,OAAOpV,MAClCxB,EAASuiB,EAAepW,uBAAuBlB,OAIpCqX,CAA+B6H,ICxPxCuB,eAEJ,SAAAA,EAAYpoB,GAAO,IAAA0R,EAAA,OAAApS,OAAAqS,EAAA,EAAArS,CAAAsS,KAAAwW,IACjB1W,EAAApS,OAAAuS,EAAA,EAAAvS,CAAAsS,KAAAtS,OAAAwS,EAAA,EAAAxS,CAAA8oB,GAAArW,KAAAH,KAAM5R,KASR0F,MAAQ,CACN2iB,oBAAoB,EACpBvhB,QAAS,IAVT3H,QAAQC,IAAIY,EAAMsoB,cAClB5W,EAAK6W,gBAAkB7W,EAAK6W,gBAAgBtW,KAArB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IACvBA,EAAK8W,iBAAmB9W,EAAK8W,iBAAiBvW,KAAtB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IACxBA,EAAK+W,WAAa/W,EAAK+W,WAAWxW,KAAhB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAClBA,EAAK+T,WAAa/T,EAAK+T,WAAWxT,KAAhB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAClBA,EAAKzI,WAAayI,EAAKzI,WAAWgJ,KAAhB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAPDA,iFAgBjBE,KAAKmC,SAAS,CAACsU,oBAAoB,+CAGlB,IAAAjM,EACwBxK,KAAK5R,MAA/BuU,EADE6H,EACTjc,KAAOoU,eAAiBzX,EADfsf,EACetf,KADf0X,EAEOD,IAAnB3I,EAFY4I,EAEZ5I,OAAQnN,EAFI+V,EAEJ/V,QACbxE,IAAMgG,KAAK,wBAAyB,CAACnD,OAAM8O,SAAQnN,YAChD7B,KAAK,SAAAC,GAAO,IAAA8L,EACS9L,EAAIzB,KAAjB0B,EADI6L,EACJ7L,KAAM0C,EADFmJ,EACEnJ,IACJ,IAAT1C,GAAcpB,IAAQsC,QAAQwB,KAElCoS,KAAK6W,mDAKLroB,EADmCwR,KAAK5R,MAAhCG,KAAOC,gBACA,CAACwL,OAAQ,KACxBgG,KAAKmC,SAAS,CAACsU,oBAAoB,yCAGxB,IACI9T,EAAoB3C,KAAK5R,MAAhCG,KAAOoU,eACf3C,KAAK5R,MAAM0oB,mBAAmBnU,2CAK9BoU,EADgC/W,KAAK5R,MAA7BG,KAAOwoB,eAEf/W,KAAK5R,MAAM4oB,iEAGO,IAAAtW,EAAAV,KACV9U,EAAS8U,KAAK5R,MAAdlD,KACR7C,IAAM0C,IAAI,gBAAiB,CAACoB,OAAQ,CAACjB,UAClCF,KAAK,SAAAC,GACJyV,EAAKyB,SAAS,CAACjN,QAASjK,EAAIzB,KAAKA,0CAI9B,IAAAyhB,EAC2FjL,KAAK5R,MADhG6oB,EAAAhM,EACC1c,KAAO2U,EADR+T,EACQ/T,kBAAmBgU,EAD3BD,EAC2BC,cAAgBC,EAD3ClM,EAC2CkM,yBAD3CC,EAAAnM,EACqEyL,oBADrE,IAAAU,EACoF,GADpFA,EAAAnU,EAEiCjD,KAAKlM,MAArC2iB,EAFDxT,EAECwT,mBAAoBvhB,EAFrB+N,EAEqB/N,QAC5B,OACEgM,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CACEC,QAASoT,EACTrqB,MAAM,uCACNuqB,OACEnW,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQpJ,QAASlC,KAAK2W,iBAAtB,4BACAzV,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQpJ,QAASlC,KAAK6T,YAAtB,iBAGJ7P,SAAUhE,KAAK3I,YAEf6J,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAD,CAAMC,SAAU,CAACC,KAAM,GAAIC,WAAY,CAACD,KAAM,GAAImN,OAAQ,IACxDpQ,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACdpB,EAAkB,UAAW,CAC5BqB,aAAcmS,EAAa7pB,SAAW,GACtC2X,MAAO,CAAC,CAAEC,UAAU,EAAM3a,QAAS,gCAFpCoZ,CAGEhC,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM6R,SAAP,CAAgB2G,KAAM,EAAGvV,YAAY,6DAE1Cb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACdpB,EAAkB,QAAS,CAC1BqB,aAAcmS,EAAalhB,OAAS,KACpCgP,MAAO,CAAC,CAACC,UAAU,KAFpBvB,CAGEhC,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,KACDjM,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,OAAQ,GAAf,4BACC4I,EAAQ0J,IAAI,SAAApM,GAAI,OACf0O,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO/kB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAK/K,IAAK+K,EAAK1E,WAIlDoT,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACdpB,EAAkB,YAAa,CAC9BqU,cAAe,UACfhT,aAAcmS,EAAata,YAAa,GAFzC8G,CAGEhC,EAAAzV,EAAA0V,cAACoR,GAAA,EAAD,QAEJ2E,EAAc,aAAehW,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BAC5CpB,EAAkB,cAAe,CAACqB,aAAcmS,EAAata,UAAYuY,KAAO+B,EAAapd,aAAe,MAA5G4J,CAAmHhC,EAAAzV,EAAA0V,cAAC8U,GAAA,EAAD,CAAYuB,SAAU,CAAC5C,OAAQ,SAAUA,OAAO,mBAAmB7S,YAAY,6DACtL,IAEjBb,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOC,QAAS0S,EAAoB3pB,MAAM,uCAASC,KAAMiT,KAAK4W,iBAAkB5S,SAAUhE,KAAK6W,YAC5F3T,EAAkB,SAAU,CAC3BsB,MAAO,CAAC,CAAEC,UAAU,EAAM3a,QAAS,8BACnCya,aAAc,IAFfrB,CAGEhC,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOiD,YAAY,uCAxGIU,aA+GrBiC,QAAKC,QAALD,CAAc8R,IC2DdiB,uBAlKb,SAAAA,EAAYrpB,GAAO,IAAA0R,EAAA,OAAApS,OAAAqS,EAAA,EAAArS,CAAAsS,KAAAyX,IACjB3X,EAAApS,OAAAuS,EAAA,EAAAvS,CAAAsS,KAAAtS,OAAAwS,EAAA,EAAAxS,CAAA+pB,GAAAtX,KAAAH,KAAM5R,KAOR0F,MAAQ,CACNqjB,0BAA0B,EAC1BO,iBAAkB,GAClBhB,aAAc,GACdlqB,OAAQ,GAVRsT,EAAK6X,sBAAwB7X,EAAK6X,sBAAsBtX,KAA3B3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAC7BA,EAAKgX,mBAAqBhX,EAAKgX,mBAAmBzW,KAAxB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAC1BA,EAAKkX,mBAAqBlX,EAAKkX,mBAAmB3W,KAAxB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAC1BA,EAAK8X,mBAAqB9X,EAAK8X,mBAAmBvX,KAAxB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IALTA,uFAgBjBE,KAAKmC,SAAS,CAACgV,0BAA0B,+CAGxBU,GAAc,IAAAnX,EAAAV,KAAAiD,EAC6BjD,KAAKlM,MADlCgkB,EAAA7U,EACxByT,aAAe5tB,WADS,IAAAgvB,EACH,GADGA,EACEtrB,EADFyW,EACEzW,MAAOkrB,EADTzU,EACSyU,iBACxCG,EAAave,aAAeue,EAAave,YACzCue,EAAa3sB,KAAO8U,KAAK5R,MAAMlD,KAC/B2sB,EAAariB,MAAQuiB,SAASF,EAAariB,OAC3C1M,IAAQ+uB,EAAa/uB,IAAMA,GAC3B2D,IAAMC,QAAQ,CACZI,MAAO,2EACPC,KAAM,WACCjE,EAaHT,EAAMoF,IAAI,gBAAVC,OAAAC,EAAA,EAAAD,CAAA,GAA+BmqB,IAC5B7sB,KAAK,SAAAC,GAAO,IAAA6Q,EACe7Q,EAAIzB,KAAvB0B,EADI4Q,EACJ5Q,KAAM0C,EADFkO,EACElO,IAAKpE,EADPsS,EACOtS,KACL,IAAT0B,GACFwsB,EAAiBrjB,OAAO7H,EAAO,EAAGhD,GAClCkX,EAAKyB,SAAS,CAACuV,qBACf5tB,IAAQsC,QAAQwB,GAChB8S,EAAKsW,sBAELltB,IAAQkJ,QAAQpF,KArBtBvF,EAAMgG,KAAK,gBAAXX,OAAAC,EAAA,EAAAD,CAAA,GAAgCmqB,IAC7B7sB,KAAK,SAAAC,GAAO,IAAA8L,EACe9L,EAAIzB,KAAvB0B,EADI6L,EACJ7L,KAAM0C,EADFmJ,EACEnJ,IAAKpE,EADPuN,EACOvN,KACL,IAAT0B,GACFwV,EAAKyB,SAAS,SAAA6V,GAAS,MAAK,CAACN,iBAAgB,CAAGluB,GAAHO,OAAA2D,OAAAwG,EAAA,EAAAxG,CAAYsqB,EAAUN,sBACnE5tB,IAAQsC,QAAQwB,GAChB8S,EAAKsW,sBAELltB,IAAQkJ,QAAQpF,qDAsB5BoS,KAAKmC,SAAS,CAACgV,0BAA0B,EAAOT,aAAc,gDAG7ClkB,EAAMhG,GACvBwT,KAAK2X,wBACL3X,KAAKmC,SAAS,CACZuU,aAAahpB,OAAAC,EAAA,EAAAD,CAAA,GAAK8E,GAAOhG,+CAIhBgG,EAAMhG,GAAO,IAAA4V,EAAApC,KACnB0X,EAAoB1X,KAAKlM,MAAzB4jB,iBACLjrB,IAAMC,QAAQ,CACZI,MAAO,mDACPC,KAAM,WACJ1E,EAAMgG,KAAK,qBAAXX,OAAAC,EAAA,EAAAD,CAAA,GAAqC8E,IAClCxH,KAAK,SAAAC,GAAO,IAAA+Q,EACS/Q,EAAIzB,KAAjB0B,EADI8Q,EACJ9Q,KAAM0C,EADFoO,EACEpO,IACA,IAAT1C,GACFpB,IAAQsC,QAAQwB,GAChBF,OAAOiH,OAAO+iB,EAAiBlrB,GAAQ,CAACyrB,OAAQ,IAChD7V,EAAKD,SAAS,CAACuV,sBAEf5tB,IAAQkJ,QAAQpF,+CAOb9E,EAAK0D,GAAO,IAAA0rB,EAAAlY,KACzBvT,IAAMC,QAAQ,CACZI,MAAO,yDACPC,KAAM,WACJ1E,EAAMqG,OAAO,gBAAiB,CAACvC,OAAQ,CAACrD,SACrCkC,KAAK,SAAAC,GAAO,IAAA2R,EACS3R,EAAIzB,KAAjB0B,EADI0R,EACJ1R,KAAM0C,EADFgP,EACEhP,IACA,IAAT1C,GACFpB,IAAQsC,QAAQwB,GAChBsqB,EAAK/V,SAAS,SAAA6V,GACZ,IAAIN,EAAmBM,EAAUN,iBAEjC,OADAA,EAAiBrjB,OAAO7H,EAAO,GACxB,CAACkrB,uBAGV5tB,IAAQkJ,QAAQpF,oDAOR,IAAAuqB,EAAAnY,KAClB3X,EAAM0C,IAAI,gBAAiB,CAACoB,OAAQ,CAACjB,KAAM8U,KAAK5R,MAAMlD,QACnDF,KAAK,SAAAC,GAAO,IAAAgkB,EACUhkB,EAAIzB,KAAlB0B,EADI+jB,EACJ/jB,KAAM1B,EADFylB,EACEzlB,KACJ,IAAT0B,GAAcitB,EAAKhW,SAAS,CAACuV,iBAAkBluB,EAAKkH,+CAIjD,IAAA0nB,EAAApY,KAAA4O,EAC4D5O,KAAKlM,MAAjEqjB,EADAvI,EACAuI,yBAA0BO,EAD1B9I,EAC0B8I,iBAAkBhB,EAD5C9H,EAC4C8H,aAC5CxrB,EAAQ8U,KAAK5R,MAAblD,KAED4gB,EAAa,CACjBC,SAFe7e,OAAO8e,WAAa,KAEZ,GAAK,GAE9B,OACE9K,EAAAzV,EAAA0V,cAAC0U,GAAA,EAAD,CAAgBrC,OAAQsC,MACtB5U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACbF,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQlK,UAAU,OAAOc,QAASlC,KAAK2X,uBAAvC,wCACAzW,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CAAMC,KAAM,CAACC,OAAQ,GAAI+L,GAAI,EAAG7L,IAAK,GAC/BC,WAAYiL,EACZhL,WAAY,SAACla,EAAMhG,GAAP,OACV0U,EAAAzV,EAAA0V,cAACiL,GAAA,EAAK/H,KAAN,CAAWlc,IAAKqK,EAAK1J,KACnBoY,EAAAzV,EAAA0V,cAAC6I,GAAA,EAAD,CAAMld,MAAO0F,EAAK4J,UAChB8E,EAAAzV,EAAA0V,cAAA,mBAAKD,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,QAAQuT,KAAOniB,EAAK8G,aAAasb,OAAO,qBAA7D,iBACO,6CAAWjI,QAASna,EAAKylB,OAAS,CAAC/W,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,aACxDc,QAAS,kBAAMzV,IAAMuG,QAAQ,CAC3BlG,MAAO,SACPD,QAASqU,EAAAzV,EAAA0V,cAAA,KAAGE,MAAO,CAACiX,WAAY,SAAU9lB,EAAK4D,YAC7C8K,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,MAAMK,IAAI,QAAO+Y,EAAAzV,EAAA0V,cAAA,oCAAgC,CAClED,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,UAAUK,IAAI,UAAU+Z,QAAS,kBAAMkW,EAAKR,mBAAmBplB,EAAMhG,MAChF0U,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMyJ,UAAU,EAAMvjB,KAAK,YAAYK,IAAI,OACrC+Z,QAAS,kBAAM1P,EAAK4J,UAAYtS,IAAQkJ,QAAQ,sHAAyBolB,EAAKG,aAAa/lB,EAAMhG,MACvG0U,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,SAASK,IAAI,SAAS+Z,QAAS,kBAAMkW,EAAKrgB,eAAevF,EAAK1J,IAAK0D,QAE9E0U,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,iBAAiB5O,EAAK3F,YAIzCif,WAAYA,IAEjBqL,GACDjW,EAAAzV,EAAA0V,cAACqX,GAAD,CAAuB9B,aAAcA,EAAcS,yBAA0BA,EACtDH,mBAAoBhX,KAAKgX,mBAAoB9rB,KAAMA,EACnD4rB,mBAAoB9W,KAAK8W,8BA7J/BrU,wBCPpB+G,WAAkBD,KAAlBC,OAAOF,GAAWC,KAAXD,QACPmP,GAASC,KAATD,MAgHQE,8MA5Gb7kB,MAAQ,CACNlN,eAAgB,GAChBG,YAAa,GACbmF,UAAW,GACXpD,IAAK,GACL8vB,UAAW,MAGb1F,OAAS,SAAAhnB,GAAa,IACbtF,EAAkBkZ,EAAKhM,MAAvBlN,eACW,KAAdsF,EACF7D,IAAM0C,IAAI,iBAAkB,CAACoB,OAAQ,CAACD,eACnClB,KAAK,SAAAC,GACJ,GAA6B,IAAzBA,EAAIzB,KAAKA,KAAK4B,OAAc,KACvB5B,EAAQyB,EAAIzB,KAAZA,KACPsW,EAAK1R,MAAMyqB,QAAQrvB,EAAK,GAAG0B,MAC3B,IAAIoI,EAAgB1M,EAAeuN,OAAO,SAAA3B,GAAI,OAAIhJ,EAAK,GAAGxC,QAAUwL,EAAK1E,OACzEgS,EAAKqC,SAAS,CAACjW,UAAW,GAAIpD,IAAKU,EAAK,GAAGV,IAAK8vB,UAAWtlB,EAAc,GAAGxF,YAE5EhE,IAAQyN,KAAK,0IAInBzN,IAAQyN,KAAK,iDAIjBvL,kBAAoB,SAAAwV,GAClB,IAAItV,EAAYsV,EAAEE,OAAOpV,MACzBwT,EAAKqC,SAAS,CAACjW,iBAGjBoH,cAAgB,SAAA6L,GAAW,IAClBjU,EAAaiU,EAAbjU,KAAMpC,EAAOqW,EAAPrW,IACbgX,EAAK1R,MAAMyqB,QAAQ3tB,GACnB4U,EAAKqC,SAAS,CAACrZ,WAGjBqqB,kBAAoB,SAAA7mB,GAClBwT,EAAKqC,SAAS,CAACyW,UAAWtsB,GAAS,QA2CrC4hB,kBAAoB,WAClB7lB,IAAM0C,IAAI,eACPC,KAAK,SAAAC,GACJ,GAAsB,IAAlBA,EAAIzB,KAAK0B,KAAY,KACVtE,EAAkBqE,EAAIzB,KAA5BA,KACPsW,EAAKqC,SAAS,CAACvb,yBAKvBwsB,eAAiB,WACf/qB,IAAM0C,IAAI,SACPC,KAAK,SAAAC,GAAO,IAAA8L,EACU9L,EAAIzB,KAAlBA,EADIuN,EACJvN,KACM,IAFFuN,EACE7L,MAEX4U,EAAKqC,SAAS,CAACpb,YAAayC,+EAvD3B,IAAAkX,EAAAV,KAAAiD,EAC0DjD,KAAKlM,MAA/DlN,EADAqc,EACArc,eAAgBG,EADhBkc,EACgBlc,YAAamF,EAD7B+W,EAC6B/W,UAAWpD,EADxCma,EACwCna,IAAK8vB,EAD7C3V,EAC6C2V,UAC9CE,EAAY,SAAAhrB,GAAI,OACpBoT,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CAAMhL,UAAU,eAAeqL,WAAY1lB,EAAYqE,OAAS,EAAIrE,EAAYoN,OAAO,SAAAtB,GAAC,OAAIA,EAAE7L,QAAU8G,IAAQ,KAAM0lB,OAAQ,CAACC,UAAWvS,EAAAzV,EAAA0V,cAAA,QAAME,MAAO,CAACoO,QAAS,SAAvB,QACxI/C,WAAY,SAAAvN,GAAO,OACjB+B,EAAAzV,EAAA0V,cAACiL,GAAA,EAAK/H,KAAN,CAAWjD,UAAWjC,EAAQrW,MAAQA,EAAM,kBAAoB,SAAUoZ,QAAS,kBAAMxB,EAAKpN,cAAc6L,IAAUhX,IAAKgX,EAAQrW,KACjIoY,EAAAzV,EAAA0V,cAACqC,GAAA,EAAD,CAAQuJ,MAAM,SAASzL,KAAM,GAAIM,KAAK,SAASzC,EAAQjT,eAI/D,OACEgV,EAAAzV,EAAA0V,cAACyI,GAAA,EAAD,CAAQvI,MAAO,CAACkJ,WAAY,QAASnJ,UAAU,yBAC7CF,EAAAzV,EAAA0V,cAAC4X,GAAD,CAAO3X,UAAU,wBAAwB6E,MAAM,QAAQkD,MAAM,OAC3DjI,EAAAzV,EAAA0V,cAACrC,GAAA,EAAMyM,OAAP,CACEnK,UAAU,eACVW,YAAY,6CACZkK,SAAUjM,KAAKkT,OACf5mB,MAAOJ,EACPqV,SAAUvB,KAAKhU,oBAEjBkV,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,KACElL,EAAAzV,EAAA0V,cAACiL,GAAA,EAAK/H,KAAN,KACEnD,EAAAzV,EAAA0V,cAAC6X,GAAA,EAAD,CAAUxJ,UAAU,EAAOyJ,WAAS,EAACL,UAAWA,EAAWrX,SAAUvB,KAAKmT,mBACxEjS,EAAAzV,EAAA0V,cAACsX,GAAD,CAAOlJ,OAAO,qBAAMpnB,IAAI,sBACrB2wB,EAAU,uBAEZlyB,EAAegY,IAAI,SAAApM,GAAI,OACtB0O,EAAAzV,EAAA0V,cAACsX,GAAD,CAAOlJ,OAAQ/c,EAAK1E,KAAM3F,IAAKqK,EAAK1E,MACjCgrB,EAAUtmB,EAAK1E,aAO5BoT,EAAAzV,EAAA0V,cAAC+X,GAAD,KAAUlZ,KAAK5R,MAAMvB,sDA0BzBmT,KAAKkO,oBACLlO,KAAKoT,wBA1GyB3Q,aCA5B0W,gMAEiB,IACXjuB,EAAS8U,KAAK5R,MAAdlD,KACR8U,KAAK5R,MAAM+I,WAAWjM,GACtB8U,KAAK5R,MAAM6J,eAAe/M,4DAGKmoB,EAAWqC,GAC1C,GAAG1V,KAAK5R,MAAMlD,OAASmoB,EAAUnoB,KAAM,KAC7BA,EAASmoB,EAATnoB,KACR8U,KAAK5R,MAAM+I,WAAWjM,GACtB8U,KAAK5R,MAAM6J,eAAe/M,qCAIrB,IAAAsf,EACuIxK,KAAK5R,MAA3I6H,EADDuU,EACCvU,YAAaf,EADdsV,EACctV,QAASgD,EADvBsS,EACuBtS,eAAgBE,EADvCoS,EACuCpS,aAAcC,EADrDmS,EACqDnS,cAAeE,EADpEiS,EACoEjS,UAAWD,EAD/EkS,EAC+ElS,iBAAkBnC,EADjGqU,EACiGrU,WAAYD,EAD7GsU,EAC6GtU,gBAAiBhL,EAD9Hsf,EAC8Htf,KAC/HkuB,EAAgB,CACpB,CACEjxB,IAAK,cACL2E,MAAO,uCACP2gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC1lB,EAAMoK,GACb,IAAIkD,EAAOqf,KAA4B,IAArBviB,EAAOinB,aAAoBzE,OAAO,wBACpD,OACE1T,EAAAzV,EAAA0V,cAAA,YAAO7L,KAIb,CACExI,MAAO,2BACP2gB,MAAO,SACPC,OAAQ,SAAC1lB,EAAMoK,GACb,IAAI6a,EAAM,SAIV,OAHG7a,EAAOoD,QACRyX,EAAM/X,EAAQ0J,IAAI,SAAApM,GAAI,OAAIJ,EAAOoD,QAAUhD,EAAK/K,GAAK+K,EAAK1E,KAAO,kBAE5D,CAACmf,SAGZ,CACEngB,MAAO,2BACP2gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC1lB,EAAMoK,GACb,IACIhG,EAMJ,OAJEA,EADY,KAFDgG,EAAOgE,OAGR,8CAEA,8CAEL8K,EAAAzV,EAAA0V,cAAA,YAAO/U,KAGlB,CACEU,MAAO,2BACP2gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC1lB,EAAMoK,GAMb,IALA,IAAIknB,EACkC,IAApClnB,EAAOvF,QAAQgoB,UAAUzpB,OACrBgH,EAAOvF,QAAQgoB,UACf,GACF0E,EAAS,GACJ1mB,EAAI,EAAGA,EAAIymB,EAAIluB,OAAQyH,IAC9B0mB,EAAOjlB,KAAKzB,EAAI,EAAI,IAAMymB,EAAIzmB,GAAG/F,OAEnC,OACEoU,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASyR,UAAU,MAAMloB,MAAOysB,GAC9BrY,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,eAAeC,MAAO,CAAC8H,MAAO,MAAOoQ,MAK1D,CACEpxB,IAAK,WACL2E,MAAO,2BACP2gB,MAAO,SACPC,OAAQ,SAAC1lB,EAAMoK,GACb,IAAIkD,EAAOlD,EAAOuD,SAAW,SAAM,SACnC,OACEuL,EAAAzV,EAAA0V,cAAA,YAAO7L,KAIb,CACEnN,IAAK,SACL2E,MAAO,2BACP2gB,MAAO,SACPC,OAAQ,SAAC1lB,EAAMoK,GACb,IAAIkD,EAAO,KAIX,OAHIlD,EAAOwD,SACTN,EAAOqf,KAAOviB,EAAOwD,QAAQgf,OAAO,yBAGpC1T,EAAAzV,EAAA0V,cAAA,YAAO7L,KAIb,CACExI,MAAO,SACP2gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC1lB,EAAMoK,GAAP,OACN8O,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQnB,GAAI,GAAI9I,QAAS,kBAAMhK,EAAehN,EAAMkH,EAAOgE,SAAS+U,cAAc,6BAClFjK,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ5B,WAAW,SAASrI,QAAS,kBAAM9J,EAAahG,EAAOlH,KAAMkH,EAAOgE,SAAS+U,cAAc,iCAK3G,OACCjK,EAAAzV,EAAA0V,cAAA,WACGD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aAMbF,EAAAzV,EAAA0V,cAACgP,GAAA,EAAD,CAAO7O,KAAK,QAAQkO,UAAQ,EAACY,OAAQ,SAAAhe,GAAM,OAAIA,EAAOtJ,KAAKykB,QAAS6L,EAAe3M,WAAYxW,KAEjGiL,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CACEhX,MAAM,2EACNiX,QAAS7N,EACTnJ,KAAM,kBAAMwL,EAAUpC,IACtB6N,SAAU3L,GAEV6I,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOuC,MAAO,CAAC8H,MAAO,KAAM7c,MAAO6J,EAAWE,YAAakL,SAAUjJ,IACrE4I,EAAAzV,EAAA0V,cAAA,KAAGE,MAAO,CAAC9D,MAAO,MAAOyP,UAAW,KAApC,4GAnIYvK,aAsLP2K,eA1CE,SAAAtZ,GAAK,MAAK,CACzBoB,QAASpB,EAAMhK,QAAQ9C,MAAMkO,QAC7Be,YAAanC,EAAMhK,QAAQ9C,MAAMiP,YACjCC,gBAAiBpC,EAAMhK,QAAQ9C,MAAMkP,gBACrCC,WAAYrC,EAAMhK,QAAQ9C,MAAMmP,WAChCG,QAASxC,EAAMhK,QAAQ9C,MAAMsP,UAGX,SAAAxL,GAAQ,MAAK,CAC/BmN,eAD+B,SAChB/M,GACbJ,EAASuiB,EAAepV,eAAe/M,KAEzCiM,WAJ+B,SAIpBjM,GACTJ,EAASuiB,EAAelW,WAAWjM,KAErCgN,eAP+B,SAOhBhN,EAAMkL,GACnBtL,EAASuiB,EAAenV,eAAehN,EAAMkL,KAE/CgC,aAV+B,SAUlBlN,EAAMkL,GACjBtL,EAASuiB,EAAejV,aAAalN,EAAMkL,KAE7CiC,cAb+B,WAc7BvN,EAASuiB,EAAehV,kBAE1BE,UAhB+B,SAgBrBpC,GACRrL,EAASuiB,EAAe9U,UAAUpC,KAEpCmC,iBAnB+B,SAmBdkJ,GACf1W,EAASuiB,EAAe/U,iBAAiBkJ,EAAEE,OAAOpV,SAEpDkM,aAtB+B,SAsBlBtN,GACXJ,EAASuiB,EAAe7U,aAAatN,KAEvCuN,WAzB+B,SAyBpBpD,EAAMmkB,GACf1uB,EAASuiB,EAAe5U,WAAW+gB,KAErC9gB,WA5B+B,SA4BpBxN,EAAMoL,GACf,IAAIhB,EAAO,IAAIhM,KAAKgN,GAAS/M,UAAU,IACvCuB,EAASuiB,EAAe3U,WAAWxN,EAAMoK,OAI9B8X,CAA+B+L,cC3LxCM,GAAiB,CACrBtQ,MAAO,OACPuQ,UAAW,SACXnP,WAAY,0BACZoP,SAAU,WACV7J,QAAS,UACTiC,IAAK,EACL6H,KAAM,EACNC,OAAQ,GAKKC,GAFC,SAAA1rB,GAAK,OAAI8S,EAAAzV,EAAA0V,cAAA,OAAKE,MAAOoY,IAAgBvY,EAAAzV,EAAA0V,cAAC4Y,GAAA,EAAD,CAAMC,SAAU5rB,EAAM4rB,aCFnEC,GAAYC,KAAZD,QAEFhF,8MAEJnhB,MAAQ,CACN5I,KAAM,KACNivB,qBAAqB,EACrBH,UAAU,KAGZ9vB,MAAQ,kBAAMwM,WAAW,WACvBoJ,EAAKqC,SAAS,CAAC6X,UAAU,KACxB,QAEHnB,QAAU,SAAA3tB,GACRkvB,aAAata,EAAK5V,OAClB4V,EAAKqC,SAAS,CAAC6X,UAAU,IACzBla,EAAKqC,SAAS,CAACjX,SACf4U,EAAK5V,4FAILJ,IAAQkJ,QAAQ,2FAGT,IAAA0N,EAAAV,KAAAwK,EAC8BxK,KAAK5R,MAAnCqI,EADA+T,EACA/T,YAAauB,EADbwS,EACaxS,cADbiL,EAEuCjD,KAAKlM,MAA5C5I,EAFA+X,EAEA/X,KAAMivB,EAFNlX,EAEMkX,oBAAqBH,EAF3B/W,EAE2B+W,SAC5BK,EAAa,CACjBC,OAAQ,OACRzK,OAAQ,UAEV,OACE3O,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAACoZ,GAAD,CAAqB1B,QAAS7Y,KAAK6Y,QAAShsB,QAC1C3B,EACI8uB,EACE9Y,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAACqZ,GAAD,CAASR,SAAUA,IAAW9Y,EAAAzV,EAAA0V,cAACsZ,GAAA,EAAD,CAAO/lB,YAAY,GAAGgmB,MAAM,yDAAyDL,WAAYA,KAEjInZ,EAAAzV,EAAA0V,cAAA,WACFD,EAAAzV,EAAA0V,cAACwZ,GAAA,EAAD,CAAMC,YAAY,QAChB1Z,EAAAzV,EAAA0V,cAAC8Y,GAAD,CAASY,IAAI,eAAK1yB,IAAI,KACpB+Y,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ7K,KAAK,UAAUiJ,WAAW,UAAUY,cAAc,2BAAOjJ,QAAS,kBAAMzL,EAAYvL,MAC5FgW,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ7K,KAAK,UAAU6J,cAAc,2BAAOjJ,QAAS,kBAAMxB,EAAKyB,SAAS,CAACgY,qBAAqB,OAC/FjZ,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ7K,KAAK,UAAU0J,GAAI,GAAIT,WAAW,SAASrI,QAAS,kBAAMlK,EAAc9M,IAAOigB,cAAc,6BACrGjK,EAAAzV,EAAA0V,cAAC2Z,GAAD,CAAe5vB,KAAMA,KAEvBgW,EAAAzV,EAAA0V,cAAC8Y,GAAD,CAASY,IAAI,eAAK1yB,IAAI,KACpB+Y,EAAAzV,EAAA0V,cAAC4Z,GAAD,CAAc7vB,KAAMA,OAIxBgW,EAAAzV,EAAA0V,cAACsZ,GAAA,EAAD,CAAO/lB,YAAY,GAAGgmB,MAAM,yDAAyDL,WAAYA,OAExGnvB,GAAQgW,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOhX,MAAM,2BAAOiX,QAASoW,EAAqBhR,MAAO,KAAMkO,OAAO,GAAGrT,SAAU,kBAAMtD,EAAKyB,SAAS,CAACgY,qBAAqB,MAASjZ,EAAAzV,EAAA0V,cAAC6Z,GAAD,CAAS9vB,KAAMA,aAtD3IuX,aAsEZ2K,eAAQ,KATH,SAAAtiB,GAAQ,MAAK,CAC/B2L,YAD+B,SACnBvL,GACVJ,EAASuiB,EAAe5W,YAAYvL,KAEtC8M,cAJ+B,SAIjB9M,GACZJ,EAASuiB,EAAerV,cAAc9M,OAI3BkiB,CAA2B6H,IC5ElCxJ,GAAWC,KAAXD,OAEFwP,8MAEJnnB,MAAQ,CACNgF,YAAa,yIAIbkH,KAAK5R,MAAM+L,qBACX6F,KAAK5R,MAAMqN,cACXuE,KAAK5R,MAAM2D,cACXiO,KAAK5R,MAAM/C,WAAW2U,KAAK5R,MAAMlH,8CAG1B,IAAAsjB,EAC0XxK,KAAK5R,MAA9X4D,EADDwY,EACCxY,SAAU6G,EADX2R,EACW3R,gBAAiBqiB,EAD5B1Q,EAC4B0Q,YAAa3gB,EADzCiQ,EACyCjQ,cAAeC,EADxDgQ,EACwDhQ,gBAAiB1B,EADzE0R,EACyE1R,YAAa4B,EADtF8P,EACsF9P,mBAAoBZ,EAD1G0Q,EAC0G1Q,SAAUf,EADpHyR,EACoHzR,aAAcC,EADlIwR,EACkIxR,iBAAkB2B,EADpJ6P,EACoJ7P,uBAAwBG,EAD5K0P,EAC4K1P,gBAAiB7B,EAD7LuR,EAC6LvR,iBAAkB2B,EAD/M4P,EAC+M5P,qBAAsB/M,EADrO2c,EACqO3c,YAAagN,EADlP2P,EACkP3P,kBAAmB7T,EADrQwjB,EACqQxjB,MAAOqE,EAD5Qmf,EAC4Qnf,WAAYnE,EADxRsjB,EACwRtjB,YAAaC,EADrSqjB,EACqSrjB,WAAY4T,EADjTyP,EACiTzP,iBAAkBC,EADnUwP,EACmUxP,kBAAmBC,EADtVuP,EACsVvP,eAAgBC,EADtWsP,EACsWtP,eACvWigB,EAAoB,CACxB,CACEhzB,IAAK,UACL2E,MAAO,2BACP0gB,UAAW,UACXC,MAAO,SACPC,OAAQ,SAAA1lB,GAAI,OAAKA,GAAO,6EAE1B,CACEG,IAAK,QACL2E,MAAO,eACP0gB,UAAW,QACXC,MAAO,SACPtE,MAAO,IAET,CACEhhB,IAAK,QACL2E,MAAO,2BACP2gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC1lB,EAAMoK,GAAP,OAAkBA,EAAO+J,KAAQ/J,EAAOwH,OAASxH,EAAOoH,MAAQ,GAAK,eAAOpH,EAAOoH,MAAQ,eAAQ,iBAE7G,CACErR,IAAK,cACL2E,MAAO,2BACP2gB,MAAO,SACP2N,OAAQ,SAAC3vB,EAAG4vB,GAAJ,OAAW,IAAI/xB,KAAKmC,EAAE6N,aAAc/P,UAAa,IAAID,KAAK+xB,EAAE/hB,aAAc/P,WAClFmkB,OAAQ,SAAC1lB,EAAMoK,GAAP,OAAkBA,EAAOgK,UAAYuY,KAAOviB,EAAOkH,aAAasb,OAAO,uBAAyB,iBAE1G,CACEzsB,IAAK,kBACLqlB,UAAW,kBACX1gB,MAAO,2BACP2gB,MAAO,SACP2N,OAAQ,SAAC3vB,EAAG4vB,GAAJ,OAAUA,EAAE9hB,gBAAkB9N,EAAE8N,iBACxCmU,OAAQ,SAAC1lB,EAAMoK,GAAP,OAAkBA,EAAOiK,SAAWsY,KAAO3sB,GAAM4sB,OAAO,YAAc,iBAEhF,CACEzsB,IAAK,cACLqlB,UAAW,cACX1gB,MAAO,6DACP2gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAA1lB,GAAI,OAAIA,EAAKoM,MAAM,EAAG,GAAGwK,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAAA,KAAGhZ,IAAKqK,EAAK1J,KAAM0J,EAAKtG,eAEvE,CACE/D,IAAK,MACL2E,MAAO,2BACP2gB,MAAO,SACPD,UAAW,MACXrE,MAAO,GACPuE,OAAQ,SAAA1lB,GAAI,MAAa,MAATA,EAAe,2BAAkB,MAATA,EAAgB,2BAAkB,MAATA,EAAe,2BAAS,6BAE3F,CACEG,IAAK,cACL2E,MAAO,2BACP2gB,MAAO,SACPD,UAAW,cACXrE,MAAO,GACPuE,OAAQ,SAAC1lB,EAAMoK,GAAP,OAAkBA,EAAO+J,KAAiB,IAATnU,EAAa,2BAAS,2BAAU,OAE3E,CACEG,IAAK,QACL2E,MAAO,2BACP2gB,MAAO,SACPD,UAAW,QACXrE,MAAO,GACPuE,OAAQ,SAAC1lB,EAAMoK,GAAP,OAAkBA,EAAO+J,KAAO,2BAAUnU,GAAc,IAElE,CACE8E,MAAO,SACP2gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC1lB,EAAMoK,EAAQ5F,GAAf,OACN0U,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ5B,WAAW,UAAUrI,QAAS,kBAAMgZ,EAAYxtB,OAAAC,EAAA,EAAAD,CAAA,GAAI0E,KAAU+Y,cAAc,iBACpFjK,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQhB,cAAejK,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAI,CAACsC,SAAU,WAAY9T,MAAMlE,OAAAC,EAAA,EAAAD,CAAA,GAAK0E,KAA5C,kBACvB8O,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQd,SAAUjZ,EAAOgK,WAAahK,EAAOoH,OAASpH,EAAOiK,SAAUkO,WAAanY,EAAOgK,WAAahK,EAAOoH,OAASpH,EAAOiK,SAAY,OAAS,UAAW6F,QAAS,kBAAM1H,EAAgBpI,EAAOtJ,IAAKsJ,EAAOoD,QAAQ2V,cAAc,6BACvOjK,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ5B,WAAW,SAASrI,QAAS,kBAAM3H,EAAcnI,EAAOtJ,IAAK0D,IAAQ2e,cAAc,qBAK7FkE,EAAe,CACnBpB,gBAAiBjV,EACjBuI,SAAU5G,GAENmR,EAAa,CACjBwP,iBAAiB,EACjBC,kBAAkB,EAClBha,SAAUlW,EACVmwB,QAASt0B,GAEX,OACCga,EAAAzV,EAAA0V,cAAA,WACGD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAAC+K,GAAA,EAAD,CACImG,YAAU,EACVF,YAAU,EACV7lB,MAAOnF,EACPoa,SAAUxG,EACVkR,SAAUjR,EACVqG,MAAO,CAAE8H,MAAO,IAAKtH,YAAa,GAClCE,YAAY,8CAEb/P,EAAS4M,IAAI,SAAApM,GAAI,OACd0O,EAAAzV,EAAA0V,cAACsa,GAAD,CAAQtzB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAKtG,WAAYsG,EAAKtG,cAG1DgV,EAAAzV,EAAA0V,cAAC+K,GAAA,EAAD,CAAQ5f,MAAOwM,EAAayI,SAAU,SAAAjV,GAAK,OAAIoO,EAAmBpO,EAAO,gBAAgB+U,MAAO,CAACQ,YAAa,IAC5GX,EAAAzV,EAAA0V,cAACsa,GAAD,CAAQnvB,MAAO,GAAf,gBACA4U,EAAAzV,EAAA0V,cAACsa,GAAD,CAAQnvB,MAAO,GAAf,gBACA4U,EAAAzV,EAAA0V,cAACsa,GAAD,CAAQnvB,MAAO,GAAf,gBACA4U,EAAAzV,EAAA0V,cAACsa,GAAD,CAAQnvB,MAAO,GAAf,gBACA4U,EAAAzV,EAAA0V,cAACsa,GAAD,CAAQnvB,MAAO,GAAf,iBAEF4U,EAAAzV,EAAA0V,cAAC+K,GAAA,EAAD,CAAQ7K,MAAO,CAAC8H,MAAO,KAAM7c,MAAOyM,EAAcwI,SAAU,SAAAjV,GAAK,OAAIoO,EAAmBpO,EAAO,kBAC7F4U,EAAAzV,EAAA0V,cAACsa,GAAD,CAAQnvB,MAAM,4BAAd,4BACA4U,EAAAzV,EAAA0V,cAACsa,GAAD,CAAQnvB,MAAM,sBAAd,sBACCwN,EAAS8E,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAACsa,GAAD,CAAQtzB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAKxL,OAAQwL,EAAKxL,UAExEka,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ7K,KAAK,UAAUiJ,WAAW,UAAUY,cAAc,uCAASL,GAAI,EAAG5I,QAASjH,IACnFiG,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ7K,KAAK,UAAUwJ,GAAI,EAAGP,WAAW,UAAUY,cAAc,uCAASjJ,QAAStH,IACnFsG,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ7K,KAAK,UAAUwJ,GAAI,EAAGP,WAAW,SAASY,cAAc,2BAAOjJ,QAAS,kBAAMhH,EAAelC,MACrGkI,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ7K,KAAK,UAAU0J,GAAI,GAAIG,cAAejK,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAG,YAAT,0CAC9ClC,EAAAzV,EAAA0V,cAACgP,GAAA,EAAD,CAAO7O,KAAK,SAAS8O,OAAQ,SAAAhe,GAAM,OAAIA,EAAOtJ,KAAKykB,QAAS4N,EAAmB1O,WAAY5T,EAAiBwW,aAAcA,EAAcvD,WAAYA,KAEtJ5K,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOhX,MAAM,iCAAQiX,QAAS9K,EAAkB+K,SAAUnJ,EAAmB9N,KAAM,kBAAM+N,EAAgB9B,EAAkBhS,KACzHka,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa5L,SAAU1T,EAAavB,MAAOtF,GACxC8S,EAAS8E,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO/kB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAKxL,OAAQwL,EAAKxL,mBAhJ9Dyb,aA2NJ2K,eAnEE,SAAAtZ,GAAK,MAAK,CACzB9B,SAAU8B,EAAMhK,QAAQ4U,KAAK1M,SAC7B6G,gBAAiB/E,EAAMhK,QAAQ4U,KAAK7F,gBACpCC,YAAahF,EAAMhK,QAAQ4U,KAAK5F,YAChCgB,SAAUhG,EAAMhK,QAAQ4U,KAAK5E,SAC7Bf,aAAcjF,EAAMhK,QAAQ4U,KAAK3F,aACjCC,iBAAkBlF,EAAMhK,QAAQ4U,KAAK1F,iBACrCC,iBAAkBnF,EAAMhK,QAAQ4U,KAAKzF,iBACrCjS,MAAO8M,EAAMhK,QAAQ4U,KAAK1X,MAC1BE,YAAa4M,EAAMhK,QAAQ4U,KAAKxX,YAChCC,WAAY2M,EAAMhK,QAAQ4U,KAAKvX,aAGb,SAAA2D,GAAQ,MAAK,CAC/BiH,YAD+B,WAE7BjH,EAASuiB,EAAetb,gBAE1BoI,mBAJ+B,WAK7BrP,EAASuiB,EAAelT,uBAE1BsB,YAP+B,WAQ7B3Q,EAASuiB,EAAe5R,gBAE1Byf,YAV+B,SAUnB9oB,GACVtH,EAASuiB,EAAe/S,kBAAkBlI,KAE5CmI,cAb+B,SAajB9S,EAAI+E,GAChB1B,EAASuiB,EAAe9S,cAAc9S,EAAI+E,KAE5CgO,gBAhB+B,SAgBf/S,EAAI+N,GAClB1K,EAASuiB,EAAe7S,gBAAgB/S,EAAI+N,KAE9CkF,mBAnB+B,SAmBZpO,EAAOwB,GACxBhD,EAASuiB,EAAe3S,mBAAmBpO,EAAOwB,KAEpD6M,uBAtB+B,SAsBR3B,GACrBlO,EAASuiB,EAAe1S,uBAAuB3B,KAEjD8B,gBAzB+B,SAyBf9B,EAAkBhS,GAChC8D,EAASuiB,EAAevS,gBAAgB9B,EAAkBhS,KAE5D4T,qBA5B+B,WA6B7B9P,EAASuiB,EAAezS,yBAE1B/M,YA/B+B,SA+BnB2T,GACV1W,EAASuiB,EAAexf,YAAY2T,EAAEE,OAAOpV,SAE/CuO,kBAlC+B,WAmC7B/P,EAASuiB,EAAexS,sBAE1BxP,WArC+B,SAqCpBC,GACTR,EAASuiB,EAAehiB,WAAWC,KAErCyP,iBAxC+B,SAwCdzO,GACfxB,EAASuiB,EAAetS,iBAAiBzO,KAE3C0O,kBA3C+B,SA2Cb1O,GAChBxB,EAASuiB,EAAerS,kBAAkB1O,KAE5C2O,eA9C+B,WA+C7BnQ,EAASuiB,EAAepS,mBAE1BC,eAjD+B,SAiDhBlC,GACblO,EAASuiB,EAAenS,eAAelC,OAI5BoU,CAA+B6N,cC5MvCxP,WAAUC,KAAVD,QAEDiQ,uMAGF1b,KAAK5R,MAAM2D,cACXiO,KAAK5R,MAAMqN,cACX,IAAI7J,EAAQoO,KAAK5R,MAAMQ,QAAQ+C,SAASC,MACxCA,GAASoO,KAAK5R,MAAMmO,oBAAoB3K,oCAGjC,IAEH+pB,EAAaC,EAAiBC,EAF3B/b,EAAAE,KAAAwK,EAC2WxK,KAAK5R,MAAhX8K,EADAsR,EACAtR,gBAAiBrM,EADjB2d,EACiB3d,QAASsO,EAD1BqP,EAC0BrP,mBAAoBC,EAD9CoP,EAC8CpP,mBAAoBsV,EADlElG,EACkEkG,UAAWxU,EAD7EsO,EAC6EtO,cAAelK,EAD5FwY,EAC4FxY,SAAUsB,EADtGkX,EACsGlX,cAAe/G,EADrHie,EACqHje,cAAeqC,EADpI4b,EACoI5b,QAAS4N,EAD7IgO,EAC6IhO,iBAAkBC,EAD/J+N,EAC+J/N,kBAAmBzC,EADlLwQ,EACkLxQ,OAAQ6C,EAD1L2N,EAC0L3N,aAAc9C,EADxMyQ,EACwMzQ,aAAc2C,EADtN8N,EACsN9N,QAAS5C,EAD/N0Q,EAC+N1Q,SAAUG,EADzOuQ,EACyOvQ,kBAAmBC,EAD5PsQ,EAC4PtQ,WAAYwB,EADxQ8O,EACwQ9O,eAAgBE,EADxR4O,EACwR5O,uBAAwBC,EADhT2O,EACgT3O,wBAAyBE,EADzUyO,EACyUzO,YAAaE,EADtVuO,EACsVvO,kBAG3V2f,EADE/uB,EAAQ4H,OACQyM,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAAC8H,MAAO,SAAU9F,IAAKxW,EAAQ4H,OAAQ6O,IAAI,KAEvDpC,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,KAAQpK,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,WAAnB,8BAGlB6zB,EADEziB,EAAgBC,IACJ+H,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAAC8H,MAAO,SAAU9F,IAAKnK,EAAgBC,IAAKmK,IAAI,KAE5DpC,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,KAAQpK,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,WAAnB,8BAEa,IAAzBoR,EAAgBpR,KAClB+zB,EAAkB3a,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,2BAAOlD,UAAU,gBAClDF,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM6R,SAAP,CAAgBC,SAAU,CAACC,QAAS,GAAIvkB,MAAOO,EAAQ6H,YAAaqN,YAAY,6CAChER,SAAU,SAAAC,GAAC,OAAIrG,EAAmBqG,EAAG,mBAErB,IAAzBtI,EAAgBpR,KACzB+zB,EAAkB3a,EAAAzV,EAAA0V,cAAA,WAChBD,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAC6P,GAAA,EAAD,CAAQljB,KAAK,YAAYvC,OAAO,gBAAgBgW,SAAU,SAAChK,GACzDmZ,EAAUxX,EAAiB3B,IAC1B0Z,gBAAgB,GAChB2K,IAGL1a,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOiD,YAAY,6CAAUzV,MAAOO,EAAQC,MAAOyU,SAAU,SAAAC,GAAC,OAAIrG,EAAmBqG,EAAG,aAE1FN,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,2BAAOlD,UAAU,gBAChCF,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM6R,SAAP,CAAgBC,SAAU,CAACC,QAAS,GAAIvkB,MAAOO,EAAQ6H,YAAaqN,YAAY,6CAChER,SAAU,SAAAC,GAAC,OAAIrG,EAAmBqG,EAAG,mBAEvDN,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOiD,YAAY,6CAAUzV,MAAOO,EAAQzD,IAAKmY,SAAU,SAAAC,GAAC,OAAIrG,EAAmBqG,EAAG,YAGxD,IAAzBtI,EAAgBpR,OACzB+zB,EACE3a,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAC6P,GAAA,EAAD,CAAQljB,KAAK,YAAYvC,OAAO,gBAAgBgW,SAAU,SAAChK,GACzDmZ,EAAUxX,EAAiB3B,IAC1B0Z,gBAAgB,GAChB0K,KAIT,IAQIG,EA+BJ,OA9BgC,IAA5B5iB,EAAgBG,QAClByiB,EAAU5a,EAAAzV,EAAA0V,cAAAD,EAAAzV,EAAAkY,SAAA,KAAEzC,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BAC3BpD,EAAAzV,EAAA0V,cAAC4a,GAAA,EAAD,CAAazvB,MAAO4M,EAAgBM,MAAOwiB,IAAK,EAAGza,SAAU,SAAAjV,GAAK,OAAI8O,EAAmB9O,EAAO,YAChG4U,EAAAzV,EAAA0V,cAAC+K,GAAA,EAAD,CAAQ5f,MAAO4M,EAAgBU,OAAQ2H,SAAU,SAAAjV,GAAK,OAAI8O,EAAmB9O,EAAO,WAC5E+U,MAAO,CAAC8H,MAAO,KACrBjI,EAAAzV,EAAA0V,cAAC8a,GAAD,CAAQ3vB,MAAO,GAAf,gBACA4U,EAAAzV,EAAA0V,cAAC8a,GAAD,CAAQ3vB,MAAO,GAAf,kBAGF4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAO4M,EAAgBS,YACvB4H,SAAU,SAAAC,GAAC,OAAIpG,EAAmBoG,EAAEE,OAAOpV,MAAO,iBAC7D4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAO,GAAd,4BACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAO,GAAd,+BAI+B,IAA5B4M,EAAgBG,QACzByiB,EACE5a,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAC8U,GAAA,EAAD,CAAYuB,UAAQ,EAACzV,YAAY,2BAAOzV,MAAOqoB,KAAOzb,EAAgBI,aAC1DiI,SAAU,SAACjV,EAAO4vB,GAAR,OAAuB9gB,EAAmB8gB,EAAY,mBAE3C,IAA5BhjB,EAAgBG,UACzByiB,EACE5a,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACgV,GAAA,EAAD,CAAYpU,YAAY,2BAAOzV,MAAOqoB,KAAOzb,EAAgBK,iBACjDgI,SAAU,SAACjV,EAAO4vB,GAAR,OAAuB9gB,EAAmB9O,EAAO,wBAI3E4U,EAAAzV,EAAA0V,cAAC0U,GAAA,EAAD,CAAgBrC,OAAQsC,MAEtB5U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAAC2S,GAAD,CAAoBxgB,cAAeA,EAAgBpD,MAAOgJ,EAAgBhJ,MAAOrD,QAASqU,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,0BACvGF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACbF,EAAAzV,EAAA0V,cAAC8C,GAAA,EA7CY,CACrBC,SAAU,CACRqI,GAAI,CAACpI,KAAM,IAEbC,WAAY,CACVmI,GAAI,CAACpI,KAAM,GAAImN,OAAQ,KAyCfpQ,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAAC8H,MAAO,SAClBnX,EAAS4M,IAAI,SAAApM,GAAI,OAAI0G,EAAgBhJ,MAAM7G,QAAQmJ,EAAKtH,OAAS,GAAKgW,EAAAzV,EAAA0V,cAAC8L,GAAA,EAAD,CAAK9kB,IAAKqK,EAAK1J,IAAKsY,UAAU,qBAAqB4S,UAAQ,EAACC,QAAS,kBAAM1nB,EAAc2M,EAAgBhJ,MAAOsC,EAAKtH,QAAQsH,EAAKtG,eAG5MgV,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAO4M,EAAgBQ,QAASqI,YAAY,wHAC5CR,SAAU,SAAAC,GAAC,OAAIpG,EAAmBoG,EAAEE,OAAOpV,MAAO,eAE3D4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAC8L,GAAA,EAAD,CAAK1P,MAAiC,uBAA1BrE,EAAgBlS,MAAkB,UAAY,GAAIgtB,SAAoC,uBAA1B9a,EAAgBlS,MACnFitB,QAAShY,EACToF,MAAiC,uBAA1BnI,EAAgBlS,MAAkB,GAAK,CAACujB,WAAY,OAAQ4R,YAAa,WAClFjjB,EAAgBlS,QAGrBka,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACdrK,GACGiH,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CACIsd,IAAK,SAAAtd,GAAK,OAAIgB,EAAKhB,MAAQA,GAC3BhX,KAAK,OACLwZ,KAAK,QACLD,MAAO,CAAC8H,MAAO,GAAItH,YAAa,IAChCvV,MAAO4N,EACPqH,SAAU3F,EACVygB,OAAQxgB,EACRygB,aAAczgB,KAGpB5B,GACEiH,EAAAzV,EAAA0V,cAAC8L,GAAA,EAAD,CAAK7L,UAAU,SAASc,QAAS,kBAAMxG,EAAeoE,IACjDuB,MAAO,CAACkJ,WAAY,OAAQ4R,YAAa,WAC5Cjb,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,SAFb,YAKHgS,EAAS8E,IAAI,SAACpM,EAAMhG,GAAP,OAAiB0U,EAAAzV,EAAA0V,cAAC8L,GAAA,EAAD,CAAK1P,MAAM,UAAUpV,IAAKqK,EAAK1J,IAAKsY,UAAU,SAAS4S,UAAQ,EAACC,QAAS,SAAAzS,GAAC,OAAIzF,EAAYyF,EAAGhP,EAAK1J,IAAK0D,IAAQ0V,QAAS,SAAAV,GAAC,OAAIpG,EAAmB5I,EAAKxL,MAAO,WACxLwL,EAAKxL,UAGVka,EAAAzV,EAAA0V,cAACgQ,GAAA,EAAD,CAAS9P,MAAO,CAAC8H,MAAO,OAAQC,YAAa,MAC7ClI,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,wCACAF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,KACEnD,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7C,YAAY,QAAQhe,MAAO4M,EAAgBpR,KAAMyZ,SAAU,SAAAC,GAAC,OAAIpG,EAAmBoG,EAAEE,OAAOpV,MAAO,UAC9G4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMf,OAAP,CAAc7f,MAAO,GAArB,4BACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMf,OAAP,CAAc7f,MAAO,GAArB,8BAGHuvB,EACD3a,EAAAzV,EAAA0V,cAACgQ,GAAA,EAAD,CAAS9P,MAAO,CAAC8H,MAAO,OAAQC,YAAa,MAC7ClI,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,wCACAF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAO4M,EAAgBnR,IAAKwZ,SAAU,SAAAC,GAAC,OAAIpG,EAAmBoG,EAAEE,OAAOpV,MAAO,SACzF4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAM,OAAb,4BACA4U,EAAAzV,EAAA0V,cAAA,WACAD,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAM,KAAb,kCACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAM,KAAb,kCACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAM,KAAb,oCAGJ4U,EAAAzV,EAAA0V,cAACgQ,GAAA,EAAD,CAAS9P,MAAO,CAAC8H,MAAO,OAAQC,YAAa,MAC7ClI,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,wCACAF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAO4M,EAAgBG,QACvBkI,SAAU,SAAAC,GAAC,OAAIpG,EAAmBoG,EAAEE,OAAOpV,MAAO,aAC7D4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMf,OAAP,CAAc7f,MAAO,GAArB,gBACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMf,OAAP,CAAc7f,MAAO,GAArB,gBACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMf,OAAP,CAAc7f,MAAO,GAArB,gBACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMf,OAAP,CAAc7f,MAAO,GAArB,8BAGHwvB,EACD5a,EAAAzV,EAAA0V,cAACgQ,GAAA,EAAD,CAAS9P,MAAO,CAAC8H,MAAO,OAAQC,YAAa,MAC7ClI,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,KACEnD,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQhK,KAAK,QAAQxZ,KAAK,UAClBoa,QAAS,kBAAMhG,EAAchD,EAAiBtK,EAASoD,KAD/D,eAC8EkH,EAAgBpQ,IAAgB,iCAAV,kCACnGoQ,EAAgBpQ,KAAOoY,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQjK,MAAO,CAAC+H,WAAY,IAAKthB,KAAK,OAAOwZ,KAAK,QAC1CY,QAAS,kBAAMtT,EAAQC,WAD/B,4BAExBqS,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQhK,KAAK,QAAQD,MAAO,CAAC+H,WAAY,GAAImB,WAAY,cAAegS,YAAa,eAC7Ez0B,KAAK,UAAUoa,QAAS1F,GADhC,mCAOV0E,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOhX,MAAM,2BAAOiX,QAAShK,EAAciK,SAAUvH,EAC9C1P,KAAM,kBAAM2P,EAAQxD,EAAiBc,KAC1CkH,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU1E,EAAcvQ,MAAO0N,EAAQ+H,YAAY,2DAC1Db,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,QAAhB,mDAAoCF,EAAAzV,EAAA0V,cAAA,wBAApC,kFAAuED,EAAAzV,EAAA0V,cAAA,WAAvE,iHAONnB,KAAK5R,MAAMyD,oBArMW4Q,aAgSX2K,eAvFE,SAAAtZ,GAAK,MAAK,CACzBoF,gBAAiBpF,EAAMhK,QAAQ4U,KAAKxF,gBACpCrM,QAASiH,EAAMhK,QAAQ4U,KAAK7R,QAC5BmF,SAAU8B,EAAMhK,QAAQ4U,KAAK1M,SAC7B+H,aAAcjG,EAAMhK,QAAQ4U,KAAK3E,aACjCC,OAAQlG,EAAMhK,QAAQ4U,KAAK1E,OAC3BF,SAAUhG,EAAMhK,QAAQ4U,KAAK5E,SAC7BG,kBAAmBnG,EAAMhK,QAAQ4U,KAAKzE,kBACtCC,WAAYpG,EAAMhK,QAAQ4U,KAAKxE,aAGb,SAAApP,GAAQ,MAAK,CAC/ByR,oBAD+B,SACX3K,GAClB9G,EAASuiB,EAAe9Q,oBAAoB3K,KAE9CuJ,mBAJ+B,SAIZqG,EAAG1T,GACpBhD,EAASuiB,EAAelS,mBAAmBqG,EAAEE,OAAOpV,MAAOwB,KAE7D4iB,UAP+B,SAOrBxX,EAAiB3B,GACzB,GAAyB,SAArBA,EAAKqb,KAAK3rB,OAAmB,CAC/B,IAAIkS,EAAG,8BAAApP,OAAiCwN,EAAKqb,KAAK/oB,SAASgpB,UACzDzZ,EAAQ,oBAAArP,OAAuBwN,EAAKqb,KAAK/oB,SAASgpB,UACvB,IAAzB3Z,EAAgBpR,KAClBgD,EAASuiB,EAAelS,mBAAmBhC,EAAK,YAEhDrO,EAASuiB,EAAejS,mBAAmBjC,EAAK,QAChDrO,EAASuiB,EAAejS,mBAAmBhC,EAAU,gBAI3DgC,mBAnB+B,SAmBZ9O,EAAOwB,GACxBhD,EAASuiB,EAAejS,mBAAmB9O,EAAOwB,KAEpD+D,WAtB+B,WAuB7B/G,EAASuiB,EAAexb,eAE1B0J,aAzB+B,WA0B7BzQ,EAASuiB,EAAe9R,iBAE1BW,cA5B+B,SA4BjB3E,EAAM3I,EAASoD,GAC3BlH,EAASuiB,EAAenR,cAAc3E,EAAM3I,EAASoD,KAEvDsB,cA/B+B,SA+BjBpD,GACZpF,EAASuiB,EAAe/Z,cAAcpD,KAExC3D,cAlC+B,SAkCjB2D,EAAOhF,GACnBgF,EAAMmE,OAAOnE,EAAM7G,QAAQ6B,GAAO,GAClCJ,EAASuiB,EAAe/Z,cAAcpD,KAExC6B,YAtC+B,WAuC7BjH,EAASuiB,EAAetb,gBAE1B8K,aAzC+B,SAyClB2E,GACX1W,EAASuiB,EAAexQ,aAAa2E,EAAEE,OAAOpV,SAEhDkQ,iBA5C+B,WA6C7B1R,EAASuiB,EAAe7Q,qBAE1BC,kBA/C+B,WAgD7B3R,EAASuiB,EAAe5Q,sBAE1BC,QAlD+B,SAkDvBnF,EAAMyC,GACZlP,EAASuiB,EAAe3Q,QAAQnF,EAAMyC,KAExCyB,YArD+B,WAsD7B3Q,EAASuiB,EAAe5R,gBAE1BC,eAxD+B,SAwDhBC,GACb7Q,EAASuiB,EAAe3R,eAAeC,KAEzCC,uBA3D+B,SA2DR4F,GACrB1W,EAASuiB,EAAezR,uBAAuB4F,EAAEE,OAAOpV,SAE1DuP,wBA9D+B,SA8DP2F,GACtB1W,EAASuiB,EAAexR,wBAAwB2F,EAAEE,OAAOpV,SAE3DyP,YAjE+B,SAiEnByF,EAAG1Y,EAAK0D,GAClBgV,EAAEgb,iBACFhb,EAAEmR,kBACF7nB,EAASuiB,EAAetR,YAAYjT,EAAK0D,KAE3CyP,kBAtE+B,SAsEbuF,GAChBA,EAAEgb,iBACF1xB,EAASuiB,EAAepR,wBAIbmR,CAA+BsO,ICnTvCnQ,GAAUC,KAAVD,OAEDkR,oLACK,IAAAjS,EACmGxK,KAAK5R,MAAxG2O,EADAyN,EACAzN,SAAUD,EADV0N,EACU1N,oBAAqBW,EAD/B+M,EAC+B/M,eAAgBC,EAD/C8M,EAC+C9M,aAAcC,EAD7D6M,EAC6D7M,mBAAoBC,EADjF4M,EACiF5M,eAClF8e,EAAkB,CACtB,CACEv0B,IAAK,WACLqlB,UAAW,WACX1gB,MAAO,qBACP2gB,MAAO,UACN,CACDtlB,IAAK,OACLqlB,UAAW,OACX1gB,MAAO,2BACP2gB,MAAO,UACN,CACDtlB,IAAK,MACLqlB,UAAW,MACX1gB,MAAO,2BACP2gB,MAAO,SACPC,OAAQ,SAAA1lB,GAAI,MAAa,QAATA,EAAiB,eAAiB,MAATA,EAAe,SAAgB,MAATA,EAAe,SAAM,iBACnF,CACDG,IAAK,eACLqlB,UAAW,eACX1gB,MAAO,2BACP2gB,MAAO,UACN,CACDtlB,IAAK,cACLqlB,UAAW,cACX1gB,MAAO,eACP2gB,MAAO,SACPC,OAAQ,SAAC1lB,EAAMoK,GAAP,OAAkBA,EAAOgK,UAAYuY,KAAO3sB,GAAM4sB,OAAO,uBAAyB,OACzF,CACDzsB,IAAK,SACLqlB,UAAW,SACX1gB,MAAO,2BACP2gB,MAAO,SACPtE,MAAO,GACPuE,OAAQ,SAAA1lB,GAAI,OAAa,IAATA,EAAa,qBAAkB,IAATA,EAAa,2BAAmB,IAATA,EAAa,mDAAa,6BACtF,CACDG,IAAK,QACLqlB,UAAW,QACX1gB,MAAO,uCACP2gB,MAAO,SACPtE,MAAO,IACN,CACDhhB,IAAK,SACL2E,MAAO,eACP2gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC1lB,EAAMoK,EAAQ5F,GAAf,OAAyB0U,EAAAzV,EAAA0V,cAAA,YAC5B/O,EAAOgK,WAA+B,IAAlBhK,EAAOnL,QAAiBia,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQhB,cAAc,eAAKjJ,QAAS,kBAAMxE,EAAatL,EAAOtJ,IAAK0D,IAAQ+d,WAAW,YAClH,IAAlBnY,EAAOnL,QAAgBia,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQhB,cAAejK,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAI,CAACsC,SAAU,WAAY9T,MAAMlE,OAAAC,EAAA,EAAAD,CAAA,GAAK0E,KAA5C,kBAC/C8O,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQhB,cAAc,eAAKjJ,QAAS,kBAAMzE,EAAerL,EAAOtJ,IAAK0D,IAAQ+d,WAAW,eAI9F,OACErJ,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAACwb,GAAD,CAAQtb,MAAO,CAAC8H,MAAO,KAAMpH,YAAY,iCAAQzV,MAAOyQ,EAAUwE,SAAU5D,EAAoBsO,SAAUrO,IAC1GsD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,MAAKF,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ7K,KAAK,UAAUF,UAAU,KAAK4J,GAAI,GAAIG,cAAejK,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAG,YAAT,6CACjFlC,EAAAzV,EAAA0V,cAACgP,GAAA,EAAD,CAAOC,OAAQ,SAAAhe,GAAM,OAAIA,EAAOtJ,KAAKwY,KAAK,SAASmL,WAAY3P,EAAqByQ,QAASmP,iDAMjG1c,KAAK5R,MAAMoP,yBAlEQiF,aA6FR2K,eAvBE,SAAAtZ,GAAK,MAAK,CACzBgJ,oBAAqBhJ,EAAMhK,QAAQoV,SAASpC,oBAC5CC,SAAUjJ,EAAMhK,QAAQoV,SAASnC,WAGf,SAAAjS,GAAQ,MAAK,CAC/B0S,gBAD+B,WAE7B1S,EAASuiB,EAAe7P,oBAE1BC,eAJ+B,SAIhBhW,EAAI+E,GACjB1B,EAASuiB,EAAe5P,eAAehW,EAAI+E,KAE7CkR,aAP+B,SAOlBjW,EAAI+E,GACf1B,EAASuiB,EAAe3P,aAAajW,EAAI+E,KAE3CmR,mBAV+B,SAUZ6D,GACjB1W,EAASuiB,EAAe1P,mBAAmB6D,EAAEE,OAAOpV,SAEtDsR,eAb+B,SAahBtR,GACbxB,EAASuiB,EAAezP,eAAetR,OAI5B8gB,CAA+BqP,ICrF/BG,GAfW,SAAAxuB,GAAS,IAC1B4O,EAAuE5O,EAAvE4O,mBAAoBhL,EAAmD5D,EAAnD4D,SAAU9G,EAAyCkD,EAAzClD,KAAMkT,EAAmChQ,EAAnCgQ,cAAeC,EAAoBjQ,EAApBiQ,iBAC1D,OACE6C,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOqF,MAAO,IAAMpF,QAAS/G,EAAoB6f,cAAc,EAAO7I,UAAU,EAAO8I,MAAM,EAAQzF,OAAQnW,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQxjB,KAAK,UAAUujB,UAAWngB,EAAMgX,QAAS7D,GAAjD,iBAC3G6C,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAOpB,EAAMmW,MAAO,CAAE8H,MAAO,QAAU5H,SAAU,SAAAC,GAAC,OAAIpD,EAAcoD,EAAEE,OAAOpV,MAAOpB,KAC/FgW,EAAAzV,EAAA0V,cAAC+S,GAAA,EAAD,KACGliB,EAAS4M,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAAC4S,GAAA,EAAD,CAAK5P,KAAM,EAAGhc,IAAKqK,EAAK1J,KAC5CoY,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAOkG,EAAKtH,MAAOsH,EAAKtG,kBCepCuf,WAAUC,KAAVD,QACDsR,GAAS,CAAC,OAAQ,UAAW,UAAW,UAAW,UAAW,QAC9DC,GAAoB,CACxB7T,MAAO,GACPmR,OAAQ,GACRlR,WAAY,GACZqG,QAAS,eACTzC,UAAW,GAGPiQ,0QAGFjd,KAAK5R,MAAM2D,cACJH,EAASoO,KAAK5R,MAAMuD,SAApBC,WACPA,kDAAeoO,KAAK5R,MAAMkQ,gBAAgB1M,mFAI1C,IAiCIsrB,EAlCG1S,EAU6SxK,KAAK5R,MAAlT0P,EAVA0M,EAUA1M,gBAAiBpO,EAVjB8a,EAUiB9a,YAAa2C,EAV9BmY,EAU8BnY,kBAAmB2K,EAVjDwN,EAUiDxN,mBAAoBhL,EAVrEwY,EAUqExY,SAAU+L,EAV/EyM,EAU+EzM,cAAeZ,EAV9FqN,EAU8FrN,aAAcC,EAV5GoN,EAU4GpN,aAAcE,EAV1HkN,EAU0HlN,qBAAsBW,EAVhJuM,EAUgJvM,eAAgBrP,EAVhK4b,EAUgK5b,QAASsN,EAVzKsO,EAUyKtO,cAAekC,EAVxLoM,EAUwLpM,cAAeC,EAVvMmM,EAUuMnM,iBAAkB7B,EAVzNgO,EAUyNhO,iBAAkBC,EAV3O+N,EAU2O/N,kBAAmBzC,EAV9PwQ,EAU8PxQ,OAAQ6C,EAVtQ2N,EAUsQ3N,aAAc9C,EAVpRyQ,EAUoRzQ,aAAc2C,EAVlS8N,EAUkS9N,QAVlSuO,EAWwEjL,KAAK5R,MAAtEvB,GAXPoe,EAWCkS,KAXDlS,EAWOpe,SAASmR,EAXhBiN,EAWgBjN,mBAAoBE,EAXpC+M,EAWoC/M,kBAAmBC,EAXvD8M,EAWuD9M,aACxDkZ,EACFnW,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAAC+b,SAAU,SAAUxN,WAAY,MAC3C1O,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,MACZ2b,GAAOne,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,SAASC,MAAK3T,OAAAC,EAAA,EAAAD,CAAA,GAAMsvB,GAAN,CAAyBzS,WAAY/X,IAAOrK,IAAKqK,EAAM0P,QAAS,kBAAM/D,EAAa,QAAS3L,SAEhJ0O,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQxjB,KAAK,UAAUsZ,UAAU,KAAKc,QAAShE,GAA/C,iBAEFgB,EAAW,GAnBRme,EAAA,SAoBEl1B,GACP,IAAI0E,EAAU6C,EAAY7C,QAAQ1E,GACtB,UAARA,EACF+W,EAAST,QAAQyC,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAOlH,EAAa5T,KAAb,MAA2B8zB,KAAO,GAAIn1B,IAAI,SAC3E+Y,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,OAAOvU,EAAQP,OAC/B4U,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMR,UAAU,SAASc,QAAS,kBAAMnE,EAAc5V,EAAK0E,IAAU/E,KAAK,WAG5EoX,EAAS5K,KAAK4M,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAOlH,EAAa5T,KAAKrB,GAAKm1B,KAAO,GAAIn1B,IAAKA,GACrE+Y,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,OAAOvU,EAAQP,OAC/B4U,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMR,UAAU,SAASc,QAAS,kBAAMnE,EAAc5V,EAAK0E,IAAU/E,KAAK,YAVhF,IAAK,IAAIK,KAAOiV,EAAa5T,KAAM6zB,EAA1Bl1B,GAkBT,OAHA6U,IAAuBkgB,EACrBhc,EAAAzV,EAAA0V,cAACoc,GAAD,CAAmBryB,KAAMwE,EAAYxE,KAAMkT,cAAeA,EAAeC,iBAAkBA,EACxErM,SAAUA,EAAUgL,mBAAoBA,KAE3DkE,EAAAzV,EAAA0V,cAAC0U,GAAA,EAAD,CAAgBrC,OAAQsC,MACtB5U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,0BACbF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAADvW,OAAAiH,OAAA,CAAMyM,UAAU,aAxCC,CACrB8C,SAAU,CACRqI,GAAI,CAACpI,KAAM,IAEbC,WAAY,CACVmI,GAAI,CAACpI,KAAM,GAAImN,OAAQ,KAmCrB,CAAgDjQ,MAAO,CAAC8H,MAAO,OAC7DjI,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACqC,GAAA,EAAD,CAAQtB,QAASpE,EAAiBsD,UAAU,SAAS2L,MAAM,SAASnL,KAAK,UAE3EV,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOoD,EAAY5B,KAAMyT,SAAU,SAAAC,GAAC,OAAInP,EAAkB,OAAQmP,EAAEE,OAAOpV,QAC3EyV,YAAY,2HAErBb,EAAAzV,EAAA0V,cAACgQ,GAAA,EAAD,CAAS9P,MAAO,CAAC8H,MAAO,OAAQC,YAAa,MAC7ClI,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,wCACAF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAC+K,GAAA,EAAD,CAAQ5f,MAAOoD,EAAYuN,WAAYsE,SAAUtD,GAC9Cd,EAAayB,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAACqc,GAAD,CAAQlxB,MAAOkG,EAAK6K,YACZlV,IAAKqK,EAAK6K,aAAc7K,EAAK1F,WAGnEoU,EAAAzV,EAAA0V,cAAC+S,GAAA,EAAD,CAAK9S,UAAU,oBACbF,EAAAzV,EAAA0V,cAAC4S,GAAA,EAAD,CAAK5P,KAAM,IACXjD,EAAAzV,EAAA0V,cAAC4S,GAAA,EAAD,CAAK5P,KAAM,IACTjD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACZlC,KAIPgC,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOoD,EAAYtG,IAAK2Y,YAAY,sGACpCR,SAAU,SAAAC,GAAC,OAAInP,EAAkB,MAAOmP,EAAEE,OAAOpV,WAE1D4U,EAAAzV,EAAA0V,cAACgQ,GAAA,EAAD,CAAS9P,MAAO,CAAC8H,MAAO,OAAQC,YAAa,MAC7ClI,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,wCACAF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAMC,MAAP,CAAa7gB,MAAOoD,EAAY3H,IAAKwZ,SAAU,SAAAC,GAAC,OAAInP,EAAkB,MAAOmP,EAAEE,OAAOpV,SACpF4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAM,OAAb,4BACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAM,KAAb,4BACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAM,KAAb,sBACA4U,EAAAzV,EAAA0V,cAAC+L,GAAA,EAAD,CAAO5gB,MAAM,KAAb,wBAGJ4U,EAAAzV,EAAA0V,cAACgQ,GAAA,EAAD,CAAS9P,MAAO,CAAC8H,MAAO,OAAQC,YAAa,MAC7ClI,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,wCACAF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACoR,GAAA,EAAD,CAAQC,QAAS9iB,EAAY0M,UAAWmF,SAAU,SAAAjV,GAAK,OAAI+F,EAAkB,YAAa/F,OAE3FoD,EAAY0M,WAAa8E,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACzCpD,EAAAzV,EAAA0V,cAAC8U,GAAA,EAAD,CAAYuB,UAAQ,EAACzV,YAAY,2BAAOzV,MAAOqoB,KAAOjlB,EAAY4J,aACtDiI,SAAU,SAACjV,EAAO4vB,GAAR,OAAuB7pB,EAAkB,cAAe6pB,OAEhFhb,EAAAzV,EAAA0V,cAACgQ,GAAA,EAAD,CAAS9P,MAAO,CAAC8H,MAAO,OAAQC,YAAa,MAC7ClI,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,KACEnD,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQhK,KAAK,QAAQxZ,KAAK,UAClBoa,QAAS,kBAAMhG,EAAcxM,EAAad,EAASuO,KAD3D,eAC8EzN,EAAY5G,IAAgB,iCAAV,kCAC/F4G,EAAY5G,KACboY,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQjK,MAAO,CAAC+H,WAAY,IAAKthB,KAAK,OAAOwZ,KAAK,QAAQY,QAAS,kBAAMtT,EAAQC,WAAjF,4BACAqS,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQhK,KAAK,QAAQD,MAAO,CAAC+H,WAAY,GAAImB,WAAY,cAAegS,YAAa,eAC7Ez0B,KAAK,UAAUoa,QAAS1F,GADhC,8BAIH0gB,EACDhc,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CACIC,QAASzG,EACT0G,SAAUhG,EACVgW,UAAU,EACVqD,OAAQA,EACRyF,MAAM,GAER5b,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM6R,SAAP,CAAgBtP,MAAO,CAAC9D,MAAO1Q,EAAO,OAAYP,MAAOO,EAAO,MAAW+jB,SAAU,CAAEC,QAAS,EAAGC,QAAS,GAAKvP,SAAU,SAAAC,GAAC,OAAIrD,EAAa,QAASqD,EAAEE,OAAOpV,WAEjK4U,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOhX,MAAM,2BAAOiX,QAAShK,EAAciK,SAAUvH,EAC9C1P,KAAM,kBAAM2P,EAAQhN,EAAasK,KACtCkH,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU1E,EAAcvQ,MAAO0N,EAAQ+H,YAAY,2DAC1Db,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,QAAhB,mDAAoCF,EAAAzV,EAAA0V,cAAA,wBAApC,kFAAuED,EAAAzV,EAAA0V,cAAA,WAAvE,kHAQRnB,KAAK5R,MAAMyD,oBA/HY4Q,aAsMZ2K,eAnEE,SAAAtZ,GAAK,MAAK,CACzBpE,YAAaoE,EAAMhK,QAAQoV,SAASxP,YACpCyN,aAAcrJ,EAAMhK,QAAQoV,SAAS/B,aACrCC,aAActJ,EAAMhK,QAAQoV,SAAS9B,aACrCE,qBAAsBxJ,EAAMhK,QAAQoV,SAAS5B,qBAC7CN,mBAAoBlJ,EAAMhK,QAAQoV,SAASlC,mBAC3ChL,SAAU8B,EAAMhK,QAAQoV,SAASlN,SACjC+H,aAAcjG,EAAMhK,QAAQoV,SAASnF,aACrCC,OAAQlG,EAAMhK,QAAQoV,SAASlF,OAC/BnN,QAASiH,EAAMhK,QAAQoV,SAASrS,UAGd,SAAA/B,GAAQ,MAAK,CAC/BiH,YAD+B,WAE7BjH,EAASuiB,EAAetb,gBAE1BgM,cAJ+B,SAIjB5V,EAAK0E,IAChBA,EAAQ0Q,QAAU1Q,EAAQ0Q,MAAQ,QACnCzS,EAASuiB,EAAetP,cAAc5V,EAAK0E,KAE7CoR,eAR+B,SAQhB3R,GACbxB,EAASuiB,EAAepP,eAAe3R,KAEzC4P,cAX+B,SAWjB3E,EAAM3I,EAASuO,GAC3BrS,EAASuiB,EAAenR,cAAc3E,EAAM3I,EAASuO,KAEvDW,gBAd+B,WAe7BhT,EAASuiB,EAAevP,oBAE1BzL,kBAjB+B,SAiBblK,EAAKmE,GACrBxB,EAASuiB,EAAehb,kBAAkBlK,EAAKmE,KAEjDgS,gBApB+B,SAoBflM,GACdtH,EAASuiB,EAAe/O,gBAAgBlM,KAE1CgM,cAvB+B,SAuBjBlT,GACZJ,EAASuiB,EAAejP,cAAclT,KAExC2G,WA1B+B,WA2B7B/G,EAASuiB,EAAexb,eAE1BwM,iBA7B+B,WA8B7BvT,EAASuiB,EAAehP,qBAE1BxB,aAhC+B,SAgClB2E,GACX1W,EAASuiB,EAAexQ,aAAa2E,EAAEE,OAAOpV,SAEhDkQ,iBAnC+B,WAoC7B1R,EAASuiB,EAAe7Q,qBAE1BC,kBAtC+B,WAuC7B3R,EAASuiB,EAAe5Q,sBAE1BC,QAzC+B,SAyCvBnF,EAAMyC,GACZlP,EAASuiB,EAAe3Q,QAAQnF,EAAMyC,KAExCgE,mBA5C+B,WA6C7BlT,EAASuiB,EAAerP,uBAE1BE,kBA/C+B,WAgD7BpT,EAASuiB,EAAenP,sBAE1BC,aAlD+B,SAkDlBhW,EAAKmE,GAChBxB,EAASuiB,EAAelP,aAAahW,EAAKmE,OAI/B8gB,CAA+B6P,ICrM/BQ,oLAxBX,OACCvc,EAAAzV,EAAA0V,cAAA,WACGD,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,kBACVjE,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,KACElT,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,6BAA6BkP,UAAWlH,KACpDjM,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,gCAAgCkP,UAAWqJ,KACvDxc,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,+BAA+BkP,UAAW8E,KACtDjY,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,4BAA4BkP,UAAW4G,KACnD/Z,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,6BAA6BkP,UAAWsJ,KACpDzc,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,6BAA6BkP,UAAWsJ,KACpDzc,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,gCAAgCkP,UAAWoI,KACvDvb,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,iCAAiCkP,UAAW4I,KACxD/b,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,iCAAiCkP,UAAW4I,KACxD/b,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAUE,KAAK,iBAAiBC,OAAK,EAACnR,GAAG,yBACzClC,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAUE,KAAK,uBAAuBC,OAAK,EAACnR,GAAG,+BAC/ClC,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAUE,KAAK,sBAAsBC,OAAK,EAACnR,GAAG,8BAC9ClC,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAUE,KAAK,0BAA0BC,OAAK,EAACnR,GAAG,4CAlBpCX,aCJnBwX,GAAWC,KAAXD,QAkLQ2D,eA/Kb,SAAAA,EAAYxvB,GAAO,IAAA0R,EAAA,OAAApS,OAAAqS,EAAA,EAAArS,CAAAsS,KAAA4d,IACjB9d,EAAApS,OAAAuS,EAAA,EAAAvS,CAAAsS,KAAAtS,OAAAwS,EAAA,EAAAxS,CAAAkwB,GAAAzd,KAAAH,KAAM5R,KAIR0F,MAAQ,CACN+pB,WAAY,GACZC,aAAc,GACd5oB,QAAS,GACT6oB,SAAU,IAPVje,EAAKke,UAAYle,EAAKke,UAAU3d,KAAf3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAFAA,wEAYV,IAAAY,EAAAV,KAAAiD,EACuBjD,KAAKlM,MAA5B+pB,EADA5a,EACA4a,WACDI,EAFChb,EACY/N,QACQ0J,IAAI,SAAApM,GAAI,OACjC0O,EAAAzV,EAAA0V,cAAC+c,GAAD,CAASrD,IAAKroB,EAAK1E,KAAM3F,IAAKqK,EAAK1E,SAE/BqwB,EAAe,CACnB,CACEh2B,IAAK,QACL2E,MAAO,eACP2gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC1lB,EAAMoK,GAAP,OAAkB8O,EAAAzV,EAAA0V,cAAA,KACxBE,MAAO,CAAC8H,MAAO,IAAKiV,SAAU,aAAc9F,WAAY,QAAS,6BAA+BlmB,EAAO3K,MAE3G,CACEU,IAAK,QACLqlB,UAAW,QACX1gB,MAAO,eACP2gB,MAAO,SACPtE,MAAO,KAET,CACEhhB,IAAK,QACLqlB,UAAW,QACX1gB,MAAO,eACP2gB,MAAO,UAET,CACEtlB,IAAK,UACLqlB,UAAW,UACX1gB,MAAO,eACP2gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAA1lB,GAAI,OAAIA,GAAc,WAEhC,CACE8E,MAAO,eACP2gB,MAAO,SACPtE,MAAO,GACPuE,OAAQ,SAAC1lB,EAAMoK,GAAP,OAAkB8O,EAAAzV,EAAA0V,cAAA,KAAGqB,KAAM,iCAAmCpQ,EAAO3K,GAAIia,OAAQ,UAA/D,8BAE5B,CACE5U,MAAO,eACP2gB,MAAO,SACPtE,MAAO,GACPuE,OAAQ,SAAC1lB,EAAMoK,GAAP,OAAkB8O,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ5B,WAAW,UAAUrI,QAAS,kBAAMxB,EAAK2d,MAAMjsB,EAAOtJ,MAAMqiB,cAAc,mBAE9G,CACEre,MAAO,SACP2gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC1lB,EAAMoK,EAAQ5F,GAAf,OAAyB0U,EAAAzV,EAAA0V,cAAA,WAC/BD,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQhB,cAAejK,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAI,CAACsC,SAAU,WAAY9T,MAAMlE,OAAAC,EAAA,EAAAD,CAAA,GAAK0E,KAA5C,kBACvB8O,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ5B,WAAW,SAASY,cAAc,eAAKjJ,QAAS,kBAAMxB,EAAK4d,WAAWlsB,EAAOtJ,IAAK0D,MAC1F0U,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ5B,WAAW,UAAUK,GAAI,EAAGO,cAAc,eAAKjJ,QAAS,kBAAMxB,EAAK6d,SAAL7wB,OAAAC,EAAA,EAAAD,CAAA,GAAkB0E,WAI9F,OACE8O,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ7K,KAAK,UAAUiJ,WAAW,UAAUS,GAAI,GAAIG,cAAejK,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAG,YAAT,oCACnElC,EAAAzV,EAAA0V,cAACwZ,GAAA,EAAD,CAAM6D,UAAU,EAAOC,iBAAiB,MAAMC,aAAc,EAAGnd,SAAUvB,KAAKge,UACxE1c,KAAK,SACTJ,EAAAzV,EAAA0V,cAAC+c,GAAD,CAASrD,IAAI,MAAM1yB,IAAI,QACtB81B,GAEH/c,EAAAzV,EAAA0V,cAACgP,GAAA,EAAD,CAAOC,OAAQ,SAAAhe,GAAM,OAAIA,EAAOtJ,KAAKwY,KAAK,QAAQkO,UAAQ,EAACjC,QAAS4Q,EAAc1R,WAAYoR,kDAOpG7d,KAAK2e,gBACL3e,KAAK7I,qDAGS,IAAAiL,EAAApC,KACd3X,EAAM0C,IAAI,aAAaC,KAAK,SAAAC,GAC1B,IAAI4yB,EAAa5yB,EAAIzB,KAAK6Q,SACtByjB,EAAe7yB,EAAIzB,KAAKs0B,aAC5B1b,EAAKD,SAAS,CACZ0b,aACAE,SAAUF,EACVC,wDAKO,IAAA5F,EAAAlY,KACX3X,EAAM0C,IAAI,gBAAgBC,KAAK,SAAAC,GAAO,IACvBiK,EAAWjK,EAAIzB,KAArBA,KACP0uB,EAAK/V,SAAS,CAACjN,gDAIT/M,GAAK,IACN41B,EAAY/d,KAAKlM,MAAjBiqB,SACP,GAAY,QAAR51B,EACF6X,KAAKmC,SAAS,CACZ0b,WAAYE,QAET,CAEL,IADA,IAAIv0B,EAAO,GACFqJ,EAAI,EAAGA,EAAIkrB,EAAS3yB,OAAQyH,IAC/B1K,IAAQ41B,EAASlrB,GAAG7L,OACtBwC,EAAK8K,KAAKypB,EAASlrB,IAGvBmN,KAAKmC,SAAS,CAAC0b,WAAU,GAAA9zB,OAAMP,oCAI7B/B,GAAI,IAAA0wB,EAAAnY,KACRvT,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,EAAMgG,KAAK,kBAAmB,CAAC5G,OAC5BuD,KAAK,SAAAC,GACJnB,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SACtB+rB,EAAKwG,wDAMJl3B,EAAI+E,GAAO,IAAA4rB,EAAApY,KACb6d,EAAc7d,KAAKlM,MAAnB+pB,WACPpxB,IAAMC,QAAQ,CACZI,MAAO,gEACPC,KAAM,WACJ1E,EAAM0C,IAAI,mBAAoB,CAACoB,OAAQ,CAAC1E,QACrCuD,KAAK,SAAAC,GACJnB,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SACtByxB,EAAWxpB,OAAO7H,EAAO,GACzB4rB,EAAKjW,SAAS,CAAC0b,qDAMhBzrB,GAAQ,IAAAwsB,EAAA5e,KACf5N,EAAO3K,IAAM,QADE,IAERo2B,EAAc7d,KAAKlM,MAAnB+pB,WACPpxB,IAAMC,QAAQ,CACZI,MAAO,2EACPC,KAAM,WACJ1E,EAAMgG,KAAK,mBAAXX,OAAAC,EAAA,EAAAD,CAAA,GAAmC0E,IAChCpH,KAAK,SAAAC,GACAA,EAAIzB,KAAK4C,SACXtC,IAAQyN,KAAK,4BACbsmB,EAAWpf,QAAQxT,EAAIzB,KAAKA,MAC5Bo1B,EAAKzc,SAAS,CAAC0b,gBAEf/zB,IAAQyN,KAAKtM,EAAIzB,KAAKE,iBAxKZ+Y,aCJlBjP,GAAY,CAChBqrB,eAAgB,CACdp3B,GAAI,GACJqF,MAAO,GACPgyB,MAAO,GACPC,QAAS,GACTC,UAAW,GACXC,KAAM,GACNC,SAAU,GACVC,OAAQ,GACRr3B,MAAM,EACNb,QAAQ,EACRm4B,YAAa,EACbp4B,MAAO,GACP0S,QAAS,IAEXxE,QAAS,GACT1I,OAAQ,GAwQK6yB,eApQb,SAAAA,EAAYjxB,GAAO,IAAA0R,EAAA,OAAApS,OAAAqS,EAAA,EAAArS,CAAAsS,KAAAqf,IACjBvf,EAAApS,OAAAuS,EAAA,EAAAvS,CAAAsS,KAAAtS,OAAAwS,EAAA,EAAAxS,CAAA2xB,GAAAlf,KAAAH,KAAM5R,KAQR0F,MATmBpG,OAAAC,EAAA,EAAAD,CAAA,GASP8F,IAPVsM,EAAKwf,OAASxf,EAAKwf,OAAOjf,KAAZ3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IACdA,EAAKyf,gBAAkBzf,EAAKyf,gBAAgBlf,KAArB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IACvBA,EAAK0f,WAAa1f,EAAK0f,WAAWnf,KAAhB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAClBA,EAAK2f,iBAAmB3f,EAAK2f,iBAAiBpf,KAAtB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IACxBA,EAAKiD,aAAcjD,EAAKiD,aAAa1C,KAAlB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IANFA,oFAYjB,IAAIlO,EAAQoO,KAAK5R,MAAMQ,QAAQ+C,SAASC,MACxCA,GAASoO,KAAK0f,SAAS9tB,GACvBoO,KAAK7I,8CAGE,IAGHwoB,EAAaC,EAASC,EAAYC,EAAWz4B,EAH1CqZ,EAAAV,KAAAiD,EACkCjD,KAAKlM,MAAvC+qB,EADA5b,EACA4b,eAAgB3pB,EADhB+N,EACgB/N,QAAS1I,EADzByW,EACyBzW,MACzBM,EAAuG+xB,EAAvG/xB,MAAOgyB,EAAgGD,EAAhGC,MAAOC,EAAyFF,EAAzFE,QAASC,EAAgFH,EAAhFG,UAAWC,EAAqEJ,EAArEI,KAAMC,EAA+DL,EAA/DK,SAAUC,EAAqDN,EAArDM,OAAQr3B,EAA6C+2B,EAA7C/2B,KAAMb,EAAuC43B,EAAvC53B,OAAQm4B,EAA+BP,EAA/BO,YAAap4B,EAAkB63B,EAAlB73B,MAAO0S,EAAWmlB,EAAXnlB,QAkEnG,OAhEAolB,EAAM1zB,OAAS,IAAMw0B,EAAU1e,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,sBAC9CpD,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CACE9K,KAAK,QACLkO,UAAQ,EACR/C,WAAYqS,EACZpS,WAAY,SAACla,EAAMhG,GAAP,OACV0U,EAAAzV,EAAA0V,cAACiL,GAAA,EAAK/H,KAAN,CAAWsI,QAAS,CAACzL,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,SAASC,MAAO,CAAC9D,MAAO,QAAS2E,QAAS,kBAAMxB,EAAKqf,QAAQvzB,EAAO,WAApF,SAClBgG,QAKTwsB,EAAU5zB,OAAS,IAAMy0B,EAAa3e,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,kCACrDpD,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CACE9K,KAAK,QACLkO,UAAQ,EACR/C,WAAYuS,EACZtS,WAAY,SAACla,EAAMhG,GAAP,OACV0U,EAAAzV,EAAA0V,cAACiL,GAAA,EAAK/H,KAAN,CAAWsI,QAAS,CAACzL,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,SAASC,MAAO,CAAC9D,MAAO,QAAS2E,QAAS,kBAAMxB,EAAKqf,QAAQvzB,EAAO,eAApF,SAClBgG,QAKTusB,EAAQ3zB,OAAS,IAAM00B,EAAY5e,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,sBAClDpD,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CACE9K,KAAK,QACLkO,UAAQ,EACR/C,WAAYsS,EACZrS,WAAY,SAACla,EAAMK,GACjB,IAAImtB,EAMJ,OAJEA,EADCxzB,IAAUqG,EACA,CAACqO,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,SAASC,MAAO,CAAC9D,MAAO,QAAS2E,QAASxB,EAAKqC,cAA/D,iBAED,CAAC7B,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,SAASC,MAAO,CAAC9D,MAAO,QAAS2E,QAAS,SAAAV,GAAC,OAAId,EAAKqf,QAAQltB,EAAG,UAAW2O,KAA1F,iBAGdN,EAAAzV,EAAA0V,cAACiL,GAAA,EAAK/H,KAAN,CAAWnC,QAAS,kBAAMxB,EAAKuf,aAAaptB,IAAI8Z,QAASqT,GACtDxzB,IAAUqG,EAAIqO,EAAAzV,EAAA0V,cAACrC,GAAA,EAAMyM,OAAP,CAAcjK,KAAK,QAAQ4e,YAAY,eAAKjU,SAAU,SAAC3f,EAAOkV,GAAR,OAAcd,EAAKyf,WAAW7zB,EAAOkV,MAAShP,QAKvH1K,IACF63B,EAAcze,EAAAzV,EAAA0V,cAAC4P,EAAA,SAAD,KACZ7P,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAMyM,OAAP,CAAcjf,MAAO6yB,EAAQe,YAAY,eAAKne,YAAY,iCAC5CR,SAAU,SAAAC,GAAC,OAAId,EAAKe,iBAAiBD,EAAEE,OAAOpV,MAAO,WAAW2f,SAAU,SAAA3f,GAAK,OAAIoU,EAAK0f,QAAQ9zB,EAAO,UAAW,cAEjIwzB,EACD5e,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACoR,GAAA,EAAD,CAAQC,QAASvrB,EAAQsa,SAAU,SAAAjV,GAAK,OAAIoU,EAAKe,iBAAiBnV,EAAO,cAE3E4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,kCACfpD,EAAAzV,EAAA0V,cAAC4a,GAAA,EAAD,CAAaC,IAAK,EAAG1vB,MAAO8yB,EAAard,YAAY,iCACxCR,SAAU,SAAAjV,GAAK,OAAIoU,EAAKe,iBAAiBnV,EAAO,qBAKjEjF,EADCL,EACaka,EAAAzV,EAAA0V,cAAC8L,GAAA,EAAD,CAAK+G,UAAQ,EAACC,QAASjU,KAAKuf,iBAAkBv4B,GAE/Cka,EAAAzV,EAAA0V,cAACrC,GAAA,EAAMyM,OAAP,CAAc2U,YAAY,eAAKne,YAAY,iCAAQkK,SAAUjM,KAAKsf,SAG/Epe,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACbF,EAAAzV,EAAA0V,cAAA,kDACAD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,MACbF,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQxjB,KAAK,UAAUuZ,MAAO,CAACQ,YAAa,IAAKK,QAASlC,KAAKyf,kBAA/D,gBACAve,EAAAzV,EAAA0V,cAACmK,GAAA,EAAD,CAAQpJ,QAASlC,KAAKwf,YAAtB,kBAGJte,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAD,CAAM7C,UAAU,KAAKC,MAAO,CAAC8H,MAAO,MAAOkX,YAAa,kBAAmBnc,SAAU,CAACqI,GAAI,GAAInI,WAAY,CAACmI,GAAI,GAAI+E,OAAQ,GAAIJ,OAAO,GACpIhQ,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOQ,EAAOiV,YAAY,iCAC1BR,SAAU,SAAAC,GAAC,OAAId,EAAKe,iBAAiBD,EAAEE,OAAOpV,MAAO,aAE9D4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAMyM,OAAP,CAAcjf,MAAO2yB,EAAMiB,YAAY,eAAKne,YAAY,iCAAQR,SAAU,SAAAC,GAAC,OAAId,EAAKe,iBAAiBD,EAAEE,OAAOpV,MAAO,SAAS2f,SAAU,SAAA3f,GAAK,OAAIoU,EAAK0f,QAAQ9zB,EAAO,QAAS,YAE/KszB,EACD1e,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAMyM,OAAP,CAAcjf,MAAO4yB,EAAUgB,YAAY,eAAKne,YAAY,6CAAUR,SAAU,SAAAC,GAAC,OAAId,EAAKe,iBAAiBD,EAAEE,OAAOpV,MAAO,aAAa2f,SAAU,SAAA3f,GAAK,OAAIoU,EAAK0f,QAAQ9zB,EAAO,YAAa,gBAE7LuzB,EACD3e,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACdjd,GAEH6Z,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACdpP,EAAQ0J,IAAI,SAACpM,EAAMhG,GAAP,OAAiB0U,EAAAzV,EAAA0V,cAAC8L,GAAA,EAAD,CAAK7L,UAAU,SAAS4S,UAAQ,EAACC,QAAS,SAACzS,GAAD,OAAOd,EAAK4f,UAAU9e,EAAGhP,EAAK1J,IAAK0D,IAAQrE,IAAKqK,EAAK1J,IAAKoZ,QAAS,kBAAMxB,EAAKzS,UAAUuE,EAAK1E,QAAQ0E,EAAK1E,UAGtLoT,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAD,CAAM7C,UAAU,KAAKC,MAAO,CAAC8H,MAAO,MAAOoX,YAAa,MAAOrc,SAAU,CAACqI,GAAI,GAAInI,WAAY,CAACmI,GAAI,GAAI+E,OAAQ,GAAIJ,OAAO,GACxHhQ,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,wCACfpD,EAAAzV,EAAA0V,cAACoR,GAAA,EAAD,CAAQC,QAAS1qB,EAAMyZ,SAAU,SAAAjV,GAAK,OAAIoU,EAAKe,iBAAiBnV,EAAO,YAExEqzB,EACDze,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOoN,EAASqI,YAAY,iCAAQR,SAAU,SAAAC,GAAC,OAAId,EAAKe,iBAAiBD,EAAEE,OAAOpV,MAAO,mDAQnGsF,GACPA,EAAM9J,KAAsB,IAAf8J,EAAM9J,KACnB8J,EAAM3K,OAA0B,IAAjB2K,EAAM3K,OACrB+Y,KAAKmC,SAAS,SAAArO,GAAK,MAAK,CAAC+qB,eAAenxB,OAAAC,EAAA,EAAAD,CAAA,GAAKoG,EAAM+qB,eAAZ,GAA+BjtB,+CAGvDtF,EAAOwB,GAAM,IACvB+wB,EAAkB7e,KAAKlM,MAAvB+qB,eACLA,EAAe/wB,GAAQxB,EACvB0T,KAAKmC,SAAS,CAAC0c,mDAGTvyB,EAAOk0B,EAAMhuB,GAAM,IAClBqsB,EAAkB7e,KAAKlM,MAAvB+qB,eACHvyB,EAAMuW,QAGRgc,EAAe2B,GAAMlsB,KAAKhI,EAAMuW,QAChCgc,EAAersB,GAAQ,GACvBwN,KAAKmC,SAAS,SAAArO,GAAK,MAAK,CAAC+qB,eAAenxB,OAAAC,EAAA,EAAAD,CAAA,GAAKoG,EAAM+qB,eAAZ,GAA+BA,OAJtE/0B,IAAQyJ,MAAM,wEAQV/G,EAAOg0B,EAAMhf,GACnBA,GAAKA,EAAEmR,kBADe,IAEfkM,EAAkB7e,KAAKlM,MAAvB+qB,eACPA,EAAe2B,GAAMnsB,OAAO7H,EAAO,GACnCwT,KAAKmC,SAAS,SAAArO,GAAK,MAAK,CAAC+qB,eAAenxB,OAAAC,EAAA,EAAAD,CAAA,GAAKoG,EAAM+qB,eAAZ,GAA+BA,2CAG3DryB,GACXwT,KAAKmC,SAAS,CAAC3V,6CAGNF,EAAOkV,GAChBA,EAAEmR,kBADiB,IAAA/D,EAEa5O,KAAKlM,MAA9B+qB,EAFYjQ,EAEZiQ,eAAgBryB,EAFJoiB,EAEIpiB,MACvBqyB,EAAc,QAAYxqB,OAAO7H,EAAO,EAAGF,GAC3C0T,KAAKmC,SAAS,SAAArO,GAAK,MAAK,CAAC+qB,eAAenxB,OAAAC,EAAA,EAAAD,CAAA,GAAKoG,EAAM+qB,eAAZ,GAA+BA,GAAiBryB,OAAQ,0CAGpFgV,GACXA,EAAEmR,kBACF3S,KAAKmC,SAAS,CAAC3V,OAAQ,yCAGZ,IAAA4V,EAAApC,KACX3X,EAAM0C,IAAI,gBAAgBC,KAAK,SAAAC,GAC7B,IAAIiK,EAAUjK,EAAIzB,KAAKA,KACvB4Y,EAAKD,SAAS,CAACjN,6CAIZ5I,GAAO,IAAA4rB,EAAAlY,KACJ6e,EAAmB7e,KAAKlM,MAAxB+qB,eACJvyB,EAAMuW,OAGRxa,EAAMgG,KAAK,eAAgB,CAACP,KAAMxB,EAAMuW,SACrC7X,KAAK,SAAAC,GACJ,GAAuB,IAAnBA,EAAIzB,KAAK8E,MAAa,KAChB9E,EAASyB,EAAIzB,KAAbA,KACR0uB,EAAK/V,SAAS,SAAArO,GAAK,MAAK,CAACoB,QAAO,GAAAnL,OAAA2D,OAAAwG,EAAA,EAAAxG,CAAMoG,EAAMoB,SAAZ,CAAqB1L,OAEvDq1B,EAAe73B,MAAQsF,EACvB4rB,EAAK/V,SAAS,SAAArO,GAAK,MAAK,CAAC+qB,eAAenxB,OAAAC,EAAA,EAAAD,CAAA,GAAKoG,EAAM+qB,eAAZ,GAA+BA,QAT1E/0B,IAAQyJ,MAAM,gFAcRvM,GAAO,IACR63B,EAAkB7e,KAAKlM,MAAvB+qB,eACPA,EAAe73B,MAAQA,EACvBgZ,KAAKmC,SAAS,SAAArO,GAAK,MAAK,CAAC+qB,eAAenxB,OAAAC,EAAA,EAAAD,CAAA,GAAKoG,EAAM+qB,eAAZ,GAA+BA,gDAGtD,IACTA,EAAkB7e,KAAKlM,MAAvB+qB,eACPA,EAAe73B,MAAQ,GACvBgZ,KAAKmC,SAAS,SAAArO,GAAK,MAAK,CAAC+qB,eAAenxB,OAAAC,EAAA,EAAAD,CAAA,GAAKoG,EAAM+qB,eAAZ,GAA+BA,wCAG9Drd,EAAG/Z,EAAI+E,GAAO,IAAA2rB,EAAAnY,KACtBwB,EAAEmR,kBADoB,IAEfzd,EAAW8K,KAAKlM,MAAhBoB,QACP7M,EAAMqG,OAAO,eAAgB,CAACvC,OAAQ,CAAC1E,QACpCuD,KAAK,SAAAC,GACJiK,EAAQb,OAAO7H,EAAO,GACtB2rB,EAAKhW,SAAS,CAACjN,yDAIF,IAAAkjB,EAAApY,KACTpO,EAAUoO,KAAK5R,MAAMQ,QAAQ+C,SAA7BC,MACDitB,EAAkB7e,KAAKlM,MAAvB+qB,eACPA,EAAe/2B,KAAO+2B,EAAe/2B,KAAO,EAAI,EAChD+2B,EAAe53B,OAAS43B,EAAe53B,OAAS,EAAI,EACpD,IAAImC,EAAM,mBACPwI,IACDxI,EAAM,oBAERqD,IAAMC,QAAQ,CACZI,MAAO,uCACPC,KAAM,WACJ1E,EAAMgG,KAAKjF,EAAXsE,OAAAC,EAAA,EAAAD,CAAA,GAAoBmxB,IACjB7zB,KAAK,SAAAC,GACAA,EAAIzB,KAAK4C,SACXtC,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SACtBgsB,EAAKoH,cAEL11B,IAAQyN,KAAKtM,EAAIzB,KAAKE,+CAQhCsW,KAAK5R,MAAMQ,QAAQC,SACnBmR,KAAKnO,kDAILmO,KAAKmC,SAALzU,OAAAC,EAAA,EAAAD,CAAA,GAAkB8F,oDAIlBwM,KAAKnO,oBAjQmB4Q,aCDbge,oLAhBX,OACIvf,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,iBAAiBuI,OAC3B,kBACExM,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,KACElT,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,8BAA8BkP,UAAWqM,KACrDxf,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,+BAA+BkP,UAAWsM,KACtDzf,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,+BAA+BkP,UAAWsM,KACtDzf,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAUE,KAAK,iBAAiBC,OAAK,EAACnR,GAAG,0BACzClC,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAUE,KAAK,wBAAwBC,OAAK,EAACnR,GAAG,2CAVjCX,uBCCvB8I,GAASC,KAAMD,OAoINqV,8MAhIb9sB,MAAQ,CACN+sB,YAAa,GACbC,YAAa,GACbC,oBAAqB,KAKvBC,cAAgB,WAAM,IACZF,EAAgBhhB,EAAKhM,MAArBgtB,YACRz4B,IAAM0C,IAAI,WAAY,CAACoB,OAAQ,CAACqU,SAAUsgB,KACvC91B,KAAK,SAAAC,GACJ,GAAqB,IAAlBA,EAAIzB,KAAK0B,KAAY,KAAA6L,EACW9L,EAAIzB,KAAxBq3B,EADS9pB,EACfvN,KAAmBoE,EADJmJ,EACInJ,IAC1BkS,EAAKqC,SAAS,CAAC0e,cAAaC,YAAa,KACzCh3B,IAAQsC,QAAQwB,QAEhB9D,IAAQyJ,MAAMtI,EAAIzB,KAAKoE,KACvBkS,EAAKmhB,sBA2CbA,eAAiB,WACf54B,IAAM0C,IAAI,YACPC,KAAK,SAAAC,GACJ,GAAqB,IAAlBA,EAAIzB,KAAK0B,KAAY,KAElB21B,EADW51B,EAAIzB,KAAbA,KACiBkH,UACvBoP,EAAKqC,SAAS,CAAC0e,sBASvBK,wBAA0B,SAAA1f,GACxB1B,EAAKqC,SAAS,CAAC2e,YAAatf,EAAEE,OAAOpV,mFAtD5B7E,EAAIiS,GAAS,IAAAgH,EAAAV,KACtBvT,IAAMC,QAAQ,CACZI,MAAO,mDACPC,KAAM,WACJ1E,IAAMoF,IAAI,mBAAoB,CAAChG,KAAIiS,YAChC1O,KAAK,SAAAC,GAAO,IAAA6Q,EACS7Q,EAAIzB,KAAjB0B,EADI4Q,EACJ5Q,KAAM0C,EADFkO,EACElO,IACD,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChB8S,EAAKyB,SAAS,CACZ4e,oBAAqB,IAEvBrgB,EAAKugB,kBAELn3B,IAAQyJ,MAAM3F,8CAOZ9E,GAAK,IAAAsZ,EAAApC,KACjBvT,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,IAAMqG,OAAO,WAAY,CAACvC,OAAQ,CAACrD,SAChCkC,KAAK,SAAAC,GACiB,IAAlBA,EAAIzB,KAAK0B,MACVpB,IAAQsC,QAAQnB,EAAIzB,KAAKoE,KACzBwU,EAAK6e,kBAELn3B,IAAQyJ,MAAMtI,EAAIzB,KAAKoE,sDAmBjCoS,KAAKihB,kDAOE,IAAA/I,EAAAlY,KAAAiD,EACgDjD,KAAKlM,MAArD+sB,EADA5d,EACA4d,YAAaC,EADb7d,EACa6d,YAAaC,EAD1B9d,EAC0B8d,mBAC3BxT,EAAU,CACd,CACEplB,IAAK,WACLqlB,UAAW,WACX1gB,MAAO,qBACP2gB,MAAO,UACN,CACDtlB,IAAK,UACLqlB,UAAW,UACX1gB,MAAO,wCACP2gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC1lB,EAAMoK,EAAQ5F,GAAf,OAAyBu0B,IAAuBv0B,EAAQxE,EAAOkZ,EAAAzV,EAAA0V,cAACrC,GAAA,EAAMyM,OAAP,CAAc2U,YAAY,eAAK5e,KAAK,QAAQ2K,SAAU,SAAA3f,GAAK,OAAI4rB,EAAKiI,WAAW/tB,EAAOtJ,IAAIwD,QAChK,CACDnE,IAAK,WACLqlB,UAAW,WACX1gB,MAAO,yGACP2gB,MAAO,SACPC,OAAQ,SAAA1lB,GAAI,OAAIkZ,EAAAzV,EAAA0V,cAACggB,GAAA,gBAAD,CAAiBn5B,KAAMA,EAAMo5B,OAAQ,kBAAMt3B,IAAQsC,QAAQ,8BAAS8U,EAAAzV,EAAA0V,cAAA,KAAGqB,KAAK,yBAAyBd,OAAO,WAAW1Z,MACtI,CACDG,IAAK,OACLqlB,UAAW,OACX1gB,MAAO,eACP2gB,MAAO,SACPC,OAAQ,SAAA1lB,GAAI,OAAa,IAATA,EAAa,iCAAoB,IAATA,EAAa,2BAAS,6BAC7D,CACD8E,MAAO,SACP3E,IAAK,SACLslB,MAAO,SACPC,OAAQ,SAAC1lB,EAAMoK,EAAQ5F,GAAf,OAAyB0U,EAAAzV,EAAA0V,cAAAD,EAAAzV,EAAAkY,SAAA,KAC/BzC,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQhB,cAAc,2BAAOjJ,QAAS,kBAAMgW,EAAK/V,SAAS,CAAC4e,mBAAoBv0B,OAC/E0U,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQvB,GAAI,EAAGL,WAAW,SAASc,SAA0B,IAAhBjZ,EAAO6S,KAAYkG,cAAc,eAAKjJ,QAAS,kBAAMgW,EAAKmJ,cAAcjvB,EAAOtJ,YAIlI,OACCoY,EAAAzV,EAAA0V,cAAA,WACGD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAACmgB,GAAD,CAAQ/f,SAAUvB,KAAKkhB,wBAAyB50B,MAAOw0B,EAAazf,MAAO,CAAC8H,MAAO,IAAKrH,aAAc,IAAKC,YAAY,uCAASme,YAAY,eAAKjU,SAAUjM,KAAKghB,gBAChK9f,EAAAzV,EAAA0V,cAACgP,GAAA,EAAD,CAAOC,OAAQ,SAAAhe,GAAM,OAAIA,EAAOtJ,KAAKwY,KAAK,QAAQmL,WAAYoU,EAAatT,QAASA,aA3HxE9K,aCHdgJ,GAAYC,KAAZD,OAEF8V,8MAEJC,WAAa,YAEXC,EADmC3hB,EAAK1R,MAAhCG,KAAOkzB,gBACA,SAACC,EAAQzxB,GACnByxB,EACD53B,IAAQyJ,MAAM,2DAGhBtD,EAAOwQ,SAAWX,EAAKuC,KAAKpS,EAAOwQ,UAAU6B,WAC7C7V,IAAMC,QAAQ,CACZI,MAAO,qEACPC,KAAM,WACJ1E,EAAMgG,KAAK,WAAXX,OAAAC,EAAA,EAAAD,CAAA,GAA2BuC,IACxBjF,KAAK,SAAAC,GACiB,IAAlBA,EAAIzB,KAAK0B,MACV4U,EAAK6hB,YACL73B,IAAQsC,QAAQnB,EAAIzB,KAAKoE,MAEzB9D,IAAQyJ,MAAMtI,EAAIzB,KAAKoE,gBASrC+zB,UAAY,YAEVnzB,EADmCsR,EAAK1R,MAAhCG,KAAOC,gBACA,CAACgS,SAAU,GAAIC,SAAU,GAAIwE,KAAM,6EAG3C,IACQ/B,EAAuBlD,KAAK5R,MAAnCG,KAAO2U,kBAYf,OAEChC,EAAAzV,EAAA0V,cAAA,WACGD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAfgB,CACrBC,SAAU,CACR0d,GAAI,CAAEzd,KAAM,IACZoI,GAAI,CAAEpI,KAAM,IAEdC,WAAY,CACVwd,GAAI,CAAEzd,KAAM,IACZoI,GAAI,CAAEpI,KAAM,IAEd+M,OAAO,GAODhQ,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,sBACdpB,EAAkB,WAAY,CAC7BsB,MAAO,CAAC,CAAEC,UAAU,EAAM3a,QAAS,gDADpCoZ,CAGChC,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOiD,YAAY,2CAGvBb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBACdpB,EAAkB,WAAY,CAC7BsB,MAAO,CAAC,CAAEC,UAAU,EAAM3a,QAAS,0CADpCoZ,CAGChC,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOiD,YAAY,qCAGvBb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBACdpB,EAAkB,UAAW,CAC5BsB,MAAO,CAAC,CAAEC,UAAU,EAAM3a,QAAS,0CADpCoZ,CAGChC,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOiD,YAAY,qCAGvBb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,kCACdpB,EAAkB,OAAQ,CACzBsB,MAAO,CAAC,CAAEC,UAAU,IACpBF,aAAc,GAFfrB,CAIChC,EAAAzV,EAAA0V,cAAC+K,GAAA,EAAD,KACEhL,EAAAzV,EAAA0V,cAAC0gB,GAAD,CAAQv1B,MAAO,GAAf,kCACA4U,EAAAzV,EAAA0V,cAAC0gB,GAAD,CAAQv1B,MAAO,GAAf,4BACA4U,EAAAzV,EAAA0V,cAAC0gB,GAAD,CAAQv1B,MAAO,GAAf,+BAIN4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,KACfpD,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQ7K,KAAK,UAAU6J,cAAc,eAAKjJ,QAASlC,KAAKwhB,aACxDtgB,EAAAzV,EAAA0V,cAACgL,GAAD,CAAQrB,GAAI,GAAIP,WAAW,OAAOjJ,KAAK,UAAU6J,cAAc,eAAKjJ,QAASlC,KAAK2hB,uBAtFvElf,aA+FViC,QAAKC,QAALD,CAAc6c,ICtFdO,oLAVX,OACC5gB,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,KACGlT,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,sBAAsBkP,UAAWuM,KAC7C1f,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,qBAAqBkP,UAAWkN,KAC5CrgB,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAUE,KAAK,iBAAiBC,OAAK,EAACnR,GAAG,gCANrBX,aCqDbsf,8MAxCbjuB,MAAQ,CACNtL,SAAU,uFAIV,IAAIA,EAAWC,aAAaC,QAAQ,YACjCF,GAAac,KAAKiV,OAAW,IAAIjV,KAAKV,KAAKC,MAAML,GAAUw5B,SAAY,OACxEhiB,KAAKmC,SAAS,CAAC3Z,SAAUI,KAAKC,MAAML,sCAI/B,IACCA,EAAawX,KAAKlM,MAAlBtL,SACFy5B,EAAYv0B,OAAOsR,KAAKxW,GAAU4C,OAAS,EACjD,OACE8V,EAAAzV,EAAA0V,cAAC+gB,EAAA,EAAD,CAAUziB,MAAOA,IACfyB,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,KACEjC,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,KACElT,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,eAAeuI,OAAQ,kBAAMuU,EAAY/gB,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAUhR,GAAIlW,OAAOyE,SAASuhB,OAASiP,mBAAmBj1B,OAAOyE,SAASuhB,OAAOvN,MAAM,KAAK,IAAM,WAAezE,EAAAzV,EAAA0V,cAACihB,GAAD,SACtKlhB,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,SAASuI,OAAQ,kBAC3BuU,EACE/gB,EAAAzV,EAAA0V,cAACkhB,GAAD,CAAax1B,QACTqU,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,KACElT,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,iBAAiBkP,UAAWiO,KACxCphB,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,iBAAiBkP,UAAWkO,KACxCrhB,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,iBAAiBkP,UAAWmO,KACxCthB,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAOjP,KAAK,iBAAiBkP,UAAWyN,KACxC5gB,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAUE,KAAK,SAASC,OAAK,EAACnR,GAAsB,IAAlB5a,EAASyc,KAAa,iBAAmB,sBAG/E/D,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAUhR,GAAI,yBAA2Bqf,mBAAmBv1B,OAAOyE,SAAS+T,eAElFxE,EAAAzV,EAAA0V,cAACiT,EAAA,EAAD,CAAUE,KAAK,IAAIC,OAAK,EAACnR,GAAG,qBAlCtBX,4CCDbvV,OAAOvD,UACVuD,OAAOvD,QAAUA,MAGnB+4B,IAAMjgB,UAAUkgB,UAAUtgB,KAAOugB,KAEjCC,IAASnV,OAAOxM,EAAAzV,EAAA0V,cAAC2hB,GAAD,MAASz4B,SAAS04B,eAAe","file":"static/js/main.f94baebd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login_bg.e3347162.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ad641e9f.png\";","import * as constants from './constants';\n\nconst defaultState = {\n  // 公号接管\n  gonghaoTagList: [],\n  allGonghaoList: [],\n  originalGonghaoList: [],\n  gonghaoList: [],\n  group: \"全部\",\n  status: \"全部\",\n  currentPage: 1,\n  searchName: \"\",\n  isSelectTag: false,\n  selectedTag: \"\",\n  isCreate: true,\n  gonghaoModal: false,\n  gonghaoInfo: {\n    group: \"\",\n    id: \"\",\n    attribute: 0,\n    ab_test: 0\n  },\n  // 公号配置\n  configList: [],\n  configForm: {type: 0, sex: 3, attribute: 1, text: \"\", replyType: 0, msgId: null, key: \"\", urlList: []},\n\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state)), _start, _end;\n  switch (action.type) {\n    case constants.GET_GONGHAO_TAG_LIST:\n      newState.gonghaoTagList = action.gonghaoTagList;\n      return newState;\n    case constants.GET_ALL_GONGHAO_LIST:\n      newState.allGonghaoList = newState.originalGonghaoList = action.allGonghaoList;\n      newState.gonghaoList = action.gonghaoList;\n      return newState;\n    case constants.CHANGE_SELECT_VALUE:\n      newState.group = newState.status = \"全部\";\n      newState[action.key] = action.value;\n      if(newState[action.key] === \"全部\") {\n        newState.gonghaoList = [...newState.allGonghaoList]\n      } else{\n        newState.gonghaoList = [...newState.allGonghaoList.filter(item => item[action.key] === action.value)]\n      }\n      return newState;\n    case constants.CHANGE_PAGE:\n      _start = (action.page - 1) * 10;\n      _end = action.page * 10;\n      newState.gonghaoList = newState.allGonghaoList.slice(_start, _end);\n      newState.currentPage = action.page;\n      return newState;\n    case constants.CHANGE_SEARCH_INPUT:\n      newState.searchName = action.searchName;\n      return newState;\n    case constants.SEARCH_BY_NAME:\n      newState.allGonghaoList = action.allGonghaoList;\n      newState.gonghaoList = action.gonghaoList;\n      newState.searchName = \"\";\n      return newState;\n    case constants.OPEN_GONGHAO_MODAL:\n      newState.gonghaoModal = true;\n      newState.gonghaoInfo = {id: action.id, group: action.group, attribute: action.attribute, ab_test: action.ab_test};\n      return newState;\n    case constants.CLOSE_GONGHAO_MODAL:\n      newState.gonghaoModal = false;\n      newState.gonghaoInfo = {attribute: 0};\n      return newState;\n    case constants.CHANGE_GROUP:\n      newState.gonghaoInfo.group = action.name;\n      return newState;\n    case  constants.CHANGE_ATTRIBUTE:\n      newState.gonghaoInfo.attribute = action.attribute;\n      return newState;\n    case  constants.CHANGE_AB_TEST:\n      newState.gonghaoInfo.ab_test = action.ab_test;\n      return newState;\n    case constants.DELETE_GONGHAO:\n      newState.gonghaoList.splice(action.index, 1);\n      return newState;\n    case constants.SESECT_TAG:\n      newState.isSelectTag = true;\n      newState.selectedTag = action.selectedTag;\n      return newState;\n    case constants.REMOVE_TAG:\n      newState.isSelectTag = false;\n      newState.selectedTag = \"\";\n      return newState;\n    case constants.TAG_CONFIRM:\n      newState.isSelectTag = true;\n      newState.selectedTag = action.group;\n      action.name && newState.gonghaoTagList.push(action.name);\n      return newState;\n    case constants.DELETE_TAG_ITEM:\n      newState.isSelectTag = false;\n      newState.selectedTag = \"\";\n      newState.gonghaoTagList.splice(action.index, 1);\n      return newState;\n    case constants.CHECK_PAGE_ATTR:\n      newState.isCreate = false;\n      return newState;\n    case constants.JIEGUAN_GONGHAO:\n      newState.gonghaoList[action.index].status = 0;\n      return newState;\n    default:\n      return state;\n  }\n};","import axios from \"axios\";\n\naxios.defaults.timeout = 10000;\n//\n// axios.defaults.headers = {\n//   'X-Requested-With': 'XMLHttpRequest',\n//   \"Content-Type\": \"application/json;charset=utf-8\"\n// };\nlet userInfo = localStorage.getItem(\"userInfo\")\n\nlet account_id = userInfo ? JSON.parse(userInfo)._id  : \"\";\n\naxios.interceptors.request.use(\n  config => {\n    if(config.method === \"get\" || config.method === \"delete\") {\n      if (config.url.indexOf('?') >= 0) {\n        config.url += ('&account_id=' + account_id + \"&_t=\" + new Date().getTime());\n      } else {\n        config.url += ('?account_id=' + account_id + \"&_t=\" + new Date().getTime());\n      }\n    } else if(config.method === \"post\" || config.method === \"put\") {\n      config.data.account_id = account_id;\n      config.data._t = new Date().getTime();\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n\n//响应拦截器即异常处理\naxios.interceptors.response.use(\n  response => {\n    return response;\n  },\n  err => {\n    if (err && err.response) {\n      switch (err.response.status) {\n        case 400:\n          err.message = \"错误请求\";\n          break;\n        case 401:\n          err.message = \"登录信息失效\";\n          break;\n        case 403:\n          err.message = \"拒绝访问\";\n          break;\n        case 404:\n          err.message = \"请求错误,未找到该资源\";\n          break;\n        case 405:\n          err.message = \"请求方法未允许\";\n          break;\n        case 408:\n          err.message = \"请求超时\";\n          break;\n        case 500:\n          err.message = \"服务器端出错\";\n          break;\n        case 501:\n          err.message = \"网络未实现\";\n          break;\n        case 502:\n          err.message = \"网络错误\";\n          break;\n        case 503:\n          err.message = \"服务不可用\";\n          break;\n        case 504:\n          err.message = \"网络超时\";\n          break;\n        case 505:\n          err.message = \"http版本不支持该请求\";\n          break;\n        default:\n          err.message = `连接错误${err.response.status}`;\n      }\n    } else {\n      err.message = \"连接到服务器失败\";\n    }\n    return Promise.resolve(err.response);\n  }\n);\n\nexport default axios;","const backTop = () => {\n  return new Promise((resolve, reject) => {\n    let timer;\n    timer = setInterval(function () {\n      let osTop =\n        document.documentElement.scrollTop || document.body.scrollTop;\n      let ispeed = Math.floor(-osTop / 1.2);\n      document.documentElement.scrollTop = document.body.scrollTop =\n        osTop + ispeed;\n      if (osTop === 0) {\n        clearInterval(timer);\n      }\n    }, 30);\n    resolve(null)\n  })\n};\n\nexport default backTop;","import axios from '../../../../utils/http';\nimport * as constants from './constants';\nimport { Modal, message } from 'antd';\nimport backTop from '../../../../utils';\n\nexport const getGroupList = () => {\n  return (dispatch) => {\n    axios.get('/gonghaoTag')\n      .then(res => {\n        if (res.data.code === 1) {\n          let gonghaoTagList = res.data.data;\n          const action = {\n            type: constants.GET_GONGHAO_TAG_LIST,\n            gonghaoTagList\n          };\n          dispatch(action)\n        }\n      })\n  }\n};\n\nexport const getAllGonghaoList = () => {\n  return dispatch => {\n    axios.get('/conf')\n      .then(res => {\n        if (res.data.data.length > 0) {\n          let allGonghaoList = res.data.data;\n          const action = {\n            type: constants.GET_ALL_GONGHAO_LIST,\n            allGonghaoList,\n            gonghaoList: allGonghaoList\n          };\n          dispatch(action);\n        }\n      })\n  }\n};\n\nexport const changePage = (page) => {\n  return async dispatch => {\n    const action = {\n      type: constants.CHANGE_PAGE,\n      page\n    };\n    await backTop();\n    await dispatch(action);\n  }\n};\n\n\nexport const changeSearchInput = searchName => ({\n  type: constants.CHANGE_SEARCH_INPUT,\n  searchName\n});\n\nexport const searchByName = nick_name => {\n  return dispatch => {\n    axios.get('/conf/find_one', {params: {nick_name}})\n      .then(res => {\n        if (res.data.data.length > 0) {\n          let allGonghaoList = res.data.data,\n            gonghaoList = allGonghaoList;\n          const action = {\n            type: constants.SEARCH_BY_NAME,\n            allGonghaoList, gonghaoList\n          };\n          dispatch(action);\n          message.success(\"查询成功\")\n        }\n      })\n  }\n};\n\nexport const changeSelectValue = (key, value) => ({\n  type: constants.CHANGE_SELECT_VALUE,\n  key, value\n});\n\nexport const deleteGonghao = (id, index) => {\n  return dispatch => {\n    Modal.confirm({\n      okText: \"确定\",\n      cancelText: \"取消\",\n      content: \"确认删除吗？\",\ntitle: \"提示\",\n      onOk: () => {\n        axios.get(\"/conf/del\", {\n          params: {id}\n        }).then(res => {\n          const action = {\n            type: constants.DELETE_GONGHAO,\n            index\n          };\n          dispatch(action);\n          message.success(\"删除成功\")\n        });\n      }\n    })\n  }\n};\n\nexport const jieguan = (code, index) => {\n  return dispatch => {\n    Modal.confirm({\n      okText: \"确定\",\n      cancelText: \"取消\",\n      content: \"确认接管吗？\",\ntitle: \"提示\",\n      onOk: () => {\n        axios.get(\"/conf/jieguan\", {\n          params: {code}\n        }).then(res => {\n          const action = {\n            type: constants.JIEGUAN_GONGHAO,\n            index\n          };\n          dispatch(action);\n        });\n      }\n    })\n  }\n};\n\nexport const addNewGonghao = () => {\n  return dispatch => {\n    axios.get('/component/componentAuthorize')\n      .then(res => {\n        window.open(res.data)\n      })\n  }\n};\n\nexport const openGonghaoModal = (id, group, attribute, ab_test) => ({\n  type: constants.OPEN_GONGHAO_MODAL,\n  id, group, attribute, ab_test\n});\n\nexport const closeGonghaoModal = () => ({\n  type: constants.CLOSE_GONGHAO_MODAL\n});\n\nexport const updateGonghaoInfo = gonghaoInfo => {\n  return dispatch => {\n    console.log(gonghaoInfo)\n    axios.put('/conf', {...gonghaoInfo})\n      .then(res => {\n        if(res.data.code === 1) {\n          message.success(res.data.msg);\n          dispatch(closeGonghaoModal());\n        }\n      })\n  }\n};\n\nexport const changeGroup = name => ({\n  type: constants.CHANGE_GROUP,\n  name\n});\n\nexport const changeAttribute = attribute => ({\n  type: constants.CHANGE_ATTRIBUTE,\n  attribute\n});\n\nexport const changeAbTest = ab_test => ({\n  type: constants.CHANGE_AB_TEST,\n  ab_test\n});\n\nexport const selectTag = (selectedTag) => ({\n  type: constants.SESECT_TAG,\n  selectedTag\n});\n\nexport const removeTag = () => ({\n  type: constants.REMOVE_TAG\n});\n\nexport const tagConfirm = (group, props) => {\n  return (dispatch) => {\n    let name;\n    axios.post(\"/gonghaoTag\", {name: group})\n      .then(res => {\n        if (res.data.exist === 0) {\n          name = res.data.data\n        }\n        props.form.setFieldsValue({group})\n        const action = {\n          type: constants.TAG_CONFIRM,\n          name, group\n        };\n        dispatch(action)\n      })\n  }\n};\n\nexport const deleteTagItem = (id, index) => {\n  return (dispatch) => {\n    axios.delete('/gonghaoTag/' + id)\n      .then(res => {\n        const action = {\n          type: constants.DELETE_TAG_ITEM,\n          index\n        };\n        dispatch(action)\n      });\n  }\n};\n\nexport const createForm = (gonghaoInfo, history) => {\n  return (dispatch) => {\n    axios.post(\"/conf/create\", gonghaoInfo).then(res => {\n      history.goBack();\n      const action = {\n        type: constants.CREATE_FORM,\n        gonghaoInfo\n      };\n      dispatch(action);\n      message.success(\"添加成功\")\n    });\n  }\n};\n\nexport const updateForm = (gonghaoInfo, history) => {\n  return (dispatch) => {\n    axios.post(\"/conf/update\", gonghaoInfo).then(res => {\n      history.goBack();\n      getAllGonghaoList();\n      const action = {\n        type: constants.UPDATE_FORM,\n        gonghaoInfo\n      };\n      dispatch(action);\n      message.success(\"修改成功\")\n    });\n  }\n};\n\nexport const checkPageAttr = () => ({\n  type: constants.CHECK_PAGE_ATTR\n});\n\n// 公号配置\n\nexport const getConfigList = (code) => {\n  return (dispatch) => {\n    axios.get('/reply', {params: {code}})\n      .then(res => {\n        let configList = res.data.data;\n        const action = {\n          type: constants.GET_CONFIG_LIST,\n          configList\n        };\n        dispatch(action)\n      })\n  }\n};\n\nexport const deleteConfig = (id, index) => {\n  return (dispatch) => {\n    Modal.confirm({\n      okText: \"确定\",\n      cancelText: \"取消\",\n      content: \"确认删除吗？\",\n      title: \"提示\",\n      onOk: () => {\n        axios.get('/reply/del', {params: {id}})\n          .then(res => {\n          const action = {\n            type: constants.DELETE_CONFIG,\n            index\n          };\n          dispatch(action);\n          message.success(\"删除成功\")\n        });\n      }\n    })\n\n  }\n};\n\nexport const changeConfigForm = (formInfo) => ({\n  type: constants.CHANGE_CONFIG_FORM,\n  formInfo\n});\n\nexport const createConfigForm = (configInfo, history) => {\n  return (dispatch) => {\n    Modal.confirm({\n      title: \"确定新建一条规则吗？\",\n      onOk: () => {\n        axios.post(\"/reply/create\", configInfo).then(res => {\n          history.goBack();\n          const action = {\n            type: constants.CREATE_CONFIG_FORM,\n            configInfo\n          };\n          dispatch(action);\n          message.success(\"创建成功\")\n        });\n      }\n    })\n  }\n};\n\nexport const updateConfigForm = (configInfo, history, index) => {\n  return (dispatch) => {\n    Modal.confirm({\n      title: \"确定修改吗？\",\n      onOk: () => {\n        axios.post(\"/reply/update\", configInfo).then(res => {\n          history.goBack();\n          const action = {\n            type: constants.UPDATE_CONFIG_FORM,\n            configInfo, index\n          };\n          dispatch(action);\n          message.success(\"修改成功\")\n        });\n      }\n    })\n  }\n};\n\n","export const GET_GONGHAO_TAG_LIST = \"gonghao/tuoguan/getGonghaoTagList\";\nexport const GET_ALL_GONGHAO_LIST = \"gonghao/tuoguan/getAllGonghaoList\";\nexport const CHANGE_PAGE = \"gonghao/tuoguan/changePage\";\nexport const SEARCH_BY_NAME = \"gonghao/tuoguan/searchByName\";\nexport const DELETE_GONGHAO = \"gonghao/tuoguan/deleteGonghao\";\nexport const JIEGUAN_GONGHAO = \"gonghao/tuoguan/jieguan\";\nexport const CHANGE_SEARCH_INPUT = \"gonghao/tuoguan/changeSearchInput\";\nexport const SESECT_TAG = \"gonghao/tuoguan/selectTag\";\nexport const REMOVE_TAG = \"gonghao/tuoguan/removeTag\";\nexport const TAG_CONFIRM = \"gonghao/tuoguan/tagConfirm\";\nexport const DELETE_TAG_ITEM = \"gonghao/tuoguan/deleteTagItem\";\nexport const CREATE_FORM = \"gonghao/tuoguan/createForm\";\nexport const UPDATE_FORM = \"gonghao/tuoguan/updateForm\";\nexport const CHECK_PAGE_ATTR = \"gonghao/tuoguan/checkPageAttr\";\nexport const OPEN_GONGHAO_MODAL = \"gonghao/tuoguan/openGonghaoModal\";\nexport const CLOSE_GONGHAO_MODAL = \"gonghao/tuoguan/closeGonghaoModal\";\nexport const CHANGE_GROUP = \"gonghao/tuoguan/changeGroup\";\nexport const CHANGE_ATTRIBUTE = \"gonghao/tuoguan/changeAttribute\";\nexport const CHANGE_AB_TEST = \"gonghao/tuoguan/changeAbTest\";\nexport const CHANGE_SELECT_VALUE = \"gonghao/tuoguan/changeSelectValue\";\n\n// 公号配置\nexport const GET_CONFIG_LIST = \"gonghao/tuoguan/getConfigList\";\nexport const DELETE_CONFIG = \"gonghao/tuoguan/deleteConfig\";\nexport const CREATE_CONFIG_FORM = \"gonghao/tuoguan/createConfigForm\";\nexport const UPDATE_CONFIG_FORM = \"gonghao/tuoguan/updateConfigForm\";\nexport const CHANGE_CONFIG_FORM = \"gonghao/tuoguan/changeConfigForm\";\n","export const GET_MENU_LIST = \"gonghao/menu/getMenuList\";\nexport const DELETE_MENU = \"gonghao/menu/deleteMenu\";\nexport const HANDLE_INFO_CHANGE = \"gonghao/menu/handleInfoChange\";\nexport const HANDLE_INDIVIDUAL_CHANGE = \"gonghao/menu/handleIndividualChange\";\nexport const HANDLE_INPUT_CHANGE = \"gonghao/menu/handleInputChange\";\nexport const HANDLE_SUB_INPUT_CHANGE = \"gonghao/menu/handleSubInputChange\";\nexport const ADD_FIRST_MENU = \"gonghao/menu/addFirstMenu\";\nexport const ADD_SECOND_MENU = \"gonghao/menu/addSecondMenu\";\nexport const EDIT_MENU = \"gonghao/menu/editMenu\";\nexport const EDIT_SEC_MENU = \"gonghao/menu/editSecMenu\";\nexport const SUBMIT_MENU = \"gonghao/menu/submitMenu\";\nexport const OPEN_MADAL = \"gonghao/menu/openModal\";\nexport const CANCEL_MENU = \"gonghao/menu/cancelMenu\";\nexport const DELETE_FIR_MENU = \"gonghao/menu/deleteFirMenu\";\nexport const DELETE_SUB_MENU = \"gonghao/menu/deleteSubMenu\";\nexport const GET_ALL_CODES = \"gonghao/menu/getAllCodes\";\nexport const CHANGE_GONGHAO = \"gonghao/menu/changeGonghao\";\nexport const INIT_MENU_INFO = \"gonghao/menu/initMenuInfo\";\nexport const RESET_STATE = \"gonghao/menu/resetState\";\nexport const CHANGE_MESSAGE_INFO = \"gonghao/menu/changeMessageInfo\";\nexport const ADD_TO_LIST = \"gonghao/menu/addToList\";\nexport const UPDATE_MESSAGE_ITEM = \"gonghao/menu/updateMessageItem\";\nexport const UPDATE_CURRENT_MESSAGE = \"gonghao/menu/updateCurrentMessage\";\nexport const DELETE_CURRENT_MESSAGE = \"gonghao/menu/deleteCurrentMessage\";\nexport const CLEAR_MESSAGE_INFO_INPUT = \"gonghao/menu/clearMessageInfoInput\";\nexport const SAVE_TO_CONTENTS = \"gonghao/menu/saveToContents\";\nexport const RANDOM_STRING = \"gonghao/menu/randomString\";","import * as constants from './constants';\n\nconst firstMenuForm = {\n  name: \"\",\n  type: \"view\",\n  key: \"\",\n  url: \"\",\n  sub_button: []\n};\n\nconst sub_button = {\n  name: \"\",\n  type: \"view\",\n  key: \"\",\n  url: \"\"\n};\n\nconst defaultMenuInfo = {\n  title: \"\",\n  individual: false,\n  sex: \"0\",\n  values: [],\n  codes: [],\n  contents: {}\n};\n\nconst messageInfo = {\n  replyType: 0,\n  articles: [],\n  content: \"\"\n};\n\nconst defaultState = {\n  menuList: [],\n  menuForm: JSON.parse(JSON.stringify(firstMenuForm)),\n  menuInfo: JSON.parse(JSON.stringify(defaultMenuInfo)),\n  menuIndex: -1,\n  sub_button: JSON.parse(JSON.stringify(sub_button)),\n  secMenuIndex: -1,\n  isSubmit: false,\n  updateIndex: -1,\n  messageInfo: JSON.parse(JSON.stringify(messageInfo)),\n  currentKey: \"\"\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state));\n  switch (action.type) {\n    // 菜单配置列表页\n    case constants.GET_MENU_LIST:    // 获取菜单列表\n      newState.menuList = action.menuList;\n      return newState;\n    case constants.DELETE_MENU:      // 删除菜单\n      newState.menuList.splice(action.index, 1);\n      return newState;\n\n    // 编辑菜单栏\n    case constants.GET_ALL_CODES:    // 获取所有公号\n      newState.allCodes = [...action.allCodes];\n      return newState;\n    case constants.CHANGE_GONGHAO:   // 选择公号\n      newState.menuInfo.codes = newState.targetKeys = [...action.targetKeys];\n      return newState;\n    case constants.ADD_FIRST_MENU:    // 添加一级菜单\n      newState.menuForm = JSON.parse(JSON.stringify(firstMenuForm));\n      newState.menuInfo.values.push({...newState.menuForm});\n      newState.menuIndex = newState.menuInfo.values.length - 1;\n      return newState;\n    case constants.EDIT_MENU:         // 编辑一级菜单\n      newState.secMenuIndex = -1;\n      newState.menuIndex = action.index;\n      newState.menuForm = {...action.data};\n      if(newState.menuForm.sub_button && newState.menuForm.sub_button.length) {\n        newState.sub_button = {...newState.menuForm.sub_button[0]};\n        newState.secMenuIndex = 0;\n      }\n      newState.currentKey = \"\";\n      if(newState.menuIndex > -1) {\n        if(newState.sub_button.key && newState.secMenuIndex > -1){\n          newState.menuInfo.values[newState.menuIndex].key = newState.menuForm.key = \"\";\n          newState.currentKey = newState.sub_button.key;\n          newState.messageInfo = newState.menuInfo.contents[newState.currentKey]\n        } else if(action.data.key) {\n          newState.currentKey = newState.menuForm.key = newState.menuInfo.values[newState.menuIndex].key;\n          newState.messageInfo = newState.menuInfo.contents[newState.currentKey]\n        }\n      }\n      return newState;\n    case constants.DELETE_FIR_MENU:   // 删除一级菜单\n      newState.menuInfo.values.splice(newState.menuIndex, 1);\n      newState.menuIndex = 0;\n      newState.menuForm = newState.menuInfo.values[0] || JSON.parse(JSON.stringify(firstMenuForm));\n      delete newState.menuInfo.contents[newState.currentKey];\n      newState.menuForm.key &&( newState.messageInfo = newState.menuInfo.contents[newState.menuForm.key]);\n      return newState;\n    case constants.HANDLE_INPUT_CHANGE:    // 一级菜单input修改\n      if(action.name === \"type\") {\n        newState.menuForm.url = \"\";\n        newState.messageInfo = JSON.parse(JSON.stringify(messageInfo));\n        if(action.value === \"click\") {\n          // newState.menuForm.key = newState.currentKey = newState.menuInfo.values[newState.menuIndex].key = \"wxb_mn_\" + (newState.menuIndex + 1) + \"_0\";\n          newState.menuForm.key = newState.menuInfo.values[newState.menuIndex].key  = newState.currentKey;\n        } else {\n          newState.menuForm.key = newState.menuInfo.values[newState.menuIndex].key = newState.currentKey = \"\"\n        }\n      }\n      newState.menuForm[action.name] = action.value;\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm});\n      return newState;\n    case constants.ADD_SECOND_MENU:   // 添加二级菜单\n      newState.sub_button = JSON.parse(JSON.stringify(sub_button));\n      newState.menuForm.sub_button.push({...newState.sub_button});\n      newState.messageInfo = JSON.parse(JSON.stringify(messageInfo));\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm});\n      newState.secMenuIndex = newState.menuForm.sub_button.length - 1;\n      return newState;\n    case constants.EDIT_SEC_MENU:     // 编辑二级菜单\n      newState.currentKey && (newState.menuInfo.contents[newState.currentKey] = newState.messageInfo);\n      newState.secMenuIndex = action.index;\n      newState.sub_button = {...action.data};\n      newState.currentKey = \"\";\n      if(action.data.key && newState.secMenuIndex > -1) {\n        newState.menuInfo.values[newState.menuIndex].key = newState.menuForm.key = \"\";\n        newState.currentKey = newState.sub_button.key;\n        newState.messageInfo = newState.menuInfo.contents[newState.currentKey]\n      }\n      return newState;\n    case constants.DELETE_SUB_MENU:   // 删除二级菜单\n      newState.menuForm.sub_button.splice(newState.secMenuIndex, 1);\n      newState.menuInfo.values[newState.menuIndex].sub_button.splice(newState.secMenuIndex, 1);\n      newState.secMenuIndex = 0;\n      newState.sub_button = newState.menuForm.sub_button[0] ||JSON.parse(JSON.stringify(sub_button));\n      delete newState.menuInfo.contents[newState.currentKey];\n      newState.sub_button.key && (newState.messageInfo = newState.menuInfo.contents[newState.sub_button.key]);\n      return newState;\n    case constants.HANDLE_SUB_INPUT_CHANGE:    // 二级菜单input修改\n      if(action.name === \"type\") {\n        newState.sub_button.url = \"\";\n        newState.messageInfo = JSON.parse(JSON.stringify(messageInfo));\n        if(action.value === \"click\") {\n          newState.menuInfo.values[newState.menuIndex].key = newState.menuForm.key = \"\";\n          newState.sub_button.key = newState.currentKey;\n        } else {\n          newState.sub_button.key = newState.currentKey = \"\"\n        }\n      }\n      newState.sub_button[action.name] = action.value;\n      newState.menuForm.sub_button.splice(newState.secMenuIndex, 1, {...newState.sub_button});\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm})\n      return newState;\n    case constants.CHANGE_MESSAGE_INFO:  // 修改图文消息Input\n      if(action.key === \"replyType\") {\n        newState.messageInfo = JSON.parse(JSON.stringify(messageInfo));\n        newState.messageInfo.replyType = action.value\n      } else {\n        newState.messageInfo[action.key] = action.value;\n      }\n      return newState;\n    case constants.ADD_TO_LIST:          // 添加到图文消息列表\n      const { title, picurl, url, description } = newState.messageInfo;\n      newState.messageInfo.articles.push({...{ title, picurl, url, description }});\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\n      return newState;\n    case constants.UPDATE_MESSAGE_ITEM:  // 选择修改的消息\n      const { item, index } = action;\n      Object.assign(newState.messageInfo, {...item});\n      newState.updateIndex = index;\n      return newState;\n    case constants.UPDATE_CURRENT_MESSAGE:    // 修改当前的消息\n      let currentMessage = {\n        title: newState.messageInfo.title,\n        picurl: newState.messageInfo.picurl,\n        url: newState.messageInfo.url,\n        description: newState.messageInfo.description};\n      newState.messageInfo.articles.splice(newState.updateIndex, 1, {...currentMessage});\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\n      newState.updateIndex = -1;\n      return newState;\n    case constants.DELETE_CURRENT_MESSAGE:     // 删除当前的消息\n      newState.messageInfo.articles.splice(newState.updateIndex, 1);\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\n      newState.updateIndex = -1;\n      return newState;\n    case constants.CLEAR_MESSAGE_INFO_INPUT:   // 清空messageInfo的input\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\n      newState.updateIndex = -1;\n      return newState;\n    case constants.SAVE_TO_CONTENTS:           // 保存到contents\n      let {articles, content, replyType} = newState.messageInfo;\n      let message = {articles, content, replyType};\n      newState.currentKey && (newState.menuInfo.contents[newState.currentKey] = {...message});\n      return newState;\n    case constants.RANDOM_STRING:              // 随机8位字符串\n      newState.currentKey = action.result;\n      return newState;\n\n    case constants.OPEN_MADAL:        // 打开选择公号Modal\n      newState.isSubmit = true;\n      return newState;\n    case constants.SUBMIT_MENU:       // 提交菜单栏\n      newState.isSubmit = false;\n      return newState;\n    case constants.CANCEL_MENU:       // 取消提交、关闭Modal\n      newState.isSubmit = false;\n      return newState;\n    case constants.HANDLE_INFO_CHANGE:         // 修改menuInfo\n      newState.menuInfo[action.name] = action.value;\n      return newState;\n    case constants.HANDLE_INDIVIDUAL_CHANGE:   // 是否开启个性化菜单\n      newState.menuInfo.individual = action.value;\n      Object.assign(newState.menuForm, {\n        sex: 0\n      });\n      return newState;\n\n    case constants.INIT_MENU_INFO:    // 修改菜单栏时，初始化菜单栏信息\n      newState.menuInfo = {...action.record, contents: {}};\n      newState.menuInfo.id = action.record._id;\n      newState.targetKeys = [...newState.menuInfo.codes];\n      newState.menuForm = {...newState.menuInfo.values[0]};\n      newState.menuIndex = 0;\n      if(newState.menuForm.sub_button && newState.menuForm.sub_button.length) {\n        newState.sub_button = {...newState.menuForm.sub_button[0]};\n        newState.secMenuIndex = 0;\n        if(newState.sub_button.key) {\n          newState.currentKey = newState.sub_button.key;\n          newState.messageInfo = newState.menuInfo.contents[newState.currentKey];\n        }\n      } else {\n        newState.menuForm.key && (newState.currentKey = newState.menuForm.key);\n        newState.currentKey && (newState.messageInfo = newState.menuInfo.contents[newState.currentKey]);\n      }\n      return newState;\n\n    case constants.RESET_STATE:       // 重置state\n      newState = defaultState;\n      return newState;\n    default:\n      return state;\n  }\n};","import axios from '../../../../utils/http';\nimport * as constants from './constants';\nimport {Modal, message} from 'antd';\n\n\nexport const getMenuList = () => {\n  return dispatch => {\n    axios.get('/menu')\n      .then(res => {\n        if (res.data.data.length > 0) {\n          let menuList = res.data.data.reverse();\n          const action = {\n            type: constants.GET_MENU_LIST,\n            menuList\n          };\n          dispatch(action);\n        }\n      })\n  }\n};\n\nexport const deleteMenu = (id, index) => {\n  return dispatch => {\n    Modal.confirm({\n      title: \"提示\",\n      content: \"确定删除吗？\",\n      onOk: () => {\n        axios.get(\"/menu/del\", {params: {id: id}})\n          .then(res => {\n            if (res.data.success) {\n              const action = {\n                type: constants.DELETE_MENU,\n                index\n              };\n              dispatch(action);\n              message.success(res.data.success)\n            }\n          });\n      }\n    })\n  }\n};\n\nexport const handleInfoChange = (value, name) => ({\n  type: constants.HANDLE_INFO_CHANGE,\n  value, name\n});\n\nexport const handleIndividualChange = value => ({\n  type: constants.HANDLE_INDIVIDUAL_CHANGE,\n  value\n});\n\nexport const handleInputChange = (name, value) => {\n  return dispatch => {\n    if (value === \"click\") {\n      dispatch(randomString());\n    }\n    dispatch({\n      type: constants.HANDLE_INPUT_CHANGE,\n      name, value\n    })\n  }\n};\n\nexport const handleSubInputChange = (name, value) => {\n  return dispatch => {\n    if (value === \"click\") {\n      dispatch(randomString());\n      dispatch({type: constants.SAVE_TO_CONTENTS})\n    }\n    dispatch({\n      type: constants.HANDLE_SUB_INPUT_CHANGE,\n      name, value\n    })\n  }\n};\n\nexport const addFirstMenu = () => {\n  return dispatch => {\n    dispatch({type: constants.SAVE_TO_CONTENTS});\n    dispatch({type: constants.ADD_FIRST_MENU});\n  }\n};\n\nexport const editMenu = (data, index) => {\n  return dispatch => {\n    dispatch({type: constants.SAVE_TO_CONTENTS});\n    dispatch({\n      type: constants.EDIT_MENU,\n      index, data\n    });\n  }\n};\n\nexport const addSecondMenu = () => {\n  return dispatch => {\n    dispatch({type: constants.SAVE_TO_CONTENTS});\n    dispatch({type: constants.ADD_SECOND_MENU});\n  }\n};\n\nexport const editSecMenu = (data, index) => {\n  return dispatch => {\n    if (data.key) {\n      dispatch({type: constants.SAVE_TO_CONTENTS})\n    }\n    dispatch({\n      type: constants.EDIT_SEC_MENU,\n      index, data\n    });\n  }\n};\n\nexport const deleteFirMenu = () => {\n  return dispatch => {\n    Modal.confirm({\n      title: \"提示\",\n      content: \"确定删除吗？\",\n      onOk: () => {\n        dispatch({type: constants.DELETE_FIR_MENU})\n      }\n    });\n  }\n};\n\nexport const deleteSubMenu = () => {\n  return dispatch => {\n    Modal.confirm({\n      title: \"提示\",\n      content: \"确定删除吗？\",\n      onOk: () => {\n        dispatch({type: constants.DELETE_SUB_MENU})\n      }\n    });\n  }\n};\n\nexport const openModal = () => {\n  return dispatch => {\n    dispatch({type: constants.OPEN_MADAL});\n    dispatch({type: constants.SAVE_TO_CONTENTS});\n  }\n};\n\nexport const submitMenu = props => {\n  return dispatch => {\n    let {menuInfo} = props, {values} = menuInfo;\n    let validateResult = validateArray(values);\n    validateResult && Modal.confirm({\n      title: \"提示\",\n      content: \"确定提交吗？\",\n      onOk: () => {\n        axios.post(props.history.location.query ? \"/menu/update\" : \"/menu/create\", {...menuInfo})\n          .then(res => {\n            const action = {\n              type: constants.SUBMIT_MENU\n            };\n            dispatch(action);\n            props.history.goBack();\n            dispatch(resetState())\n          })\n      }\n    });\n  }\n};\n\nexport const resetState = () => ({\n  type: constants.RESET_STATE\n});\n\nexport const cancelMenu = () => ({\n  type: constants.CANCEL_MENU\n});\n\n\nexport const getAllCodes = () => {\n  return dispatch => {\n    axios.get('/conf')\n      .then(res => {\n        let allCodes = res.data.data;\n        const action = {\n          type: constants.GET_ALL_CODES,\n          allCodes\n        };\n        dispatch(action);\n      })\n  }\n};\n\nexport const changeGonghao = targetKeys => ({\n  type: constants.CHANGE_GONGHAO,\n  targetKeys\n});\n\nexport const initMenuInfo = record => ({\n  type: constants.INIT_MENU_INFO,\n  record\n});\n\nexport const changeMessageInfo = (key, value) => ({\n  type: constants.CHANGE_MESSAGE_INFO,\n  key, value\n});\n\nexport const addToList = () => ({\n  type: constants.ADD_TO_LIST\n});\n\nexport const updateMessageItem = (item, index) => ({\n  type: constants.UPDATE_MESSAGE_ITEM,\n  item, index\n});\n\n\nexport const updateCurrentMessage = () => ({\n  type: constants.UPDATE_CURRENT_MESSAGE\n});\n\nexport const deleteCurrentMessage = () => ({\n  type: constants.DELETE_CURRENT_MESSAGE\n});\n\nexport const randomString = () => {\n  return dispatch => {\n    var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    var result = '';\n    for (var i = 8; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];\n    dispatch({type: constants.RANDOM_STRING, result})\n  }\n};\n\nconst validateArray = values => {\n  for(let j = 0; j < values.length; j ++) {\n    let item = values[j];\n    if(item.sub_button) {\n      for (let i = 0; i < item.sub_button.length; i ++) {\n        if(item.sub_button[i].type === \"view\") {\n          if(!item.sub_button[i].url) {\n            message.warning(\"请检查跳转链接输入是否有误\");\n            return false;\n          }\n        }\n      }\n    } else {\n      if(item.type === \"view\") {\n        if(!item.url) {\n          message.warning(\"请检查跳转链接输入是否有误\");\n          return false\n        }\n      }\n    }\n  }\n  return true\n};","import * as constants from './constants';\n\nconst resetFields = {\n  type: 0,\n  sex: 3,\n  attribute: 1,\n  replyType: 0,\n  codes: [],\n  articles: [],\n  is_nickname: false,\n  content: \"\"\n};\n\nconst defaultState = {\n  // 公号配置\n  replyMessageList: [],\n  messageInfo: JSON.parse(JSON.stringify(resetFields)),\n  allCodes: [],\n  updateIndex: -1,\n  messageIndex: -1\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state));\n  switch (action.type) {\n    // 公号配置\n    case constants.GET_REPLY_MESSAGE_LIST:\n      newState.replyMessageList = action.replyMessageList.filter(item => item.type !== 1);\n      return newState;\n    case constants.DELETE_REPLY_MESSAGE:\n      newState.replyMessageList.splice(action.index, 1);\n      return newState;\n    case constants.GET_ALL_CODES:\n      newState.allCodes = action.allCodes;\n      return newState;\n    case constants.SELECT_GONGHAO:\n      newState.messageInfo.codes = [...action.codes];\n      return newState;\n    case constants.CHANGE_MESSAGE_INFO:\n      newState.messageInfo[action.key] = action.value;\n      return newState;\n    case constants.ADD_TO_LIST:\n      const { title, picurl, url, description } = newState.messageInfo;\n      newState.messageInfo.articles.push({...{ title, picurl, url, description }});\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\n      return newState;\n    case constants.UPDATE_MESSAGE_ITEM:\n      const { item, index} = action;\n      Object.assign(newState.messageInfo, {...item});\n      newState.updateIndex = index;\n      return newState;\n    case constants.UPDATE_CURRENT_MESSAGE:\n      let message = {\n        title: newState.messageInfo.title,\n        picurl: newState.messageInfo.picurl,\n        url: newState.messageInfo.url,\n        description: newState.messageInfo.description\n      };\n      newState.messageInfo.articles.splice(newState.updateIndex, 1, {...message});\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\n      newState.updateIndex = -1;\n      return newState;\n    case constants.DELETE_CURRENT_MESSAGE:\n      newState.messageInfo.articles.splice(newState.updateIndex, 1);\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\n      newState.updateIndex = -1;\n      return newState;\n\n    case constants.INIT_STATE:\n      newState.messageInfo = JSON.parse(JSON.stringify(action.record));\n      newState.messageIndex = action.index;\n      if(newState.messageInfo.replyType === 1) {\n        Object.assign(newState.messageInfo, newState.messageInfo.articles[0]);\n        newState.updateIndex = 0;\n      }\n      return newState;\n\n    case constants.RESET_STATE:\n      newState = JSON.parse(JSON.stringify(defaultState));\n      return newState;\n\n    default:\n      return state;\n  }\n};","import axios from '../../../../utils/http';\nimport * as constants from './constants';\nimport { Modal, message } from 'antd';\n\n\n// 公号配置\n\nexport const getReplyMessageList = () => {\n  return dispatch => {\n    axios.get('/reply')\n      .then(res => {\n        let replyMessageList = res.data.data;\n        const action = {\n          type: constants.GET_REPLY_MESSAGE_LIST,\n          replyMessageList\n        };\n        dispatch(action)\n      })\n  }\n};\n\nexport const deleteReplyMessage = (_id, index) => {\n  return (dispatch) => {\n    Modal.confirm({\n      okText: \"确定\",\n      cancelText: \"取消\",\n      content: \"确认删除吗？\",\n      title: \"提示\",\n      onOk: () => {\n        axios.get('/reply/del', {params: {_id}})\n          .then(res => {\n          const action = {\n            type: constants.DELETE_REPLY_MESSAGE,\n            index\n          };\n          dispatch(action);\n          message.success(\"删除成功\")\n        });\n      }\n    })\n\n  }\n};\n\n\nexport const getAllCodes = () => {\n  return dispatch => {\n    axios.get('/conf')\n      .then(res => {\n        if (res.data.data.length > 0) {\n          const {data: allCodes} = res.data;\n          dispatch({ type: constants.GET_ALL_CODES, allCodes });\n        }\n      })\n  }\n};\n\nexport const selectGonghao = codes => ({\n  type: constants.SELECT_GONGHAO,\n  codes\n});\n\nexport const changeMessageInfo = (key, value) => ({\n  type: constants.CHANGE_MESSAGE_INFO,\n  key, value\n});\n\nexport const addToList = () => ({\n  type: constants.ADD_TO_LIST\n});\n\nexport const updateMessageItem = (item, index) => ({\n  type: constants.UPDATE_MESSAGE_ITEM,\n  item, index\n});\n\nexport const updateCurrentMessage = () => ({\n  type: constants.UPDATE_CURRENT_MESSAGE\n});\n\nexport const deleteCurrentMessage = () => ({\n  type: constants.DELETE_CURRENT_MESSAGE\n});\n\nexport const createConfigForm = (configInfo, history) => {\n  return (dispatch) => {\n    if(!configInfo.codes.length) {\n      message.error(\"请选择公号后再试\");\n      return\n    }\n    Modal.confirm({\n      title: \"确定新建一条规则吗？\",\n      onOk: () => {\n        axios.post(\"/reply/create\", configInfo).then(res => {\n          history.goBack();\n          const action = {\n            type: constants.CREATE_CONFIG_FORM,\n            configInfo\n          };\n          dispatch(action);\n          message.success(\"创建成功\")\n        });\n      }\n    })\n  }\n};\n\nexport const updateConfigForm = (configInfo, history, index) => {\n  return (dispatch) => {\n    if(!configInfo.codes.length) {\n      message.error(\"请选择公号后再试\");\n      return\n    }\n    Modal.confirm({\n      title: \"确定修改吗？\",\n      onOk: () => {\n        axios.post(\"/reply/update\", configInfo).then(res => {\n          history.goBack();\n          const action = {\n            type: constants.UPDATE_CONFIG_FORM,\n            configInfo, index\n          };\n          dispatch(action);\n          message.success(\"修改成功\")\n        });\n      }\n    })\n  }\n};\n\nexport const resetState = () => ({\n  type: constants.RESET_STATE\n});\n\nexport const initState = (record, index) => ({\n  type: constants.INIT_STATE,\n  record, index\n});","export const GET_REPLY_MESSAGE_LIST = \"gonghao/reply/getReplyMessageList\";\nexport const DELETE_REPLY_MESSAGE = \"gonghao/reply/deleteReplyMessage\";\n\nexport const INIT_STATE = \"gonghao/reply/initState\";\n// 获取所有公号\nexport const GET_ALL_CODES = \"gonghao/reply/getAllCodes\";\nexport const SELECT_GONGHAO = \"gonghao/reply/selectGonghao\";\nexport const ADD_TO_LIST = \"gonghao/reply/addToList\";\nexport const CHANGE_MESSAGE_INFO = \"gonghao/reply/changeMessageInfo\";\nexport const UPDATE_MESSAGE_ITEM = \"gonghao/reply/updateMessageItem\";\nexport const UPDATE_CURRENT_MESSAGE = \"gonghao/reply/updateCurrentMessage\";\nexport const DELETE_CURRENT_MESSAGE = \"gonghao/reply/deleteCurrentMessage\";\n\n\nexport const CREATE_CONFIG_FORM = \"gonghao/reply/createConfigForm\";\nexport const UPDATE_CONFIG_FORM = \"gonghao/reply/updateConfigForm\";\n\n\nexport const RESET_STATE = \"gonghao/reply/resetState\";","import { combineReducers } from 'redux';\nimport { reducer as tuoguanReducer } from './tuoguan/store';\nimport { reducer as menuReducer } from './menu/store';\nimport { reducer as replyReducer } from './reply/store';\n\nconst reducer = combineReducers({\n  tuoguan: tuoguanReducer,\n  menu: menuReducer,\n  reply: replyReducer,\n});\n\nexport default reducer;","export const GET_GROUP_GONGHAO = \"gonghao/group/getGroupGonghao\";\nexport const CHANGE_SEARCH_INPUT = \"gonghao/group/changeSearchInput\";\nexport const SEARCH_BY_NAME = \"gonghao/group/search\";\n\n// 群发素材\nexport const GET_GROUP_MATERIAL = \"gonghao/group/getMessageList\";\nexport const OPEN_MODAL = \"gonghao/group/openModal\";\nexport const OPEN_TIMING_MODAL = \"gonghao/group/openTimingModal\";\nexport const CHANGE_TAG_ID = \"gonghao/group/changeTagId\";\nexport const GET_TAG_LIST = \"gonghao/group/getTagList\";\nexport const CLOSE_MODAL = \"gonghao/group/closeModal\";\nexport const CHANGE_TIMING_STATE = \"gonghao/group/changeTimingState\";\nexport const CHANGE_TIME = \"gonghao/group/changeTime\";\nexport const COPY = \"gonghao/group/copy\";\nexport const DELETE_MATERIAL = \"gonghao/group/deleteMaterial\";\nexport const CLEAR_MATERIAL = \"gonghao/group/clearMaterial\";\nexport const OPEN_UPDATE_MATERIAL_MODAL = \"gonghao/group/openUpdateMaterialModal\";\nexport const CLOSE_UPDATE_MATERIAL_MODAL = \"gonghao/group/closeUpdateMaterialModal\";\nexport const CHANGE_CONTENT_SOURCE_URL = \"gonghao/group/changeContentSourceUrl\";\n\n// 群发历史\nexport const GET_HISTORY_LIST = \"gonghao/group/getHistoryList\";\nexport const OPEN_MSG_MODAL = \"gonghao/group/openMsgModal\";\nexport const CLOSE_MSG_MODAL = \"gonghao/group/closeMsgModal\";\nexport const CHANGE_ARTICLE_IDX = \"gonghao/group/changeArticleIdx\";\nexport const CLEAR_HISTORY = \"gonghao/group/clearHistory\";\nexport const CHANGE_DATE = \"gonghao/group/changeDate\";\n\n\n\n\nexport const RESET_STATE = \"gonghao/group/resetState\";\n","import * as constants from './constants';\n\nconst defaultState = {\n  messageList: [],\n  isComplete: true,\n  tagList: [],\n  sendModal: false,\n  sendTimingModal: false,\n  date: \"\",\n  time: \"\",\n  sendInfo: {\n    id: \"\",\n    tagId: null,\n    mediaId: \"\"\n  },\n  sendTimingInfo: {\n    id: \"\",\n    tagId: null,\n    isTiming: false,\n    timing: null\n  },\n  updateInfo: {\n    \"media_id\": \"\",\n    \"index\": null,\n    \"articles\": {\n      \"content_source_url\": \"\"\n    },\n    id: \"\"\n  },\n  updateMaterialModal: false,\n\n  historyList: [],\n  historyMsgModal: false,\n  delMsgInfo: {\n    code: null,\n    msg_id: \"\",\n    article_idx: \"\"\n  },\n  delDate: \"\"\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state));\n  switch (action.type) {\n\n    // 群发素材\n\n    case constants.GET_GROUP_MATERIAL:\n      newState.messageList = [...action.data];\n      return newState;\n    case constants.GET_TAG_LIST:\n      newState.tagList = [...action.data];\n      return newState;\n    case constants.CHANGE_TAG_ID:\n      !action.isTiming && (newState.sendInfo.tagId = action.value)\n      action.isTiming && (newState.sendTimingInfo.tagId = action.value)\n      return newState;\n    case constants.CLOSE_MODAL:\n      newState.sendInfo = newState.sendTimingInfo = {};\n      newState.sendTimingInfo.timing = Date.now();\n      newState.sendTimingInfo.isTiming = newState.sendTimingModal = newState.sendModal = false;\n      return newState;\n    case constants.OPEN_MODAL:\n      newState.sendInfo.id = action.record._id;\n      newState.sendInfo.tagId = action.record.tagId;\n      newState.sendInfo.mediaId = action.record.media_id;\n      newState.sendModal = true;\n      return newState;\n    case constants.OPEN_TIMING_MODAL:\n      newState.sendTimingInfo.id = action.record._id;\n      newState.sendTimingInfo.tagId = action.record.tagId;\n      newState.sendTimingInfo.isTiming = action.record.isTiming;\n      newState.sendTimingInfo.timing = action.record.timing;\n      newState.sendTimingModal = true;\n      return newState;\n    case constants.CHANGE_TIMING_STATE:\n      newState.sendTimingInfo.isTiming = action.value;\n      return newState;\n    case constants.CHANGE_TIME:\n      if (action.timeType === \"date\") {\n        newState.date = action.time\n      } else {\n        newState.time = action.time\n      }\n      let dateTime = new Date(newState.date + \" \" + newState.time);\n      newState.sendTimingInfo.timing = dateTime.getTime();\n      return newState;\n    case constants.COPY:\n      newState.messageList.unshift({...action.data});\n      return newState;\n    case constants.DELETE_MATERIAL:\n      newState.messageList.splice(action.index, 1);\n      return newState;\n    case constants.CLEAR_MATERIAL:\n      newState.messageList = [];\n      return newState;\n    case constants.OPEN_UPDATE_MATERIAL_MODAL:\n      newState.updateMaterialModal = true;\n      newState.updateInfo = action.updateInfo;\n      return newState;\n    case constants.CLOSE_UPDATE_MATERIAL_MODAL:\n      newState.updateMaterialModal = false;\n      newState.updateInfo.articles.content_source_url = \"\";\n      return newState;\n    case constants.CHANGE_CONTENT_SOURCE_URL:\n      newState.updateInfo.articles.content_source_url = action.content_source_url;\n      return newState;\n\n    // 群发历史\n    case constants.GET_HISTORY_LIST:\n      newState.historyList = [...action.data];\n      return newState;\n    case constants.OPEN_MSG_MODAL:\n      newState.historyMsgModal = true;\n      newState.delMsgInfo.code = action.code;\n      newState.delMsgInfo.msg_id = action.msg_id;\n      return newState;\n    case constants.CLOSE_MSG_MODAL:\n      newState.historyMsgModal = false;\n      newState.delMsgInfo.article_idx = \"\";\n      return newState;\n    case constants.CHANGE_ARTICLE_IDX:\n      newState.delMsgInfo.article_idx = action.value;\n      return newState;\n    case constants.CLEAR_HISTORY:\n      newState.historyList = [];\n      return newState;\n    case constants.CHANGE_DATE:\n      newState.delDate = action.delDate;\n      return newState;\n\n    case constants.RESET_STATE:\n      newState = defaultState;\n      return newState;\n    default:\n      return state;\n  }\n};","import axios from '../../../../utils/http';\nimport * as constants from './constants';\nimport { Modal, message } from 'antd';\n\n// 群发公号\nconst getGonghaoList = () => {\n  return new Promise((resolve, reject) => {\n    axios.get('/conf')\n      .then(res => {\n        if (res.data.data.length > 0) {\n          let gonghaoList = res.data.data;\n          const action = {\n            type: constants.GET_GROUP_GONGHAO,\n            gonghaoList\n          };\n          resolve(action)\n        } else {\n          reject('error message: 没有数据')\n        }\n      })\n  });\n};\n\nexport const getGroupGonghao = () => {\n  return async dispatch => {\n    let action = await getGonghaoList();\n    dispatch(action);\n  }\n};\n\nexport const getMaterial = code => {\n  return dispatch => {\n    if(code) {\n      axios.get('/material', {params: {code}})\n        .then(res => {\n          message.success(res.data.success);\n          setTimeout(function () {\n            dispatch(getMessageList(code))\n          }, 3000)\n        })\n    } else {\n      message.warning(\"请选择公号后再试\")\n    }\n  }\n};\n\nexport const openUpdateMaterialModal = updateInfo => ({\n  type: constants.OPEN_UPDATE_MATERIAL_MODAL,\n  updateInfo\n});\n\nexport const closeUpdateMaterialModal = () => ({\n  type: constants.CLOSE_UPDATE_MATERIAL_MODAL\n});\n\nexport const updateMaterial = (updateInfo, code) => {\n  return dispatch => {\n    axios.put(\"/material/contentSourceUrl\", {...updateInfo, code})\n      .then(res => {\n        const { code, msg } = res.data;\n        if(code === 1) {\n          message.success(msg);\n          dispatch(closeUpdateMaterialModal())\n        } else {\n          message.error(msg)\n        }\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n};\n\nexport const changeContentSourceUrl = content_source_url => ({\n  type: constants.CHANGE_CONTENT_SOURCE_URL,\n  content_source_url\n});\n\n// 群发素材\n\nexport const getMessageList = code => {\n  return dispatch => {\n    axios\n      .get(\"/material/show\", { params: { code: Number(code) } })\n      .then(res => {\n        const { data } = res.data;\n        const action = {\n          type: constants.GET_GROUP_MATERIAL,\n          data\n        };\n        dispatch(action)\n      });\n  }\n};\n\nexport const getTagList = code => {\n  return dispatch => {\n    axios.get(\"/material/tag\", {params: {code}})\n      .then(res => {\n        const { data } = res.data;\n        const action = {\n          type: constants.GET_TAG_LIST,\n          data\n        };\n        dispatch(action);\n      })\n  }\n};\n\nexport const changeTagId = (value, isTiming) => ({\n  type: constants.CHANGE_TAG_ID,\n  value, isTiming\n});\n\nexport const closeModal = () => ({\n  type: constants.CLOSE_MODAL\n});\n\nexport const openModal = record => ({\n  type: constants.OPEN_MODAL,\n  record\n});\n\nexport const sendMessage = sendInfo => {\n  return dispatch => {\n    Modal.confirm({\n      title: \"确定发送消息吗？\",\n      onOk: () => {\n        axios.get(\"/material/sendMsg\", {params: {...sendInfo}})\n          .then(res => {\n            message.info(res.data.success);\n            dispatch(closeModal());\n          });\n      }\n    })\n  }\n};\n\nexport const openTimingModal = record => ({\n  type: constants.OPEN_TIMING_MODAL,\n  record\n});\n\nexport const sendTimingMessage = (sendTimingInfo, code) => {\n  return dispatch => {\n    Modal.confirm({\n      title: \"确定定时发送消息吗？\",\n      onOk: () => {\n        axios.get(\"/material/send_timing\", {params: {...sendTimingInfo}})\n          .then(res => {\n            message.info(\"设置成功\");\n            dispatch(getMessageList(code));\n            dispatch(closeModal());\n          });\n      }\n    })\n  }\n};\n\nexport const changeTimingState = value => ({\n  type: constants.CHANGE_TIMING_STATE,\n  value\n});\n\nexport const changeTime = (time, timeType) => ({\n  type: constants.CHANGE_TIME,\n  time, timeType\n});\n\nexport const copy = id => {\n  return dipatch => {\n    Modal.confirm({\n      title: \"确定复制这条素材吗？\",\n      onOk: () => {\n        axios.post(\"/material/copy\", {id})\n          .then(res => {\n            if (res.data.success) {\n              const { data } = res.data;\n              message.success(res.data.success);\n              const action = {\n                type: constants.COPY,\n                data\n              };\n              dipatch(action)\n            } else {\n              message.info(res.data.err);\n            }\n          })\n      }\n    })\n  }\n};\n\nexport const deleteMaterial = (id, index) => {\n  return dispatch => {\n    Modal.confirm({\n      title: \"确定删除这条素材吗？\",\n      onOk: () => {\n        axios.get(\"/material/del\", {params: {id}})\n          .then(res => {\n            if (res.data.success) {\n              message.success(res.data.success);\n              const action = {\n                type: constants.DELETE_MATERIAL,\n                 index\n              };\n              dispatch(action);\n            } else {\n              message.info(res.data.err);\n            }\n          })\n      }\n    })\n  }\n};\n\nexport const clearMaterial = code => {\n  return dispatch => {\n    if(code) {\n      Modal.confirm({\n        title: \"确定清空列表吗？\",\n        onOk: () => {\n          axios.get(\"/material/clear\", { params: { code } })\n            .then(res => {\n              message.info(res.data.success);\n              const action = {\n                type: constants.CLEAR_MATERIAL\n              };\n              dispatch(action);\n            });\n        }\n      })\n    } else {\n      message.warning(\"请选择公号后再试\")\n    }\n  }\n};\n\n// 群发历史\n\nexport const getHistoryList = code => {\n  return dispatch => {\n    axios.get(\"/history\", {params: {code}})\n      .then(res => {\n        const { data } = res.data;\n        const action = {\n          type: constants.GET_HISTORY_LIST,\n          data\n        };\n        dispatch(action);\n      })\n  }\n};\n\nexport const checkSendState = (code, msg_id) => {\n  return dispatch => {\n    axios.get(\"/history/state\", { params: { code, msg_id }})\n      .then(res => {\n        message.info(res.data.data.msg_status)\n      })\n  }\n};\n\nexport const openMsgModal = (code, msg_id) => ({\n  type: constants.OPEN_MSG_MODAL,\n  code, msg_id\n});\n\nexport const closeMsgModal = () => ({\n  type: constants.CLOSE_MSG_MODAL\n});\n\nexport const changeArticleIdx = value => ({\n  type: constants.CHANGE_ARTICLE_IDX,\n  value\n});\n\nexport const deleteMsg = (delMsgInfo) => {\n  return dispatch => {\n    Modal.confirm({\n      title: \"确定删除吗？\",\n      onOk: () => {\n        axios.get('/history/del_msg', {\n          params: {...delMsgInfo}\n        }).then(res => {\n          message.info(res.data.success);\n          dispatch(closeMsgModal());\n        })\n      }\n    })\n  }\n};\n\nexport const clearHistory = code => {\n  return dispatch => {\n    Modal.confirm({\n      title: \"确定清空列表？\",\n      onOk: () => {\n        axios.get(\"/history/clear\", {params: {code}})\n          .then(res => {\n            message.success(res.data.success);\n            const action = {\n              type: constants.CLEAR_HISTORY\n            };\n            dispatch(action);\n          })\n      }\n    })\n  }\n};\n\nexport const changeDate = delDate => ({\n  type: constants.CHANGE_DATE,\n  delDate\n});\n\nexport const deleteMany = (code, date) => {\n  return dispatch => {\n    Modal.confirm({\n      title: '确认删除吗?:',\n      onOk: () => {\n        axios.get('/history/delByDate', {params: {date, code}})\n          .then(res => {\n            message.info(res.data.success);\n            dispatch(getHistoryList())\n          });\n      }\n    })\n  }\n};\n\nexport const resetState = () => ({\n  type: constants.RESET_STATE\n});\n","import * as constants from './constants';\n\nconst initContent = {\n  description: \"\",\n  title: \"\",\n  url: \"\",\n  picurl: \"\"\n};\n\nconst defaultState = {\n  allMessageList: [],\n  kefuMessageList: [],\n  messageType: 4,\n  messageGroup: \"全部分组\",\n  selectedMessages: [],\n  updateGroupModal: false,\n  group: \"\",\n  currentPage: 1,\n  searchName: undefined,\n  kefuMessageInfo: {\n    contents: [],\n    type: 0,\n    img: \"\",\n    img_path: \"\",\n    channel: 1,\n    sex: \"all\",\n    timing_time: new Date(),\n    daily_time_show: new Date(),\n    delay: 5,\n    tagId: \"\",\n    tagName: \"\",\n    codes: [],\n    remarks: \"\",\n    action_type: 2,\n    isHour: 0,\n    group: \"未分组\"\n  },\n  content: initContent,\n  messageIndex: -1,\n  paramsModal: false,\n  allCodes: [],\n  allGroup: [],\n  previewModal: false,\n  openid: \"\",\n  groupInputVisible: false,\n  groupValue: \"\",\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state));\n  switch (action.type) {\n    case constants.GET_KEFU_MESSAGE_LIST:\n      newState.allMessageList = [...action.kefuMessageList];\n      if(newState.messageGroup !== \"全部分组\") {\n        newState.kefuMessageList = newState.allMessageList.filter(item => item.group === newState.messageGroup)\n      } else if (newState.searchName) {\n        newState.kefuMessageList = newState.allMessageList.filter(item => {\n          let gonghaoList1 = [];\n          item.gonghaoList.map(i => {\n            i.nick_name === newState.searchName && gonghaoList1.push(i)\n          });\n          return gonghaoList1.length > 0\n        })\n      } else {\n        newState.kefuMessageList = newState.allMessageList\n      }\n      return newState;\n    case constants.CREATE_KEFU_MESSAGE:\n      newState.kefuMessageList.unshift({...action.data});\n      return newState;\n    case constants.DELETE_LAST_MESSAGE:\n      newState.kefuMessageList = [];\n      return newState;\n    case constants.DELETE_MESSAGE:\n      newState.kefuMessageList.splice(action.index, 1);\n      return newState;\n    case constants.HANDLE_CHANGE_SELECT:\n      newState.messageType = 4;\n      newState.messageGroup = \"全部分组\";\n      if(action.name === \"messageType\") {\n        const { value: type } = action;\n        newState.messageType = type;\n        type === 0 && (newState.kefuMessageList = newState.allMessageList.filter(item => !(item.delay || item.is_timing || item.is_daily)));\n        type === 1 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item.delay));\n        type === 2 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item.is_timing));\n        type === 3 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item.is_daily));\n        type === 4 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item));\n      } else {\n        const { value: group } = action;\n        newState.messageGroup = group;\n        if( group === \"全部分组\") {\n          newState.kefuMessageList = newState.allMessageList.filter(item => item.group !== \"全部消息\")\n        } else {\n          newState.kefuMessageList = newState.allMessageList.filter(item => item.group === group)\n        }\n      }\n      if(newState.searchName) {\n        newState.kefuMessageList = newState.kefuMessageList.filter(item => {\n          let gonghaoList2 = [];\n          item.gonghaoList.map(i => {\n            i.nick_name === newState.searchName && gonghaoList2.push(i)\n          });\n          return gonghaoList2.length > 0\n        })\n      }\n      return newState;\n    case constants.CHANGE_SELECTED_MESSAGES:\n      newState.selectedMessages = action.selectedMessages;\n      return newState;\n    case constants.OPEN_UPDATE_GROUP_MODAL:\n      newState.updateGroupModal = true;\n      return newState;\n    case constants.CHANGE_GROUP:\n      newState.group = action.value;\n      return newState;\n    case constants.CANCEL_UPDATE_GROUP:\n      newState.updateGroupModal = false;\n      newState.group = \"\";\n      return newState;\n    case constants.UPDATE_MORE_GROUP:\n      newState.selectedMessages = [];\n      return newState;\n    case constants.CHANGE_SEARCH_NAME:\n      let { allMessageList } = newState;\n      newState.searchName = action.value;\n      newState.messageType = 4;\n      newState.messageGroup = \"全部分组\";\n      newState.kefuMessageList = allMessageList.filter(item => {\n        let gonghaoList = [];\n        item.gonghaoList.map(i => {\n          i.nick_name === action.value && gonghaoList.push(i)\n        });\n        return gonghaoList.length > 0\n      });\n      if(newState.kefuMessageList.length > 0) {\n        action.message.success(\"查询成功\");\n      } else {\n        newState.kefuMessageList = allMessageList;\n        action.value && action.message.warning(\"没有查询到相关数据\");\n      }\n      return newState;\n    case constants.SEARCH_INPUT_VALUE:\n      newState.searchName = action.value;\n      !newState.searchName && (newState.kefuMessageList = newState.allMessageList);\n      return newState;\n    case constants.CLEAR_CONDITION:\n      newState.group = newState.searchName = \"\";\n      newState.messageGroup = \"全部分组\";\n      newState.currentPage = 1;\n      newState.kefuMessageList = newState.allMessageList;\n      return newState;\n\n    // 编辑客服消息\n    case constants.CHANGE_CONTENT_VALUE:\n      newState.content[action.name] = action.value;\n      newState.kefuMessageInfo.contents.splice(newState.messageIndex, 1, newState.content);\n      return newState;\n    case constants.CHANGE_MESSAGE_VALUE:\n      newState.kefuMessageInfo[action.name] = action.value;\n      if(action.name === \"type\") {\n        newState.content = initContent;\n        newState.kefuMessageInfo.contents = [];\n        newState.kefuMessageInfo.img = newState.kefuMessageInfo.img_path =  \"\";\n        newState.messageIndex = -1;\n        if(action.value === 0) {\n          newState.kefuMessageInfo.contents.push(newState.content);\n          newState.messageIndex = 0;\n        }\n      }\n      if(action.name === \"channel\") {\n        Object.assign(newState.kefuMessageInfo, {timing_time: new Date(), delay: 5, daily_time_show: new Date()})\n      }\n      return newState;\n    case constants.ADD_MESSAGE:\n      newState.content = initContent;\n      newState.kefuMessageInfo.contents.push(newState.content);\n      newState.messageIndex = newState.kefuMessageInfo.contents.length - 1;\n      return newState;\n    case constants.SELECT_MESSAGE:\n      newState.content = {...action.info};\n      newState.messageIndex = action.index;\n      return newState;\n    case constants.SELECT_PARAMS:\n      newState.paramsModal = true;\n      return newState;\n    case constants.HIDE_PARAMS_MODAL:\n      newState.paramsModal = false;\n      return newState;\n    case constants.GET_ALL_CODES:\n      newState.allCodes = [...action.allCodes];\n      return newState;\n    case constants.SELECT_GONGHAO:\n      newState.kefuMessageInfo.codes = [...action.codes];\n      return newState;\n    case constants.INIT_KEFU_MESSAGE_INFO:\n      newState.kefuMessageInfo = {...action.query};\n      newState.kefuMessageInfo.contents.length > 0 && (newState.content = {...newState.kefuMessageInfo.contents[0]});\n      if(newState.kefuMessageInfo.type === 0) newState.messageIndex = 0;\n      if(action.query.task) {\n        newState.kefuMessageInfo.channel = 1\n      } else if(action.query.is_timing) {\n        newState.kefuMessageInfo.channel = 2\n      } else if(action.query.is_daily) {\n        newState.kefuMessageInfo.channel = 3;\n      } else {\n        newState.kefuMessageInfo.channel = 0\n      }\n      newState.kefuMessageInfo.isHour && (newState.kefuMessageInfo.delay = newState.kefuMessageInfo.delay/60);\n      !newState.kefuMessageInfo.isHour && (newState.kefuMessageInfo.isHour = 0);\n      return newState;\n    case constants.OPEN_PREVIEW_MODAL:\n      newState.previewModal = true;\n      return newState;\n    case constants.CLOSE_PREVIEW_MODAL:\n      newState.previewModal = false;\n      newState.openid = \"\";\n      return newState;\n    case constants.CHANGE_OPENID:\n      newState.openid = action.value;\n      return newState;\n\n    case constants.GET_ALL_GROUP:\n      newState.allGroup = [...action.allGroup];\n      return newState;\n    case constants.SHOW_GROUP_INPUT:\n      newState.groupInputVisible = true;\n      setTimeout(function () {\n        action.that.input.focus();\n      }, 500);\n      return newState;\n    case constants.HANDLE_GROUP_INPUT_CHANGE:\n      newState.groupValue = action.value;\n      return newState;\n    case constants.HANDLE_GROUP_INPUT_CONFIRM:\n      Object.keys(action.data).length > 0 && newState.allGroup.push(action.data);\n      newState.groupInputVisible = false;\n      newState.groupValue = \"\";\n      return newState;\n    case constants.DELETE_GROUP:\n      newState.allGroup.splice(action.index, 1);\n      return newState;\n    case constants.CANCEL_SELECT_GROUP:\n      newState.kefuMessageInfo.group = \"未分组\";\n      return newState;\n\n    case constants.CHANGE_PAGE:\n      newState.currentPage = action.page;\n      return newState;\n\n    case constants.RESET_STATE:\n      let {currentPage, messageGroup, searchName} = newState;\n      newState = defaultState;\n      newState.currentPage = currentPage;\n      newState.messageGroup = messageGroup;\n      newState.searchName = searchName;\n      return newState;\n    default:\n      return state;\n  }\n};","import axios from '../../../../utils/http';\nimport * as constants from './constants';\nimport { Modal, message } from 'antd';\n\n// 群发公号\nconst getData = () => {\n  return new Promise((resolve, reject) => {\n    axios.get(\"/message\", {params: {sort: \"_id\"}})\n      .then(res => {\n        if (res.data.messages.length > 0) {\n          let kefuMessageList = res.data.messages;\n          const action = {\n            type: constants.GET_KEFU_MESSAGE_LIST,\n            kefuMessageList\n          };\n          resolve(action)\n        } else {\n          reject('error message: 没有数据')\n        }\n      })\n  });\n};\n\nexport const getKefuMessageList = () => {\n  return async dispatch => {\n    let action = await getData();\n    dispatch(action);\n  }\n};\n\nexport const createKefuMessage = record => {\n  return dispatch => {\n    record.delay && record.isHour && (record.delay /= 60);\n    Modal.confirm({\n      title: \"确定新增一条客服消息吗？\",\n      onOk: () => {\n        axios.post(\"/message/create\", {...record})\n          .then(res => {\n            if (res.data.success) {\n              let data = res.data.data\n              message.info(record._id ? \"复制成功\" : res.data.success);\n              const action = {\n                type: constants.CREATE_KEFU_MESSAGE,\n                data\n              };\n              dispatch(action);\n            } else {\n              message.info(res.data.err);\n            }\n          })\n      }\n    })\n  }\n};\n\nexport const deleteMessage = (id, index) => {\n  return dispatch => {\n    Modal.confirm({\n      title: \"确定删除这条客服消息吗？\",\n      onOk: () => {\n        axios.get(\"/message/delete\", { params: { id } })\n          .then(res => {\n            dispatch(getKefuMessageList());\n            if (res.data.data.length === 0) {\n              message.info(\"已删除最后一条数据\");\n              const action = {\n                type: constants.DELETE_LAST_MESSAGE\n              };\n              dispatch(action);\n            } else {\n              message.info(res.data.success);\n              const action = {\n                type: constants.DELETE_MESSAGE,\n                index\n              };\n              dispatch(action);\n            }\n          });\n      }\n    })\n  }\n};\n\nexport const sendKefuMessage = (id, tagId) => {\n  return dispatch => {\n    Modal.confirm({\n      title: \"确定发送消息吗？\",\n      onOk: () => {\n        axios.get(\"/message/send\", { params: { id, tagId, take_over: true } })\n          .then(res => {\n            message.info(res.data.success);\n          });\n      }\n    })\n  }\n};\n\nexport const handleChangeSelect = (value, name) => ({\n  type: constants.HANDLE_CHANGE_SELECT,\n  value, name\n});\n\nexport const changeSelectedMessages = selectedMessages => ({\n  type: constants.CHANGE_SELECTED_MESSAGES,\n  selectedMessages\n});\n\nexport const openUpdateGroupModal = () => ({\n  type: constants.OPEN_UPDATE_GROUP_MODAL\n});\n\nexport const changeGroup = value => ({\n  type: constants.CHANGE_GROUP,\n  value\n});\n\nexport const cancelUpdateGroup = () => ({\n  type: constants.CANCEL_UPDATE_GROUP\n});\n\nexport const updateMoreGroup = (selectedMessages, group) => {\n  return dispatch => {\n    axios.put('/message/updateGroup', {selectedMessages, group})\n      .then(res => {\n        const { code, msg } = res.data;\n        if(code === 1) {\n          message.success(msg);\n          dispatch(getKefuMessageList());\n          dispatch({type: constants.UPDATE_MORE_GROUP});\n          dispatch(cancelUpdateGroup());\n        } else {\n          message.error(msg)\n        }\n      })\n  }\n};\n\nexport const changeSearchName = value => ({\n  type: constants.CHANGE_SEARCH_NAME,\n  value, message\n});\n\nexport const searchInputChange = value => ({\n  type: constants.SEARCH_INPUT_VALUE,\n  value\n});\n\nexport const clearCondition = () => ({\n  type: constants.CLEAR_CONDITION\n});\n\nexport const deleteMultiMsg = selectedMessages => {\n  return dispatch => {\n    Modal.confirm({\n      title: \"确定删除选中的客服消息吗？\",\n      onOk: () => {\n        axios.delete(\"/message/delSelect\", {params: {selectedMessages}})\n          .then(res => {\n            message.success(res.data.msg);\n            dispatch(getKefuMessageList())\n          })\n      }\n    })\n  }\n};\n\n// 编辑客服消息\nexport const changeContentValue = (value, name) => ({\n  type: constants.CHANGE_CONTENT_VALUE,\n  value, name\n});\n\nexport const changeMessageValue = (value, name) => ({\n  type: constants.CHANGE_MESSAGE_VALUE,\n  value, name\n});\n\n\nexport const addMessage = () => ({\n  type: constants.ADD_MESSAGE\n});\n\nexport const selectMessage = (info, index) => ({\n  type: constants.SELECT_MESSAGE,\n  info, index\n});\n\nexport const selectParams = () => ({\n  type: constants.SELECT_PARAMS\n});\n\nexport const hideParamsModal = () => ({\n  type: constants.HIDE_PARAMS_MODAL\n});\n\nexport const getAllCodes = () => {\n  return dispatch => {\n    axios.get('/conf')\n      .then(res => {\n        let allCodes = res.data.data;\n        const action = {\n          type: constants.GET_ALL_CODES,\n          allCodes\n        };\n        dispatch(action);\n      })\n  }\n};\n\nexport const getAllGroup = () => {\n  return dispatch => {\n    axios.get('/messageGroup')\n      .then(res => {\n        let {data: allGroup} = res.data;\n        const action = {\n          type: constants.GET_ALL_GROUP,\n          allGroup\n        };\n        dispatch(action);\n      })\n  }\n};\n\nexport const showGroupInput = that => ({\n  type: constants.SHOW_GROUP_INPUT,\n  that\n});\n\nexport const handleGroupInputChange = value => ({\n  type: constants.HANDLE_GROUP_INPUT_CHANGE,\n  value\n});\n\nexport const handleGroupInputConfirm = group => {\n  return dispatch => {\n    if(group) {\n      axios.post('/messageGroup', {group})\n        .then(res => {\n          const {code, msg, data} = res.data;\n          if (code === 1) {\n            message.success(msg);\n            dispatch({type: constants.HANDLE_GROUP_INPUT_CONFIRM, data})\n          } else {\n            message.error(msg);\n          }\n        })\n    } else {\n      dispatch({type: constants.HANDLE_GROUP_INPUT_CONFIRM, data: {}})\n    }\n  }\n};\n\nexport const handleClose = (_id, index) => {\n  return dispatch => {\n    Modal.confirm({\n      title: \"确定删除这个分组吗？\",\n      onOk: () => {\n        axios.delete(\"/messageGroup\", {params: {_id}})\n          .then(res => {\n            const {code, msg} = res.data;\n            if(code === 1) {\n              message.success(msg);\n              dispatch({type: constants.DELETE_GROUP, index})\n            } else {\n              message.error(msg)\n            }\n          })\n      }\n    })\n  }\n};\n\nexport const cancelSelectGroup = () => ({\n  type: constants.CANCEL_SELECT_GROUP\n});\n\nexport const selectGonghao = codes => ({\n  type: constants.SELECT_GONGHAO,\n  codes\n});\n\nexport const submitMessage = (info, history, allCodes) => {\n  return dispatch => {\n    info.gonghaoList = allCodes.filter(item => info.codes.indexOf(item.code) > -1);\n    !info.img && info.contents.length > 0 && (info.img = info.contents[0].picurl);\n    info.channel === 1 ? info.task = true : info.task = false;\n    info.channel === 2 ? info.is_timing = true : info.is_timing = false;\n    if(info.channel !== 1) {\n      info.delay = null;\n    }\n    if(info.channel === 3) {\n      info.is_daily = true;\n      if(info.daily_time_show._d) {\n        info.daily_time_show = new Date(info.daily_time_show._d).getTime()\n      } else {\n        info.daily_time_show = new Date(info.daily_time_show).getTime()\n      }\n    } else {\n      info.is_daily = false;\n      info.daily_time_show = 0;\n    }\n    if(!info.codes.length) {\n      message.error(\"请选择公号后再试\");\n      return\n    }\n    Modal.confirm({\n      title: \"确定提交吗？\",\n      onOk: () => {\n        let url = \"/message/create\";\n        if(history.location.query) {\n          url = \"/message/update\";\n          info.id = info._id\n        }\n        axios.post(url, {...info})\n          .then(res => {\n            if (res.data.success) {\n              message.info(res.data.success);\n              history.goBack();\n              dispatch(resetState());\n            } else {\n              message.info(res.data.err);\n            }\n          })\n      }\n    })\n  }\n};\n\nexport const initKefuMessageInfo = query => {\n  return dispatch => {\n    if (query.tagId) {\n      axios.get(\"/tag/get_name\", { params: { tagId: query.tagId } })\n        .then(res => {\n          query.tagName = res.data.data.name;\n          const action = {\n            type: constants.INIT_KEFU_MESSAGE_INFO,\n            query\n          };\n          dispatch(action);\n        });\n    } else {\n      const action = {\n        type: constants.INIT_KEFU_MESSAGE_INFO,\n        query\n      };\n      dispatch(action);\n    }\n\n  }\n};\n\nexport const openPreviewModal = () => ({\n  type: constants.OPEN_PREVIEW_MODAL\n});\n\nexport const closePreviewModal = () => ({\n  type: constants.CLOSE_PREVIEW_MODAL\n});\n\nexport const preview = ({codes, type, contents, img_path}, openid) => {\n  return dispatch => {\n    axios.post('/message/preview', {codes, type, contents, img_path, openid})\n      .then(res => {\n        const { code, msg } = res.data;\n        if(code === 1) {\n          message.success(msg);\n        } else {\n          message.warning(msg);\n        }\n        dispatch(closePreviewModal());\n      })\n  }\n};\n\nexport const changeOpenId = value => ({\n  type: constants.CHANGE_OPENID,\n  value\n});\n\nexport const changePage = page => ({\n  type: constants.CHANGE_PAGE,\n  page\n});\n\nexport const resetState = () => ({\n  type: constants.RESET_STATE\n});\n","export const GET_KEFU_MESSAGE_LIST = \"message/kefu/getKefuMessageList\";\nexport const CREATE_KEFU_MESSAGE = \"message/kefu/createKefuMessage\";\nexport const DELETE_LAST_MESSAGE = \"message/kefu/deleteLastMessage\";\nexport const DELETE_MESSAGE = \"message/kefu/deleteMessage\";\nexport const CHANGE_CONTENT_VALUE = \"message/kefu/changeContentValue\";\nexport const CHANGE_MESSAGE_VALUE = \"message/kefu/changeMessageValue\";\nexport const HANDLE_CHANGE_SELECT = \"message/kefu/handleChangeSelect\";\nexport const CHANGE_SELECTED_MESSAGES = \"message/kefu/changeSelectedMessages\";\nexport const OPEN_UPDATE_GROUP_MODAL = \"message/kefu/openUpdateGroupModal\";\nexport const CHANGE_GROUP = \"message/kefu/changeGroup\";\nexport const CANCEL_UPDATE_GROUP = \"message/kefu/cancelUpdateGroup\";\nexport const UPDATE_MORE_GROUP = \"message/kefu/updateMoreGroup\";\nexport const CHANGE_SEARCH_NAME = \"message/kefu/changeSearchName\";\nexport const SEARCH_INPUT_VALUE = \"message/kefu/searchInputChange\";\nexport const CLEAR_CONDITION = \"message/kefu/clearCondition\";\n\nexport const ADD_MESSAGE = \"message/kefu/addMessage\";\nexport const SELECT_MESSAGE = \"message/kefu/selectMessage\";\nexport const GET_ALL_CODES = \"message/kefu/getAllCodes\";\nexport const SELECT_GONGHAO = \"message/kefu/selectGonghao\";\nexport const SELECT_PARAMS = \"message/kefu/selectParams\";\nexport const HIDE_PARAMS_MODAL = \"message/kefu/hideParamsModal\";\nexport const INIT_KEFU_MESSAGE_INFO = \"message/kefu/initKefuMessageInfo\";\nexport const SUBMIT_MESSAGE = \"message/kefu/submitMessage\";\nexport const OPEN_PREVIEW_MODAL = \"message/kefu/openPreviewModal\";\nexport const CLOSE_PREVIEW_MODAL = \"message/kefu/closePreviewModal\";\nexport const CHANGE_OPENID = \"message/kefu/changeOpenId\";\n\nexport const GET_ALL_GROUP = \"message/kefu/getAllGroup\";\nexport const SHOW_GROUP_INPUT = \"message/kefu/showGroupInput\";\nexport const HANDLE_GROUP_INPUT_CHANGE = \"message/kefu/handleGroupInputChange\";\nexport const HANDLE_GROUP_INPUT_CONFIRM = \"message/kefu/handleGroupInputConfirm\";\nexport const DELETE_GROUP = \"message/kefu/handleClose\";\nexport const CANCEL_SELECT_GROUP = \"message/kefu/cancelSelectGroup\";\n\nexport const CHANGE_PAGE = \"message/kefu/changePage\";\n\n\nexport const RESET_STATE = \"message/kefu/resetState\";\n","import * as constants from './constants';\n\nconst defaultState = {\n  templateMessageList: [],\n  confName: \"\",\n\n  selectGonghaoModal: true,\n  messageInfo: {\n    name: \"\",\n    code: null,\n    templateId: \"\",\n    templateName: \"\",\n    url: \"\",\n    sex: \"all\",\n    content: {},\n    is_timing: false,\n    timing_time: new Date()\n  },\n  allCodes: [],\n  templateList: [],\n  templateInfo: {\n    template_id: \"\",\n  },\n  name: \"\",\n  templateModalVisible: false,\n  content: {\n    value: \"\",\n    color: \"#000\"\n  },\n  previewModal: false,\n  openid: \"\"\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state));\n  switch (action.type) {\n\n    case constants.GET_TEMPLATE_LIST:\n      newState.templateMessageList = action.data;\n      newState.confName = \"\";\n      return newState;\n    case constants.DELETE_TEMPLATE:\n      newState.templateMessageList.splice(action.index, 1);\n      return newState;\n    case constants.CHANGE_CONF_NAME:\n      newState.confName = action.value;\n      return newState;\n    case constants.SEARCH_CONF_NAME:\n      newState.templateMessageList = action.data;\n      newState.confName = \"\";\n      return newState;\n    case constants.SEND_TEMPLATE_MSG:\n      let templateMessageList = newState.templateMessageList.map(item => {\n        item._id === action.id && (item.status = 1);\n        return item\n      });\n      newState.templateMessageList = templateMessageList;\n      return newState;\n\n    case constants.GET_ALL_CODES:\n      newState.allCodes = action.allCodes;\n      return newState;\n\n    case constants.OPEN_SELECT_MODAL:\n      newState.selectGonghaoModal = true;\n      return newState;\n    case constants.OPEN_EDIT_MODAL:\n      newState.name = action.key;\n      newState.content = action.content;\n      newState.templateModalVisible = true;\n      return newState;\n    case constants.CLOSE_TEMPLATE_MODAL:\n      newState.name = \"\";\n      newState.templateModalVisible = false;\n      newState.content = { value: \"\", color: \"#000\" };\n      return newState;\n    case constants.CHANGE_TEMPLATE:\n      newState.templateInfo = newState.templateList.filter(item => item.template_id === action.value)[0];\n      newState.messageInfo.templateId = newState.templateInfo.template_id;\n      newState.messageInfo.content = {};\n      for(let key in newState.templateInfo.data) {\n        newState.messageInfo.content[key] = {\n          value: \"\",\n          color: \"#000\"\n        }\n      }\n      return newState;\n    case constants.EDIT_TEMPLATE:\n      newState.content[action.key] = action.value;\n      return newState;\n    case constants.SAVE_TEMPLATE_MODAL:\n      newState.messageInfo.content[newState.name] = newState.content;\n      newState.name = \"\";\n      newState.templateModalVisible = false;\n      newState.content = { value: \"\", color: \"#000\" };\n      return newState;\n\n    case constants.CHANGE_MESSAGE_INFO:\n      newState.messageInfo[action.key] = action.value;\n      if(action.key === \"is_timing\") {\n        newState.messageInfo.timing_time = new Date()\n      }\n      return newState;\n    case constants.CONFIRM_SELECT:\n      newState.templateList = action.templateList;\n      newState.templateInfo = action.templateInfo;\n      newState.messageInfo.templateId = newState.templateInfo.template_id;\n      for(let key in newState.templateInfo.data) {\n        newState.messageInfo.content[key] = {\n          value: \"\",\n          color: \"#000\"\n        }\n      }\n      return newState;\n    case constants.CLOSE_SELECT_MODAL:\n      newState.selectGonghaoModal = false;\n      return newState;\n    case constants.OPEN_PREVIEW_MODAL:\n      newState.previewModal = true;\n      return newState;\n    case constants.CLOSE_PREVIEW_MODAL:\n      newState.previewModal = false;\n      newState.openid = \"\";\n      return newState;\n    case constants.CHANGE_OPENID:\n      newState.openid = action.value;\n      return newState;\n\n    case constants.INIT_MESSAGE_INFO:\n      newState.messageInfo = JSON.parse(JSON.stringify(action.record));\n      newState.templateList = action.templateList;\n      newState.templateInfo = newState.templateList.filter(item => item.template_id === action.record.templateId)[0];\n      return newState;\n\n    case constants.RESET_STATE:\n      newState = defaultState;\n      return newState;\n    default:\n      return state;\n  }\n};","import axios from '../../../../utils/http';\nimport * as constants from './constants';\nimport { Modal, message } from 'antd';\n\n// 列表页\n\nexport const getTemplateList = () => {\n  return dispatch => {\n    axios.get(\"/template\")\n      .then(res => {\n        const {data} = res.data;\n        dispatch({ type: constants.GET_TEMPLATE_LIST, data })\n      })\n  }\n};\n\nexport const deleteTemplate = (id, index) => {\n  return dispatch => {\n    Modal.confirm({\n      title: \"确定删除这条模板消息吗？\",\n      onOk: () => {\n        axios.get(\"/template/del\", {params: {id}})\n          .then(res => {\n            if(res.data.success) {\n              message.success(res.data.success);\n              dispatch({ type: constants.DELETE_TEMPLATE, index })\n            }\n          })\n      }\n    })\n  }\n};\n\nexport const sendTemplate = (id, index) => {\n  return dispatch => {\n    Modal.confirm({\n      title: \"确定发送这条模板消息吗？\",\n      onOk: () => {\n        axios.get(\"/template/send\", {params: {id}})\n          .then(res => {\n            message.success(res.data);\n            dispatch({\n              type: constants.SEND_TEMPLATE_MSG,\n              id\n            });\n          })\n      }\n    })\n  }\n};\n\nexport const changeConfNickName = value => ({\n  type: constants.CHANGE_CONF_NAME,\n  value\n});\n\nexport const searchConfName = confName => {\n  return dispatch => {\n    if(/^\\?.*/.test(confName) )\n    axios.get('/template/search', {params: {confName}})\n      .then(res => {\n        if(res.data.data.length > 0) {\n          dispatch({type: constants.SEARCH_CONF_NAME, data: res.data.data});\n          message.success(res.data.msg)\n        } else {\n          dispatch(getTemplateList());\n          message.error(\"没有查询到相关数据\")\n        }\n      })\n  }\n};\n\n\n// 编辑模板消息\nexport const getAllCodes = () => {\n  return dispatch => {\n    axios.get('/conf')\n      .then(res => {\n        const action = {\n          type: constants.GET_ALL_CODES,\n          allCodes: res.data.data\n        };\n        dispatch(action);\n      })\n  }\n};\n\nexport const openSelectModal = () => ({\n  type: constants.OPEN_SELECT_MODAL\n});\n\nexport const openEditModal = (key, content) => ({\n  type: constants.OPEN_EDIT_MODAL,\n  key, content\n});\n\nexport const closeTemplateModal = () => ({\n  type: constants.CLOSE_TEMPLATE_MODAL\n});\n\nexport const changeTemplate = value => ({\n  type: constants.CHANGE_TEMPLATE,\n  value\n});\n\nexport const saveTemplateModal = () => ({\n  type: constants.SAVE_TEMPLATE_MODAL\n});\n\n\nexport const editTemplate = (key, value) => ({\n  type: constants.EDIT_TEMPLATE,\n  key, value\n});\n\nexport const changeMessageInfo = (key, value) => ({\n  type: constants.CHANGE_MESSAGE_INFO,\n  key, value\n});\n\nexport const confirmSelect = code => {\n  return dispatch => {\n    dispatch(changeMessageInfo(\"code\", code));\n    axios.get('/template/list', {params: {code}})\n      .then(res => {\n        const action = {\n          type: constants.CONFIRM_SELECT,\n          templateList: res.data, templateInfo: {...res.data[0]}, code\n        };\n        dispatch(action);\n      })\n  }\n};\n\nexport const closeSelectModal = () => ({\n  type: constants.CLOSE_SELECT_MODAL\n});\n\n\nexport const openPreviewModal = () => ({\n  type: constants.OPEN_PREVIEW_MODAL\n});\n\nexport const closePreviewModal = () => ({\n  type: constants.CLOSE_PREVIEW_MODAL\n});\n\nexport const preview = ({code, templateId, url, content}, openid) => {\n  return dispatch => {\n    axios.post('/template/preview', {code, templateId, url, content, openid})\n      .then(res => {\n        message.success(res.data.msg);\n        dispatch(closePreviewModal());\n      })\n  }\n};\n\nexport const changeOpenId = value => ({\n  type: constants.CHANGE_OPENID,\n  value\n});\n\nexport const submitMessage = (info, history, templateList) => {\n  return dispatch => {\n    let url = '/template/create';\n    info.templateName = templateList.filter(item => item.template_id === info.templateId)[0].title;\n    info._id && (url = '/template/update') && (info.id = info._id);\n    info.is_timing && (info.timing_time = new Date(info.timing_time));\n    Modal.confirm({\n      title: \"确定\" + (info._id ? \"保存这\" : \"创建一\") + \"条模板消息吗？\",\n      onOk: () => {\n        axios.post(url, {...info})\n          .then(res => {\n            if(res.data.success) {\n              message.success(res.data.success);\n              history.goBack()\n            } else {\n              message.error(res.data.err)\n            }\n          })\n      }\n    })\n  }\n};\n\n\nexport const initMessageInfo = record => {\n  return dispatch => {\n    dispatch(closeSelectModal());\n    axios.get('/template/list', {params: {code: record.code}})\n      .then(res => {\n        const action = {\n          type: constants.INIT_MESSAGE_INFO,\n          templateList: res.data,\n          record\n        };\n        dispatch(action);\n      })\n  }\n};\n// ({\n//   type: constants.INIT_MESSAGE_INFO,\n//   record\n// });\n\nexport const resetState = () => ({\n  type: constants.RESET_STATE\n});\n","// 列表页\n// 获取模板消息列表\nexport const GET_TEMPLATE_LIST = \"message/template/getTemplateList\";\nexport const DELETE_TEMPLATE = \"message/template/deleteTemplate\";\nexport const CHANGE_CONF_NAME = \"message/template/changeConfNickName\";\nexport const SEARCH_CONF_NAME = \"message/template/searchConfName\";\nexport const SEND_TEMPLATE_MSG = \"message/template/sendTemplate\";\n\n\n// 编辑模板消息\n// 获取所有公号\nexport const GET_ALL_CODES = \"message/template/getAllCodes\";\n\n// 打开选择公号面板\nexport const OPEN_SELECT_MODAL = \"message/template/openSelectModal\";\n// 关闭选择公号面板\nexport const CLOSE_SELECT_MODAL = \"message/template/closeSelectModal\";\n\n// 打开列表编辑的modal\nexport const OPEN_EDIT_MODAL = \"message/template/openEditModal\";\n// 关闭列表编辑的modal\nexport const CLOSE_TEMPLATE_MODAL = \"message/template/closeTemplateModal\";\n// 更换模板\nexport const CHANGE_TEMPLATE = \"message/template/changeTemplate\";\n// 编辑模板\nexport const EDIT_TEMPLATE = \"message/template/editTemplate\";\n// 保存模板\nexport const SAVE_TEMPLATE_MODAL = \"message/template/saveTemplateModal\";\n\n// 修改messageInfo\nexport const CHANGE_MESSAGE_INFO = \"message/template/changeMessageInfo\";\n// 确认选择公号，关闭modal，获取模板列表\nexport const CONFIRM_SELECT = \"message/template/confirmSelect\";\n\nexport const OPEN_PREVIEW_MODAL = \"message/template/openPreviewModal\";\nexport const CLOSE_PREVIEW_MODAL = \"message/template/closePreviewModal\";\nexport const CHANGE_OPENID = \"message/template/changeOpenId\";\n\n// 初始化messageInfo\nexport const INIT_MESSAGE_INFO = \"message/template/initMessageInfo\";\n\n\n// 重置state\nexport const RESET_STATE = \"message/template/resetState\";\n","import { combineReducers } from 'redux';\nimport { reducer as groupReducer } from './group/store';\nimport { reducer as kefuReducer } from './kefu/store';\nimport { reducer as templateReducer } from './template/store';\n\nconst reducer = combineReducers({\n  group: groupReducer,\n  kefu: kefuReducer,\n  template: templateReducer\n});\n\nexport default reducer;","import { combineReducers } from 'redux';\nimport gonghaoReducer from '../pages/gonghao/reducer';\nimport messageReducer from '../pages/message/reducer';\n\nconst reducer = combineReducers({\n  gonghao: gonghaoReducer,\n  message: messageReducer,\n});\n\nexport default reducer;","import { createStore, compose, applyMiddleware } from 'redux';\n\nimport thunk from 'redux-thunk';\n\nimport reducer from './reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nexport default store;","import React, {Component} from 'react';\nimport \"./index.scss\";\nimport {Input, Icon, message} from 'antd';\nimport axios from '../../utils/http';\n\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.login = this.login.bind(this);\n    this.state = {\n      loginInfo: {\n        username: \"\",\n        password: \"\"\n      }\n    }\n  }\n\n  render() {\n    const { loginInfo } = this.state;\n    const bgStyle = {\n      minHeight: \"100vh\",\n      backgroundSize: \"100%\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundAttachment: \"fixed\",\n      backgroundImage: `url(${require(\"../../assets/images/login_bg.png\")})`\n    };\n    return (\n      <div className=\"login-bg\" style={bgStyle}>\n        <div className=\"bg-mask\"></div>\n        <div className=\"content-wrapper\">\n          <div className=\"content\">\n            <p className=\"title\">明星说后台管理系统</p>\n            <p>运营与管控一体化的整合式服务平台</p>\n            <p>一起解构数字世界，碰撞科技创新思想</p>\n          </div>\n        </div>\n        <div className=\"login-form-wrapper\">\n          <div className=\"login-form\">\n            <h4 className=\"login-title\">登录</h4>\n            <Input\n              value={loginInfo.username}\n              size=\"large\"\n              onChange={e => this.changeInputValue(e.target.value, \"username\")}\n              prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)', marginRight: 10}}/>}\n              style={{marginBottom: 30}}\n              placeholder=\"用户名\"\n              onKeyUp={e => e.keyCode === 13 && this.login()}\n            />\n            <Input\n              value={loginInfo.password}\n              size=\"large\"\n              type=\"password\"\n              onChange={e => this.changeInputValue(e.target.value, \"password\")}\n              prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)', marginRight: 10}}/>}\n              placeholder=\"密码\"\n              onKeyUp={e => e.keyCode === 13 && this.login()}\n            />\n            <button className=\"login-btn cursor\" onClick={this.login}>登录</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  changeInputValue(value, name) {\n    const { loginInfo } = this.state;\n    loginInfo[name] = value;\n    this.setState(state => ({loginInfo: {...state.loginInfo, ...loginInfo}}))\n  }\n\n  login() {\n    const { loginInfo } = this.state;\n    if(loginInfo.username && loginInfo.password) {\n      loginInfo.password = this.$MD5(loginInfo.password).toString();\n      axios.post('/account/login', {...loginInfo})\n        .then(res => {\n          const { code, msg, data } = res.data;\n          if(code === -1) {\n            message.error(msg);\n          } else {\n            const userInfo = JSON.stringify(data[0]);\n            localStorage.setItem(\"userInfo\", userInfo);\n            window.location.href = '/admin';\n            this.setState({loginInfo: {}});\n            message.success(msg)\n          }\n        })\n    } else {\n      message.warning(\"用户名或密码不能为空\");\n    }\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Avatar, Popover, Icon, message, Modal, Form, Input, Tooltip } from 'antd';\nimport axios from 'axios';\n\nimport './index.scss';\n\nclass HeaderWrapper extends Component {\n\n  state = {\n    userInfo: {}\n  };\n\n  componentDidMount() {\n    let userInfo = localStorage.getItem(\"userInfo\");\n    if(userInfo) {\n      userInfo = JSON.parse(userInfo);\n      this.setState({userInfo})\n    }\n  }\n\n  render() {\n    const { userInfo, showUpdateModal } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className='header-wrapper'>\n        <Link to=\"/\">\n          <img className=\"logo fl\" src={require(\"../../../assets/images/logo.png\")} alt=\"\"/>\n        </Link>\n        <div className=\"user-info fr\">\n          <Tooltip title=\"帮助文档\">\n            <a href=\"http://t.dmmup.com/平台接管及发文方式.pdf\" target=\"__blank\">\n              <Avatar size={25} icon=\"question\" style={{marginRight: 10, color: '#f56a00', backgroundColor: '#fde3cf' }} />\n            </a>\n          </Tooltip>\n          <Avatar size={25} icon=\"user\" />\n          <Popover content={\n            <>\n              <p style={{fontSize: 12, marginBottom: 10}} className=\"cursor\" onClick={() => this.setState({showUpdateModal: true})}><Icon style={{marginRight: 5}} type=\"edit\" />修改信息</p>\n              <p style={{fontSize: 12}} className=\"cursor\" onClick={logout}><Icon style={{marginRight: 5}} type=\"logout\" />退出</p>\n            </>\n          }>\n            <div className=\"user fr cursor\">\n              <p>{userInfo.username},</p>\n              <p>欢迎回来<Icon type=\"down\" /></p>\n            </div>\n          </Popover>\n          <Modal visible={showUpdateModal} title=\"修改用户信息\" onOk={this.updateInfo} onCancel={this.cancelUpdate}>\n            <Form labelCol={{span: 4}} wrapperCol={{span: 20}}>\n              <Form.Item label=\"用户名：\">\n                {getFieldDecorator('username', {\n                  initialValue: userInfo.username\n                })(\n                  <Input placeholder=\"请输入用户名\"/>\n                )}\n              </Form.Item>\n              <Form.Item label=\"新密码：\">\n                {getFieldDecorator('password', {\n                  rules: [{\n                    required: true,\n                    message: \"登录密码不能为空\"\n                  }]\n                })(\n                  <Input type=\"password\" placeholder=\"请输入新密码\"/>\n                )}\n              </Form.Item>\n            </Form>\n          </Modal>\n        </div>\n      </div>\n    )\n  }\n\n  updateInfo = () => {\n    const { getFieldsValue } = this.props.form;\n    const { userInfo: {_id: id} } = this.state;\n    const { username, password } = getFieldsValue();\n    if(password.trim() && username.trim()) {\n      Modal.confirm({\n        title: \"确定修改用户信息吗？\",\n        onOk: () => {\n          let md5Password = this.$MD5(password).toString();\n          axios.put('/account', {id, username, password: md5Password })\n            .then(res => {\n              const {code, msg} = res.data;\n              if(code === 1) {\n                message.success(msg + \"请重新登录\");\n                this.cancelUpdate();\n                localStorage.setItem(\"userInfo\", \"\");\n                window.location.href = \"/admin/login\";\n              } else {\n                message.error(msg);\n              }\n            })\n        }\n      })\n    } else {\n      message.error(\"请检查输入是否有误，密码首尾不能为空格\")\n    }\n  };\n\n  cancelUpdate = () => {\n    const { setFieldsValue } = this.props.form;\n    this.setState({showUpdateModal: false});\n    setFieldsValue({password: \"\"});\n  }\n\n}\n\nconst logout = () => {\n  localStorage.setItem(\"userInfo\", \"\");\n  message.success(\"退出登录成功\");\n  setTimeout(() => {\n    window.location.href = \"/admin/login\";\n  }, 500)\n};\n\nexport default Form.create()(HeaderWrapper);\n","import React, {Component} from 'react';\nimport {Menu, Icon} from 'antd';\nimport {Link} from 'react-router-dom';\n\nimport './index.scss';\n\nconst {SubMenu} = Menu;\nconst MenuItem = Menu.Item;\n\nclass SideWrapper extends Component {\n  menuList = [\n    {\n      keyIndex: 'gonghao',\n      title: '公号管理',\n      icon: 'appstore',\n      role: 2,\n      subMenuList: [\n        {\n          keyIndex: 'tuoguan',\n          title: '公号托管',\n          path: '/admin/gonghao/tuoguan'\n        }, {\n          keyIndex: 'menu',\n          title: '菜单配置',\n          path: '/admin/gonghao/menu'\n        }, {\n          keyIndex: 'reply',\n          title: '自动回复',\n          path: '/admin/gonghao/reply'\n        // }, {\n        //   keyIndex: 'qrcode',\n        //   title: '参数二维码',\n        //   path: '/admin/gonghao/qrcode'\n        }\n      ]\n    }, {\n      keyIndex: 'message',\n      title: '消息管理',\n      icon: 'snippets',\n      role: 2,\n      subMenuList: [\n        {\n          keyIndex: 'kefu',\n          title: '客服消息',\n          path: '/admin/message/kefu'\n        }, {\n          keyIndex: 'group',\n          title: '群发消息',\n          path: '/admin/message/group'\n        }, {\n          keyIndex: 'template',\n          title: '模板消息',\n          path: '/admin/message/template'\n        }\n      ]\n    }, {\n      keyIndex: 'channel',\n      title: '渠道推广',\n      icon: 'control',\n      role: 2,\n      subMenuList: [\n        {\n          keyIndex: 'spread',\n          title: '推广链接',\n          path: '/admin/channel/spread'\n        }\n      ]\n    }, {\n      keyIndex: 'account',\n      title: '账户管理',\n      icon: 'user',\n      role: 0,\n      subMenuList: [\n        {\n          keyIndex: 'list',\n          title: '账户管理',\n          path: '/admin/account/list'\n        }, {\n          keyIndex: 'add',\n          title: '新增用户',\n          path: '/admin/account/add'\n        }\n      ]\n    }\n  ];\n\n  state = {\n    selectedKeys: [],\n    role: null\n  };\n\n  onSelect = async (selectItem) => {\n    const latestSelectedKey = selectItem.selectedKeys.find(key => this.state.selectedKeys.indexOf(key) === -1);\n    let selectList = [];\n    await this.menuList.map(item => (selectList = [...selectList, ...item.subMenuList]));\n    await selectList.find(item => (\n      item.keyIndex === latestSelectedKey\n      && this.setState({ selectedKeys: latestSelectedKey ? [latestSelectedKey] : [this.state.role === 2 ? 'tuoguan' : 'list'] })\n    ))\n  };\n\n  UNSAFE_componentWillMount() {\n    let userInfo = localStorage.getItem(\"userInfo\");\n    if(userInfo) {\n      userInfo = JSON.parse(userInfo);\n      this.setState({\n        role: userInfo.role,\n        selectedKeys: [window.location.pathname.split('/')[3] || (userInfo.role === 2 ? 'tuoguan' : 'list')]\n      })\n    }\n  }\n\n  render() {\n    const pathName = window.location.pathname;\n    const MenuListRender = this.menuList.map((item, index) => {\n      if(item.role === this.state.role) {\n        const SubMenuList = item.subMenuList.map(subItem => (\n          <MenuItem key={subItem.keyIndex}><Link to={subItem.path}>{subItem.title}</Link></MenuItem>\n        ));\n        return (<SubMenu\n          key={item.keyIndex}\n          title={\n            <span className='side-item'>\n            <Icon className=\"side-icon\" type={item.icon}/>\n            <span>{item.title}</span>\n          </span>\n          }\n        >\n          {SubMenuList}\n        </SubMenu>)\n      }\n      return '';\n    });\n    return (\n      <div className='side-wrapper'>\n        <Menu\n          mode=\"inline\"\n          theme=\"light\"\n          selectedKeys={this.state.selectedKeys}\n          defaultOpenKeys={[window.location.pathname.split('/')[2] || (this.state.role === 2 ? 'gonghao' : 'account')]}\n          onSelect={this.onSelect}\n          defaultSelectedKeys={[pathName]}\n        >\n          {MenuListRender}\n        </Menu>\n      </div>\n    )\n  }\n}\n\nexport default SideWrapper;\n\n","import React, { Component } from 'react';\nimport { Breadcrumb, notification } from 'antd';\nimport { withRouter } from 'react-router'\nimport './index.scss';\n\nconst breadList = {\n  '/gonghao': '公号管理',\n\n  '/gonghao/tuoguan': '公号托管',\n  '/gonghao/tuoguan/group': '分组管理',\n\n  '/gonghao/tuoguan/error': '错误信息',\n\n  '/gonghao/tuoguan/config': '公号配置',\n  '/gonghao/tuoguan/config/create': '新建配置',\n  '/gonghao/tuoguan/config/update': '修改配置',\n\n  '/gonghao/menu': '配置菜单',\n  '/gonghao/menu/create': '新建菜单',\n  '/gonghao/menu/update': '修改菜单',\n\n  '/gonghao/reply': '自动回复',\n  '/gonghao/reply/create': '新建素材',\n  '/gonghao/reply/update': '修改素材',\n\n  '/message': '消息管理',\n\n  '/message/kefu': '客服消息',\n  '/message/kefu/create': '新建消息',\n  '/message/kefu/update': '修改消息',\n\n  '/message/group': '群发消息',\n  '/message/group/material': '群发素材',\n  '/message/group/history': '历史记录',\n\n  '/message/template': '模板消息',\n  '/message/template/create': '创建消息',\n  '/message/template/update': '修改消息',\n\n  '/channel': \"渠道推广\",\n  '/channel/spread': '推广链接',\n  '/channel/spread/create': '创建素材',\n  '/channel/spread/update': '修改素材',\n\n  '/source': '素材库',\n  '/source/group': '图文素材',\n  '/source/group/create': '新建素材',\n  '/source/group/update': '修改素材',\n\n  '/wechat/qrcode': '参数二维码',\n  '/wechat/qrcode/create': '新增二维码',\n  '/wechat/qrcode/update': '修改二维码',\n\n  '/account': '账户管理',\n  '/account/list': '账户列表',\n  '/account/add': '新增账户',\n};\n\nclass BreadWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pathSnippets: null,\n      extraBreadcrumbItems: null,\n    }\n  }\n\n  getPath = () => {\n    this.setState({\n      pathSnippets: window.location.pathname.split('/').slice(2)\n    });\n    this.setState((prev) => {\n      return {\n        extraBreadcrumbItems: prev.pathSnippets.map((_, index) => {\n          let url = `/${prev.pathSnippets.slice(0, index + 1).join('/')}`;\n          return (\n            <Breadcrumb.Item key={url}>\n              {breadList[url]}\n            </Breadcrumb.Item>\n          );\n        })\n      }\n    })\n  };\n\n  seeDetail = () => {\n    notification.info({\n      message: \"系统服务异常公告\",\n      description: \"于2020年1月20日22：30分左右平台出现服务异常，部分功能故障，已于当日23:50排查修复，请各位小伙伴知悉。给大家带来不便，敬请谅解。如因担心再次故障影响使用，请自行在微信公众后台解除授权。\",\n      style: {\n        width: 600,\n        marginLeft: 335 - 600,\n      },\n    })\n  }\n\n  UNSAFE_componentWillReceiveProps () {\n    this.getPath();\n  }\n\n  componentDidMount() {\n    this.getPath();\n  }\n\n  render() {\n    const { extraBreadcrumbItems } = this.state;\n    return (\n    \t<div className='bread-wrapper'>\n    \t\t<div className='bread-nav'>\n          <Breadcrumb>\n            {extraBreadcrumbItems}\n          </Breadcrumb>\n        </div>\n        <div className=\"notice\">\n          <span className=\"notice-title\">【系统通知】</span>\n          <span onClick={this.seeDetail} className=\"notice-desc textEllipsis\">\n            于2020年1月20日22：30分左右平台出现服务异常，部分功能故障，已于当日23:50排查修复，请各位小伙伴知悉。给大家带来不便，敬请谅解。如因担心再次故障影响使用，请自行在微信公众后台解除授权。\n          </span>\n        </div>\n    \t</div>\n    )\n  }\n\n}\n\nexport default withRouter(BreadWrapper);","import React from 'react';\nimport {Layout, Card, Icon} from 'antd';\nimport HeaderWrapper from './header';\nimport SiderWrapper from './sider';\nimport BreadCrumb from './bread';\nimport \"./index.scss\";\n\nconst {Content, Sider, Header, Footer} = Layout;\n\nconst BasicLayout = props => <Layout className=\"basic-layout\">\n  <HeaderWrapper/>\n  <Layout>\n    <Sider collapsible className=\"basic-sider\" theme=\"light\" width=\"180\">\n      <SiderWrapper/>\n    </Sider>\n    <Layout>\n      <Content className=\"basic-content\">\n        <Card className=\"basic-card\">\n          <Layout>\n            <Header className=\"basic-header\"><BreadCrumb /></Header>\n            <Content>{props.content}</Content>\n            <div className=\"connect\">\n              <Icon type=\"customer-service\" theme=\"filled\" />\n              <p>客服</p>\n              <div className=\"connect-method\">\n                <img className=\"connect-qrcode\" src=\"http://t.dmmup.com/uploads/1861795c12c690ef4df709abcaf73fc2.jpg\" alt=\"\"/>\n                <p className=\"connect-title\">微信扫描二维码，咨询客服</p>\n              </div>\n            </div>\n          </Layout>\n        </Card>\n      </Content>\n      <Footer className=\"basic-footer\">Copyright&copy;2019  最终解释权归本公司所有</Footer>\n    </Layout>\n  </Layout>\n</Layout>;\n\nexport default BasicLayout;","import React, { Component } from 'react';\nimport { Button } from 'antd';\n\nconst ButtonList = {\n  \"warning\": \"#F39C12\",\n  \"danger\": \"#E74C3C\",\n  \"success\": \"#2ECC71\",\n  \"info\": \"#7F8C8D\",\n  \"update\": \"#3498DB\"\n};\n\n\nclass ButtonWrapper extends Component {\n  state = {\n    buttonStyle: {\n      background: \"#3498DB\",\n      color: \"#fff\",\n      marginRight: 5,\n      marginLeft: 0,\n      marginBottom: 0\n    }\n  };\n  componentDidMount() {\n    const { background = \"update\", color = \"#fff\", mr = 5, ml = 0, mb = 0 } = this.props;\n    this.setState({\n      buttonStyle: { background: ButtonList[background], color, marginRight: mr, marginLeft: ml, marginBottom: mb }\n    })\n  }\n\n  render() {\n    const { size = \"small\", buttonContent, disabled = false, onClick } = this.props;\n    const { buttonStyle } = this.state;\n    return (\n    \t<Button size={size} disabled={disabled} style={buttonStyle} onClick={onClick}>{buttonContent}</Button>\n    )\n  }\n}\n\nexport default ButtonWrapper;","import React, {Component} from 'react';\nimport {Input, Card, List, Modal, Form, Select, Radio, Tag, Tooltip, Avatar, Icon} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {Link} from 'react-router-dom';\nimport {actionCreators} from './store';\nimport './index.scss';\nimport Button from \"../../../common/components/Button\";\n\nconst {Search} = Input;\nconst {Option} = Select;\nconst { Grid } = Card;\n\nclass Tuoguan extends Component {\n\n  componentDidMount() {\n    this.props.getGroupList();\n    this.props.getAllGonghaoList();\n  }\n\n  render() {\n    const {gonghaoTagList, gonghaoList, searchByName, searchName, changeSearchInput, jieguan, addNewGonghao, openGonghaoModal, gonghaoModal, closeGonghaoModal, gonghaoInfo, updateGonghaoInfo, changeGroup, changeAttribute, changeAbTest, deleteGonghao, group, changeSelectValue, status} = this.props;\n    let innerWidth = window.innerWidth > 1440;\n    const pagination = {\n      pageSize: innerWidth ? 24 : 12\n    };\n    return (\n      <div>\n        <div className='container'>\n          <Search\n            placeholder='请输入公号名称'\n            className='search-btn'\n            value={searchName}\n            onChange={changeSearchInput}\n            onSearch={searchName => searchByName(searchName)}\n          />\n          <Select value={group} onChange={value => changeSelectValue(\"group\", value)} style={{width: 150, marginLeft: 10}}>\n            <Option value=\"全部\">全部公号</Option>\n            <Option value=\"未分组\">未分组</Option>\n            {gonghaoTagList.map(item => <Option key={item._id} value={item.name}>{item.name}</Option>)}\n          </Select>\n          <Select value={status} onChange={value => changeSelectValue(\"status\", value)} style={{width: 100, marginLeft: 10}}>\n            <Option value=\"全部\">全部</Option>\n            <Option value={1}>已接管</Option>\n            <Option value={-1}>接管中</Option>\n            <Option value={0}>待接管</Option>\n            <Option value={-2}>未接管</Option>\n          </Select>\n          <div className=\"fr btn-wrapper\">\n            <Button background=\"success\" size=\"default\"\n                    buttonContent={<Link to='/admin/gonghao/tuoguan/group'>分组管理</Link>}/>\n            <Button size=\"default\" buttonContent=\"添加新公号\" onClick={addNewGonghao}/>\n          </div>\n          <div className='table-wrapper'>\n            <List\n              grid={{gutter: 16, sm: 4, xxl: 6}}\n              dataSource={gonghaoList}\n              pagination={pagination}\n              renderItem={(item, index) => (\n                <List.Item>\n                  <Grid className=\"card-grid\">\n\n                  <Card className=\"card-item\"\n                        actions={\n                          [\n                            <Tooltip title=\"修改分组和公号属性\"><span onClick={() => openGonghaoModal(item._id, item.group, item.attribute, item.ab_test)}>修改</span></Tooltip>,\n                            <Tooltip title={item.status === -2 ? \"接管粉丝，打标签\" : (item.status === -1 ? \"正在接管，请稍后\" : (item.status === 0 ? \"接管账号较多，排队中\" : (item.status === -3 ? \"接管失败，请联系客服\" : \"接管完成\")))}><span className={item.status === -2 ? \"\" : \"disabled-click\"} onClick={() => item.status === -2 ? jieguan(item.code, index) : console.log(\"已接管或接管中\")}>{item.status === -2 ? \"接管\" : (item.status === -1 ? \"接管中\" : (item.status === 0 ? \"待接管\" : (item.status === -3 ? \"接管失败\" : \"已接管\")))}</span></Tooltip>,\n                            <Tooltip title={<p>删除公号信息<br />解除授权请在公号后台操作</p>}><span onClick={() => deleteGonghao(item._id, index)}>删除</span></Tooltip>\n                          ]\n                        }>\n                    <div className=\"active-users-wrapper\">\n                      <div className=\"active-users\">\n                        昨日活跃<span> {item.yesterdayCount || 0}</span>\n                      </div>\n                      <div className=\"active-users\">\n                        今日活跃 <span>{item.todayCount || 0}</span>\n                      </div>\n                    </div>\n                    {item.head_img ? <img src={item.head_img} alt=\"\"/> : <Avatar shape=\"circle\" size={40} icon=\"user\" style={{marginRight: 5, marginTop: -20}}/>}\n                    <div className=\"gonghao-info\">\n                      <p>{item.nick_name}</p>\n                      <Tag>{item.group}</Tag>\n                    </div>\n                  </Card>\n                </Grid>\n                </List.Item>\n              )}\n            />\n          </div>\n        </div>\n        <Modal visible={gonghaoModal} title=\"修改公号信息\" onCancel={closeGonghaoModal} onOk={() => updateGonghaoInfo(gonghaoInfo)}>\n          <Form labelCol={{span: 8}} wrapperCol={{span: 10}}>\n            <Form.Item label=\"公号分组\" >\n              <Select value={gonghaoInfo.group || \"未分组\"} onChange={changeGroup}>\n                <Option value=\"未分组\">未分组</Option>\n                {gonghaoTagList.map(item => <Option key={item._id} value={item.name}>{item.name}</Option>)}\n              </Select>\n            </Form.Item>\n            <Form.Item label=\"公号属性\">\n              <Radio.Group value={gonghaoInfo.attribute} onChange={changeAttribute}>\n                <Radio value={0}>默认</Radio>\n                <Radio value={1}>男</Radio>\n                <Radio value={2}>女</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item label={<span>测试性别 <Tooltip title={<span>将公号男粉丝或女粉丝平均分开,一般默认即可<br />(如有需要，请在接管前选择)</span>}><Icon className=\"cursor\" type=\"question-circle\" theme=\"filled\" /></Tooltip></span>}>\n              <Radio.Group value={gonghaoInfo.ab_test} onChange={changeAbTest}>\n                <Radio value={0}>默认</Radio>\n                <Radio value={1}>男</Radio>\n                <Radio value={2}>女</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Form>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapState = state => ({\n  gonghaoTagList: state.gonghao.tuoguan.gonghaoTagList,\n  allGonghaoList: state.gonghao.tuoguan.allGonghaoList,\n  gonghaoList: state.gonghao.tuoguan.gonghaoList,\n  currentPage: state.gonghao.tuoguan.currentPage,\n  searchName: state.gonghao.tuoguan.searchName,\n  gonghaoModal: state.gonghao.tuoguan.gonghaoModal,\n  gonghaoInfo: state.gonghao.tuoguan.gonghaoInfo,\n  group: state.gonghao.tuoguan.group,\n  status: state.gonghao.tuoguan.status,\n});\n\nconst mapDispatch = dispatch => ({\n  getGroupList() {\n    dispatch(actionCreators.getGroupList())\n  },\n  getAllGonghaoList() {\n    dispatch(actionCreators.getAllGonghaoList())\n  },\n  changePage(page) {\n    dispatch(actionCreators.changePage(page))\n  },\n  changeSearchInput(e) {\n    dispatch(actionCreators.changeSearchInput(e.target.value))\n  },\n  searchByName(value) {\n    dispatch(actionCreators.searchByName(value));\n  },\n  deleteGonghao(id, index) {\n    dispatch(actionCreators.deleteGonghao(id, index));\n  },\n  jieguan(code, index) {\n    dispatch(actionCreators.jieguan(code, index));\n  },\n  addNewGonghao() {\n    dispatch(actionCreators.addNewGonghao());\n  },\n  openGonghaoModal(id, group, attribute, ab_test) {\n    dispatch(actionCreators.openGonghaoModal(id, group, attribute, ab_test));\n  },\n  closeGonghaoModal() {\n    dispatch(actionCreators.closeGonghaoModal());\n  },\n  updateGonghaoInfo(gonghaoInfo) {\n    dispatch(actionCreators.updateGonghaoInfo(gonghaoInfo));\n  },\n  changeGroup(name) {\n    dispatch(actionCreators.changeGroup(name));\n  },\n  changeAttribute(e) {\n    let attribute = e.target.value;\n    dispatch(actionCreators.changeAttribute(attribute));\n  },\n  changeAbTest(e) {\n    let ab_test = e.target.value;\n    dispatch(actionCreators.changeAbTest(ab_test));\n  },\n  changeSelectValue(key, value) {\n    dispatch(actionCreators.changeSelectValue(key, value));\n  },\n});\n\nexport default connect(mapState, mapDispatch)(Tuoguan);","import React, { Component } from 'react';\nimport { Layout, List, Input, Card, Table, Button, Modal, Radio, message, Icon } from 'antd'\nimport axios from 'axios';\n\nconst { Sider, Content } = Layout;\nconst { Search } = Input;\n\n\nclass GonghaoGroup extends Component {\n  columns = [\n    {\n      key: \"nick_name\",\n      dataIndex: \"nick_name\",\n      title: \"公号名称\",\n      align: \"center\",\n      width: 200\n    }, {\n      key: \"group\",\n      dataIndex: \"group\",\n      title: \"分组\",\n      align: \"center\"\n    }, {\n      key: \"action\",\n      title: \"操作\",\n      align: \"center\",\n      width: 100,\n      render: (text, record, index) => <Button type=\"primary\" size=\"small\" onClick={() => this.setState({gonghaoModal: true, gonghao_id: record._id, gonghao_index: index})}>修改分组</Button>\n    }\n  ];\n\n  state = {\n    gonghaoTagList: [],\n    gonghaoModal: false,\n    editGroupModalVisible: false,\n    group: \"\",\n    gonghaoList: [],\n    group_id: \"\",\n    group_index: -1,\n    gonghao_id: \"\",\n    gonghao_index: -1,\n    selectGroup: \"\",\n    selectedRowKeys: []\n  };\n\n  componentDidMount() {\n    this.getGonghaoTagList();\n    this.getGroupGonghao();\n  }\n\n  getGonghaoTagList = () => {\n    axios.get(\"/gonghaoTag\")\n      .then(res => {\n        if(res.data.code === 1) {\n          const { data: gonghaoTagList } = res.data;\n          this.setState({gonghaoTagList})\n        }\n      })\n  };\n\n  getGroupGonghao = group => {\n    axios.get('/conf/group', { params: {group} })\n      .then(res => {\n        let { data: gonghaoList } = res.data;\n        this.setState({gonghaoList})\n        gonghaoList.length === 0 && message.warning(\"该分组中还没有数据，请添加\")\n      })\n  };\n\n  openEditGroupModal = () => {\n    this.setState({editGroupModalVisible: true})\n  };\n\n  closeEditGroupModal = () => {\n    this.setState({editGroupModalVisible: false, group: \"\"})\n  };\n\n  confirmEditGroup = () => {\n    const { group: name, group_id, group_index } = this.state;\n    if(!group_id) {\n      this.addGroup(name)\n    } else {\n      this.updateGroup(name, group_id, group_index)\n    }\n  };\n\n  addGroup = name => {\n    Modal.confirm({\n      title: \"确定添加一个分组吗？\",\n      onOk: () => {\n        if(name) {\n          axios.post(\"/gonghaoTag\", {name})\n            .then(res => {\n              if(res.data.code === 1 && res.data.exist === 0) {\n                const { data, msg } = res.data;\n                this.setState(state => {\n                  let gonghaoTagList = [...state.gonghaoTagList];\n                  gonghaoTagList.push(data);\n                  return {gonghaoTagList};\n                });\n                message.success(msg);\n                this.closeEditGroupModal();\n              } else if (res.data.code === 1 && res.data.exist === 1) {\n                message.warning(\"分组已存在，请更换分组名称\");\n              } else {\n                message.error(res.data.msg)\n              }\n            });\n        } else {\n          message.error(\"分组名称不能为空\")\n        }\n      }\n    });\n  };\n\n  updateGroup = (name, id, index) => {\n    Modal.confirm({\n      title: \"确定修改分组名称吗？\",\n      onOk: () => {\n        if(name) {\n          axios.put(\"/gonghaoTag\", {name, id})\n            .then(res => {\n              if(res.data.code === 1) {\n                const { data, msg } = res.data;\n                this.setState(state => {\n                  let gonghaoTagList = state.gonghaoTagList;\n                  Object.assign(gonghaoTagList[index], data);\n                  return {gonghaoTagList};\n                });\n                message.success(msg);\n                this.closeEditGroupModal();\n              }else {\n                message.error(res.data.msg)\n              }\n            });\n        } else {\n          message.error(\"分组名称不能为空\")\n        }\n      }\n    });\n  };\n\n  deleteGroup = (id, index) => {\n    Modal.confirm({\n      title: \"确定删除这个分组吗？\",\n      onOk: () => {\n        axios.delete('/gonghaoTag/' + id)\n          .then(res => {\n            const {code , msg} = res.data;\n            if(code === 1) {\n              message.success(msg);\n              this.getGroupGonghao();\n              this.setState(state => {\n                let gonghaoTagList = state.gonghaoTagList;\n                gonghaoTagList.splice(index, 1);\n                return {gonghaoTagList}\n              })\n            } else {\n              message.error(msg)\n            }\n          })\n      }\n    })\n  };\n\n  changeGroupValue = e => {\n    let group = e.target.value;\n    this.setState({group})\n  };\n\n  searchGroupGonghao = nick_name => {\n    if(nick_name) {\n      axios.get('/conf/find_one', {params: {nick_name}})\n        .then(res => {\n          const {data: gonghaoList, code, msg} = res.data;\n          if(code === 1) {\n            message.success(msg);\n            this.setState({gonghaoList})\n          } else {\n            message.error(\"没有查询到相关数据，请检查输入是否有误\")\n          }\n        })\n    } else {\n      message.error(\"公号名称不能为空\")\n    }\n\n  };\n\n  closeGonghaoModal = () => {\n    this.setState({\n      gonghaoModal: false,\n      gonghao_id: \"\",\n      gonghao_index: -1,\n      selectGroup: \"\"\n    })\n  };\n\n  submitGonghaoModal = () => {\n    const { gonghao_id: id, gonghao_index, selectGroup: group, selectedRowKeys: ids } = this.state;\n    if(id) {\n      this.updateOne(id, gonghao_index, group)\n    } else {\n      this.updateMore(ids, group)\n    }\n  };\n\n  openUpdateMoreModal = () => {\n    const {selectedRowKeys} = this.state;\n    if(selectedRowKeys.length === 0) {\n      message.warning(\"请先选择公号\")\n    } else {\n      this.setState({\n        gonghaoModal: true\n      })\n    }\n  };\n\n  updateOne = (id, gonghao_index, group) => {\n    Modal.confirm({\n      title: \"确定修改分组吗？\",\n      onOk: () => {\n        axios.put('/conf', {id, group})\n          .then(res => {\n            const { code, msg} = res.data;\n            if(code === 1) {\n              message.success(msg);\n              this.setState(state => {\n                let gonghaoList = [...state.gonghaoList];\n                gonghaoList.splice(gonghao_index, 1);\n                return {gonghaoList}\n              });\n              this.closeGonghaoModal();\n            } else {\n              message.error(msg);\n            }\n          })\n      }\n    })\n  };\n\n  updateMore = (ids, group) => {\n    Modal.confirm({\n      title: \"确定修改分组1吗？\",\n      onOk: () => {\n        axios.put('/conf/multi_select', {ids, group})\n          .then(res => {\n            const { code, msg } = res.data;\n            if(code === 1) {\n              message.success(msg);\n              this.getGroupGonghao();\n              this.closeGonghaoModal();\n              this.setState({selectedRowKeys: []})\n            } else {\n              message.error(msg);\n            }\n          })\n      }\n    })\n  };\n\n  changeSelectGroup = e => {\n    let selectGroup = e.target.value;\n    this.setState({selectGroup});\n  };\n\n  render() {\n    const { gonghaoTagList, gonghaoModal, editGroupModalVisible, gonghaoList, group, selectGroup } = this.state;;\n    const addGroupStyle = {\n      width: \"90%\",\n      margin: \"15px auto 0\",\n      padding: \"10px 0\",\n      borderRadius: 5,\n      border: \"1px dashed #999\"\n    };\n    const rowSelection = {\n      selectedRowKeys: this.state.selectedRowKeys,\n      onChange: selectedRowKeys => {\n        this.setState({selectedRowKeys})\n      }\n    };\n    return (\n    \t<div>\n        <div className=\"container\">\n          <Layout>\n            <Sider theme=\"light\">\n              <List\n                header={<div className=\"cursor userSelect\" onClick={() => this.getGroupGonghao(\"未分组\")}>未分组</div>}\n                bordered\n                dataSource={gonghaoTagList}\n                style={{marginRight: 10}}\n                renderItem={(item, index) => (\n                  <List.Item className=\"userSelect\">\n                    <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", width: \"100%\", lineHeight: 1}}>\n                      <p className=\"cursor\" onClick={() => this.getGroupGonghao(item.name)}>{item.name}</p>\n                      <div>\n                        <Icon className=\"cursor\" style={{marginRight: 10}} type=\"form\" onClick={() => this.setState({editGroupModalVisible: true, group_id: item._id, group_index: index})} />\n                        <Icon className=\"cursor\" type=\"close-square\" onClick={() => this.deleteGroup(item._id, index)} />\n                      </div>\n                    </div>\n                  </List.Item>\n                )}\n              />\n              <div className=\"tc cursor userSelect\" style={addGroupStyle} onClick={this.openEditGroupModal}>+ 添加分组</div>\n            </Sider>\n            <Content>\n              <Card style={{padding: 20}}>\n                <Search placeholder=\"请输入公众号名称\" style={{width: 200, marginBottom: 20, marginTop: -10}} onSearch={this.searchGroupGonghao} />\n                <Button type=\"primary\" style={{display: 'block', marginBottom: 20}} onClick={this.openUpdateMoreModal}>批量修改</Button>\n                <Table rowSelection={rowSelection} bordered size=\"small\" rowKey={record => record._id} columns={this.columns} dataSource={gonghaoList} />\n              </Card>\n            </Content>\n          </Layout>\n        </div>\n        <Modal visible={gonghaoModal} onCancel={this.closeGonghaoModal} onOk={this.submitGonghaoModal}>\n          <Radio.Group value={selectGroup} onChange={this.changeSelectGroup}>\n            <Radio value=\"未分组\">未分组</Radio>\n            {gonghaoTagList.map(item => <Radio key={item._id} value={item.name}>{item.name}</Radio>)}\n          </Radio.Group>\n        </Modal>\n        <Modal visible={editGroupModalVisible} title=\"新建分组名称\" onCancel={this.closeEditGroupModal} onOk={this.confirmEditGroup}>\n          分组名称：<Input onChange={this.changeGroupValue} value={group} style={{width: 300}} placeholder=\"请输入分组名称\" />\n        </Modal>\n    \t</div>\n    )\n  }\n}\n\nexport default GonghaoGroup;","import React, { Component } from 'react';\nimport { Table, Button } from 'antd';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport backTop from '../../../utils';\n\nimport {actionCreators} from \"./store\";\n\nclass Menu extends Component {\n  render() {\n    const { menuList, deleteMenu } = this.props;\n    const menuHeader =  [\n      {\n        title: \"菜单类型\",\n        key: \"individual\",\n        dataIndex: \"individual\",\n        align: \"center\",\n        render: (text, record) => record.individual ? \"个性化菜单\" : \"通用菜单\"\n      },\n      {\n        title: \"菜单性别\",\n        key: \"sex\",\n        dataIndex: \"sex\",\n        align: \"center\",\n        render: (text, record) => (record.individual ? (record.sex === '0' ? \"未知\"\n          : (record.sex === '1' ? '男' : '女')) : '——')\n      },\n      {\n        key: \"title\",\n        dataIndex: \"title\",\n        title: \"标题\",\n        align: \"center\"\n      },\n      {\n        title: \"Action\",\n        key: \"Action\",\n        align: \"center\",\n        render: (text, record, index) => (\n          <div>\n            <Button size=\"small\" type=\"primary\" style={{marginRight: \"10px\"}}>\n              <Link to={{pathname: \"/admin/gonghao/menu/update\", query: record}}>编辑</Link>\n            </Button>\n            <Button size=\"small\" type=\"danger\" onClick={() => deleteMenu(record._id, index)}>删除</Button>\n          </div>\n        )\n      }\n    ];\n\n    return (\n    \t<div>\n    \t\t<div className=\"container\">\n          <Button type=\"primary\" style={{marginBottom: \"20px\"}}>\n            <Link to=\"/admin/gonghao/menu/create\">配置新菜单栏</Link>\n          </Button>\n          <Table size=\"small\" rowKey={record => record._id} columns={menuHeader} dataSource={menuList} pagination={{onChange: () => backTop()}} />\n        </div>\n    \t</div>\n    )\n  }\n  componentDidMount() {\n    this.props.getMenuList()\n  }\n}\n\nconst mapState = state => ({\n  menuList: state.gonghao.menu.menuList\n});\n\nconst mapDispatch = dispatch => ({\n  getMenuList() {\n    dispatch(actionCreators.getMenuList())\n  },\n  deleteMenu(id, index) {\n    dispatch(actionCreators.deleteMenu(id, index))\n  }\n});\n\nexport default connect(mapState, mapDispatch)(Menu);","import React from 'react';\nimport {Card, List} from 'antd';\nimport \"./index.scss\";\n\nconst GraphicMessage = props => {\n  const {messageList, updateMessageItem} = props;\n  return (\n    <div className=\"graphic-message-list-wrapper\">\n      <Card className=\"message-list-card\" title={\n        messageList.length > 1 ?\n        <List className=\"message-list\">\n            <List.Item className=\"cursor\" onClick={() => updateMessageItem(messageList[0], 0)}>\n              <div className=\"head-message\">\n                <p className=\"ellipse-two\">{messageList[0].title}</p>\n                <img src={messageList[0].picurl} alt=\"\"/>\n              </div>\n          </List.Item>\n          {messageList.slice(1).map((message, index) => \n            <List.Item className=\"border_btm cursor\" onClick={() => updateMessageItem(message, index + 1)} key={index}>\n              <div className=\"rest-message\">\n                <p className=\"ellipse-two\">{message.title}</p>\n                <img src={message.picurl} alt=\"\"/>\n              </div>\n            </List.Item>)}\n        </List> : <div className=\"cursor\" onClick={() => updateMessageItem(messageList[0], 0)}>\n          <div className=\"head-other\">\n            <img src={messageList[0].picurl} alt=\"\"/>\n            <h3 className=\"title textEllipsis\">{messageList[0].title}</h3>\n            <p className=\"ellipse-two\">{messageList[0].description}</p>\n          </div>\n        </div>}\n      />\n    </div>\n  )\n};\n\nexport default GraphicMessage;","import React, {Component, Fragment} from 'react';\nimport {Form, Input, Radio, Button, Icon, Upload, Divider} from 'antd';\nimport GraphicMessage from '../../../../common/components/GraphicMessage';\n\nclass MenuReplyMessage extends Component {\n  render() {\n    const {messageInfo, changeMessageInfo, uploadImg, updateCurrentMessage, deleteCurrentMessage, addToList, updateIndex, updateMessageItem} = this.props;\n    let MessageContent;\n    if (messageInfo.replyType === 0) {\n      MessageContent = <Form.Item className=\"inputtxt\" label=\"文本消息\">\n        <Input.TextArea onChange={e => changeMessageInfo(\"content\", e.target.value)} value={messageInfo.content} autoSize={{minRows: 3, maxRows: 6}} placeholder='请输入回复文本消息'/>\n      </Form.Item>\n    } else {\n      let UploadImg;\n      if (messageInfo.picurl) {\n        UploadImg = <img style={{width: \"100px\"}} src={messageInfo.picurl} alt=\"图片走丢啦~\"/>\n      } else {\n        UploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\n      }\n      MessageContent = <Fragment>\n        <Form.Item label=\"图文标题\">\n          <Input onChange={e => changeMessageInfo(\"title\", e.target.value)} value={messageInfo.title} placeholder='请输入图文标题'/>\n        </Form.Item>\n        <Form.Item label=\"图文链接\">\n          <Input onChange={e => changeMessageInfo(\"url\", e.target.value)} value={messageInfo.url} placeholder='请输入图文链接，必须以 http 或 https 开头'/>\n        </Form.Item>\n        <Form.Item label=\"图文描述\">\n          <Input.TextArea onChange={e => changeMessageInfo(\"description\", e.target.value)} value={messageInfo.description} autoSize={{minRows: 3, maxRows: 6}} placeholder='请输入图文描述'/>\n        </Form.Item>\n        <Form.Item label=\"上传图片\">\n          <Upload name=\"imageFile\" action=\"/reply/upload\" showUploadList={false} onChange={uploadImg}>\n            {UploadImg}\n          </Upload>\n        </Form.Item>\n        <Form.Item label=\" \" colon={false}>\n          {updateIndex > -1 ? <div>\n            <Button onClick={updateCurrentMessage} type=\"primary\" style={{marginRight: 20}}>保存</Button>\n            <Button onClick={deleteCurrentMessage}>删除此条消息</Button>\n          </div> : <div><Button onClick={addToList}>添加到图文列表</Button><p className=\"tips\">Tips: 当用户发送文本、图片、视频、图文、地理位置这五种消息时，只能回复1条图文消息；其余场景最多可回复8条图文消息</p></div>}\n        </Form.Item>\n        <Divider dashed />\n        <div style={{width: \"50%\", margin: \"auto\"}}>{messageInfo.articles.length > 0 && <GraphicMessage messageList={messageInfo.articles} updateMessageItem={updateMessageItem} />}</div>\n      </Fragment>\n    }\n    return (\n    \t<div>\n        <Form.Item wrapperCol={{offset: 2}}>\n          <Radio.Group value={messageInfo.replyType} onChange={e => changeMessageInfo(\"replyType\", e.target.value)}>\n            <Radio.Button value={0}>文本消息</Radio.Button>\n            <Radio.Button value={1}>图文消息</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n        {MessageContent}\n    \t</div>\n    )\n  }\n}\n\nexport default MenuReplyMessage;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {Form, Button, Input, Radio, Transfer, Switch} from \"antd\";\nimport * as actionCreators from '../store/actionCreators';\nimport './index.scss';\nimport MenuReplyMessage from '../components/MenuReplyMessage';\nclass EditMenuInfo extends Component {\n\n    componentDidMount() {\n        let query = this.props.history.location.query;\n        query && this.props.initMenuInfo(query);\n    }\n\n    render() {\n        const {menuInfo, menuForm, sub_button, menuIndex, handleInputChange, handleSubInputChange, addFirstMenu, editMenu, submitMenu, addSecondMenu, editSecMenu, deleteFirMenu, deleteSubMenu, allCodes, targetKeys, changeGonghao, isSubmit, cancelMenu, handleInfoChange, handleIndividualChange, openModal, resetState, messageInfo, changeMessageInfo, uploadImg, addToList, updateMessageItem, updateCurrentMessage, deleteCurrentMessage, updateIndex} = this.props;\n        const formItemLayout = {\n            labelCol: {\n                sm: {span: 4}\n            },\n            wrapperCol: {\n                sm: {span: 16, offset: 0}\n            },\n            colon: false\n        };\n        const menuList = menuInfo[\"values\"].map((item, index) => (\n            <div className=\"menu\" style={{width: menuInfo[\"values\"].length === 1 ? \"50%\" : menuInfo[\"values\"].length === 2 ? \"33.33%\" : \"33.33%\"}} key={index} onClick={() => editMenu(item, index)}>\n                <span className=\"nav-title cursor\">{item.name || \"菜单名称\"}</span>\n                <ul className=\"sub-menu-list\" style={{top: (item.sub_button && item.sub_button.length) ? (item.sub_button.length === 5 ?  - 4 * 46 - 55 : - item.sub_button.length * 46 - 55) : -55, display: menuIndex === index ? \"block\" : \"none\"}}>\n                    {item.sub_button && item.sub_button.map((i, idx) => (\n                        <li className=\"textEllipsis\" key={idx} onClick={e=> editSecMenu(e, i, idx)}>{i.name || \"子菜单名称\"}</li>\n                    ))}\n                    <li className=\"add\" style={{display: item.sub_button && item.sub_button.length < 5 ? \"blcok\" : \"none\"}} onClick={addSecondMenu}>+</li>\n                    <div className=\"sanjiao sanjiao-out\"/>\n                    <div className=\"sanjiao sanjiao-in\"/>\n                </ul>\n            </div>\n        ));\n        let keyOrUrl, subKeyOrUrl;\n        if (sub_button.type === 'view') {\n            subKeyOrUrl = <Form.Item label=\"链接\">\n                <Input value={sub_button.url} placeholder=\"请输入网页跳转链接，必须以 http 或 https 开头\" onChange={(e) => handleSubInputChange(e, \"url\")}/>\n            </Form.Item>\n        } else if (sub_button.type === 'click') {\n            subKeyOrUrl = <div className=\"content-wrapper\">\n                {messageInfo && <MenuReplyMessage messageInfo={messageInfo} changeMessageInfo={changeMessageInfo} uploadImg={uploadImg} addToList={addToList} updateMessageItem={updateMessageItem} updateCurrentMessage={updateCurrentMessage} deleteCurrentMessage={deleteCurrentMessage} updateIndex={updateIndex} />}\n            </div>\n        }\n        if (menuForm.type === 'view') {\n            keyOrUrl = <Form.Item label=\"链接\">\n                <Input value={menuForm.url} placeholder=\"请输入网页跳转链接，必须以 http 或 https 开头\" onChange={(e) => handleInputChange(e, \"url\")}/>\n            </Form.Item>\n        } else if (menuForm.type === 'click') {\n            keyOrUrl =\n                <div className=\"content-wrapper\">\n                    <MenuReplyMessage messageInfo={messageInfo} changeMessageInfo={changeMessageInfo} uploadImg={uploadImg} addToList={addToList} updateMessageItem={updateMessageItem} updateCurrentMessage={updateCurrentMessage} deleteCurrentMessage={deleteCurrentMessage} updateIndex={updateIndex} />\n                </div>\n        }\n        let menuInfoForm, submitButton;\n        if (menuInfo.values.length !== 0) {\n            if (menuForm.sub_button && menuForm.sub_button.length !== 0) {\n                menuInfoForm =\n                    <div className=\"menu-right fl\">\n                        <div className=\"menu-parent\">\n                            <div className=\"menu-title\">\n                                <h4 className=\"fl\">菜单编辑</h4>\n                                <Button className=\"fr\" type=\"link\" onClick={deleteFirMenu}>删除菜单</Button>\n                            </div>\n                            <Form {...formItemLayout}>\n                                <Form.Item label=\"菜单名称\">\n                                    <Input value={menuForm.name} placeholder=\"一级菜单名称\" maxLength={8} allowClear\n                                           onChange={(e) => handleInputChange(e, \"name\")}/>\n                                    <span className=\"menu-name-tips\">Tips: 菜单名称中汉字不可以超过4个，写四个汉字的同时可以添加2个表情</span>\n                                </Form.Item>\n                            </Form>\n                            <div className=\"menu-children\">\n                                <div className=\"menu-title\">\n                                    <h4 className=\"fl\">子菜单编辑</h4>\n                                    <Button className=\"fr\" type=\"link\" onClick={deleteSubMenu}>删除子菜单</Button>\n                                </div>\n                                <Form {...formItemLayout}>\n                                    <Form.Item label=\"子菜单名称\">\n                                        <Input value={sub_button.name} placeholder=\"二级菜单名称，仅支持中英文和数字，字数不超过8个\" maxLength={16}\n                                               onChange={(e) => handleSubInputChange(e, \"name\")}/>\n                                    </Form.Item>\n                                    <Form.Item label=\"子菜单内容\">\n                                        <Radio.Group value={sub_button.type} onChange={(e) => handleSubInputChange(e, \"type\")}>\n                                            <Radio value=\"view\">跳转网页</Radio>\n                                            <Radio value=\"click\">发送消息</Radio>\n                                        </Radio.Group>\n                                    </Form.Item>\n                                    {subKeyOrUrl}\n                                </Form>\n                            </div>\n                        </div>\n                    </div>\n            } else {\n                menuInfoForm =\n                    <div className=\"menu-right fl\">\n                        <div className=\"menu-parent\">\n                            <div className=\"menu-title\">\n                                <h4 className=\"fl\">菜单编辑</h4>\n                                <Button className=\"fr\" type=\"link\" onClick={deleteFirMenu}>删除菜单</Button>\n                            </div>\n                            <Form {...formItemLayout}>\n                                <Form.Item label=\"菜单名称\">\n                                    <Input value={menuForm.name} maxLength={8} allowClear placeholder=\"一级菜单名称\" onChange={(e) => handleInputChange(e, \"name\")}/>\n                                    <span className=\"menu-name-tips\">Tips: 菜单名称中汉字不可以超过4个，写四个汉字的同时可以添加2个表情</span>\n                                </Form.Item>\n                                <Form.Item label=\"菜单内容\">\n                                    <Radio.Group value={menuForm.type} onChange={(e) => handleInputChange(e, \"type\")}>\n                                        <Radio value=\"view\">跳转网页</Radio>\n                                        <Radio value=\"click\">发送消息</Radio>\n                                    </Radio.Group>\n                                </Form.Item>\n                                {keyOrUrl}\n                            </Form>\n                        </div>\n                    </div>\n            }\n            submitButton = <div className=\"menu-right-btm fl\">\n                <Button type=\"primary\" onClick={() => {openModal();this.props.getAllCodes()}\n                }>提交</Button>\n            </div>\n        }\n        let menuModal;\n        if (isSubmit) {\n            let individualSex;\n            if (menuInfo.individual) {\n                individualSex = <Form.Item label=\"性别\">\n                    <Radio.Group value={menuInfo.sex} onChange={e => handleInfoChange(e, \"sex\")}>\n                        <Radio value=\"0\">未知</Radio>\n                        <Radio value=\"1\">男</Radio>\n                        <Radio value=\"2\">女</Radio>\n                    </Radio.Group>\n                </Form.Item>\n            }\n            menuModal = <div className=\"menu-modal-wrapper\">\n                <div className=\"menu-modal\">\n                    <Transfer\n                        dataSource={allCodes}\n                        showSearch\n                        targetKeys={targetKeys}\n                        onChange={changeGonghao}\n                        render={item => item.nick_name}\n                        rowKey={record => record.code}\n                        className=\"menu-transfer fl\"\n                    />\n                    <Form className=\"fl\" colon={false} labelCol={{sm: {span: 30}}} wrapperCol={{sm: {span: 30, offset: 0}}}\n                          labelAlign=\"left\">\n                        <Form.Item label=\"标题\">\n                            <Input value={menuInfo.title} placeholder=\"请输入标题\" onChange={(e) => handleInfoChange(e, \"title\")}/>\n                        </Form.Item>\n                        <Form.Item label=\"个性化菜单\">\n                            <Switch onChange={handleIndividualChange} checked={menuInfo.individual}/>\n                        </Form.Item>\n                        {individualSex}\n                        <Form.Item label=\" \">\n                            <Button style={{marginRight: \"10px\"}} type=\"primary\" onClick={() => submitMenu(this.props)}>提交</Button>\n                            <Button onClick={cancelMenu}>取消</Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </div>\n        }\n        return (\n            <div>\n                <div className='container edit-menu'>\n                    <div className=\"title-wrapper\">\n                        <h2>菜单配置</h2>\n                        <Button className=\"fr\" onClick={() => resetState(this.props)}>返回上一级</Button>\n                    </div>\n                    <div className=\"menu-left fl\">\n                        <div className=\"menu-wrapper\">\n                            <div className=\"menu-cont\">\n                                <div className=\"menu-list\">\n                                    {menuList}\n                                    <div className=\"menu add\"\n                                         style={menuList.length === 1 ? {width: \"50%\"} : (menuList.length === 2 ? {width: \"33%\"} : (menuList.length === 3 ? {display: \"none\"} : {width: \"100%\"}))}\n                                         onClick={addFirstMenu}>\n                                        <span className=\"nav-title cursor\">+ 添加菜单</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {menuInfoForm}\n                    {submitButton}\n                </div>\n                {menuModal}\n            </div>\n        )\n    }\n    componentWillUnmount() {\n        this.props.unMountState();\n        this.props.resetMessageInfo();\n    }\n\n}\n\nconst mapState = state => ({\n    menuInfo: state.gonghao.menu.menuInfo,\n    menuForm: state.gonghao.menu.menuForm,\n    sub_button: state.gonghao.menu.sub_button,\n    menuIndex: state.gonghao.menu.menuIndex,\n    allCodes: state.gonghao.menu.allCodes,\n    isSubmit: state.gonghao.menu.isSubmit,\n    targetKeys: state.gonghao.menu.targetKeys,\n    messageInfo: state.gonghao.menu.messageInfo,\n    updateIndex: state.gonghao.menu.updateIndex,\n});\n\nconst mapDispatch = dispatch => ({\n    initMenuInfo(record) {\n        dispatch(actionCreators.initMenuInfo(record));\n    },\n    handleInfoChange(e, name) {\n        dispatch(actionCreators.handleInfoChange(e.target.value, name));\n    },\n    handleIndividualChange(value) {\n        dispatch(actionCreators.handleIndividualChange(value));\n    },\n    handleInputChange(e, name) {\n        dispatch(actionCreators.handleInputChange(name, e.target.value))\n    },\n    handleSubInputChange(e, name) {\n        dispatch(actionCreators.handleSubInputChange(name, e.target.value))\n    },\n    addFirstMenu() {\n        dispatch(actionCreators.addFirstMenu())\n    },\n    editMenu(item, index) {\n        dispatch(actionCreators.editMenu(item, index))\n    },\n    addSecondMenu(e) {\n        e.stopPropagation();\n        dispatch(actionCreators.addSecondMenu())\n    },\n    submitMenu(props) {\n        dispatch(actionCreators.submitMenu(props))\n    },\n    openModal() {\n        dispatch(actionCreators.openModal())\n    },\n    editSecMenu(e, data, idx) {\n        e.stopPropagation();\n        dispatch(actionCreators.editSecMenu(data, idx))\n    },\n    deleteFirMenu() {\n        dispatch(actionCreators.deleteFirMenu())\n    },\n    deleteSubMenu() {\n        dispatch(actionCreators.deleteSubMenu())\n    },\n    changeGonghao(targetKeys) {\n        dispatch(actionCreators.changeGonghao(targetKeys))\n    },\n    getAllCodes() {\n        dispatch(actionCreators.getAllCodes())\n    },\n    cancelMenu() {\n        dispatch(actionCreators.cancelMenu())\n    },\n    resetState(props) {\n        props.history.goBack();\n        dispatch(actionCreators.resetState());\n    },\n    unMountState() {\n        dispatch(actionCreators.resetState());\n    },\n    uploadImg(info) {\n        if (info.file.status === 'done') {\n            let picurl = `http://t.dmmup.com/uploads/${info.file.response.filename}`;\n            dispatch(actionCreators.changeMessageInfo(\"picurl\", picurl))\n        }\n    },\n    changeMessageInfo(key, value) {\n        dispatch(actionCreators.changeMessageInfo(key, value))\n    },\n    addToList() {\n        dispatch(actionCreators.addToList())\n    },\n    updateMessageItem(item, index) {\n        dispatch(actionCreators.updateMessageItem(item, index))\n    },\n    updateCurrentMessage() {\n        dispatch(actionCreators.updateCurrentMessage())\n    },\n    deleteCurrentMessage() {\n        dispatch(actionCreators.deleteCurrentMessage())\n    },\n    resetMessageInfo() {\n        dispatch(actionCreators.resetState())\n    },\n});\n\nexport default connect(mapState, mapDispatch)(Form.create({name: 'editMenuInfo'})(EditMenuInfo));","import React, {Component} from 'react';\nimport {Button, Table} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {Link} from 'react-router-dom';\nimport {actionCreators} from './store';\nimport './index.scss';\n\nclass Config extends Component {\n\n  render() {\n    const {replyMessageList, allCodes, deleteReplyMessage} = this.props;\n    const configHeader = [\n      {\n        key: \"replyType\",\n        title: \"消息类型\",\n        dataIndex: \"replyType\",\n        align: \"center\",\n        render: text => text === 0 ? \"文本消息\" : \"图文消息\"\n      }, {\n        key: \"type\",\n        title: \"互动类型\",\n        dataIndex: \"type\",\n        align: \"center\",\n        render: text => text === 0 ? \"用户回复\" : (text === 2 ? \"用户关注\" : (text === 4 ? \"默认回复\" : \"~~\"))\n      }, {\n        key: \"name\",\n        dataIndex: \"name\",\n        title: \"消息名称\",\n        align: \"center\"\n      },{\n        key: \"sex\",\n        title: \"性别\",\n        dataIndex: \"sex\",\n        align: \"center\",\n        render: (text, record, index) => {\n          return (\n            <span>\n              {record.sex === 1 ? \"男\" : (record.sex === 2\n                ? \"女\" : (record.sex === 0 ? \"未知\" : \"默认\"))}\n            </span>\n          )\n        }\n      }, {\n        key: \"text\",\n        title: \"用户回复文本\",\n        dataIndex: \"text\",\n        align: \"center\",\n        render: text => text ? text : \"——\"\n      }, {\n        key: \"codes\",\n        title: \"公号名称\",\n        dataIndex: \"codes\",\n        align: \"center\",\n        render: text => text.length > 0 ? text.slice(0, 4).map(item => {\n          let a = allCodes.filter(i => i.code === item)[0];\n          return a && a.nick_name\n        }) : \"无\"\n      }, {\n        key: \"Action\",\n        title: \"Action\",\n        align: \"center\",\n        width: 120,\n        render: (text, record, index) => {\n          return (\n            <div className=\"btn-wrapper\">\n              <Button size=\"small\" type=\"primary\">\n                <Link to={{pathname: './update', state: {record, index}}}>编辑</Link>\n              </Button>\n              <Button size=\"small\" style={{background: \"red\", marginLeft: \"5px\"}}\n                      onClick={() => deleteReplyMessage(record._id, index)}>删除</Button>\n            </div>\n          )\n        }\n      },\n    ];\n    return (\n      <div className=\"container\">\n        <div className=\"edit-config\">\n          <Button type=\"primary\" className=\"edit-btn\">\n            <Link to='./create'>新建回复规则</Link>\n          </Button>\n          <Table className='config-table' size=\"small\" rowKey={(record => record._id)} columns={configHeader} dataSource={replyMessageList} bordered pagination={false}/>\n        </div>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    this.props.getReplyMessageList();\n    this.props.getAllCodes();\n  }\n}\n\nconst mapState = state => ({\n  allCodes: state.gonghao.reply.allCodes,\n  replyMessageList: state.gonghao.reply.replyMessageList\n});\n\nconst mapDispatch = dispatch => ({\n  getAllCodes() {\n    dispatch(actionCreators.getAllCodes())\n  },\n  getReplyMessageList() {\n    dispatch(actionCreators.getReplyMessageList())\n  },\n  deleteReplyMessage(id, index) {\n    dispatch(actionCreators.deleteReplyMessage(id, index))\n  }\n});\n\nexport default connect(mapState, mapDispatch)(Config);","import React, {Component} from 'react';\nimport {Avatar, Input, List, Layout, message, Select} from \"antd\";\nimport axios from 'axios';\nimport \"./index.scss\";\n\nconst {Sider, Content} = Layout;\nconst {Option} = Select;\n\nclass MultiSelectByGroup extends Component {\n\n    state = {\n        gonghaoTagList: [],\n        gonghaoList: [],\n        nick_name: \"\",\n        group: \"全部\",\n        codes: [],\n        AllGonghaoList: []\n    };\n\n    UNSAFE_componentWillReceiveProps (nextProps) {\n        this.setState({codes: nextProps.codes})\n    }\n\n    search = nick_name => {\n        if (nick_name !== \"\") {\n            axios.get(\"/conf/find_one\", {params: {nick_name}})\n                .then(res => {\n                    if (res.data.data.length !== 0) {\n                        const {data: gonghaoList} = res.data;\n                        this.setState({gonghaoList})\n                    } else {\n                        message.info(\"没有查询到包含该字符的公号，请检查后重新输入\")\n                    }\n                })\n        } else {\n            let {AllGonghaoList: gonghaoList} = this.state;\n            this.setState({gonghaoList})\n        }\n    };\n\n    changeSearchInput = e => {\n        let nick_name = e.target.value;\n        this.setState({nick_name, group: \"全部\"})\n    };\n\n    selectGonghao = gonghao => {\n        let {codes} = this.state;\n        const {code} = gonghao;\n        const keyIndex = codes.indexOf(code);\n        if(keyIndex > -1) {\n            codes.splice(keyIndex, 1);\n        } else {\n            codes.push(code);\n        }\n        this.setState({codes});\n        this.props.selectGonghao(codes);\n    };\n\n    handleChangeGroup = group => {\n        const {AllGonghaoList: gonghaoList} = this.state;\n        this.setState({group, nick_name: \"\", gonghaoList})\n    };\n\n    render() {\n        const {gonghaoTagList, gonghaoList, nick_name, group, codes} = this.state;\n        return (\n            <Layout style={{background: \"#fff\"}} className=\"multi-gonghao-wrapper\">\n                <Sider className=\"message-sider-wrapper\" theme=\"light\" width=\"200\">\n                    <Select placeholder=\"按分组查询\" value={group} className=\"search-input\" onChange={this.handleChangeGroup}>\n                        <Option value=\"全部\">所有公号</Option>\n                        {gonghaoTagList.map(item =>\n                            <Option key={item._id} value={item.name}>{item.name}</Option>\n                        )}\n                    </Select>\n                    <Input.Search\n                        className=\"search-input\"\n                        placeholder=\"请输入公号名称\"\n                        onSearch={this.search}\n                        value={nick_name}\n                        allowClear\n                        onChange={this.changeSearchInput}\n                    />\n                    <List className=\"gonghao-list\"\n                          dataSource={group !== \"全部\" ? gonghaoList.filter(i => i.group === group) : gonghaoList}\n                          locale={{emptyText: <span style={{display: \"none\"}}>123</span>}}\n                          renderItem={gonghao =>\n                              <List.Item className={codes.indexOf(gonghao.code) > -1 ? \"cursor selected\" : \"cursor\"}\n                                         onClick={() => this.selectGonghao(gonghao)} key={gonghao._id}>\n                                  <Avatar shape=\"square\" size={22} src={gonghao.head_img} />{gonghao.nick_name}\n                              </List.Item>\n                          }/>\n                </Sider>\n                <Content>{this.props.content}</Content>\n            </Layout>\n        )\n    }\n\n    getGonghaoTagList = () => {\n        axios.get(\"/gonghaoTag\")\n            .then(res => {\n                if (res.data.code === 1) {\n                    const {data: gonghaoTagList} = res.data;\n                    this.setState({gonghaoTagList})\n                }\n            })\n    };\n\n    getGonghaoList = () => {\n        axios.get('/conf')\n            .then(res => {\n                const {data, code} = res.data;\n                if (code === 1) {\n                    this.setState({gonghaoList: data, AllGonghaoList: data})\n                }\n            })\n    };\n\n    componentDidMount() {\n        this.getGonghaoTagList();\n        this.getGonghaoList();\n    }\n}\n\nexport default MultiSelectByGroup;","import React, {Component, Fragment} from 'react';\nimport {connect} from \"react-redux\";\nimport {Form, Button, Input, Upload, Radio, Icon, Row, Col, Divider, Tooltip, Tag, Switch} from \"antd\";\nimport * as actionCreators from '../store/actionCreators';\nimport \"./index.scss\";\nimport GraphicMessage from '../../../../common/components/GraphicMessage';\nimport MultiSelectSider from '../../../../common/components/SelectGonghao/MultiSelectSider';\n\nconst formItemLayout = {\n    labelCol: {\n        sm: {span: 4}\n    },\n    wrapperCol: {\n        sm: {span: 14, offset: 0}\n    },\n};\n\nclass EditConfigInfo extends Component {\n\n    UNSAFE_componentWillMount() {\n        const {location: {state}, getAllCodes, initState} = this.props;\n        getAllCodes();\n        state && initState(state.record, state.index);\n    }\n\n    render() {\n        const {allCodes, selectGonghao, deleteGonghao, submitForm, messageInfo, updateMessageItem, addToList, changeMessageInfo, uploadImg, history, updateIndex, updateCurrentMessage, deleteCurrentMessage} = this.props;\n        let TextOrKey, MessageContent;\n        if (messageInfo.type === 0) {\n            TextOrKey = <Form.Item label=\"用户回复内容\">\n                <Input onChange={e => changeMessageInfo(\"text\", e.target.value)} value={messageInfo.text}\n                       placeholder='请输入用户回复内容'/>\n            </Form.Item>\n        } else if (messageInfo.type === 1) {\n            TextOrKey = <Form.Item label=\"点击关键词\">\n                <Input onChange={e => changeMessageInfo(\"key\", e.target.value)} value={messageInfo.key}\n                       placeholder='请输入菜单栏点击关键词'/>\n            </Form.Item>\n        }\n\n        if (messageInfo.replyType === 0) {\n            MessageContent =<Form.Item className=\"inputtxt\" label=\"文本消息\">\n                <Input.TextArea onChange={e => changeMessageInfo(\"content\", e.target.value)}\n                                value={messageInfo.content} autoSize={{minRows: 3, maxRows: 6}}\n                                placeholder='请输入回复文本消息'/>\n            </Form.Item>\n        } else {\n            let UploadImg;\n            if (messageInfo.picurl) {\n                UploadImg = <img style={{width: \"100px\"}} src={messageInfo.picurl} alt=\"图片走丢啦~\"/>\n            } else {\n                UploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\n            }\n            MessageContent = <Fragment>\n                <Form.Item label=\"图文标题\">\n                    <Input onChange={e => changeMessageInfo(\"title\", e.target.value)} value={messageInfo.title}\n                           placeholder='请输入图文标题'/>\n                </Form.Item>\n                <Form.Item label=\"图文链接\">\n                    <Input onChange={e => changeMessageInfo(\"url\", e.target.value)} value={messageInfo.url}\n                           placeholder='请输入图文链接'/>\n                </Form.Item>\n                <Form.Item label=\"图文描述\">\n                    <Input.TextArea onChange={e => changeMessageInfo(\"description\", e.target.value)}\n                                    value={messageInfo.description} autoSize={{minRows: 3, maxRows: 6}}\n                                    placeholder='请输入图文描述'/>\n                </Form.Item>\n                <Form.Item label=\"上传图片\">\n                    <Upload name=\"imageFile\" action=\"/reply/upload\" showUploadList={false} onChange={uploadImg}>\n                        {UploadImg}\n                    </Upload>\n                </Form.Item>\n                <Form.Item label=\" \" colon={false}>\n                    {updateIndex > -1 ? <div>\n                        <Button onClick={updateCurrentMessage} type=\"primary\" style={{marginRight: 20}}>保存</Button>\n                        <Button onClick={deleteCurrentMessage}>删除此条消息</Button>\n                    </div> : <div><Button onClick={addToList}>添加到图文列表</Button><p className=\"tips\">Tips:\n                        当用户发送文本、图片、视频、图文、地理位置这五种消息时，只能回复1条图文消息；其余场景最多可回复8条图文消息</p></div>}\n                </Form.Item>\n            </Fragment>\n        }\n        return (\n            <div className=\"container\">\n                <MultiSelectSider selectGonghao={selectGonghao} codes={messageInfo.codes} content={\n                    <Form className=\"reply-form\" labelAlign=\"right\" {...formItemLayout}>\n                        <Col span={14}>\n                            <Form.Item label=\"选择公号\">\n                                <div style={{width: \"180%\"}}>\n                                    {allCodes.map(item => messageInfo.codes.indexOf(item.code) > -1 &&\n                                        <Tag key={item._id} className=\"cursor gonghao-tag\" closable\n                                             onClose={() => deleteGonghao(messageInfo.codes, item.code)}>{item.nick_name}</Tag>)}\n                                </div>\n                            </Form.Item>\n                            <Form.Item label=\"消息名称\">\n                                <Input onChange={e => changeMessageInfo(\"name\", e.target.value)}\n                                       value={messageInfo.name} placeholder='请输入消息名称,(仅供备注，不会发送给粉丝)'/>\n                            </Form.Item>\n                        </Col>\n                        <Divider style={{width: \"110%\", marginLeft: -50}}/>\n                        <h2 className=\"block-title\">设置自动回复</h2>\n                        <Row>\n                            <Col span={14}>\n                                <Form.Item wrapperCol={{offset: 1}}>\n                                    <Radio.Group value={messageInfo.replyType}\n                                                 onChange={e => changeMessageInfo(\"replyType\", e.target.value)}>\n                                        <Radio.Button value={0}>文本消息</Radio.Button>\n                                        <Radio.Button value={1}>图文消息</Radio.Button>\n                                    </Radio.Group>\n                                </Form.Item>\n                                <Form.Item label=\"用户昵称\">\n                                    <Switch checked={messageInfo.is_nickname} onChange={value => changeMessageInfo(\"is_nickname\", value)} />\n                                    <span className=\"tips\">\n                        {messageInfo.is_nickname && \"Tips: 点击开启用户昵称后，需要手动添加替换文字\"}\n                    </span>\n                                </Form.Item>\n                                {MessageContent}\n                            </Col>\n                            <Col span={7}>\n                                {messageInfo.articles.length > 0 && <GraphicMessage messageList={messageInfo.articles}\n                                                                                    updateMessageItem={updateMessageItem}/>}\n                            </Col>\n                        </Row>\n                        <Divider style={{width: \"110%\", marginLeft: -50}}/>\n                        <h2 className=\"block-title\">设置模板消息</h2>\n                        <Col span={14}>\n                            <Form.Item wrapperCol={{offset: 1}}>\n                                <Radio.Group value={messageInfo.type}\n                                             onChange={e => changeMessageInfo(\"type\", e.target.value)}>\n                                    <Radio.Button value={0}>特定回复</Radio.Button>\n                                    <Radio.Button value={2}>用户关注</Radio.Button>\n                                    <Radio.Button value={4}>默认回复</Radio.Button>\n                                </Radio.Group>\n                            </Form.Item>\n                            <Form.Item label=\"粉丝性别\">\n                                <Radio.Group value={messageInfo.sex}\n                                             onChange={e => changeMessageInfo(\"sex\", e.target.value)}>\n                                    <Radio value={3}>默认</Radio>\n                                    <Radio value={1}>男</Radio>\n                                    <Radio value={2}>女</Radio>\n                                    <Radio value={0}>未知</Radio>\n                                </Radio.Group>\n                            </Form.Item>\n                            <Form.Item label={<span>未知性别<Tooltip title=\"未知属性粉丝按照`男`或`女`发送\"><Icon className=\"cursor\"\n                                                                                                 type=\"question-circle\"\n                                                                                                 theme=\"filled\"/></Tooltip> </span>}>\n                                <Radio.Group value={messageInfo.attribute}\n                                             onChange={e => changeMessageInfo(\"attribute\", e.target.value)}>\n                                    <Radio value={1}>男</Radio>\n                                    <Radio value={2}>女</Radio>\n                                </Radio.Group>\n                            </Form.Item>\n                            {TextOrKey}\n                        </Col>\n                        <Divider style={{width: \"110%\", marginLeft: -50}}/>\n                        <Form.Item wrapperCol={{offset: 1}}>\n                            <Button type=\"primary\" style={{marginRight: 20}}\n                                    onClick={() => submitForm(messageInfo, this.props)}>提交</Button>\n                            <Button onClick={() => history.goBack()}>取消</Button>\n                        </Form.Item>\n                    </Form>\n                }/>\n\n            </div>\n        )\n    }\n\n\n    componentWillUnmount() {\n        this.props.resetState()\n    }\n}\n\nconst mapState = state => ({\n    messageInfo: state.gonghao.reply.messageInfo,\n    allCodes: state.gonghao.reply.allCodes,\n    selectGonghaoModal: state.gonghao.reply.selectGonghaoModal,\n    updateIndex: state.gonghao.reply.updateIndex,\n});\n\nconst mapDispatch = dispatch => ({\n    getAllCodes() {\n        dispatch(actionCreators.getAllCodes())\n    },\n    selectGonghao(codes) {\n        dispatch(actionCreators.selectGonghao(codes))\n    },\n    deleteGonghao(codes, code) {\n        codes.splice(codes.indexOf(code), 1);\n        dispatch(actionCreators.selectGonghao(codes))\n    },\n    changeMessageInfo(key, value) {\n        dispatch(actionCreators.changeMessageInfo(key, value))\n    },\n    uploadImg(info) {\n        if (info.file.status === 'done') {\n            let picurl = `http://t.dmmup.com/uploads/${info.file.response.filename}`;\n            dispatch(actionCreators.changeMessageInfo(\"picurl\", picurl))\n        }\n    },\n    addToList() {\n        dispatch(actionCreators.addToList())\n    },\n    updateMessageItem(item, index) {\n        dispatch(actionCreators.updateMessageItem(item, index))\n    },\n    updateCurrentMessage() {\n        dispatch(actionCreators.updateCurrentMessage())\n    },\n    deleteCurrentMessage() {\n        dispatch(actionCreators.deleteCurrentMessage())\n    },\n    submitForm(messageInfo, props) {\n        const {title, picurl, url, description} = messageInfo;\n        const {state} = props.location;\n        messageInfo.articles.length === 0 && (messageInfo.articles.push({title, picurl, url, description}));\n        messageInfo.title = messageInfo.picurl = messageInfo.url = messageInfo.description = \"\";\n        if (state) {\n            messageInfo._id = state.record._id;\n            dispatch(actionCreators.updateConfigForm(messageInfo, props.history))\n        } else {\n            dispatch(actionCreators.createConfigForm(messageInfo, props.history))\n        }\n    },\n    resetState() {\n        dispatch(actionCreators.resetState());\n    },\n    initState(record, index) {\n        dispatch(actionCreators.initState(record, index))\n    }\n});\n\nexport default connect(mapState, mapDispatch)(Form.create({name: 'editConfigInfo'})(EditConfigInfo));","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Tuoguan from './tuoguan';\nimport GonghaoGroup from './tuoguan/group'\n\nimport Menu from './menu';\nimport editMenu from './menu/edit';\n\nimport Replay from './reply';\nimport editReplay from './reply/edit';\n\nclass TuoguanWrapper extends Component {\n  render() {\n    return (\n        <Route path=\"/admin/gonghao\" render={() =>\n          <Switch>\n            {/*接管公号*/}\n            <Route path='/admin/gonghao/tuoguan/'>\n              <Switch>\n                <Route path=\"/admin/gonghao/tuoguan/index\" component={Tuoguan} />\n                <Route path=\"/admin/gonghao/tuoguan/group\" component={GonghaoGroup} />\n                <Redirect from=\"/admin/gonghao/tuoguan\" exact to='/admin/gonghao/tuoguan/index' />\n              </Switch>\n            </Route>\n            {/*菜单配置*/}\n            <Route path='/admin/gonghao/menu/'>\n              <Switch>\n                <Route path=\"/admin/gonghao/menu/index\" component={Menu} />\n                <Route path='/admin/gonghao/menu/create' component={editMenu} />\n                <Route path='/admin/gonghao/menu/update' component={editMenu} />\n                <Redirect from=\"/admin/gonghao/menu\" exact to='/admin/gonghao/menu/index' />\n              </Switch>\n            </Route>\n            {/*自动回复*/}\n            <Route path='/admin/gonghao/reply'>\n              <Switch>\n                <Route path=\"/admin/gonghao/reply/index\" component={Replay} />\n                <Route path='/admin/gonghao/reply/create' component={editReplay} />\n                <Route path='/admin/gonghao/reply/update' component={editReplay} />\n                <Redirect from=\"/admin/gonghao/reply\" exact to='/admin/gonghao/reply/index' />\n              </Switch>\n            </Route>\n            <Redirect from=\"/admin/gonghao\" exact to='/admin/gonghao/tuoguan' />\n          </Switch>\n        } />\n    )\n  }\n}\n\nexport default TuoguanWrapper;","import React from 'react';\nimport {Card, List, Icon, Tooltip} from 'antd';\nimport \"./index.scss\";\nimport moment from 'moment';\n\nconst GraphicMessage = props => {\n  const {messageList, openSyncModal, openModal, openTimingModal, copy, deleteMaterial, openUpdateMaterialModal} = props;\n  return (\n    <div className=\"message-list-wrapper\">\n      <List grid={{gutter: 20, sm: 3, xxl: 6}} dataSource={messageList}\n            renderItem={(item, index) => <List.Item key={item._id}>\n              <Card className=\"message-list-card\" title={\n                <List className=\"message-list\">\n                  <div className=\"update-time\">\n                    <Icon type=\"info-circle\"/>{item.isTiming ? `于 ${moment(item.timing).format(\"YYYY-MM-DD HH:mm:ss\")} 发送` : \"未设置定时时间，请手动发送\"}</div>\n                  <Tooltip title=\"\" key={item.content.news_item[0].thumb_media_id + \"0\"}>\n                    <List.Item className=\"cursor\" onClick={() => openUpdateMaterialModal(item.media_id, 0, item.content.news_item[0], item._id)}>\n                      <div className=\"head-message\">\n                        <p className=\"ellipse-two\">{item.content.news_item[0].title}</p>\n                        <img src={item.content.news_item[0].local_img_path} alt=\"请先在微信后台上传图片\"/>\n                      </div>\n                    </List.Item>\n                  </Tooltip>\n                  {item.content.news_item.slice(1).map((message, i) => <Tooltip title=\"点击修改原文链接\" key={message.thumb_media_id + i + 1} placement=\"rightTop\">\n                    <List.Item className=\"border_btm cursor\" onClick={() => openUpdateMaterialModal(item.media_id, i + 1, item.content.news_item[i + 1], item._id)}>\n                      <div className=\"rest-message\">\n                        <p className=\"ellipse-two\">{message.title}</p>\n                        <img src={message.local_img_path} alt=\"miss\"/>\n                      </div>\n                    </List.Item>\n                  </Tooltip>)}\n                </List>}\n                    actions={[\n                      <Tooltip title=\"同步\"><Icon onClick={() => openSyncModal(item)} type=\"cloud-upload\"\n                                                key=\"sync\"/></Tooltip>,\n                      <Tooltip title=\"发送\"><Icon onClick={() => openModal(item)} type=\"message\" key=\"send\"/></Tooltip>,\n                      <Tooltip title=\"定时发送\"><Icon onClick={() => openTimingModal(item)} type=\"history\" key=\"timing\"/></Tooltip>,\n                      <Tooltip title=\"复制\"><Icon onClick={() => copy(item._id)} type=\"fork\" key=\"copy\"/></Tooltip>,\n                      <Tooltip title=\"删除\"><Icon onClick={() => deleteMaterial(item._id, index)} type=\"delete\"\n                                                key=\"del\"/></Tooltip>,\n                    ]}\n              />\n            </List.Item>}/>\n\n    </div>\n  )\n};\n\nexport default GraphicMessage;","import React, {PureComponent} from 'react';\nimport {ConfigProvider, message, Modal, Radio, Switch, DatePicker, TimePicker, Checkbox, Row, Col, Input} from \"antd\";\nimport zhCN from 'antd/es/locale/zh_CN';\nimport moment from \"moment\";\nimport 'moment/locale/zh-cn';\nimport {connect} from \"react-redux\";\nimport { actionCreators } from '../store';\nimport GraphicMessage from '../components/GraphicMessage';\n\nimport axios from 'axios';\n\nclass groupMessage extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      syncModal: false,\n      checkedList: [],\n      indeterminate: false,\n      checkAll: false,\n      messageInfo: {},\n      code: props.code,\n      gonghaoList: []\n    };\n  }\n\n  componentDidMount() {\n    const { code } = this.state;\n    this.props.getMessageList(code);\n    this.props.getTagList(code);\n    this.props.getGroupGonghao();\n    this.getGonghaoList();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n    if(this.props.code !== nextProps.code) {\n      const { code } = nextProps;\n      this.props.getMessageList(code);\n    }\n  }\n\n  getGonghaoList = () => {\n    axios.get('/conf')\n      .then(res => {\n        const { data, code } = res.data;\n        if (code === 1) {\n          this.setState({gonghaoList: data})\n        }\n      })\n  };\n\n  render() {\n    const { messageList, openModal, sendModal, sendMessage, sendInfo, tagList, closeModal, changeTagId, sendTimingModal, sendTimingMessage, sendTimingInfo, openTimingModal, changeTimingState, copy, changeTime, deleteMaterial, isComplete, openUpdateMaterialModal, closeUpdateMaterialModal, updateMaterialModal, updateMaterial, updateInfo, changeContentSourceUrl }  = this.props;\n    const { code, gonghaoList } = this.state;\n    let selectGonghaoList = gonghaoList.filter(item => item.code !== code);\n    return (\n      <ConfigProvider locale={zhCN}>\n        <div className=\"container\" style={{padding: 0}}>\n          <GraphicMessage messageList={messageList} openSyncModal={message => this.setState({syncModal: true, messageInfo: message})} openModal={openModal} openTimingModal={openTimingModal} copy={copy} deleteMaterial={deleteMaterial} isComplete={isComplete} openUpdateMaterialModal={openUpdateMaterialModal} />\n        </div>\n        <Modal\n          title=\"请选择要发送的标签\"\n          visible={sendModal}\n          onOk={() => sendMessage(sendInfo)}\n          onCancel={closeModal}\n        >\n          <Radio.Group value={sendInfo.tagId} onChange={e => changeTagId(e, false)}>\n            <Radio value={-1}>全部</Radio>\n            {tagList.map(item => (\n                <Radio key={item._id} value={item.id}>{item.name}</Radio>\n            ))}\n          </Radio.Group>\n        </Modal>\n        <Modal\n          title=\"创建定时发送任务？\"\n          visible={sendTimingModal}\n          onOk={() => sendTimingMessage(sendTimingInfo, code)}\n          onCancel={closeModal}\n        >\n          <label htmlFor=\"tagId\">\n            标签：\n            <Radio.Group id=\"tagId\" value={sendTimingInfo.tagId} onChange={e => changeTagId(e, true)}>\n              <Radio value={-1}>全部</Radio>\n              {tagList.map(item => (\n                  <Radio key={item._id} value={item.id}>{item.name}</Radio>\n              ))}\n            </Radio.Group>\n          </label>\n          <label style={{display: \"block\", margin: \"20px 0\"}} htmlFor=\"isTiming\">\n            是否定时：\n            <Switch checked={sendTimingInfo.isTiming} onChange={changeTimingState} />\n          </label>\n          <label htmlFor=\"timing\" style={{display: sendTimingInfo.isTiming ? \"block\" : \"none\"}}>\n            时间选择：\n            <DatePicker\n              value={moment(new Date(sendTimingInfo.timing), 'YYYY-MM-DD')}\n              onChange={(time, timeString) => changeTime(timeString, \"date\")}\n            />\n            <TimePicker\n              value={moment(new Date(sendTimingInfo.timing), 'HH-MM-SS')}\n              onChange={(time, timeString) => changeTime(timeString, \"time\")}\n            />\n          </label>\n        </Modal>\n        <Modal width={640} title=\"请选择需要同步素材的公号：\" visible={this.state.syncModal} onOk={this.syncMaterial} onCancel={this.closeSyncModal}>\n          <div style={{ borderBottom: '1px solid #E9E9E9', paddingBottom: 10, marginBottom: 10 }}>\n            <Checkbox\n              indeterminate={this.state.indeterminate}\n              onChange={this.onCheckAllChange}\n              checked={this.state.checkAll}\n            >全选</Checkbox>\n          </div>\n          <Checkbox.Group style={{width: \"100%\"}} onChange={this.onChange} value={this.state.checkedList}>\n            <Row>\n              {selectGonghaoList.map(item => <Col span={6} key={item._id}>\n                <Checkbox value={item.code}>{item.nick_name}</Checkbox>\n              </Col>)}\n            </Row>\n          </Checkbox.Group>\n        </Modal>\n        <Modal visible={updateMaterialModal} onCancel={closeUpdateMaterialModal} onOk={() => updateMaterial(updateInfo, code)} title=\"修改原文链接\">\n          <Input value={updateInfo.articles.content_source_url} placeholder=\"请输入新的原文链接\" onChange={changeContentSourceUrl} />\n        </Modal>\n      </ConfigProvider>\n    )\n  }\n  componentWillUnmount() {\n    this.props.resetState()\n  }\n\n  syncMaterial = () => {\n    const { messageInfo, checkedList: codes } = this.state;\n    Modal.confirm({\n      title: \"确定同步这条素材吗？\",\n      onOk: () => {\n        axios.post(\"/material/syncMaterial\", {codes, docs: [messageInfo]})\n          .then(res => {\n            const {code, msg } = res.data;\n            if(code === 1) {\n              message.success(msg);\n              this.closeSyncModal();\n            } else {\n              message.error(msg)\n            }\n          })\n      }\n    })\n  };\n\n  closeSyncModal = () => {\n    this.setState({\n      syncModal: false,\n      checkedList: [],\n      indeterminate: false,\n      checkAll: false,\n      messageInfo: {}\n    })\n  };\n\n  onCheckAllChange = e => {\n    const { code, gonghaoList } = this.state;\n    const plainOptions = gonghaoList.filter(item => item.code !== code);\n    const codes = plainOptions.map(item => item.code);\n    this.setState({\n      checkedList: e.target.checked ? codes : [],\n      indeterminate: false,\n      checkAll: e.target.checked,\n    });\n  };\n\n  onChange = checkedList => {\n    const { code, gonghaoList } = this.state;\n    const plainOptions = gonghaoList.filter(item => item.code !== code);\n    const codes = plainOptions.map(item => item.code);\n    this.setState({\n      checkedList,\n      indeterminate: !!checkedList.length && checkedList.length < codes.length,\n      checkAll: checkedList.length === codes.length,\n    });\n  };\n}\n\n\nconst mapState = state => ({\n  tagList: state.message.group.tagList,\n  messageList: state.message.group.messageList,\n  sendInfo: state.message.group.sendInfo,\n  sendTimingInfo: state.message.group.sendTimingInfo,\n  sendModal: state.message.group.sendModal,\n  sendTimingModal: state.message.group.sendTimingModal,\n  gonghaoList: state.message.group.gonghaoList,\n  isComplete: state.message.group.isComplete,\n  updateMaterialModal: state.message.group.updateMaterialModal,\n  updateInfo: state.message.group.updateInfo,\n});\n\nconst mapDispatch = dispatch => ({\n  getTagList(code) {\n    dispatch(actionCreators.getTagList(code))\n  },\n  getMessageList(code) {\n    dispatch(actionCreators.getMessageList(code))\n  },\n  openModal(record) {\n    dispatch(actionCreators.openModal(record));\n  },\n  sendMessage(sendInfo) {\n    dispatch(actionCreators.sendMessage(sendInfo));\n  },\n  changeTagId(e, isTiming) {\n    dispatch(actionCreators.changeTagId(e.target.value, isTiming));\n  },\n  openTimingModal(record) {\n    dispatch(actionCreators.openTimingModal(record));\n  },\n  closeModal() {\n    dispatch(actionCreators.closeModal());\n  },\n  sendTimingMessage(sendTimingInfo, code) {\n    dispatch(actionCreators.sendTimingMessage(sendTimingInfo, code));\n  },\n  changeTimingState(value) {\n    dispatch(actionCreators.changeTimingState(value));\n  },\n  changeTime(time, type) {\n    dispatch(actionCreators.changeTime(time, type));\n  },\n  copy(id) {\n    dispatch(actionCreators.copy(id));\n  },\n  deleteMaterial(id, index) {\n    dispatch(actionCreators.deleteMaterial(id, index));\n  },\n  resetState() {\n    dispatch(actionCreators.resetState());\n  },\n  getGroupGonghao() {\n    dispatch(actionCreators.getGroupGonghao());\n  },\n  openUpdateMaterialModal(media_id, index, articles, id) {\n    dispatch(actionCreators.openUpdateMaterialModal({media_id, index, articles, id}));\n  },\n  closeUpdateMaterialModal() {\n    dispatch(actionCreators.closeUpdateMaterialModal());\n  },\n  updateMaterial(updateInfo, code) {\n    dispatch(actionCreators.updateMaterial(updateInfo, code));\n  },\n  changeContentSourceUrl(e) {\n    let content_source_url = e.target.value;\n    dispatch(actionCreators.changeContentSourceUrl(content_source_url));\n  }\n});\n\nexport default connect(mapState, mapDispatch)(groupMessage);","import React, { Component } from 'react';\nimport {Modal, Form, Input, Radio, Switch, DatePicker, Button, message} from \"antd\";\nimport axios from 'axios';\n\nimport moment from 'moment';\n\nclass EditTextMaterialModal extends Component {\n\n  constructor(props) {\n    super(props);\n    console.log(props.initMaterial)\n    this.openOpenidModal = this.openOpenidModal.bind(this);\n    this.prevTextMaterial = this.prevTextMaterial.bind(this);\n    this.cancelPrev = this.cancelPrev.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  state = {\n    openidModalVisible: false,\n    tagList: []\n  };\n\n  openOpenidModal() {\n    this.setState({openidModalVisible: true})\n  }\n\n  prevTextMaterial() {\n    const { form: {getFieldsValue}, code } = this.props;\n    let {openid, content} = getFieldsValue();\n    axios.post(\"/textMaterial/preview\", {code, openid, content})\n      .then(res => {\n        const {code, msg} = res.data;\n        code === 1 && message.success(msg)\n      });\n    this.cancelPrev()\n  }\n\n  cancelPrev() {\n    const { form: {setFieldsValue} } = this.props;\n    setFieldsValue({openid: \"\"});\n    this.setState({openidModalVisible: false})\n  }\n\n  submitForm() {\n    const { form: {getFieldsValue} } = this.props;\n    this.props.submitTextMaterial(getFieldsValue())\n  }\n\n  closeModal() {\n    const { form: {resetFields} } = this.props;\n    resetFields();\n    this.props.cancelEditMaterial()\n  }\n\n  componentDidMount() {\n    const { code } = this.props;\n    axios.get(\"/material/tag\", {params: {code}})\n      .then(res => {\n        this.setState({tagList: res.data.data});\n      });\n  }\n\n  render() {\n    const { form: {getFieldDecorator, getFieldValue}, editMaterialModalVisible, initMaterial = {} } = this.props;\n    const { openidModalVisible, tagList } = this.state;\n    return (\n      <Modal\n        visible={editMaterialModalVisible}\n        title=\"编辑文本素材\"\n        footer={\n          <div>\n            <Button onClick={this.openOpenidModal}>发送预览</Button>\n            <Button onClick={this.submitForm}>提交</Button>\n          </div>\n        }\n        onCancel={this.closeModal}\n      >\n        <Form labelCol={{span: 4}} wrapperCol={{span: 20, offset: 0}}>\n          <Form.Item label=\"文本素材\">\n            {getFieldDecorator('content', {\n              initialValue: initMaterial.content || \"\",\n              rules: [{ required: true, message: 'Please input your content!' }]\n            })(<Input.TextArea rows={4} placeholder=\"请输入文本素材内容\" />)}\n          </Form.Item>\n          <Form.Item label=\"粉丝属性\">\n            {getFieldDecorator('tagId', {\n              initialValue: initMaterial.tagId || null,\n              rules: [{required: true}]\n            })(<Radio.Group>\n              <Radio value={-1}>全部用户</Radio>\n              {tagList.map(item =>\n                <Radio key={item._id} value={item.id}>{item.name}</Radio>\n              )}\n            </Radio.Group>)}\n          </Form.Item>\n          <Form.Item label=\"是否定时\">\n            {getFieldDecorator('is_timing', {\n              valuePropName: 'checked',\n              initialValue: initMaterial.is_timing || false,\n            })(<Switch />)}\n          </Form.Item>\n          {getFieldValue(\"is_timing\") ? <Form.Item label=\"发送时间\">\n            {getFieldDecorator('timing_time', {initialValue: initMaterial.is_timing ? moment(initMaterial.timing_time) : null})(<DatePicker showTime={{format: \"HH:mm\"}} format=\"YYYY-MM-DD HH:mm\" placeholder=\"请选择定时发送时间\" />)}\n          </Form.Item> : \"\"}\n        </Form>\n        <Modal visible={openidModalVisible} title=\"发送预览消息\" onOk={this.prevTextMaterial} onCancel={this.cancelPrev}>\n          {getFieldDecorator('openid', {\n            rules: [{ required: true, message: 'Please input your openid!' }],\n            initialValue: \"\"\n          })(<Input placeholder=\"请输入openid\" />)}\n        </Modal>\n      </Modal>\n    )\n  }\n}\n\nexport default Form.create()(EditTextMaterialModal);","import React, {Component} from 'react';\nimport {ConfigProvider, List, Card, Icon, Button, Modal, message} from \"antd\";\n\nimport axios from '../../../../utils/http';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport moment from \"moment\";\nimport 'moment/locale/zh-cn';\n\nimport EditTextMaterialModal from '../components/EditTextMaterialModal';\n\nimport \"./index.scss\";\n\nclass TextMaterial extends Component {\n\n  constructor(props) {\n    super(props);\n    this.openEditMaterialModal = this.openEditMaterialModal.bind(this);\n    this.submitTextMaterial = this.submitTextMaterial.bind(this);\n    this.cancelEditMaterial = this.cancelEditMaterial.bind(this);\n    this.updateTextMaterial = this.updateTextMaterial.bind(this);\n  }\n\n  state = {\n    editMaterialModalVisible: false,\n    textMaterialList: [],\n    initMaterial: {},\n    index: -1\n  };\n\n  openEditMaterialModal() {\n    this.setState({editMaterialModalVisible: true})\n  }\n\n  submitTextMaterial(textMaterial) {\n    const {initMaterial: {_id = \"\"}, index, textMaterialList} = this.state;\n    textMaterial.timing_time = +textMaterial.timing_time;\n    textMaterial.code = this.props.code;\n    textMaterial.tagId = parseInt(textMaterial.tagId);\n    _id && (textMaterial._id = _id);\n    Modal.confirm({\n      title: \"确定提交这条文本素材吗？\",\n      onOk: () => {\n        if (!_id) {\n          axios.post('/textMaterial', {...textMaterial})\n            .then(res => {\n              const {code, msg, data} = res.data;\n              if (code === 1) {\n                this.setState(prevState => ({textMaterialList: [data, ...prevState.textMaterialList]}));\n                message.success(msg);\n                this.cancelEditMaterial();\n              } else {\n                message.warning(msg);\n              }\n            })\n        } else {\n          axios.put('/textMaterial', {...textMaterial})\n            .then(res => {\n              const {code, msg, data} = res.data;\n              if (code === 1) {\n                textMaterialList.splice(index, 1, data);\n                this.setState({textMaterialList});\n                message.success(msg);\n                this.cancelEditMaterial();\n              } else {\n                message.warning(msg);\n              }\n            })\n        }\n      }\n    });\n  }\n\n  cancelEditMaterial() {\n    this.setState({editMaterialModalVisible: false, initMaterial: {}})\n  }\n\n  updateTextMaterial(item, index) {\n    this.openEditMaterialModal();\n    this.setState({\n      initMaterial: {...item}, index\n    })\n  }\n\n  sendMaterial(item, index) {\n    let {textMaterialList} = this.state;\n    Modal.confirm({\n      title: \"是否发送这条素材\",\n      onOk: () => {\n        axios.post(\"/textMaterial/send\", {...item})\n          .then(res => {\n            const {code, msg} = res.data;\n            if (code === 1) {\n              message.success(msg);\n              Object.assign(textMaterialList[index], {isSend: 1});\n              this.setState({textMaterialList})\n            } else {\n              message.warning(msg);\n            }\n          })\n      }\n    })\n  }\n\n  deleteMaterial(_id, index) {\n    Modal.confirm({\n      title: \"是否删除这条素材？\",\n      onOk: () => {\n        axios.delete(\"/textMaterial\", {params: {_id}})\n          .then(res => {\n            const {code, msg} = res.data;\n            if (code === 1) {\n              message.success(msg);\n              this.setState(prevState => {\n                let textMaterialList = prevState.textMaterialList;\n                textMaterialList.splice(index, 1);\n                return {textMaterialList}\n              })\n            } else {\n              message.warning(msg)\n            }\n          })\n      }\n    })\n  }\n\n  componentDidMount() {\n    axios.get(\"/textMaterial\", {params: {code: this.props.code}})\n      .then(res => {\n        const {code, data} = res.data;\n        code === 1 && this.setState({textMaterialList: data.reverse()})\n      })\n  }\n\n  render() {\n    const {editMaterialModalVisible, textMaterialList, initMaterial} = this.state;\n    const {code} = this.props;\n    let innerWidth = window.innerWidth > 1440;\n    const pagination = {\n      pageSize: innerWidth ? 18 : 9\n    };\n    return (\n      <ConfigProvider locale={zhCN}>\n        <div className=\"text-material\">\n          <Button className=\"mb15\" onClick={this.openEditMaterialModal}>创建文本素材</Button>\n          <List grid={{gutter: 16, xl: 3, xxl: 6,}}\n                dataSource={textMaterialList}\n                renderItem={(item, index) => (\n                  <List.Item key={item._id}>\n                    <Card title={item.is_timing ?\n                      <p>于 <span className=\"date\">{moment(item.timing_time).format(\"YYYY-MM-DD HH:mm\")}</span> 发送\n                      </p> : \"未设置定时时间\"} actions={item.isSend ? [<span className=\"see-msg-id\"\n                        onClick={() => Modal.warning({\n                          title: \"msg_id\",\n                          content: <p style={{userSelect: \"text\"}}>{item.msg_id}</p>\n                        })}><Icon type=\"eye\" key=\"eye\"/><span>查看msg_id</span></span>] : [\n                      <Icon type=\"setting\" key=\"setting\" onClick={() => this.updateTextMaterial(item, index)}/>,\n                      <Icon disabled={true} type=\"share-alt\" key=\"edit\"\n                            onClick={() => item.is_timing ? message.warning(\"已设置为定时发送，如有需要，请点击修改\") : this.sendMaterial(item, index)}/>,\n                      <Icon type=\"delete\" key=\"delete\" onClick={() => this.deleteMaterial(item._id, index)}/>\n                    ]}>\n                      <p className=\"card-content1\">{item.content}</p>\n                    </Card>\n                  </List.Item>\n                )}\n                pagination={pagination}\n          />\n          {editMaterialModalVisible &&\n          <EditTextMaterialModal initMaterial={initMaterial} editMaterialModalVisible={editMaterialModalVisible}\n                                 cancelEditMaterial={this.cancelEditMaterial} code={code}\n                                 submitTextMaterial={this.submitTextMaterial}/>}\n        </div>\n      </ConfigProvider>\n    )\n  }\n}\n\nexport default TextMaterial;","import React, {Component} from 'react';\nimport {Avatar, Input, List, Layout, Collapse, message} from \"antd\";\nimport axios from 'axios';\nimport \"./index.scss\";\n\nconst {Sider, Content} = Layout;\nconst {Panel} = Collapse;\n\nclass SingleSelectByGroup extends Component {\n\n  state = {\n    gonghaoTagList: [],\n    gonghaoList: [],\n    nick_name: \"\",\n    _id: \"\",\n    activeKey: \"\"\n  };\n\n  search = nick_name => {\n    const {gonghaoTagList} = this.state;\n    if (nick_name !== \"\") {\n      axios.get(\"/conf/find_one\", {params: {nick_name}})\n        .then(res => {\n          if (res.data.data.length !== 0) {\n            const {data} = res.data;\n            this.props.setCode(data[0].code);\n            let selectGonghao = gonghaoTagList.filter(item => data[0].group === item.name);\n            this.setState({nick_name: \"\", _id: data[0]._id, activeKey: selectGonghao[0].name})\n          } else {\n            message.info(\"没有查询到包含该字符的公号，请检查后重新输入\")\n          }\n        })\n    } else {\n      message.info(\"公号名不能为空\")\n    }\n  };\n\n  changeSearchInput = e => {\n    let nick_name = e.target.value;\n    this.setState({nick_name})\n  };\n\n  selectGonghao = gonghao => {\n    const {code, _id} = gonghao;\n    this.props.setCode(code);\n    this.setState({_id})\n  };\n\n  handleChangeGroup = value => {\n    this.setState({activeKey: value || \"\"})\n  };\n\n  render() {\n    const {gonghaoTagList, gonghaoList, nick_name, _id, activeKey} = this.state;\n    const PanelList = name => (\n      <List className=\"gonghao-list\" dataSource={gonghaoList.length > 0 ? gonghaoList.filter(i => i.group === name) : null} locale={{emptyText: <span style={{display: \"none\"}}>123</span>}}\n        renderItem={gonghao =>\n          <List.Item className={gonghao._id === _id ? \"cursor selected\" : \"cursor\"} onClick={() => this.selectGonghao(gonghao)} key={gonghao._id}>\n            <Avatar shape=\"square\" size={22} icon=\"user\"/>{gonghao.nick_name}\n        </List.Item>\n      }/>\n    );\n    return (\n      <Layout style={{background: \"#fff\"}} className=\"message-group-wrapper\">\n        <Sider className=\"message-sider-wrapper\" theme=\"light\" width=\"180\">\n          <Input.Search\n            className=\"search-input\"\n            placeholder=\"请输入公号名称\"\n            onSearch={this.search}\n            value={nick_name}\n            onChange={this.changeSearchInput}\n          />\n          <List>\n            <List.Item>\n              <Collapse bordered={false} accordion activeKey={activeKey} onChange={this.handleChangeGroup}>\n                <Panel header=\"未分组\" key=\"未分组\">\n                  {PanelList(\"未分组\")}\n                </Panel>\n                {gonghaoTagList.map(item =>\n                  <Panel header={item.name} key={item.name}>\n                    {PanelList(item.name)}\n                  </Panel>\n                )}\n              </Collapse>\n            </List.Item>\n          </List>\n        </Sider>\n        <Content>{this.props.content}</Content>\n      </Layout>\n    )\n  }\n\n  getGonghaoTagList = () => {\n    axios.get(\"/gonghaoTag\")\n      .then(res => {\n        if (res.data.code === 1) {\n          const {data: gonghaoTagList} = res.data;\n          this.setState({gonghaoTagList})\n        }\n      })\n  };\n\n  getGonghaoList = () => {\n    axios.get('/conf')\n      .then(res => {\n        const {data, code} = res.data;\n        if (code === 1) {\n          this.setState({gonghaoList: data})\n        }\n      })\n  };\n\n  componentDidMount() {\n    this.getGonghaoTagList();\n    this.getGonghaoList();\n  }\n}\n\nexport default SingleSelectByGroup;","import React, { Component } from 'react';\nimport {Modal, Table, Tooltip, Input} from 'antd';\nimport moment from 'moment';\nimport {connect} from \"react-redux\";\nimport { actionCreators } from '../store';\nimport Button from '../../../../common/components/Button';\n\n\nclass History extends Component {\n\n  componentWillMount() {\n    const { code } = this.props;\n    this.props.getTagList(code);\n    this.props.getHistoryList(code);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n    if(this.props.code !== nextProps.code) {\n      const { code } = nextProps;\n      this.props.getTagList(code);\n      this.props.getHistoryList(code);\n    }\n  }\n\n  render() {\n    const { historyList, tagList, checkSendState, openMsgModal, closeMsgModal, deleteMsg, changeArticleIdx, delMsgInfo, historyMsgModal, code } = this.props;\n    const historyHeader = [\n      {\n        key: \"update_time\",\n        title: \"发送消息时间\",\n        align: \"center\",\n        width: 120,\n        render: (text, record) => {\n          let time = moment(record.update_time * 1000).format(\"YYYY-MM-DD, HH:mm:ss\");\n          return (\n            <span>{time}</span>\n          )\n        }\n      },\n      {\n        title: \"发送对象\",\n        align: \"center\",\n        render: (text, record) => {\n          let tag = \"无\";\n          if(record.tagId) {\n            tag = tagList.map(item => record.tagId === item.id ? item.name : \"全部\");\n          }\n          return {tag}\n        }\n      },\n      {\n        title: \"是否成功\",\n        align: \"center\",\n        width: 200,\n        render: (text, record) => {\n          let msg_id = record.msg_id;\n          let success;\n          if(msg_id === \"\") {\n            success = \"无msg_id,发送不成功\"\n          } else {\n            success = \"msg_id存在,发送成功\"\n          }\n          return <span>{success}</span>\n        }\n      },\n      {\n        title: \"图文标题\",\n        align: \"center\",\n        width: 300,\n        render: (text, record) => {\n          let arr =\n            record.content.news_item.length !== 0\n              ? record.content.news_item\n              : [];\n          let titles = [];\n          for (let i = 0; i < arr.length; i++) {\n            titles.push(i + 1 + \".\" + arr[i].title);\n          }\n          return (\n            <Tooltip placement=\"top\" title={titles}>\n              <p className=\"textEllipsis\" style={{width: 300}}>{titles}</p>\n            </Tooltip>\n          )\n        }\n      },\n      {\n        key: \"isTiming\",\n        title: \"是否定时\",\n        align: \"center\",\n        render: (text, record) => {\n          let time = record.isTiming ? \"是\" : \"否\";\n          return (\n            <span>{time}</span>\n          )\n        }\n      },\n      {\n        key: \"timing\",\n        title: \"定时时间\",\n        align: \"center\",\n        render: (text, record) => {\n          let time = \"~~\";\n          if (record.timing) {\n            time = moment(record.timing).format(\"YYYY-MM-DD, HH:mm:ss\")\n          }\n          return (\n            <span>{time}</span>\n          )\n        }\n      },\n      {\n        title: \"Action\",\n        align: \"center\",\n        width: 100,\n        render: (text, record) => (\n          <div>\n            <Button mb={10} onClick={() => checkSendState(code, record.msg_id)} buttonContent=\"发送状态\" />\n            <Button background=\"danger\" onClick={() => openMsgModal(record.code, record.msg_id)} buttonContent=\"删除消息\" />\n          </div>\n        )\n      }\n    ];\n    return (\n    \t<div>\n        <div className=\"container\">\n          {/*<Button size=\"default\" background=\"warning\" onClick={() => clearHistory(code)} buttonContent=\"清空列表\" />*/}\n            {/*<div className=\"fr\">*/}\n              {/*<DatePicker value={delDate ? moment(delDate): null} onChange={changeDate} />*/}\n              {/*<Button background=\"danger\" size=\"default\" ml={10} onClick={() => deleteMany(code, delDate)} buttonContent=\"批量删除\" />*/}\n            {/*</div>*/}\n          <Table size=\"small\" bordered rowKey={record => record._id} columns={historyHeader} dataSource={historyList} />\n        </div>\n        <Modal\n          title=\"请输入要删除的消息的索引\"\n          visible={historyMsgModal}\n          onOk={() => deleteMsg(delMsgInfo)}\n          onCancel={closeMsgModal}\n        >\n          <Input style={{width: 100}} value={delMsgInfo.article_idx} onChange={changeArticleIdx} />\n          <p style={{color: \"red\", marginTop: 10}}>Tips:   0为全部删除  1、2、3...为对应第几条</p>\n        </Modal>\n    \t</div>\n    )\n  }\n\n\n}\n\nconst mapState = state => ({\n  tagList: state.message.group.tagList,\n  historyList: state.message.group.historyList,\n  historyMsgModal: state.message.group.historyMsgModal,\n  delMsgInfo: state.message.group.delMsgInfo,\n  delDate: state.message.group.delDate\n});\n\nconst mapDispatch = dispatch => ({\n  getHistoryList(code) {\n    dispatch(actionCreators.getHistoryList(code))\n  },\n  getTagList(code) {\n    dispatch(actionCreators.getTagList(code))\n  },\n  checkSendState(code, msg_id) {\n    dispatch(actionCreators.checkSendState(code, msg_id))\n  },\n  openMsgModal(code, msg_id) {\n    dispatch(actionCreators.openMsgModal(code, msg_id))\n  },\n  closeMsgModal() {\n    dispatch(actionCreators.closeMsgModal())\n  },\n  deleteMsg(delMsgInfo) {\n    dispatch(actionCreators.deleteMsg(delMsgInfo))\n  },\n  changeArticleIdx(e) {\n    dispatch(actionCreators.changeArticleIdx(e.target.value))\n  },\n  clearHistory(code) {\n    dispatch(actionCreators.clearHistory(code))\n  },\n  changeDate(date, dataString) {\n    dispatch(actionCreators.changeDate(dataString))\n  },\n  deleteMany(code, delDate) {\n    let time = new Date(delDate).getTime()/1000;\n    dispatch(actionCreators.deleteMany(code, time))\n  }\n});\n\nexport default connect(mapState, mapDispatch)(History);\n","import React from 'react';\nimport {Spin} from 'antd';\n\nconst loadingWrapper = {\n  width: \"100%\",\n  textAlign: \"center\",\n  background: \"rgba(241, 244, 245, .7)\",\n  position: \"absolute\",\n  padding: \"200px 0\",\n  top: 0,\n  left: 0,\n  zIndex: 1,\n};\n\nconst Loading = props => <div style={loadingWrapper}><Spin spinning={props.spinning}/></div>\n\nexport default Loading;","import React, {Component} from 'react';\nimport {Empty, Modal, message, Tabs} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {actionCreators} from \"./store\";\nimport './index.scss';\nimport GroupMaterial from './material';\nimport TextMaterial from './textMaterial';\nimport SingleSelectByGroup from \"../../../common/components/SelectGonghao/SingleSelectByGroup\";\nimport Button from '../../../common/components/Button';\nimport History from './history';\nimport Loading from '../../../common/components/Loading';\n\nconst { TabPane } = Tabs;\n\nclass groupMessage extends Component {\n\n  state = {\n    code: null,\n    historyModalVisible: false,\n    spinning: true\n  };\n\n  timer = () => setTimeout(() => {\n    this.setState({spinning: false})\n  }, 1000);\n\n  setCode = code => {\n    clearTimeout(this.timer);\n    this.setState({spinning: true});\n    this.setState({code});\n    this.timer();\n  };\n\n  componentDidMount() {\n    message.warning(\"请选择公号进行操作\")\n  }\n\n  render() {\n    const {getMaterial, clearMaterial} = this.props;\n    const {code, historyModalVisible, spinning} = this.state;\n    const imageStyle = {\n      height: \"auto\",\n      margin: \"0 auto\"\n    };\n    return (\n      <div>\n        <div className=\"container\">\n          <SingleSelectByGroup setCode={this.setCode} content={\n            code\n              ? spinning\n                ? <div>\n                    <Loading spinning={spinning}/><Empty description=\"\" image=\"https://s.weituibao.com/static/1544235586856/empty.png\" imageStyle={imageStyle}/>\n                  </div>\n                : <div>\n                <Tabs tabPosition=\"left\">\n                  <TabPane tab=\"图文\" key=\"1\">\n                    <Button size=\"default\" background=\"success\" buttonContent=\"同步素材\" onClick={() => getMaterial(code)}/>\n                    <Button size=\"default\" buttonContent=\"群发记录\" onClick={() => this.setState({historyModalVisible: true})}/>\n                    <Button size=\"default\" mb={20} background=\"danger\" onClick={() => clearMaterial(code)} buttonContent=\"清空列表\"/>\n                    <GroupMaterial code={code}/>\n                  </TabPane>\n                  <TabPane tab=\"文本\" key=\"2\">\n                    <TextMaterial code={code} />\n                  </TabPane>\n                </Tabs>\n                  </div>\n              : <Empty description=\"\" image=\"https://s.weituibao.com/static/1544235586856/empty.png\" imageStyle={imageStyle}/>}/>\n        </div>\n        {code && <Modal title=\"发送记录\" visible={historyModalVisible} width={1200} footer=\"\" onCancel={() => this.setState({historyModalVisible: false})}><History code={code}/></Modal>}\n      </div>\n    )\n  }\n\n}\n\nconst mapDispatch = dispatch => ({\n  getMaterial(code) {\n    dispatch(actionCreators.getMaterial(code))\n  },\n  clearMaterial(code) {\n    dispatch(actionCreators.clearMaterial(code));\n  },\n});\n\nexport default connect(null, mapDispatch)(groupMessage);","import React, { Component } from 'react';\nimport { Table, Select, Modal, Radio } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { actionCreators } from './store';\nimport { Link } from \"react-router-dom\";\nimport Button from '../../../common/components/Button';\nimport moment from 'moment';\n\nconst { Option } = Select;\n\nclass Kefu extends Component {\n\n  state = {\n    messageType: \"请选择消息类型\"\n  };\n\n  UNSAFE_componentWillMount () {\n    this.props.getKefuMessageList();\n    this.props.getAllGroup();\n    this.props.getAllCodes();\n    this.props.changePage(this.props.currentPage);\n  }\n\n  render() {\n    const { allCodes, kefuMessageList, copyMessage, deleteMessage, sendKefuMessage, messageType, handleChangeSelect, allGroup, messageGroup, selectedMessages, changeSelectedMessages, updateMoreGroup, updateGroupModal, openUpdateGroupModal, changeGroup, cancelUpdateGroup, group, changePage, currentPage, searchName, changeSearchName, searchInputChange, clearCondition, deleteMultiMsg }  = this.props;\n    const kefuMessageHeader = [\n      {\n        key: \"remarks\",\n        title: \"消息名称\",\n        dataIndex: \"remarks\",\n        align: \"center\",\n        render: text => !text ? \"请点击修改，编辑消息名称\" : text\n      },\n      {\n        key: \"group\",\n        title: \"分组\",\n        dataIndex: \"group\",\n        align: \"center\",\n        width: 80\n      },\n      {\n        key: \"delay\",\n        title: \"延时时间\",\n        align: \"center\",\n        width: 100,\n        render: (text, record) => record.task ? (record.isHour ? record.delay / 60 + \"小时\" : record.delay + \"分钟\") : \"——\"\n      },\n      {\n        key: \"timing_time\",\n        title: \"定时时间\",\n        align: \"center\",\n        sorter: (a, b) => (new Date(a.timing_time)).getTime() - (new Date(b.timing_time)).getTime(),\n        render: (text, record) => record.is_timing ? moment(record.timing_time).format(\"YYYY-MM-DD HH:mm:ss\") : \"——\",\n      },\n      {\n        key: \"daily_time_show\",\n        dataIndex: \"daily_time_show\",\n        title: \"按时发送\",\n        align: \"center\",\n        sorter: (a, b) => b.daily_time_show - a.daily_time_show,\n        render: (text, record) => record.is_daily ? moment(text).format(\"HH:mm:ss\") : \"——\",\n      },\n      {\n        key: \"gonghaoList\",\n        dataIndex: \"gonghaoList\",\n        title: \"已选公号 (最多显示4个)\",\n        align: \"center\",\n        width: 120,\n        render: text => text.slice(0, 4).map(item => <p key={item._id}>{item.nick_name}</p>)\n      },\n      {\n        key: \"sex\",\n        title: \"群发粉丝\",\n        align: \"center\",\n        dataIndex: \"sex\",\n        width: 80,\n        render: text => text === \"0\" ? \"未知粉丝\" : text === \"1\"  ? \"男性粉丝\" : text === \"2\" ? \"女性粉丝\" : \"全部粉丝\"\n      },\n      {\n        key: \"action_type\",\n        title: \"互动行为\",\n        align: \"center\",\n        dataIndex: \"action_type\",\n        width: 80,\n        render: (text, record) => record.task ? (text === 1 ? \"用户关注\" : \"用户互动\") : \"~~\"\n      },\n      {\n        key: \"count\",\n        title: \"触达用户\",\n        align: \"center\",\n        dataIndex: \"count\",\n        width: 80,\n        render: (text, record) => record.task ? \"暂不支持\" : (text ? text : 0)\n      },\n      {\n        title: \"Action\",\n        align: \"center\",\n        width: 280,\n        render: (text, record, index) => (\n          <div>\n            <Button background=\"success\" onClick={() => copyMessage({...record})} buttonContent=\"复制\" />\n            <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />\n            <Button disabled={record.is_timing || record.delay || record.is_daily} background={(record.is_timing || record.delay || record.is_daily) ? \"info\" : \"warning\"} onClick={() => sendKefuMessage(record._id, record.tagId)} buttonContent=\"发送消息\" />\n            <Button background=\"danger\" onClick={() => deleteMessage(record._id, index)} buttonContent=\"删除\" />\n          </div>\n        )\n      }\n    ];\n    const rowSelection = {\n      selectedRowKeys: selectedMessages,\n      onChange: changeSelectedMessages\n    };\n    const pagination = {\n      showQuickJumper: true,\n      hideOnSinglePage: true,\n      onChange: changePage,\n      current: currentPage\n    };\n    return (\n    \t<div>\n        <div className=\"container\">\n          <Select\n              showSearch\n              allowClear\n              value={searchName}\n              onChange={changeSearchName}\n              onSearch={searchInputChange}\n              style={{ width: 200, marginRight: 5 }}\n              placeholder=\"请输入公号名称\"\n          >\n            {allCodes.map(item => (\n                <Option key={item._id} value={item.nick_name}>{item.nick_name}</Option>\n            ))}\n          </Select>\n          <Select value={messageType} onChange={value => handleChangeSelect(value, \"messageType\")} style={{marginRight: 5}}>\n            <Option value={4}>全部</Option>\n            <Option value={0}>手动</Option>\n            <Option value={1}>延时</Option>\n            <Option value={2}>定时</Option>\n            <Option value={3}>按时</Option>\n          </Select>\n          <Select style={{width: 100}} value={messageGroup} onChange={value => handleChangeSelect(value, \"messageGroup\")}>\n            <Option value=\"全部分组\">全部分组</Option>\n            <Option value=\"未分组\">未分组</Option>\n            {allGroup.map(item => <Option key={item._id} value={item.group}>{item.group}</Option>)}\n          </Select>\n          <Button size=\"default\" background=\"warning\" buttonContent=\"清空所有条件\" ml={5} onClick={clearCondition} />\n          <Button size=\"default\" ml={5} background=\"success\" buttonContent=\"批量修改分组\" onClick={openUpdateGroupModal} />\n          <Button size=\"default\" ml={5} background=\"danger\" buttonContent=\"批量删除\" onClick={() => deleteMultiMsg(selectedMessages)} />\n          <Button size=\"default\" mb={20} buttonContent={<Link to=\"./create\">新建客服消息</Link>} />\n          <Table size=\"middle\" rowKey={record => record._id} columns={kefuMessageHeader} dataSource={kefuMessageList} rowSelection={rowSelection} pagination={pagination} />\n        </div>\n        <Modal title=\"请选择分组\" visible={updateGroupModal} onCancel={cancelUpdateGroup} onOk={() => updateMoreGroup(selectedMessages, group)}>\n          <Radio.Group onChange={changeGroup} value={group}>\n            {allGroup.map(item => <Radio key={item._id} value={item.group}>{item.group}</Radio>)}\n          </Radio.Group>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapState = state => ({\n  allCodes: state.message.kefu.allCodes,\n  kefuMessageList: state.message.kefu.kefuMessageList,\n  messageType: state.message.kefu.messageType,\n  allGroup: state.message.kefu.allGroup,\n  messageGroup: state.message.kefu.messageGroup,\n  selectedMessages: state.message.kefu.selectedMessages,\n  updateGroupModal: state.message.kefu.updateGroupModal,\n  group: state.message.kefu.group,\n  currentPage: state.message.kefu.currentPage,\n  searchName: state.message.kefu.searchName\n});\n\nconst mapDispatch = dispatch => ({\n  getAllCodes() {\n    dispatch(actionCreators.getAllCodes())\n  },\n  getKefuMessageList() {\n    dispatch(actionCreators.getKefuMessageList())\n  },\n  getAllGroup() {\n    dispatch(actionCreators.getAllGroup())\n  },\n  copyMessage(record) {\n    dispatch(actionCreators.createKefuMessage(record))\n  },\n  deleteMessage(id, index) {\n    dispatch(actionCreators.deleteMessage(id, index))\n  },\n  sendKefuMessage(id, tagId) {\n    dispatch(actionCreators.sendKefuMessage(id, tagId))\n  },\n  handleChangeSelect(value, name) {\n    dispatch(actionCreators.handleChangeSelect(value, name))\n  },\n  changeSelectedMessages(selectedMessages) {\n    dispatch(actionCreators.changeSelectedMessages(selectedMessages))\n  },\n  updateMoreGroup(selectedMessages, group) {\n    dispatch(actionCreators.updateMoreGroup(selectedMessages, group))\n  },\n  openUpdateGroupModal() {\n    dispatch(actionCreators.openUpdateGroupModal())\n  },\n  changeGroup(e) {\n    dispatch(actionCreators.changeGroup(e.target.value))\n  },\n  cancelUpdateGroup() {\n    dispatch(actionCreators.cancelUpdateGroup())\n  },\n  changePage(page) {\n    dispatch(actionCreators.changePage(page))\n  },\n  changeSearchName(value) {\n    dispatch(actionCreators.changeSearchName(value))\n  },\n  searchInputChange(value) {\n    dispatch(actionCreators.searchInputChange(value))\n  },\n  clearCondition() {\n    dispatch(actionCreators.clearCondition())\n  },\n  deleteMultiMsg(selectedMessages) {\n    dispatch(actionCreators.deleteMultiMsg(selectedMessages))\n  }\n});\n\nexport default connect(mapState, mapDispatch)(Kefu);","import React, {Component} from 'react';\nimport {\n  ConfigProvider,\n  Icon,\n  Form,\n  Button,\n  Radio,\n  DatePicker,\n  Input,\n  Upload,\n  InputNumber,\n  Divider,\n  Modal,\n  Select,\n  Tag,\n  TimePicker\n} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {actionCreators} from '../store';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport moment from \"moment\";\nimport 'moment/locale/zh-cn';\nimport \"./index.scss\";\nimport MultiSelectByGroup from '../../../../common/components/SelectGonghao/MultiSelectSider';\n\nconst {Option} = Select;\n\nclass EditMessage extends Component {\n\n  UNSAFE_componentWillMount() {\n    this.props.getAllCodes();\n    this.props.getAllGroup();\n    let query = this.props.history.location.query;\n    query && this.props.initKefuMessageInfo(query);\n  }\n\n  render() {\n    const {kefuMessageInfo, content, changeContentValue, changeMessageValue, uploadImg, submitMessage, allCodes, selectGonghao, deleteGonghao, history, openPreviewModal, closePreviewModal, openid, changeOpenId, previewModal, preview, allGroup, groupInputVisible, groupValue, showGroupInput, handleGroupInputChange, handleGroupInputConfirm, handleClose, cancelSelectGroup} = this.props;\n    let isUploadImg, isTextUploadImg, FormItemWrapper;\n    if (content.picurl) {\n      isTextUploadImg = <img style={{width: \"100px\"}} src={content.picurl} alt=\"\"/>\n    } else {\n      isTextUploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\n    }\n    if (kefuMessageInfo.img) {\n      isUploadImg = <img style={{width: \"100px\"}} src={kefuMessageInfo.img} alt=\"\"/>\n    } else {\n      isUploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\n    }\n    if (kefuMessageInfo.type === 1) {\n      FormItemWrapper = <Form.Item label=\"文本消息\" className=\"text-message\">\n        <Input.TextArea autoSize={{minRows: 6}} value={content.description} placeholder=\"请输入文本消息\"\n                        onChange={e => changeContentValue(e, \"description\")}/>\n      </Form.Item>\n    } else if (kefuMessageInfo.type === 0) {\n      FormItemWrapper = <div>\n        <Form.Item label=\"图片封面\">\n          <Upload name=\"imageFile\" action=\"/reply/upload\" onChange={(info) => {\n            uploadImg(kefuMessageInfo, info)\n          }} showUploadList={false}>\n            {isTextUploadImg}\n          </Upload>\n        </Form.Item>\n        <Form.Item label=\"图文标题\">\n          <Input placeholder=\"请输入图文标题\" value={content.title} onChange={e => changeContentValue(e, \"title\")}/>\n        </Form.Item>\n        <Form.Item label=\"图文描述\" className=\"text-message\">\n          <Input.TextArea autoSize={{minRows: 6}} value={content.description} placeholder=\"请输入图文描述\"\n                          onChange={e => changeContentValue(e, \"description\")}/>\n        </Form.Item>\n        <Form.Item label=\"跳转链接\">\n          <Input placeholder=\"请输入跳转链接\" value={content.url} onChange={e => changeContentValue(e, \"url\")}/>\n        </Form.Item>\n      </div>\n    } else if (kefuMessageInfo.type === 2) {\n      FormItemWrapper =\n        <Form.Item label=\"图片消息\">\n          <Upload name=\"imageFile\" action=\"/reply/upload\" onChange={(info) => {\n            uploadImg(kefuMessageInfo, info)\n          }} showUploadList={false}>\n            {isUploadImg}\n          </Upload>\n        </Form.Item>;\n    }\n    const formItemLayout = {\n      labelCol: {\n        sm: {span: 4}\n      },\n      wrapperCol: {\n        sm: {span: 20, offset: 0}\n      },\n    };\n    let Channel;\n    if (kefuMessageInfo.channel === 1) {\n      Channel = <><Form.Item label=\"延时时间\">\n        <InputNumber value={kefuMessageInfo.delay} min={1} onChange={value => changeMessageValue(value, \"delay\")}/>\n        <Select value={kefuMessageInfo.isHour} onChange={value => changeMessageValue(value, \"isHour\")}\n                style={{width: 80}}>\n          <Option value={0}>分钟</Option>\n          <Option value={1}>小时</Option>\n        </Select>\n      </Form.Item>\n        <Form.Item label=\"互动类型\">\n          <Radio.Group value={kefuMessageInfo.action_type}\n                       onChange={e => changeMessageValue(e.target.value, \"action_type\")}>\n            <Radio value={1}>用户关注</Radio>\n            <Radio value={2}>用户互动</Radio>\n          </Radio.Group>\n        </Form.Item>\n      </>\n    } else if (kefuMessageInfo.channel === 2) {\n      Channel =\n        <Form.Item label=\"定时时间\">\n          <DatePicker showTime placeholder=\"选择时间\" value={moment(kefuMessageInfo.timing_time)}\n                      onChange={(value, dateString) => changeMessageValue(dateString, 'timing_time')}/>\n        </Form.Item>\n    } else if (kefuMessageInfo.channel === 3) {\n      Channel =\n        <Form.Item label=\"选择时间\">\n          <TimePicker placeholder=\"选择时间\" value={moment(kefuMessageInfo.daily_time_show)}\n                      onChange={(value, dateString) => changeMessageValue(value, 'daily_time_show')}/>\n        </Form.Item>\n    }\n    return (\n      <ConfigProvider locale={zhCN}>\n\n        <div className=\"container\">\n          <MultiSelectByGroup selectGonghao={selectGonghao}  codes={kefuMessageInfo.codes} content={<div className=\"container edit-message\">\n            <div className=\"kefu-form fl\">\n              <Form {...formItemLayout}>\n                <Form.Item label=\"公号列表\">\n                  <div style={{width: \"180%\"}}>\n                   {allCodes.map(item => kefuMessageInfo.codes.indexOf(item.code) > -1 && <Tag key={item._id} className=\"cursor gonghao-tag\" closable onClose={() => deleteGonghao(kefuMessageInfo.codes, item.code)}>{item.nick_name}</Tag>)}\n                  </div>\n                </Form.Item>\n                <Form.Item label=\"消息名称\">\n                  <Input value={kefuMessageInfo.remarks} placeholder=\"请输入消息名称,(仅供备注，不会发送给粉丝)\"\n                         onChange={e => changeMessageValue(e.target.value, \"remarks\")}/>\n                </Form.Item>\n                <Form.Item label=\"消息分组\">\n                  <Tag color={kefuMessageInfo.group !== \"未分组\" ? \"#1890ff\" : \"\"} closable={kefuMessageInfo.group !== \"未分组\"}\n                       onClose={cancelSelectGroup}\n                       style={kefuMessageInfo.group !== \"未分组\" ? {} : {background: '#fff', borderStyle: 'dashed'}}>\n                    {kefuMessageInfo.group}\n                  </Tag>\n                </Form.Item>\n                <Form.Item label=\"全部分组\">\n                  {groupInputVisible && (\n                      <Input\n                          ref={input => this.input = input}\n                          type=\"text\"\n                          size=\"small\"\n                          style={{width: 78, marginRight: 10}}\n                          value={groupValue}\n                          onChange={handleGroupInputChange}\n                          onBlur={handleGroupInputConfirm}\n                          onPressEnter={handleGroupInputConfirm}\n                      />\n                  )}\n                  {!groupInputVisible && (\n                      <Tag className=\"cursor\" onClick={() => showGroupInput(this)}\n                           style={{background: '#fff', borderStyle: 'dashed'}}>\n                        <Icon type=\"plus\"/> New Tag\n                      </Tag>\n                  )}\n                  {allGroup.map((item, index) => <Tag color=\"#1890ff\" key={item._id} className=\"cursor\" closable onClose={e => handleClose(e, item._id, index)} onClick={e => changeMessageValue(item.group, \"group\")}>\n                    {item.group}\n                  </Tag>)}\n                </Form.Item>\n                <Divider style={{width: \"205%\", marginLeft: -50}}/>\n                <h2 className=\"block-title\">设置客服消息</h2>\n                <Form.Item>\n                  <Radio.Group buttonStyle=\"solid\" value={kefuMessageInfo.type} onChange={e => changeMessageValue(e.target.value, \"type\")}>\n                    <Radio.Button value={0}>图文消息</Radio.Button>\n                    <Radio.Button value={1}>文本消息</Radio.Button>\n                  </Radio.Group>\n                </Form.Item>\n                {FormItemWrapper}\n                <Divider style={{width: \"175%\", marginLeft: -50}}/>\n                <h2 className=\"block-title\">选择群发对象</h2>\n                <Form.Item label=\"群发粉丝\">\n                  <Radio.Group value={kefuMessageInfo.sex} onChange={e => changeMessageValue(e.target.value, \"sex\")}>\n                    <Radio value=\"all\">全部粉丝</Radio>\n                    <br/>\n                    <Radio value=\"1\">仅男性粉丝</Radio>\n                    <Radio value=\"2\">仅女性粉丝</Radio>\n                    <Radio value=\"0\">仅未知粉丝</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Divider style={{width: \"175%\", marginLeft: -50}}/>\n                <h2 className=\"block-title\">设置群发方式</h2>\n                <Form.Item label=\"发送方式\">\n                  <Radio.Group value={kefuMessageInfo.channel}\n                               onChange={e => changeMessageValue(e.target.value, \"channel\")}>\n                    <Radio.Button value={0}>人工</Radio.Button>\n                    <Radio.Button value={1}>延时</Radio.Button>\n                    <Radio.Button value={2}>定时</Radio.Button>\n                    <Radio.Button value={3}>按时发送</Radio.Button>\n                  </Radio.Group>\n                </Form.Item>\n                {Channel}\n                <Divider style={{width: \"175%\", marginLeft: -50}}/>\n                <Form.Item>\n                  <Button size=\"large\" type=\"primary\"\n                          onClick={() => submitMessage(kefuMessageInfo, history, allCodes)}>确定{!kefuMessageInfo._id ? \"并创建消息\" : \"并保存消息\"}</Button>\n                  {kefuMessageInfo._id && <Button style={{marginLeft: 20}} type=\"info\" size=\"large\"\n                                                  onClick={() => history.goBack()}>取消编辑</Button>}\n                  <Button size=\"large\" style={{marginLeft: 30, background: \"yellowgreen\", borderColor: \"yellowgreen\"}}\n                          type=\"primary\" onClick={openPreviewModal}>发送预览</Button>\n                </Form.Item>\n              </Form>\n            </div>\n          </div>}/>\n        </div>\n        <Modal title=\"发送预览\" visible={previewModal} onCancel={closePreviewModal}\n               onOk={() => preview(kefuMessageInfo, openid)}>\n          <Input onChange={changeOpenId} value={openid} placeholder=\"请输入预览用户的openid\"/>\n          <span className=\"tips\">Tips: 在预览公号回复<span> openid </span>,将返回的内容复制到输入框中<br/>一个openid只对应一个公号</span>\n        </Modal>\n      </ConfigProvider>\n    )\n  }\n\n  componentWillUnmount() {\n    this.props.resetState()\n  }\n}\n\nconst mapState = state => ({\n  kefuMessageInfo: state.message.kefu.kefuMessageInfo,\n  content: state.message.kefu.content,\n  allCodes: state.message.kefu.allCodes,\n  previewModal: state.message.kefu.previewModal,\n  openid: state.message.kefu.openid,\n  allGroup: state.message.kefu.allGroup,\n  groupInputVisible: state.message.kefu.groupInputVisible,\n  groupValue: state.message.kefu.groupValue,\n});\n\nconst mapDispatch = dispatch => ({\n  initKefuMessageInfo(query) {\n    dispatch(actionCreators.initKefuMessageInfo(query));\n  },\n  changeContentValue(e, name) {\n    dispatch(actionCreators.changeContentValue(e.target.value, name));\n  },\n  uploadImg(kefuMessageInfo, info) {\n    if (info.file.status === 'done') {\n      let img = `http://t.dmmup.com/uploads/${info.file.response.filename}`,\n        img_path = `./public/uploads/${info.file.response.filename}`;\n      if (kefuMessageInfo.type === 0) {\n        dispatch(actionCreators.changeContentValue(img, \"picurl\"));\n      } else {\n        dispatch(actionCreators.changeMessageValue(img, \"img\"));\n        dispatch(actionCreators.changeMessageValue(img_path, \"img_path\"));\n      }\n    }\n  },\n  changeMessageValue(value, name) {\n    dispatch(actionCreators.changeMessageValue(value, name));\n  },\n  resetState() {\n    dispatch(actionCreators.resetState());\n  },\n  selectParams() {\n    dispatch(actionCreators.selectParams());\n  },\n  submitMessage(info, history, allCodes) {\n    dispatch(actionCreators.submitMessage(info, history, allCodes));\n  },\n  selectGonghao(codes) {\n    dispatch(actionCreators.selectGonghao(codes))\n  },\n  deleteGonghao(codes, code) {\n    codes.splice(codes.indexOf(code), 1);\n    dispatch(actionCreators.selectGonghao(codes))\n  },\n  getAllCodes() {\n    dispatch(actionCreators.getAllCodes())\n  },\n  changeOpenId(e) {\n    dispatch(actionCreators.changeOpenId(e.target.value))\n  },\n  openPreviewModal() {\n    dispatch(actionCreators.openPreviewModal())\n  },\n  closePreviewModal() {\n    dispatch(actionCreators.closePreviewModal())\n  },\n  preview(info, openid) {\n    dispatch(actionCreators.preview(info, openid))\n  },\n  getAllGroup() {\n    dispatch(actionCreators.getAllGroup())\n  },\n  showGroupInput(that) {\n    dispatch(actionCreators.showGroupInput(that))\n  },\n  handleGroupInputChange(e) {\n    dispatch(actionCreators.handleGroupInputChange(e.target.value))\n  },\n  handleGroupInputConfirm(e) {\n    dispatch(actionCreators.handleGroupInputConfirm(e.target.value))\n  },\n  handleClose(e, _id, index) {\n    e.preventDefault();\n    e.stopPropagation();\n    dispatch(actionCreators.handleClose(_id, index))\n  },\n  cancelSelectGroup(e) {\n    e.preventDefault();\n    dispatch(actionCreators.cancelSelectGroup())\n  }\n});\n\nexport default connect(mapState, mapDispatch)(EditMessage);","import React, {Component} from 'react';\nimport {Input, Table} from 'antd';\nimport {Link} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from '../../../common/components/Button';\nimport {actionCreators} from './store';\nimport moment from 'moment';\n\nconst {Search} = Input;\n\nclass Template extends Component {\n  render() {\n    const {confName, templateMessageList, deleteTemplate, sendTemplate, changeConfNickName, searchConfName} = this.props;\n    const templateColumns = [\n      {\n        key: \"confName\",\n        dataIndex: \"confName\",\n        title: \"公众号\",\n        align: \"center\"\n      }, {\n        key: \"name\",\n        dataIndex: \"name\",\n        title: \"消息名称\",\n        align: \"center\"\n      }, {\n        key: \"sex\",\n        dataIndex: \"sex\",\n        title: \"消息名称\",\n        align: \"center\",\n        render: text => text === \"all\" ? \"全部\" : (text === \"1\" ? \"男\" : (text === \"2\" ? \"女\" : \"未知\"))\n      }, {\n        key: \"templateName\",\n        dataIndex: \"templateName\",\n        title: \"模板名称\",\n        align: \"center\"\n      }, {\n        key: \"timing_time\",\n        dataIndex: \"timing_time\",\n        title: \"定时\",\n        align: \"center\",\n        render: (text, record) => record.is_timing ? moment(text).format(\"YYYY-MM-DD HH:mm:ss\") : \"~~\"\n      }, {\n        key: \"status\",\n        dataIndex: \"status\",\n        title: \"发送状态\",\n        align: \"center\",\n        width: 80,\n        render: text => text === 0 ? \"未发送\" : (text === 1 ? \"正在发送\" : (text === 2 ? \"发送次数超出限制\" : \"发送完成\"))\n      }, {\n        key: \"count\",\n        dataIndex: \"count\",\n        title: \"已接收用户数\",\n        align: \"center\",\n        width: 80\n      }, {\n        key: \"Action\",\n        title: \"操作\",\n        align: \"center\",\n        width: 240,\n        render: (text, record, index) => <div>\n          {(!record.is_timing && record.status === 0) && <Button buttonContent=\"发送\" onClick={() => sendTemplate(record._id, index)} background=\"success\"/>}\n          {record.status === 0 && <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />}\n          <Button buttonContent=\"删除\" onClick={() => deleteTemplate(record._id, index)} background=\"danger\"/>\n        </div>\n      }\n    ];\n    return (\n      <div className=\"container\">\n        <Search style={{width: 200}} placeholder=\"搜索公众号\" value={confName} onChange={changeConfNickName} onSearch={searchConfName}/>\n        <div className=\"fr\"><Button size=\"default\" className=\"fr\" mb={20} buttonContent={<Link to=\"./create\">+ 新建模板消息</Link>}/></div>\n        <Table rowKey={record => record._id} size=\"middle\" dataSource={templateMessageList} columns={templateColumns}/>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    this.props.getTemplateList()\n  }\n}\n\nconst mapState = state => ({\n  templateMessageList: state.message.template.templateMessageList,\n  confName: state.message.template.confName,\n});\n\nconst mapDispatch = dispatch => ({\n  getTemplateList() {\n    dispatch(actionCreators.getTemplateList())\n  },\n  deleteTemplate(id, index) {\n    dispatch(actionCreators.deleteTemplate(id, index))\n  },\n  sendTemplate(id, index) {\n    dispatch(actionCreators.sendTemplate(id, index))\n  },\n  changeConfNickName(e) {\n    dispatch(actionCreators.changeConfNickName(e.target.value))\n  },\n  searchConfName(value) {\n    dispatch(actionCreators.searchConfName(value))\n  }\n});\n\nexport default connect(mapState, mapDispatch)(Template);","import React from 'react';\nimport { Radio, Row, Col, Modal, Button } from 'antd';\n\nconst SingleSelectModal = props => {\n  const {selectGonghaoModal, allCodes, code, confirmSelect, closeSelectModal} = props;\n  return (\n    <Modal width={1000} visible={selectGonghaoModal} maskClosable={false} closable={false} mask={false}  footer={<Button type=\"primary\" disabled={!code} onClick={closeSelectModal}>确定</Button>}>\n      <Radio.Group value={code} style={{ width: '100%' }} onChange={e => confirmSelect(e.target.value, code)}>\n        <Row>\n          {allCodes.map(item => <Col span={4} key={item._id}>\n            <Radio value={item.code}>{item.nick_name}</Radio>\n          </Col>)}\n        </Row>\n      </Radio.Group>\n    </Modal>\n  )\n};\n\nexport default SingleSelectModal;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {\n  ConfigProvider,\n  Icon,\n  Form,\n  Button,\n  Radio,\n  Input,\n  Avatar,\n  Divider,\n  Select,\n  Row,\n  Col,\n  Modal,\n  Switch,\n  DatePicker\n} from \"antd\";\nimport SingleSelectModal from '../../../../common/components/SelectGonghao/SingleSelectModal';\nimport {actionCreators} from \"../store\";\nimport zhCN from 'antd/es/locale/zh_CN';\nimport moment from \"moment\";\nimport 'moment/locale/zh-cn';\nimport './index.scss';\n\nconst {Option} = Select;\nconst colors = [\"#000\", \"#CF021B\", \"#F5A623\", \"#3BA6FF\", \"#BD10E0\", \"#999\"];\nconst colorWrapperStyle = {\n  width: 20,\n  height: 20,\n  marginLeft: 10,\n  display: \"inline-block\",\n  marginTop: 5\n};\n\nclass EditTemplate extends Component {\n\n  async componentWillMount() {\n    this.props.getAllCodes();\n    const {query} = this.props.location;\n    query && await this.props.initMessageInfo(query);\n  }\n\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        sm: {span: 4}\n      },\n      wrapperCol: {\n        sm: {span: 20, offset: 0}\n      },\n    };\n\n    const {openSelectModal, messageInfo, changeMessageInfo, selectGonghaoModal, allCodes, openEditModal, templateList, templateInfo, templateModalVisible, changeTemplate, history, submitMessage, confirmSelect, closeSelectModal, openPreviewModal, closePreviewModal, openid, changeOpenId, previewModal, preview} = this.props;\n    const { show, content, closeTemplateModal, saveTemplateModal, editTemplate } = this.props;\n    const footer = (\n        <div style={{overflow: \"hidden\", lineHeight: 1.5}}>\n          <div className=\"fl\">\n            {colors.map(item => <span className=\"cursor\" style={{...colorWrapperStyle, background: item}} key={item} onClick={() => editTemplate('color', item)} />)}\n          </div>\n          <Button type=\"primary\" className=\"fr\" onClick={saveTemplateModal}>保存</Button>\n        </div>);\n    let template = [];\n    for (let key in templateInfo.data) {\n      let content = messageInfo.content[key];\n      if (key === \"first\") {\n        template.unshift(<Form.Item label={templateInfo.data[\"first\"].pre || \"\"} key=\"first\">\n          <span className=\"mr5\">{content.value}</span>\n          <Icon className=\"cursor\" onClick={() => openEditModal(key, content)} type=\"edit\"/>\n        </Form.Item>)\n      } else {\n        template.push(<Form.Item label={templateInfo.data[key].pre || \"\"} key={key}>\n          <span className=\"mr5\">{content.value}</span>\n          <Icon className=\"cursor\" onClick={() => openEditModal(key, content)} type=\"edit\"/>\n        </Form.Item>)\n      }\n    }\n    let GonghaoModal;\n    selectGonghaoModal && (GonghaoModal =\n      <SingleSelectModal code={messageInfo.code} confirmSelect={confirmSelect} closeSelectModal={closeSelectModal}\n                         allCodes={allCodes} selectGonghaoModal={selectGonghaoModal}/>);\n    return (\n      <ConfigProvider locale={zhCN}>\n        <div className=\"container edit-message\">\n          <Form className=\"kefu-form\" {...formItemLayout} style={{width: 520}}>\n            <Form.Item label=\"选择公号\">\n              <Avatar onClick={openSelectModal} className=\"cursor\" shape=\"square\" icon=\"user\"/>\n            </Form.Item>\n            <Form.Item label=\"消息名称\">\n              <Input value={messageInfo.name} onChange={e => changeMessageInfo(\"name\", e.target.value)}\n                     placeholder=\"请输入消息名称,(仅供备注，不会发送给粉丝)\"/>\n            </Form.Item>\n            <Divider style={{width: \"175%\", marginLeft: -50}}/>\n            <h2 className=\"block-title\">设置模板消息</h2>\n            <Form.Item label=\"选择模板\">\n              <Select value={messageInfo.templateId} onChange={changeTemplate}>\n                {templateList.map(item => <Option value={item.template_id}\n                                                  key={item.template_id}>{item.title}</Option>)}\n              </Select>\n            </Form.Item>\n            <Row className=\"template-wrapper\">\n              <Col span={4}/>\n              <Col span={20}>\n                <div className=\"message-block\">\n                  {template}\n                </div>\n              </Col>\n            </Row>\n            <Form.Item label=\"点击跳转\">\n              <Input value={messageInfo.url} placeholder=\"输入跳转链接，且必须以http://或https://开头\"\n                     onChange={e => changeMessageInfo(\"url\", e.target.value)}/>\n            </Form.Item>\n            <Divider style={{width: \"175%\", marginLeft: -50}}/>\n            <h2 className=\"block-title\">选择群发对象</h2>\n            <Form.Item label=\"群发粉丝\">\n              <Radio.Group value={messageInfo.sex} onChange={e => changeMessageInfo(\"sex\", e.target.value)}>\n                <Radio value=\"all\">全部粉丝</Radio>\n                <Radio value=\"0\">未知粉丝</Radio>\n                <Radio value=\"1\">男粉丝</Radio>\n                <Radio value=\"2\">女粉丝</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Divider style={{width: \"175%\", marginLeft: -50}}/>\n            <h2 className=\"block-title\">设置发送方式</h2>\n            <Form.Item label=\"定时发送\">\n              <Switch checked={messageInfo.is_timing} onChange={value => changeMessageInfo(\"is_timing\", value)}/>\n            </Form.Item>\n            {messageInfo.is_timing && <Form.Item label=\"发送时间\">\n              <DatePicker showTime placeholder=\"选择时间\" value={moment(messageInfo.timing_time)}\n                          onChange={(value, dateString) => changeMessageInfo('timing_time', dateString)}/>\n            </Form.Item>}\n            <Divider style={{width: \"175%\", marginLeft: -50}}/>\n            <Form.Item>\n              <Button size=\"large\" type=\"primary\"\n                      onClick={() => submitMessage(messageInfo, history, templateList)}>确定{!messageInfo._id ? \"并创建消息\" : \"并保存消息\"}</Button>\n              {messageInfo._id &&\n              <Button style={{marginLeft: 20}} type=\"info\" size=\"large\" onClick={() => history.goBack()}>取消编辑</Button>}\n              <Button size=\"large\" style={{marginLeft: 20, background: \"yellowgreen\", borderColor: \"yellowgreen\"}}\n                      type=\"primary\" onClick={openPreviewModal}>发送预览</Button>\n            </Form.Item>\n          </Form>\n          {GonghaoModal}\n          <Modal\n              visible={templateModalVisible}\n              onCancel={closeTemplateModal}\n              closable={false}\n              footer={footer}\n              mask={false}\n          >\n            <Input.TextArea style={{color: content[\"color\"]}} value={content[\"value\"]} autoSize={{ minRows: 3, maxRows: 6 }} onChange={e => editTemplate('value', e.target.value)} />\n          </Modal>\n          <Modal title=\"发送预览\" visible={previewModal} onCancel={closePreviewModal}\n                 onOk={() => preview(messageInfo, openid)}>\n            <Input onChange={changeOpenId} value={openid} placeholder=\"请输入预览用户的openid\"/>\n            <span className=\"tips\">Tips: 在预览公号回复<span> openid </span>,将返回的内容复制到输入框中<br/>一个openid只对应一个公号</span>\n          </Modal>\n        </div>\n      </ConfigProvider>\n    )\n  }\n\n  componentWillUnmount() {\n    this.props.resetState()\n  }\n}\n\nconst mapState = state => ({\n  messageInfo: state.message.template.messageInfo,\n  templateList: state.message.template.templateList,\n  templateInfo: state.message.template.templateInfo,\n  templateModalVisible: state.message.template.templateModalVisible,\n  selectGonghaoModal: state.message.template.selectGonghaoModal,\n  allCodes: state.message.template.allCodes,\n  previewModal: state.message.template.previewModal,\n  openid: state.message.template.openid,\n  content: state.message.template.content\n});\n\nconst mapDispatch = dispatch => ({\n  getAllCodes() {\n    dispatch(actionCreators.getAllCodes())\n  },\n  openEditModal(key, content) {\n    !content.color && (content.color = \"#000\");\n    dispatch(actionCreators.openEditModal(key, content))\n  },\n  changeTemplate(value) {\n    dispatch(actionCreators.changeTemplate(value))\n  },\n  submitMessage(info, history, templateList) {\n    dispatch(actionCreators.submitMessage(info, history, templateList));\n  },\n  openSelectModal() {\n    dispatch(actionCreators.openSelectModal())\n  },\n  changeMessageInfo(key, value) {\n    dispatch(actionCreators.changeMessageInfo(key, value))\n  },\n  initMessageInfo(record) {\n    dispatch(actionCreators.initMessageInfo(record))\n  },\n  confirmSelect(code) {\n    dispatch(actionCreators.confirmSelect(code))\n  },\n  resetState() {\n    dispatch(actionCreators.resetState())\n  },\n  closeSelectModal() {\n    dispatch(actionCreators.closeSelectModal())\n  },\n  changeOpenId(e) {\n    dispatch(actionCreators.changeOpenId(e.target.value))\n  },\n  openPreviewModal() {\n    dispatch(actionCreators.openPreviewModal())\n  },\n  closePreviewModal() {\n    dispatch(actionCreators.closePreviewModal())\n  },\n  preview(info, openid) {\n    dispatch(actionCreators.preview(info, openid))\n  },\n  closeTemplateModal() {\n    dispatch(actionCreators.closeTemplateModal())\n  },\n  saveTemplateModal() {\n    dispatch(actionCreators.saveTemplateModal())\n  },\n  editTemplate(key, value) {\n    dispatch(actionCreators.editTemplate(key, value))\n  }\n});\n\nexport default connect(mapState, mapDispatch)(EditTemplate);","import React, { Component } from 'react';\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Group from \"./group\";\nimport GroupMaterial from \"./group/material\";\nimport History from './group/history';\nimport Kefu from './kefu';\nimport EditKefuMSg from './kefu/edit';\nimport Template from './template';\nimport EditTemplate from './template/edit';\n\nclass GroupRouter extends Component {\n  render() {\n    return (\n    \t<div>\n        <Route path='/admin/message'>\n          <Switch>\n            <Route path=\"/admin/message/group/index\" component={Group} />\n            <Route path=\"/admin/message/group/material\" component={GroupMaterial} />\n            <Route path=\"/admin/message/group/history\" component={History} />\n            <Route path=\"/admin/message/kefu/index\" component={Kefu} />\n            <Route path=\"/admin/message/kefu/create\" component={EditKefuMSg} />\n            <Route path=\"/admin/message/kefu/update\" component={EditKefuMSg} />\n            <Route path=\"/admin/message/template/index\" component={Template} />\n            <Route path=\"/admin/message/template/create\" component={EditTemplate} />\n            <Route path=\"/admin/message/template/update\" component={EditTemplate} />\n            <Redirect from=\"/admin/message\" exact to='/admin/message/group' />\n            <Redirect from=\"/admin/message/group\" exact to='/admin/message/group/index' />\n            <Redirect from=\"/admin/message/kefu\" exact to='/admin/message/kefu/index' />\n            <Redirect from=\"/admin/message/template\" exact to='/admin/message/template/index' />\n          </Switch>\n        </Route>\n    \t</div>\n    )\n  }\n}\n\nexport default GroupRouter;","import React, {Component} from 'react';\nimport {Table, Modal, message, Tabs} from 'antd';\nimport axios from '../../../utils/http';\nimport {Link} from 'react-router-dom';\nimport Button from '../../../common/components/Button';\n\nconst {TabPane} = Tabs;\n\nclass Advertise extends Component {\n  constructor(props) {\n    super(props);\n    this.changeTab = this.changeTab.bind(this);\n  }\n\n  state = {\n    spreadData: [],\n    domain_names: [],\n    tagList: [],\n    dataList: []\n  };\n\n  render() {\n    const {spreadData, tagList} = this.state;\n    const tabsRender = tagList.map(item => (\n      <TabPane tab={item.name} key={item.name}/>\n    ));\n    const spreadHeader = [\n      {\n        key: \"links\",\n        title: \"链接\",\n        align: \"center\",\n        width: 280,\n        render: (text, record) => <p\n          style={{width: 280, wordWrap: \"break-word\", userSelect: \"all\"}}>{'http://doumobone.top/cmst/' + record.id}</p>\n      },\n      {\n        key: \"group\",\n        dataIndex: \"group\",\n        title: \"分组\",\n        align: \"center\",\n        width: 120\n      },\n      {\n        key: \"title\",\n        dataIndex: \"title\",\n        title: \"标题\",\n        align: \"center\"\n      },\n      {\n        key: \"remarks\",\n        dataIndex: \"remarks\",\n        title: \"备注\",\n        align: \"center\",\n        width: 100,\n        render: text => text ? text : \"无\"\n      },\n      {\n        title: \"数据\",\n        align: \"center\",\n        width: 80,\n        render: (text, record) => <a href={'http://doumobone.top/transfer/' + record.id} target={\"_blank\"}>查看数据</a>\n      },\n      {\n        title: \"置顶\",\n        align: \"center\",\n        width: 80,\n        render: (text, record) => <Button background=\"warning\" onClick={() => this.goTop(record._id)} buttonContent=\"置顶\" />\n      },\n      {\n        title: \"Action\",\n        align: \"center\",\n        width: 200,\n        render: (text, record, index) => <div>\n          <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />\n          <Button background=\"danger\" buttonContent=\"删除\" onClick={() => this.deleteLink(record._id, index)} />\n          <Button background=\"success\" mr={0} buttonContent=\"复制\" onClick={() => this.copyLink({...record})} />\n        </div>\n      }\n    ];\n    return (\n      <div>\n        <div className=\"container\">\n          <Button size=\"default\" background=\"success\" mb={20} buttonContent={<Link to=\"./create\">添加新链接</Link>} />\n          <Tabs animated={false} defaultActiveKey=\"ALL\" tabBarGutter={0} onChange={this.changeTab}\n                size='small'>\n            <TabPane tab=\"ALL\" key=\"ALL\"/>\n            {tabsRender}\n          </Tabs>\n          <Table rowKey={record => record._id} size=\"small\" bordered columns={spreadHeader} dataSource={spreadData}/>\n        </div>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    this.getSpreadList();\n    this.getTagList();\n  }\n\n  getSpreadList() {\n    axios.get(\"/transfer\").then(res => {\n      let spreadData = res.data.messages;\n      let domain_names = res.data.domain_names;\n      this.setState({\n        spreadData,\n        dataList: spreadData,\n        domain_names\n      })\n    });\n  }\n\n  getTagList() {\n    axios.get(\"/tuiguangTag\").then(res => {\n      const {data: tagList} = res.data;\n      this.setState({tagList})\n    });\n  }\n\n  changeTab(key) {\n    const {dataList} = this.state;\n    if (key === 'ALL') {\n      this.setState({\n        spreadData: dataList\n      });\n    } else {\n      let data = [];\n      for (let i = 0; i < dataList.length; i++) {\n        if (key === dataList[i].group) {\n          data.push(dataList[i]);\n        }\n      }\n      this.setState({spreadData: [...data]})\n    }\n  }\n\n  goTop(id) {\n    Modal.confirm({\n      title: \"确定置顶这条链接吗？\",\n      onOk: () => {\n        axios.post('/transfer/goTop', {id})\n          .then(res => {\n            message.info(res.data.success);\n            this.getSpreadList();\n          });\n      }\n    })\n  }\n\n  deleteLink(id, index) {\n    const {spreadData} = this.state;\n    Modal.confirm({\n      title: '确认删除这条内容吗？:',\n      onOk: () => {\n        axios.get('/transfer/delete', {params: {id}})\n          .then(res => {\n            message.info(res.data.success);\n            spreadData.splice(index, 1);\n            this.setState({spreadData});\n          });\n      }\n    })\n  }\n\n  copyLink(record) {\n    record.id += '_copy';\n    const {spreadData} = this.state;\n    Modal.confirm({\n      title: \"确定复制一条推广链接吗？\",\n      onOk: () => {\n        axios.post('/transfer/create', {...record})\n          .then(res => {\n            if (res.data.success) {\n              message.info('复制成功');\n              spreadData.unshift(res.data.data);\n              this.setState({spreadData})\n            } else {\n              message.info(res.data.err);\n            }\n          });\n      }\n    })\n  }\n}\n\nexport default Advertise;","import React, {Component, Fragment} from 'react';\nimport {Form, Input, Button, Switch, InputNumber, message, Modal, List, Tag } from 'antd';\nimport axios from '../../../../utils/http';\n\nconst initState = {\n  spreadLinkInfo: {\n    id: \"\",\n    title: \"\",\n    links: [],\n    weights: [],\n    back_urls: [],\n    link: \"\",\n    back_url: \"\",\n    weight: \"\",\n    type: false,\n    status: false,\n    granularity: 1,\n    group: \"\",\n    remarks: \"\"\n  },\n  tagList: [],\n  index: -1\n};\n\nclass EditAdvertise extends Component {\n  constructor(props) {\n    super(props);\n    this.addTag = this.addTag.bind(this);\n    this.cancelSelectTag = this.cancelSelectTag.bind(this);\n    this.cancelEdit = this.cancelEdit.bind(this);\n    this.submitSpreadLink = this.submitSpreadLink.bind(this);\n    this.cancelUpdate= this.cancelUpdate.bind(this);\n  }\n\n  state = {...initState};\n\n  componentWillMount() {\n    let query = this.props.history.location.query;\n    query && this.initData(query);\n    this.getTagList();\n  }\n\n  render() {\n    const {spreadLinkInfo, tagList, index} = this.state;\n    const {title, links, weights, back_urls, link, back_url, weight, type, status, granularity, group, remarks} = spreadLinkInfo;\n    let isAddWeight, hasLink, hasBackUrl, hasWeight, selectedTag;\n    links.length > 0 && (hasLink = <Form.Item label=\"链接组\">\n      <List\n        size=\"small\"\n        bordered\n        dataSource={links}\n        renderItem={(item, index) => (\n          <List.Item actions={[<span className=\"cursor\" style={{color: \"#f00\"}} onClick={() => this.delLink(index, \"links\")}>del</span>]}>\n            {item}\n          </List.Item>\n        )}\n      />\n    </Form.Item>);\n    back_urls.length > 0 && (hasBackUrl = <Form.Item label=\"返回链接组\">\n      <List\n        size=\"small\"\n        bordered\n        dataSource={back_urls}\n        renderItem={(item, index) => (\n          <List.Item actions={[<span className=\"cursor\" style={{color: \"#f00\"}} onClick={() => this.delLink(index, \"back_urls\")}>del</span>]}>\n            {item}\n          </List.Item>\n        )}\n      />\n    </Form.Item>);\n    weights.length > 0 && (hasWeight = <Form.Item label=\"权重组\">\n      <List\n        size=\"small\"\n        bordered\n        dataSource={weights}\n        renderItem={(item, i) => {\n          let isUpdate;\n          if(index === i) {\n            isUpdate = [<span className=\"cursor\" style={{color: \"#f00\"}} onClick={this.cancelUpdate}>取消</span>]\n          } else {\n            isUpdate = [<span className=\"cursor\" style={{color: \"#f00\"}} onClick={e => this.delLink(i, \"weights\", e)}>删除</span>]\n          }\n          return (\n          <List.Item onClick={() => this.updateWeight(i)} actions={isUpdate}>\n            {index === i ? <Input.Search size=\"small\" enterButton=\"保存\" onSearch={(value, e) => this.saveUpdate(value, e)} /> : item}\n          </List.Item>\n        )}}\n      />\n    </Form.Item>);\n    if (type) {\n      isAddWeight = <Fragment>\n        <Form.Item label=\"权重\">\n          <Input.Search value={weight} enterButton=\"添加\" placeholder=\"请输入权重\"\n                        onChange={e => this.changeInputValue(e.target.value, \"weight\")} onSearch={value => this.addLink(value, \"weights\", \"weight\")}/>\n        </Form.Item>\n        {hasWeight}\n        <Form.Item label=\"投放状态\">\n          <Switch checked={status} onChange={value => this.changeInputValue(value, \"status\")}/>\n        </Form.Item>\n        <Form.Item label=\"时间颗粒度\">\n          <InputNumber min={1} value={granularity} placeholder=\"请输入标题\"\n                       onChange={value => this.changeInputValue(value, \"granularity\")}/>\n        </Form.Item>\n      </Fragment>\n    }\n    if(group) {\n      selectedTag = <Tag closable onClose={this.cancelSelectTag}>{group}</Tag>\n    } else {\n     selectedTag = <Input.Search enterButton=\"确定\" placeholder=\"请输入标签\" onSearch={this.addTag}/>\n    }\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"title-wrapper\">\n            <h2>编辑推广链接</h2>\n            <div className=\"fr\">\n              <Button type=\"primary\" style={{marginRight: 10}} onClick={this.submitSpreadLink}>提交</Button>\n              <Button onClick={this.cancelEdit}>取消</Button>\n            </div>\n          </div>\n          <Form className=\"fl\" style={{width: \"60%\", borderRight: \"1px solid #eee\"}} labelCol={{sm: 3}} wrapperCol={{sm: 18, offset: 0}} colon={false}>\n            <Form.Item label=\"标题\">\n              <Input value={title} placeholder=\"请输入标题\"\n                     onChange={e => this.changeInputValue(e.target.value, \"title\")}/>\n            </Form.Item>\n            <Form.Item label=\"链接\">\n              <Input.Search value={link} enterButton=\"添加\" placeholder=\"请输入链接\" onChange={e => this.changeInputValue(e.target.value, \"link\")} onSearch={value => this.addLink(value, \"links\", \"link\")}/>\n            </Form.Item>\n            {hasLink}\n            <Form.Item label=\"返回链接\">\n              <Input.Search value={back_url} enterButton=\"添加\" placeholder=\"请输入返回链接\" onChange={e => this.changeInputValue(e.target.value, \"back_url\")} onSearch={value => this.addLink(value, \"back_urls\", \"back_url\")}/>\n            </Form.Item>\n            {hasBackUrl}\n            <Form.Item label=\"选择标签\">\n              {selectedTag}\n            </Form.Item>\n            <Form.Item label=\"标签选项\">\n              {tagList.map((item, index) => <Tag className=\"cursor\" closable onClose={(e) => this.deleteTag(e, item._id, index)} key={item._id} onClick={() => this.selectTag(item.name)}>{item.name}</Tag>)}\n            </Form.Item>\n          </Form>\n          <Form className=\"fl\" style={{width: \"36%\", paddingLeft: \"4%\"}} labelCol={{sm: 7}} wrapperCol={{sm: 17, offset: 0}} colon={false}>\n            <Form.Item label=\"是否增加权重\">\n              <Switch checked={type} onChange={value => this.changeInputValue(value, \"type\")}/>\n            </Form.Item>\n            {isAddWeight}\n            <Form.Item label=\"链接备注\">\n              <Input value={remarks} placeholder=\"请输入备注\" onChange={e => this.changeInputValue(e.target.value, \"remarks\")}/>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n\n  initData(query) {\n    query.type = query.type === 1;\n    query.status = query.status === 1;\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...query}}))\n  }\n\n  changeInputValue(value, name) {\n    let {spreadLinkInfo} = this.state;\n    spreadLinkInfo[name] = value;\n    this.setState({spreadLinkInfo})\n  }\n\n  addLink(value, list, item) {\n    const {spreadLinkInfo} = this.state;\n    if(!value.trim()) {\n      message.error(\"链接不能为空\")\n    } else {\n      spreadLinkInfo[list].push(value.trim());\n      spreadLinkInfo[item] = \"\";\n      this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}))\n    }\n  }\n\n  delLink(index, list, e) {\n    e && e.stopPropagation();\n    const {spreadLinkInfo} = this.state;\n    spreadLinkInfo[list].splice(index, 1);\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}))\n  }\n\n  updateWeight(index) {\n    this.setState({index})\n  }\n\n  saveUpdate(value, e) {\n    e.stopPropagation();\n    const {spreadLinkInfo, index} = this.state;\n    spreadLinkInfo[\"weights\"].splice(index, 1, value);\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}, index: -1}));\n  }\n\n  cancelUpdate(e) {\n    e.stopPropagation();\n    this.setState({index: -1})\n  }\n\n  getTagList() {\n    axios.get(\"/tuiguangTag\").then(res => {\n      let tagList = res.data.data;\n      this.setState({tagList});\n    });\n  }\n\n  addTag(value) {\n    const { spreadLinkInfo } = this.state;\n    if(!value.trim()) {\n      message.error(\"标签名不能为空\")\n    } else {\n      axios.post(\"/tuiguangTag\", {name: value.trim()})\n        .then(res => {\n          if (res.data.exist === 0) {\n            const { data } = res.data;\n            this.setState(state => ({tagList: [...state.tagList, data]}));\n          }\n          spreadLinkInfo.group = value;\n          this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\n        })\n    }\n  }\n\n  selectTag(group) {\n    const {spreadLinkInfo} = this.state;\n    spreadLinkInfo.group = group;\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\n  }\n\n  cancelSelectTag() {\n    const {spreadLinkInfo} = this.state;\n    spreadLinkInfo.group = \"\";\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\n  }\n\n  deleteTag(e, id, index) {\n    e.stopPropagation();\n    const {tagList} = this.state;\n    axios.delete('/tuiguangTag', {params: {id}})\n      .then(res => {\n        tagList.splice(index, 1)\n        this.setState({tagList})\n      });\n  }\n\n  submitSpreadLink() {\n    const { query } = this.props.history.location;\n    const {spreadLinkInfo} = this.state;\n    spreadLinkInfo.type = spreadLinkInfo.type ? 1 : 0;\n    spreadLinkInfo.status = spreadLinkInfo.status ? 1 : 0;\n    let url = '/transfer/create';\n    if(query) {\n      url = '/transfer/update'\n    }\n    Modal.confirm({\n      title: \"确定提交吗？\",\n      onOk: () => {\n        axios.post(url, {...spreadLinkInfo})\n          .then(res => {\n            if (res.data.success) {\n              message.info(res.data.success);\n              this.cancelEdit()\n            } else {\n              message.info(res.data.err);\n            }\n          });\n      }\n    })\n  }\n\n  cancelEdit() {\n    this.props.history.goBack();\n    this.resetState();\n  }\n\n  resetState() {\n    this.setState({...initState})\n  }\n\n  componentWillUnmount() {\n    this.resetState()\n  }\n}\n\nexport default EditAdvertise;","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Spread from './spread';\nimport EditSpread from './spread/edit';\n\nclass ChannelWrapper extends Component {\n  render() {\n    return (\n        <Route path=\"/admin/channel\" render={\n          () =>\n            <Switch>\n              <Route path=\"/admin/channel/spread/index\" component={Spread} />\n              <Route path=\"/admin/channel/spread/create\" component={EditSpread} />\n              <Route path=\"/admin/channel/spread/update\" component={EditSpread} />\n              <Redirect from=\"/admin/channel\" exact to='/admin/channel/spread' />\n              <Redirect from=\"/admin/channel/spread\" exact to='/admin/channel/spread/index' />\n            </Switch>\n          }\n        />\n    )\n  }\n}\n\nexport default ChannelWrapper;","import React, { Component } from 'react';\nimport { Input, Table, message, Modal } from 'antd';\nimport Button from '../../common/components/Button';\nimport axios from 'axios';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nconst Search = Input.Search;\n\nclass Account extends Component {\n\n  state = {\n    accountList: [],\n    searchValue: \"\",\n    updateRemarksIndex: -1\n  };\n\n\n\n  searchAccount = () => {\n    const { searchValue } = this.state;\n    axios.get('/account', {params: {username: searchValue}})\n      .then(res => {\n        if(res.data.code === 1) {\n          const {data: accountList, msg} = res.data;\n          this.setState({accountList, searchValue: \"\"});\n          message.success(msg)\n        } else {\n          message.error(res.data.msg);\n          this.getAccountList()\n        }\n      })\n  };\n\n  saveUpdate(id, remarks) {\n    Modal.confirm({\n      title: \"确定保存修改吗？\",\n      onOk: () => {\n        axios.put(\"/account/remarks\", {id, remarks})\n          .then(res => {\n            const {code, msg} = res.data;\n            if(code === 1) {\n              message.success(msg);\n              this.setState({\n                updateRemarksIndex: -1\n              });\n              this.getAccountList()\n            } else {\n              message.error(msg);\n            }\n          })\n      }\n    })\n  }\n\n  deleteAccount(_id) {\n    Modal.confirm({\n      title: \"确定删除这个账户吗？\",\n      onOk: () => {\n        axios.delete('/account', {params: {_id}})\n          .then(res => {\n            if(res.data.code === 1) {\n              message.success(res.data.msg);\n              this.getAccountList()\n            } else {\n              message.error(res.data.msg);\n            }\n          })\n      }\n    })\n  }\n\n  getAccountList = () => {\n    axios.get('/account')\n      .then(res => {\n        if(res.data.code === 1) {\n          let { data } = res.data;\n          let accountList = data.reverse();\n          this.setState({accountList});\n        }\n      })\n  };\n\n  componentDidMount() {\n    this.getAccountList()\n  }\n\n  handleChangeSearchValue = e => {\n    this.setState({searchValue: e.target.value})\n  };\n\n  render() {\n    const {accountList, searchValue, updateRemarksIndex} = this.state;\n    const columns = [\n      {\n        key: 'username',\n        dataIndex: 'username',\n        title: '账户名',\n        align: 'center'\n      }, {\n        key: 'remarks',\n        dataIndex: 'remarks',\n        title: '公司名称/备注',\n        align: 'center',\n        width: 300,\n        render: (text, record, index) => updateRemarksIndex !== index ? text : <Input.Search enterButton=\"保存\" size=\"small\" onSearch={value => this.saveUpdate(record._id,value)} />\n      }, {\n        key: 'password',\n        dataIndex: 'password',\n        title: '密码（点击自动复制，打开解密网站）',\n        align: 'center',\n        render: text => <CopyToClipboard text={text} onCopy={() => message.success(\"复制成功\")}><a href=\"https://www.somd5.com/\" target=\"__blank\">{text}</a></CopyToClipboard>\n      }, {\n        key: 'role',\n        dataIndex: 'role',\n        title: '权限',\n        align: 'center',\n        render: text => text === 0 ? \"超级管理员\" : (text === 1 ? \"一级代理\" : \"二级代理\")\n      }, {\n        title: 'Action',\n        key: 'action',\n        align: 'center',\n        render: (text, record, index) => <>\n          <Button buttonContent=\"修改备注\" onClick={() => this.setState({updateRemarksIndex: index})} />\n          <Button mr={0} background=\"danger\" disabled={record.role === 0} buttonContent=\"删除\" onClick={() => this.deleteAccount(record._id)} />\n        </>\n      }\n    ];\n    return (\n    \t<div>\n        <div className=\"container\">\n          <Search onChange={this.handleChangeSearchValue} value={searchValue} style={{width: 300, marginBottom: 20}} placeholder=\"请输入账户名\" enterButton=\"查询\" onSearch={this.searchAccount} />\n          <Table rowKey={record => record._id} size=\"small\" dataSource={accountList} columns={columns} />\n        </div>\n    \t</div>\n    )\n  }\n}\n\nexport default Account;","import React, { Component } from 'react';\nimport { Form, Input, message, Modal, Select } from 'antd';\nimport Button from '../../../common/components/Button';\nimport axios from '../../../utils/http';\n\nconst { Option  } = Select;\n\nclass AddAccount extends Component {\n\n  addAccount = () => {\n    const { form: {validateFields} } = this.props;\n    validateFields((errors, values) => {\n      if(errors) {\n        message.error(\"请检查输入是否有误\");\n        return\n      }\n      values.password = this.$MD5(values.password).toString();\n      Modal.confirm({\n        title: \"确定创建一个新账户吗？\",\n        onOk: () => {\n          axios.post('/account', {...values})\n            .then(res => {\n              if(res.data.code === 1) {\n                this.resetForm()\n                message.success(res.data.msg)\n              } else {\n                message.error(res.data.msg)\n              }\n            })\n        }\n      })\n    })\n    // console.log(getFieldsValue())\n  };\n\n  resetForm = () => {\n    const { form: {setFieldsValue} } = this.props;\n    setFieldsValue({username: \"\", password: \"\", role: 2})\n  };\n\n  render() {\n    const { form: {getFieldDecorator} } = this.props;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 2 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      colon: false\n    };\n    return (\n\n    \t<div>\n        <div className=\"container\">\n          <Form {...formItemLayout}>\n            <Form.Item label=\"用户名\">\n              {getFieldDecorator('username', {\n                rules: [{ required: true, message: '用户名不能为空' }],\n              })(\n                <Input placeholder=\"请输入用户名\"/>\n              )}\n            </Form.Item>\n            <Form.Item label=\"密码\">\n              {getFieldDecorator('password', {\n                rules: [{ required: true, message: '密码不能为空' }],\n              })(\n                <Input placeholder=\"请输入密码\"/>\n              )}\n            </Form.Item>\n            <Form.Item label=\"备注\">\n              {getFieldDecorator('remarks', {\n                rules: [{ required: true, message: '备注不能为空' }],\n              })(\n                <Input placeholder=\"请输入备注\"/>\n              )}\n            </Form.Item>\n            <Form.Item label=\"管理员权限\">\n              {getFieldDecorator('role', {\n                rules: [{ required: true }],\n                initialValue: 2\n              })(\n                <Select>\n                  <Option value={0}>超级管理员</Option>\n                  <Option value={1}>一级代理</Option>\n                  <Option value={2}>二级代理</Option>\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\" \">\n              <Button size=\"default\" buttonContent=\"新增\" onClick={this.addAccount} />\n              <Button ml={20} background=\"info\" size=\"default\" buttonContent=\"清空\" onClick={this.resetForm}  />\n            </Form.Item>\n          </Form>\n        </div>\n    \t</div>\n    )\n  }\n}\n\nexport default Form.create()(AddAccount);","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Account from './index';\nimport AddAccount from './add';\nclass AccountRouter extends Component {\n  render() {\n    return (\n    \t<Switch>\n        <Route path=\"/admin/account/list\" component={Account} />\n        <Route path=\"/admin/account/add\" component={AddAccount} />\n        <Redirect from=\"/admin/account\" exact to=\"/admin/account/list\"/>\n    \t</Switch>\n    )\n  }\n}\n\nexport default AccountRouter;","import React, { Component } from 'react';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport store from './store';\n\nimport Login from './pages/login';\n\nimport BasicLayout from './common/BasicLayout';\nimport TuoguanRouter from './pages/gonghao/router';\nimport MessageRouter from './pages/message/router';\nimport ChannelRouter from './pages/channel/router';\nimport AccountRouter from './pages/account/router';\n\nclass App extends Component{\n\n  state = {\n    userInfo: {}\n  };\n\n  componentDidMount() {\n    let userInfo = localStorage.getItem(\"userInfo\");\n    if(userInfo && (Date.now() - (+ new Date(JSON.parse(userInfo).loginAt)) < 24 * 60 * 60 * 1000)) {\n      this.setState({userInfo: JSON.parse(userInfo)});\n    }\n  }\n\n  render() {\n    const { userInfo } = this.state;\n    const needLogin = Object.keys(userInfo).length > 0;\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/admin/login\" render={() => needLogin ? <Redirect to={window.location.search ? decodeURIComponent(window.location.search.split(\"=\")[1]) : \"/admin\"} /> : <Login />} />\n            <Route path=\"/admin\" render={() => (\n              needLogin ?\n                <BasicLayout content={\n                    <Switch>\n                      <Route path='/admin/gonghao' component={TuoguanRouter} />\n                      <Route path='/admin/message' component={MessageRouter} />\n                      <Route path='/admin/channel' component={ChannelRouter} />\n                      <Route path='/admin/account' component={AccountRouter} />\n                      <Redirect from=\"/admin\" exact to={userInfo.role === 2 ? \"/admin/gonghao\" : \"/admin/account\"} />\n                    </Switch>\n                } />\n                : <Redirect to={\"/admin/login?redirect=\" + encodeURIComponent(window.location.pathname)} />\n            )} />\n            <Redirect from=\"/\" exact to=\"/admin\" />\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import 'core-js/es/map';\nimport 'core-js/es/set';\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './assets/css/reset.css';\nimport App from './App.jsx';\nimport MD5 from 'crypto-js/md5';\nimport Promise from 'promise-polyfill';\n\n\n// // To add to window  解决promise 在ie中未定义的问题\nif (!window.Promise) {\n  window.Promise = Promise;\n}\n\nReact.Component.prototype.$MD5 = MD5;\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}