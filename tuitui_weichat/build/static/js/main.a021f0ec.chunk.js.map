{"version":3,"sources":["assets/images/login_bg.png","assets/images/logo.png","pages/gonghao/tuoguan/store/reducer.js","utils/index.js","pages/gonghao/tuoguan/store/actionCreators.js","pages/gonghao/tuoguan/store/constants.js","pages/gonghao/menu/store/reducer.js","pages/gonghao/menu/store/actionCreators.js","pages/gonghao/menu/store/constants.js","pages/gonghao/reply/store/reducer.js","pages/gonghao/reply/store/actionCreators.js","pages/gonghao/reply/store/constants.js","pages/gonghao/reducer.js","pages/message/group/store/constants.js","pages/message/group/store/reducer.js","pages/message/group/store/actionCreators.js","pages/message/kefu/store/reducer.js","pages/message/kefu/store/actionCreators.js","pages/message/kefu/store/constants.js","pages/message/template/store/reducer.js","pages/message/template/store/actionCreators.js","pages/message/template/store/constants.js","pages/message/reducer.js","pages/source/group/store/reducer.js","pages/source/group/store/actionCreators.js","pages/source/group/store/constants.js","pages/source/reducer.js","store/reducer.js","store/index.js","pages/login/index.jsx","common/BasicLayout/header/index.jsx","common/BasicLayout/sider/index.jsx","common/BasicLayout/bread/index.jsx","common/BasicLayout/index.jsx","common/components/Button/index.jsx","pages/gonghao/tuoguan/index.jsx","pages/gonghao/tuoguan/group/index.jsx","pages/gonghao/menu/index.jsx","pages/gonghao/menu/edit/index.jsx","pages/gonghao/reply/index.jsx","common/components/GraphicMessage/index.jsx","common/components/SelectGonghao/MultiSelectModal/index.jsx","pages/gonghao/reply/edit/index.jsx","pages/gonghao/qrcode/index.jsx","pages/gonghao/qrcode/edit/index.jsx","pages/gonghao/router.jsx","pages/message/group/components/GraphicMessage/index.jsx","pages/message/group/material/index.jsx","common/components/SelectGonghao/SingleSelectByGroup/index.jsx","pages/message/group/history/index.jsx","common/components/Loading/index.jsx","pages/message/group/index.jsx","pages/message/kefu/index.jsx","pages/message/kefu/edit/index.jsx","pages/message/template/index.jsx","common/components/SelectGonghao/SingleSelectModal/index.jsx","pages/message/template/components/TemplateModal.jsx","pages/message/template/edit/index.jsx","pages/message/router.jsx","pages/channel/spread/index.jsx","pages/channel/spread/edit/index.jsx","pages/channel/router.jsx","pages/account/index.jsx","pages/account/add/index.jsx","pages/account/router.jsx","pages/edit/index.jsx","pages/edit/router.jsx","pages/source/group/index.jsx","pages/source/group/edit/index.jsx","pages/source/router.jsx","App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","defaultState","gonghaoTagList","allGonghaoList","originalGonghaoList","gonghaoList","group","status","currentPage","searchName","isSelectTag","selectedTag","isCreate","gonghaoModal","gonghaoInfo","id","attribute","configList","configForm","type","sex","text","replyType","msgId","key","urlList","backTop","Promise","resolve","reject","timer","setInterval","osTop","document","documentElement","scrollTop","body","ispeed","Math","floor","clearInterval","getGroupList","dispatch","axios","get","then","res","data","code","getAllGonghaoList","length","changePage","page","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","action","wrap","_context","prev","next","stop","_x","apply","this","arguments","changeSearchInput","searchByName","nick_name","params","message","success","changeSelectValue","value","deleteGonghao","index","Modal","confirm","okText","cancelText","content","title","onOk","jieguan","addNewGonghao","window","open","openGonghaoModal","closeGonghaoModal","updateGonghaoInfo","console","log","put","_objectSpread","msg","changeGroup","name","changeAttribute","selectTag","removeTag","tagConfirm","props","post","exist","form","setFieldsValue","deleteTagItem","delete","createForm","history","goBack","updateForm","checkPageAttr","getConfigList","deleteConfig","changeConfigForm","formInfo","createConfigForm","configInfo","updateConfigForm","menuList","menuIndex","secMenuIndex","isSubmit","allCodes","targetKeys","sub_button","url","menuForm","menuInfo","individual","values","codes","getMenuList","reverse","deleteMenu","handleInfoChange","handleIndividualChange","handleInputChange","handleSubInputChange","addFirstMenu","editMenu","addSecondMenu","openModal","submitMenu","location","query","actionCreators_objectSpread","resetState","cancelMenu","editSecMenu","deleteFirMenu","deleteSubMenu","getAllCodes","changeGonghao","initMenuInfo","record","replyMessageList","messageInfo","JSON","parse","stringify","articles","selectGonghaoModal","updateIndex","messageIndex","getReplyMessageList","deleteReplyMessage","_id","closeSelectModal","openSelectModal","changeMessageInfo","addToList","updateMessageItem","item","updateCurrentMessage","deleteCurrentMessage","initState","reducer","combineReducers","tuoguan","_start","_end","state","undefined","newState","toConsumableArray","filter","slice","splice","push","menu","assign","reducer_objectSpread","reply","_newState$messageInfo","picurl","description","store_reducer_objectSpread","COPY","messageList","isComplete","tagList","sendModal","sendTimingModal","date","time","sendInfo","tagId","mediaId","sendTimingInfo","isTiming","timing","updateInfo","media_id","content_source_url","updateMaterialModal","historyList","historyMsgModal","delMsgInfo","msg_id","article_idx","delDate","getGroupGonghao","sent","getMaterial","setTimeout","getMessageList","warning","openUpdateMaterialModal","closeUpdateMaterialModal","updateMaterial","store_actionCreators_objectSpread","_res$data","error","catch","changeContentSourceUrl","Number","getTagList","changeTagId","closeModal","sendMessage","info","openTimingModal","sendTimingMessage","changeTimingState","changeTime","timeType","copy","dipatch","constants","err","deleteMaterial","clearMaterial","getHistoryList","checkSendState","msg_status","openMsgModal","closeMsgModal","changeArticleIdx","deleteMsg","clearHistory","changeDate","deleteMany","initContent","allMessageList","kefuMessageList","messageType","kefuMessageInfo","contents","img","img_path","channel","timing_time","Date","delay","tagName","remarks","action_type","isHour","paramsModal","previewModal","openid","getKefuMessageList","sort","messages","createKefuMessage","kefu_store_actionCreators_objectSpread","deleteMessage","sendKefuMessage","take_over","handleChangeType","changeContentValue","changeMessageValue","addMessage","selectMessage","selectParams","hideParamsModal","submitMessage","indexOf","task","is_timing","initKefuMessageInfo","openPreviewModal","closePreviewModal","preview","_ref2","changeOpenId","templateMessageList","confName","templateId","templateName","templateList","templateInfo","template_id","templateModalVisible","color","getTemplateList","deleteTemplate","sendTemplate","template_store_actionCreators_objectSpread","changeConfNickName","searchConfName","openEditModal","closeTemplateModal","changeTemplate","saveTemplateModal","editTemplate","confirmSelect","initMessageInfo","now","dateTime","getTime","unshift","group_store_reducer_objectSpread","kefu","kefu_store_reducer_objectSpread","template","replyList","replyInfo","getReplyList","deleteReply","handleContentChange","handleReplyChange","submitReply","group_store_actionCreators_objectSpread","initReplyInfo","source_group_store_reducer_objectSpread","gonghao","gonghaoReducer","messageReducer","source","sourceReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Login","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","login","bind","assertThisInitialized","loginInfo","username","password","_this2","bgStyle","minHeight","backgroundSize","backgroundRepeat","backgroundAttachment","backgroundImage","concat","require","_react_16_9_0_react_default","createElement","className","style","input","size","onChange","e","changeInputValue","target","prefix","icon","marginRight","marginBottom","placeholder","onKeyUp","keyCode","onClick","setState","login_objectSpread","_this3","$MD5","toString","userInfo","localStorage","setItem","href","Component","HeaderWrapper","getItem","react_router_dom","to","src","alt","avatar","shape","popover","fontSize","logout","SubMenu","Menu","MenuItem","Item","SideWrapper","keyIndex","role","subMenuList","path","selectedKeys","onSelect","selectItem","latestSelectedKey","selectList","find","map","pathname","split","pathName","MenuListRender","SubMenuList","subItem","mode","theme","defaultOpenKeys","defaultSelectedKeys","breadList","/gonghao","/gonghao/tuoguan","/gonghao/tuoguan/group","/gonghao/tuoguan/config","/gonghao/tuoguan/config/create","/gonghao/tuoguan/config/update","/gonghao/menu","/gonghao/menu/create","/gonghao/menu/update","/gonghao/reply","/gonghao/reply/create","/gonghao/reply/update","/message","/message/kefu","/message/kefu/create","/message/kefu/update","/message/group","/message/group/material","/message/group/history","/message/template","/message/template/create","/message/template/update","/channel","/channel/spread","/channel/spread/create","/channel/spread/update","/source","/source/group","/source/group/create","/source/group/update","/edit","/edit/index","/wechat/qrcode","/wechat/qrcode/create","/wechat/qrcode/update","/account","/account/list","/account/add","BreadWrapper","getPath","pathSnippets","extraBreadcrumbItems","_","join","breadcrumb","withRouter","Content","Layout","Sider","Header","Footer","BasicLayout","layout","BasicLayout_header","collapsible","width","BasicLayout_sider","marginLeft","card","background","padding","borderBottom","height","BasicLayout_bread","textAlign","ButtonList","danger","update","ButtonWrapper","buttonStyle","_this$props","_this$props$backgroun","_this$props$color","_this$props$mr","mr","_this$props$ml","ml","_this$props$mb","mb","_this$props2","_this$props2$size","buttonContent","_this$props2$disabled","disabled","es_button","Search","Input","Option","Select","Tuoguan","onSearch","es_select","Button","es_list","grid","gutter","sm","xxl","dataSource","pagination","pageSize","renderItem","actions","tooltip","head_img","marginTop","es_tag","modal","visible","onCancel","es_form","labelCol","span","wrapperCol","label","es_radio","Group","connect","actionCreators","GonghaoGroup","columns","dataIndex","align","render","gonghao_id","gonghao_index","editGroupModalVisible","group_id","group_index","selectGroup","selectedRowKeys","getGonghaoTagList","openEditGroupModal","closeEditGroupModal","confirmEditGroup","_this$state","updateGroup","addGroup","_res$data2","deleteGroup","_res$data3","changeGroupValue","searchGroupGonghao","_res$data4","submitGonghaoModal","_this$state2","ids","updateOne","updateMore","openUpdateMoreModal","_res$data5","_res$data6","changeSelectGroup","_this$state3","rowSelection","group_Sider","header","bordered","display","flexDirection","justifyContent","lineHeight","margin","borderRadius","border","group_Content","group_Search","table","rowKey","menuHeader","EditMenuInfo","keyOrUrl","subKeyOrUrl","menuInfoForm","submitButton","menuModal","individualSex","formItemLayout","offset","colon","top","i","idx","transfer","showSearch","labelAlign","es_switch","checked","unMountState","stopPropagation","Form","create","Config","configHeader","GraphicMessage","MultiSelectModal","_props$codes","maskClosable","closable","mask","footer","es_checkbox","row","col","EditConfigInfo","TextOrKey","MessageContent","UploadImg","submitForm","uploadImg","TextArea","autosize","minRows","maxRows","_react_16_9_0_react","upload","showUploadList","SelectGonghao_MultiSelectModal","divider","common_components_GraphicMessage","file","response","filename","QrCode","qrCodeList","qrCodeHeader","deleteQrCode","getQrCodeList","codesLength","j","dataLength","parseInt","_this4","qrCodeInfo","EditQrCode","cancelEdit","submitEdit","optionFilterProp","getGonghaoName","filterOption","option","children","edit_Option","getGonghaoList","result","edit_objectSpread","_this5","TuoguanWrapper","react_router","component","from","exact","Replay","editReplay","QRCode","editQRCode","openSyncModal","moment","update_time","format","news_item","thumb_media_id","local_img_path","placement","groupMessage","syncMaterial","checkedList","docs","closeSyncModal","syncModal","indeterminate","checkAll","onCheckAllChange","nextProps","nextContext","selectGonghaoList","selectTagRadio","message_group_components_GraphicMessage","htmlFor","date_picker","timeString","time_picker","paddingBottom","PureComponent","Panel","Collapse","SingleSelectByGroup","activeKey","search","setCode","selectGonghao","handleChangeGroup","PanelList","locale","emptyText","SingleSelectByGroup_Sider","collapse","accordion","SingleSelectByGroup_Content","History","historyHeader","tag","arr","titles","dataString","loadingWrapper","position","left","zIndex","Loading","spin","spinning","historyModalVisible","clearTimeout","imageStyle","components_SelectGonghao_SingleSelectByGroup","components_Loading","empty","image","material","group_history","Kefu","copyMessage","kefuMessageHeader","sorter","b","kefu_objectSpread","kefu_Option","EditMessage","isUploadImg","isTextUploadImg","FormItemWrapper","Channel","Fragment","input_number","min","kefu_edit_Option","showTime","dateString","borderColor","Template","templateColumns","template_objectSpread","template_Search","SingleSelectModal","colors","colorWrapperStyle","show","overflow","TemplateModal_objectSpread","EditTemplate","GonghaoModal","_loop","pre","SelectGonghao_SingleSelectModal","template_edit_Option","defaultValue","components_TemplateModal","GroupRouter","GroupMaterial","EditKefuMSg","TabPane","Tabs","Advertise","spreadData","domain_names","dataList","changeTab","tabsRender","tab","spreadHeader","wordWrap","userSelect","goTop","spread_objectSpread","deleteLink","copyLink","tabs","animated","defaultActiveKey","tabBarGutter","getSpreadList","_this6","_this7","spreadLinkInfo","links","weights","back_urls","link","back_url","weight","granularity","EditAdvertise","spread_edit_objectSpread","addTag","cancelSelectTag","submitSpreadLink","cancelUpdate","initData","isAddWeight","hasLink","hasBackUrl","hasWeight","delLink","isUpdate","updateWeight","enterButton","saveUpdate","addLink","onClose","borderRight","deleteTag","paddingLeft","list","trim","ChannelWrapper","Spread","EditSpread","Account","accountList","searchValue","lib","onCopy","deleteAccount","searchAccount","getAccountList","handleChangeSearchValue","account_Search","AddAccount","addAccount","validateFields","errors","add_objectSpread","resetForm","getFieldDecorator","xs","rules","required","initialValue","add_Option","AccountRouter","Index","getContent","ts","apiKey","init","menubar","max_height","plugins","toolbar","min_height","default_link_target","fontsize_formats","EditRouter","Reply","replyHeader","verticalAlign","EditReplyInfo","textOrImgText","cancel","SourceWrapper","editGroup","App","loginAt","needLogin","keys","es","decodeURIComponent","src_pages_login","src_common_BasicLayout","TuoguanRouter","MessageRouter","ChannelRouter","encodeURIComponent","React","prototype","MD5","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.a021f0ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login_bg.e3347162.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ad641e9f.png\";","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  // 公号接管\r\n  gonghaoTagList: [],\r\n  allGonghaoList: [],\r\n  originalGonghaoList: [],\r\n  gonghaoList: [],\r\n  group: \"全部\",\r\n  status: \"全部\",\r\n  currentPage: 1,\r\n  searchName: \"\",\r\n  isSelectTag: false,\r\n  selectedTag: \"\",\r\n  isCreate: true,\r\n  gonghaoModal: false,\r\n  gonghaoInfo: {\r\n    group: \"\",\r\n    id: \"\",\r\n    attribute: 0\r\n  },\r\n  // 公号配置\r\n  configList: [],\r\n  configForm: {type: 0, sex: 3, attribute: 1, text: \"\", replyType: 0, msgId: null, key: \"\", urlList: []},\r\n\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state)), _start, _end;\r\n  switch (action.type) {\r\n    case constants.GET_GONGHAO_TAG_LIST:\r\n      newState.gonghaoTagList = action.gonghaoTagList;\r\n      return newState;\r\n    case constants.GET_ALL_GONGHAO_LIST:\r\n      newState.allGonghaoList = newState.originalGonghaoList = action.allGonghaoList;\r\n      newState.gonghaoList = action.gonghaoList;\r\n      return newState;\r\n    case constants.CHANGE_SELECT_VALUE:\r\n      newState.group = newState.status = \"全部\";\r\n      newState[action.key] = action.value;\r\n      if(newState[action.key] === \"全部\") {\r\n        newState.gonghaoList = [...newState.allGonghaoList]\r\n      } else{\r\n        newState.gonghaoList = [...newState.allGonghaoList.filter(item => item[action.key] === action.value)]\r\n      }\r\n      return newState;\r\n    case constants.CHANGE_PAGE:\r\n      _start = (action.page - 1) * 10;\r\n      _end = action.page * 10;\r\n      newState.gonghaoList = newState.allGonghaoList.slice(_start, _end);\r\n      newState.currentPage = action.page;\r\n      return newState;\r\n    case constants.CHANGE_SEARCH_INPUT:\r\n      newState.searchName = action.searchName;\r\n      return newState;\r\n    case constants.SEARCH_BY_NAME:\r\n      newState.allGonghaoList = action.allGonghaoList;\r\n      newState.gonghaoList = action.gonghaoList;\r\n      newState.searchName = \"\";\r\n      return newState;\r\n    case constants.OPEN_GONGHAO_MODAL:\r\n      newState.gonghaoModal = true;\r\n      newState.gonghaoInfo = {id: action.id, group: action.group, attribute: action.attribute};\r\n      return newState;\r\n    case constants.CLOSE_GONGHAO_MODAL:\r\n      newState.gonghaoModal = false;\r\n      newState.gonghaoInfo = {attribute: 0};\r\n      return newState;\r\n    case constants.CHANGE_GROUP:\r\n      newState.gonghaoInfo.group = action.name;\r\n      return newState;\r\n    case  constants.CHANGE_ATTRIBUTE:\r\n      newState.gonghaoInfo.attribute = action.attribute;\r\n      return newState;\r\n    case constants.DELETE_GONGHAO:\r\n      newState.gonghaoList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.SESECT_TAG:\r\n      newState.isSelectTag = true;\r\n      newState.selectedTag = action.selectedTag;\r\n      return newState;\r\n    case constants.REMOVE_TAG:\r\n      newState.isSelectTag = false;\r\n      newState.selectedTag = \"\";\r\n      return newState;\r\n    case constants.TAG_CONFIRM:\r\n      newState.isSelectTag = true;\r\n      newState.selectedTag = action.group;\r\n      action.name && newState.gonghaoTagList.push(action.name);\r\n      return newState;\r\n    case constants.DELETE_TAG_ITEM:\r\n      newState.isSelectTag = false;\r\n      newState.selectedTag = \"\";\r\n      newState.gonghaoTagList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CHECK_PAGE_ATTR:\r\n      newState.isCreate = false;\r\n      return newState;\r\n    case constants.JIEGUAN_GONGHAO:\r\n      newState.gonghaoList[action.index].status = 0;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","const backTop = () => {\r\n  return new Promise((resolve, reject) => {\r\n    let timer;\r\n    timer = setInterval(function () {\r\n      let osTop =\r\n        document.documentElement.scrollTop || document.body.scrollTop;\r\n      let ispeed = Math.floor(-osTop / 1.2);\r\n      document.documentElement.scrollTop = document.body.scrollTop =\r\n        osTop + ispeed;\r\n      if (osTop === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 30);\r\n    resolve(null)\r\n  })\r\n};\r\n\r\nexport default backTop;","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\nimport backTop from '../../../../utils';\r\n\r\nexport const getGroupList = () => {\r\n  return (dispatch) => {\r\n    axios.get('/gonghaoTag')\r\n      .then(res => {\r\n        if (res.data.code === 1) {\r\n          let gonghaoTagList = res.data.data;\r\n          const action = {\r\n            type: constants.GET_GONGHAO_TAG_LIST,\r\n            gonghaoTagList\r\n          };\r\n          dispatch(action)\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const getAllGonghaoList = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let allGonghaoList = res.data.data,\r\n            gonghaoList = allGonghaoList;\r\n          const action = {\r\n            type: constants.GET_ALL_GONGHAO_LIST,\r\n            allGonghaoList,\r\n            gonghaoList\r\n          };\r\n          dispatch(action);\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changePage = (page) => {\r\n  return async dispatch => {\r\n    const action = {\r\n      type: constants.CHANGE_PAGE,\r\n      page\r\n    };\r\n    await backTop();\r\n    await dispatch(action);\r\n  }\r\n};\r\n\r\n\r\nexport const changeSearchInput = (searchName) => ({\r\n  type: constants.CHANGE_SEARCH_INPUT,\r\n  searchName\r\n});\r\n\r\nexport const searchByName = (nick_name) => {\r\n  return dispatch => {\r\n    axios.get('/conf/find_one', {params: {nick_name}})\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let allGonghaoList = res.data.data,\r\n            gonghaoList = allGonghaoList;\r\n          const action = {\r\n            type: constants.SEARCH_BY_NAME,\r\n            allGonghaoList, gonghaoList\r\n          };\r\n          dispatch(action);\r\n          message.success(\"查询成功\")\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeSelectValue = (key, value) => ({\r\n  type: constants.CHANGE_SELECT_VALUE,\r\n  key, value\r\n});\r\n\r\nexport const deleteGonghao = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认删除吗？\",\r\ntitle: \"提示\",\r\n      onOk: () => {\r\n        axios.get(\"/conf/del\", {\r\n          params: {id}\r\n        }).then(res => {\r\n          const action = {\r\n            type: constants.DELETE_GONGHAO,\r\n            index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"删除成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const jieguan = (code, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认接管吗？\",\r\ntitle: \"提示\",\r\n      onOk: () => {\r\n        axios.get(\"/conf/jieguan\", {\r\n          params: {code}\r\n        }).then(res => {\r\n          const action = {\r\n            type: constants.JIEGUAN_GONGHAO,\r\n            index\r\n          };\r\n          dispatch(action);\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const addNewGonghao = () => {\r\n  return dispatch => {\r\n    axios.get('/component/componentAuthorize')\r\n      .then(res => {\r\n        window.open(res.data)\r\n      })\r\n  }\r\n};\r\n\r\nexport const openGonghaoModal = (id, group, attribute) => ({\r\n  type: constants.OPEN_GONGHAO_MODAL,\r\n  id, group, attribute\r\n});\r\n\r\nexport const closeGonghaoModal = () => ({\r\n  type: constants.CLOSE_GONGHAO_MODAL\r\n});\r\n\r\nexport const updateGonghaoInfo = gonghaoInfo => {\r\n  return dispatch => {\r\n    console.log(gonghaoInfo)\r\n    axios.put('/conf', {...gonghaoInfo})\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          message.success(res.data.msg);\r\n          dispatch(closeGonghaoModal());\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeGroup = name => ({\r\n  type: constants.CHANGE_GROUP,\r\n  name\r\n});\r\n\r\nexport const changeAttribute = attribute => ({\r\n  type: constants.CHANGE_ATTRIBUTE,\r\n  attribute\r\n});\r\n\r\nexport const selectTag = (selectedTag) => ({\r\n  type: constants.SESECT_TAG,\r\n  selectedTag\r\n});\r\n\r\nexport const removeTag = () => ({\r\n  type: constants.REMOVE_TAG\r\n});\r\n\r\nexport const tagConfirm = (group, props) => {\r\n  return (dispatch) => {\r\n    let name;\r\n    axios.post(\"/gonghaoTag\", {name: group})\r\n      .then(res => {\r\n        if (res.data.exist === 0) {\r\n          name = res.data.data\r\n        }\r\n        props.form.setFieldsValue({group})\r\n        const action = {\r\n          type: constants.TAG_CONFIRM,\r\n          name, group\r\n        };\r\n        dispatch(action)\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteTagItem = (id, index) => {\r\n  return (dispatch) => {\r\n    axios.delete('/gonghaoTag/' + id)\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.DELETE_TAG_ITEM,\r\n          index\r\n        };\r\n        dispatch(action)\r\n      });\r\n  }\r\n};\r\n\r\nexport const createForm = (gonghaoInfo, history) => {\r\n  return (dispatch) => {\r\n    axios.post(\"/conf/create\", gonghaoInfo).then(res => {\r\n      history.goBack();\r\n      const action = {\r\n        type: constants.CREATE_FORM,\r\n        gonghaoInfo\r\n      };\r\n      dispatch(action);\r\n      message.success(\"添加成功\")\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateForm = (gonghaoInfo, history) => {\r\n  return (dispatch) => {\r\n    axios.post(\"/conf/update\", gonghaoInfo).then(res => {\r\n      history.goBack();\r\n      getAllGonghaoList();\r\n      const action = {\r\n        type: constants.UPDATE_FORM,\r\n        gonghaoInfo\r\n      };\r\n      dispatch(action);\r\n      message.success(\"修改成功\")\r\n    });\r\n  }\r\n};\r\n\r\nexport const checkPageAttr = () => ({\r\n  type: constants.CHECK_PAGE_ATTR\r\n});\r\n\r\n// 公号配置\r\n\r\nexport const getConfigList = (code) => {\r\n  return (dispatch) => {\r\n    axios.get('/reply', {params: {code}})\r\n      .then(res => {\r\n        let configList = res.data.data;\r\n        const action = {\r\n          type: constants.GET_CONFIG_LIST,\r\n          configList\r\n        };\r\n        dispatch(action)\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteConfig = (id, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认删除吗？\",\r\n      title: \"提示\",\r\n      onOk: () => {\r\n        axios.get('/reply/del', {params: {id}})\r\n          .then(res => {\r\n          const action = {\r\n            type: constants.DELETE_CONFIG,\r\n            index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"删除成功\")\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n};\r\n\r\nexport const changeConfigForm = (formInfo) => ({\r\n  type: constants.CHANGE_CONFIG_FORM,\r\n  formInfo\r\n});\r\n\r\nexport const createConfigForm = (configInfo, history) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      title: \"确定新建一条规则吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/create\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.CREATE_CONFIG_FORM,\r\n            configInfo\r\n          };\r\n          dispatch(action);\r\n          message.success(\"创建成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const updateConfigForm = (configInfo, history, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      title: \"确定修改吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/update\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.UPDATE_CONFIG_FORM,\r\n            configInfo, index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"修改成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\n","export const GET_GONGHAO_TAG_LIST = \"gonghao/tuoguan/getGonghaoTagList\";\r\nexport const GET_ALL_GONGHAO_LIST = \"gonghao/tuoguan/getAllGonghaoList\";\r\nexport const CHANGE_PAGE = \"gonghao/tuoguan/changePage\";\r\nexport const SEARCH_BY_NAME = \"gonghao/tuoguan/searchByName\";\r\nexport const DELETE_GONGHAO = \"gonghao/tuoguan/deleteGonghao\";\r\nexport const JIEGUAN_GONGHAO = \"gonghao/tuoguan/jieguan\";\r\nexport const CHANGE_SEARCH_INPUT = \"gonghao/tuoguan/changeSearchInput\";\r\nexport const SESECT_TAG = \"gonghao/tuoguan/selectTag\";\r\nexport const REMOVE_TAG = \"gonghao/tuoguan/removeTag\";\r\nexport const TAG_CONFIRM = \"gonghao/tuoguan/tagConfirm\";\r\nexport const DELETE_TAG_ITEM = \"gonghao/tuoguan/deleteTagItem\";\r\nexport const CREATE_FORM = \"gonghao/tuoguan/createForm\";\r\nexport const UPDATE_FORM = \"gonghao/tuoguan/updateForm\";\r\nexport const CHECK_PAGE_ATTR = \"gonghao/tuoguan/checkPageAttr\";\r\nexport const OPEN_GONGHAO_MODAL = \"gonghao/tuoguan/openGonghaoModal\";\r\nexport const CLOSE_GONGHAO_MODAL = \"gonghao/tuoguan/closeGonghaoModal\";\r\nexport const CHANGE_GROUP = \"gonghao/tuoguan/changeGroup\";\r\nexport const CHANGE_ATTRIBUTE = \"gonghao/tuoguan/changeAttribute\";\r\nexport const CHANGE_SELECT_VALUE = \"gonghao/tuoguan/changeSelectValue\";\r\n\r\n// 公号配置\r\nexport const GET_CONFIG_LIST = \"gonghao/tuoguan/getConfigList\";\r\nexport const DELETE_CONFIG = \"gonghao/tuoguan/deleteConfig\";\r\nexport const CREATE_CONFIG_FORM = \"gonghao/tuoguan/createConfigForm\";\r\nexport const UPDATE_CONFIG_FORM = \"gonghao/tuoguan/updateConfigForm\";\r\nexport const CHANGE_CONFIG_FORM = \"gonghao/tuoguan/changeConfigForm\";\r\n","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  menuList: [],\r\n  menuIndex: -1,\r\n  secMenuIndex: -1,\r\n  isSubmit: false,\r\n  allCodes: [],\r\n  targetKeys: [],\r\n  sub_button: {\r\n    name: \"子菜单名称\",\r\n    type: \"view\",\r\n    key: \"\",\r\n    url: \"\"\r\n  },\r\n  menuForm: {\r\n    name: \"菜单名称\",\r\n    type: \"view\",\r\n    key: \"\",\r\n    url: \"\",\r\n    sub_button: []\r\n  },\r\n  menuInfo: {\r\n    title: \"\",\r\n    individual: false,\r\n    sex: \"0\",\r\n    values: [],\r\n    codes: []\r\n  }\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case constants.GET_MENU_LIST:\r\n      newState.menuList = action.menuList;\r\n      return newState;\r\n    case constants.DELETE_MENU:\r\n      newState.menuList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.HANDLE_INFO_CHANGE:\r\n      newState.menuInfo[action.name] = action.value;\r\n      return newState;\r\n    case constants.HANDLE_INDIVIDUAL_CHANGE:\r\n      newState.menuInfo.individual = action.value;\r\n      Object.assign(newState.menuForm, {\r\n        sex: 0\r\n      });\r\n      return newState;\r\n    case constants.HANDLE_INPUT_CHANGE:\r\n      newState.menuForm[action.name] = action.value;\r\n      action.name === \"type\" && Object.assign(newState.menuForm, {\r\n        key: \"\",\r\n        url: \"\"\r\n      });\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm})\r\n      return newState;\r\n    case constants.HANDLE_SUB_INPUT_CHANGE:\r\n      newState.sub_button[action.name] = action.value;\r\n      action.name === \"type\" && Object.assign(newState.sub_button, {\r\n        key: \"\",\r\n        url: \"\"\r\n      });\r\n      newState.menuForm.sub_button.splice(newState.secMenuIndex, 1, {...newState.sub_button});\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm})\r\n      return newState;\r\n    case constants.ADD_FIRST_MENU:\r\n      newState.menuForm = {\r\n        name: \"菜单名称\",\r\n        type: \"view\",\r\n        key: \"\",\r\n        url: \"\",\r\n        sub_button: []\r\n      };\r\n      newState.menuInfo.values.push({...newState.menuForm});\r\n      newState.menuIndex = newState.menuInfo.values.length - 1;\r\n      return newState;\r\n    case constants.EDIT_MENU:\r\n      newState.menuIndex = action.index;\r\n      newState.menuForm = {...action.data};\r\n      newState.menuForm.sub_button && (newState.sub_button = {...newState.menuForm.sub_button[0]});\r\n      return newState;\r\n    case constants.ADD_SECOND_MENU:\r\n      newState.sub_button = {\r\n        name: \"子菜单名称\",\r\n        type: \"view\",\r\n        key: \"\",\r\n        url: \"\"\r\n      };\r\n      newState.menuForm.sub_button.push({...newState.sub_button});\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm});\r\n      newState.secMenuIndex = newState.menuForm.sub_button.length - 1;\r\n      return newState;\r\n    case constants.EDIT_SEC_MENU:\r\n      newState.secMenuIndex = action.index;\r\n      newState.sub_button = {...action.data};\r\n      return newState;\r\n    case constants.DELETE_Fir_MENU:\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1);\r\n      newState.menuIndex = newState.menuInfo.values.length - 1;\r\n      newState.menuForm = newState.menuInfo.values[0] || {\r\n        name: \"菜单名称\",\r\n        type: \"view\",\r\n        key: \"\",\r\n        url: \"\",\r\n        sub_button: []\r\n      };\r\n      return newState;\r\n    case constants.DELETE_SUB_MENU:\r\n      newState.menuForm.sub_button.splice(newState.secMenuIndex, 1);\r\n      newState.menuInfo.values[newState.menuIndex].sub_button.splice(newState.secMenuIndex, 1);\r\n      newState.secMenuIndex = newState.menuForm.sub_button.length - 1;\r\n      newState.sub_button = newState.menuForm.sub_button[0] || {\r\n        name: \"子菜单名称\",\r\n        type: \"view\",\r\n        key: \"\",\r\n        url: \"\"\r\n      };\r\n      return newState;\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = [...action.allCodes];\r\n      return newState;\r\n    case constants.CHANGE_GONGHAO:\r\n      newState.menuInfo.codes = newState.targetKeys = [...action.targetKeys];\r\n      return newState;\r\n    case constants.OPEN_MADAL:\r\n      newState.isSubmit = true;\r\n      return newState;\r\n    case constants.SUBMIT_MENU:\r\n      newState.isSubmit = false;\r\n      return newState;\r\n    case constants.CANCEL_MENU:\r\n      newState.isSubmit = false;\r\n      return newState;\r\n    case constants.INIT_MENU_INFO:\r\n      newState.menuInfo = action.record;\r\n      newState.menuInfo.id = action.record._id;\r\n      newState.targetKeys = [...newState.menuInfo.codes];\r\n      newState.menuForm = {...newState.menuInfo.values[0]};\r\n      if(newState.menuForm.sub_button) {\r\n        newState.sub_button = {...newState.menuForm.sub_button[0]};\r\n      }\r\n      return newState;\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n\r\nexport const getMenuList = () => {\r\n  return dispatch => {\r\n    axios.get('/menu')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let menuList = res.data.data.reverse();\r\n          const action = {\r\n            type: constants.GET_MENU_LIST,\r\n            menuList\r\n          };\r\n          dispatch(action);\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteMenu = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/menu/del\", {params: {id: id}})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              const action = {\r\n                type: constants.DELETE_MENU,\r\n                index\r\n              };\r\n              dispatch(action);\r\n              message.success(res.data.success)\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const handleInfoChange = (value, name) => ({\r\n  type: constants.HANDLE_INFO_CHANGE,\r\n  value, name\r\n});\r\n\r\nexport const handleIndividualChange = value => ({\r\n  type: constants.HANDLE_INDIVIDUAL_CHANGE,\r\n  value\r\n});\r\n\r\nexport const handleInputChange = (name, value) => ({\r\n  type: constants.HANDLE_INPUT_CHANGE,\r\n  name, value\r\n});\r\n\r\nexport const handleSubInputChange = (name, value) => ({\r\n  type: constants.HANDLE_SUB_INPUT_CHANGE,\r\n  name, value\r\n});\r\n\r\nexport const addFirstMenu = () => ({\r\n  type: constants.ADD_FIRST_MENU\r\n});\r\n\r\nexport const editMenu = (data, index) => ({\r\n  type: constants.EDIT_MENU,\r\n  index, data\r\n});\r\n\r\nexport const addSecondMenu = () => ({\r\n  type: constants.ADD_SECOND_MENU\r\n});\r\n\r\nexport const openModal = () => ({\r\n  type: constants.OPEN_MADAL\r\n});\r\n\r\nexport const submitMenu = props => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定提交吗？\",\r\n      onOk: () => {\r\n        axios.post(props.history.location.query ? \"/menu/update\" : \"/menu/create\", {...props.menuInfo})\r\n          .then(res => {\r\n            const action = {\r\n              type: constants.SUBMIT_MENU\r\n            };\r\n            dispatch(action);\r\n            props.history.goBack();\r\n            resetState();\r\n          })\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n\r\nexport const cancelMenu = () => ({\r\n  type: constants.CANCEL_MENU\r\n});\r\n\r\n\r\nexport const editSecMenu = (data, index) => ({\r\n  type: constants.EDIT_SEC_MENU,\r\n  index, data\r\n});\r\n\r\nexport const deleteFirMenu = () => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        dispatch({ type: constants.DELETE_Fir_MENU})\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteSubMenu = () => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        dispatch({ type: constants.DELETE_SUB_MENU})\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        let allCodes = res.data.data;\r\n        const action = {\r\n          type: constants.GET_ALL_CODES,\r\n          allCodes\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeGonghao = targetKeys => ({\r\n  type: constants.CHANGE_GONGHAO,\r\n  targetKeys\r\n});\r\n\r\nexport const initMenuInfo = record => ({\r\n  type: constants.INIT_MENU_INFO,\r\n  record\r\n});\r\n\r\n\r\n","export const GET_MENU_LIST = \"gonghao/menu/getMenuList\";\r\nexport const DELETE_MENU = \"gonghao/menu/deleteMenu\";\r\nexport const HANDLE_INFO_CHANGE = \"gonghao/menu/handleInfoChange\";\r\nexport const HANDLE_INDIVIDUAL_CHANGE = \"gonghao/menu/handleIndividualChange\";\r\nexport const HANDLE_INPUT_CHANGE = \"gonghao/menu/handleInputChange\";\r\nexport const HANDLE_SUB_INPUT_CHANGE = \"gonghao/menu/handleSubInputChange\";\r\nexport const ADD_FIRST_MENU = \"gonghao/menu/addFirstMenu\";\r\nexport const ADD_SECOND_MENU = \"gonghao/menu/addSecondMenu\";\r\nexport const EDIT_MENU = \"gonghao/menu/editMenu\";\r\nexport const EDIT_SEC_MENU = \"gonghao/menu/editSecMenu\";\r\nexport const SUBMIT_MENU = \"gonghao/menu/submitMenu\";\r\nexport const OPEN_MADAL = \"gonghao/menu/openModal\";\r\nexport const CANCEL_MENU = \"gonghao/menu/cancelMenu\";\r\nexport const DELETE_Fir_MENU = \"gonghao/menu/deleteFirMenu\";\r\nexport const DELETE_SUB_MENU = \"gonghao/menu/deleteSubMenu\";\r\nexport const GET_ALL_CODES = \"gonghao/menu/getAllCodes\";\r\nexport const CHANGE_GONGHAO = \"gonghao/menu/changeGonghao\";\r\nexport const INIT_MENU_INFO = \"gonghao/menu/initMenuInfo\";\r\nexport const RESET_STATE = \"gonghao/menu/resetState\";\r\n","import * as constants from './constants';\r\n\r\nconst resetFields = {\r\n  type: 0,\r\n  sex: 3,\r\n  attribute: 1,\r\n  replyType: 0,\r\n  codes: [],\r\n  articles: []\r\n};\r\n\r\nconst defaultState = {\r\n  // 公号配置\r\n  replyMessageList: [],\r\n  messageInfo: JSON.parse(JSON.stringify(resetFields)),\r\n  allCodes: [],\r\n  selectGonghaoModal: true,\r\n  updateIndex: -1,\r\n  messageIndex: -1\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    // 公号配置\r\n    case constants.GET_REPLY_MESSAGE_LIST:\r\n      newState.replyMessageList = action.replyMessageList;\r\n      return newState;\r\n    case constants.DELETE_REPLY_MESSAGE:\r\n      newState.replyMessageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = action.allCodes;\r\n      return newState;\r\n    case constants.CLOSE_SELECT_MODAL:\r\n      newState.selectGonghaoModal = false;\r\n      return newState;\r\n    case constants.OPEN_SELECT_MODAL:\r\n      newState.selectGonghaoModal = true;\r\n      return newState;\r\n    case constants.CHANGE_MESSAGE_INFO:\r\n      newState.messageInfo[action.key] = action.value;\r\n      return newState;\r\n    case constants.ADD_TO_LIST:\r\n      const { title, picurl, url, description } = newState.messageInfo;\r\n      newState.messageInfo.articles.push({...{ title, picurl, url, description }});\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      return newState;\r\n    case constants.UPDATE_MESSAGE_ITEM:\r\n      const { item, index} = action;\r\n      Object.assign(newState.messageInfo, {...item});\r\n      newState.updateIndex = index;\r\n      return newState;\r\n    case constants.UPDATE_CURRENT_MESSAGE:\r\n      let message = {\r\n        title: newState.messageInfo.title,\r\n        picurl: newState.messageInfo.picurl,\r\n        url: newState.messageInfo.url,\r\n        description: newState.messageInfo.description\r\n      };\r\n      newState.messageInfo.articles.splice(newState.updateIndex, 1, {...message});\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n    case constants.DELETE_CURRENT_MESSAGE:\r\n      newState.messageInfo.articles.splice(newState.updateIndex, 1);\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n\r\n    case constants.INIT_STATE:\r\n      newState.messageInfo = JSON.parse(JSON.stringify(action.record));\r\n      newState.messageIndex = action.index;\r\n      if(newState.messageInfo.replyType === 1) {\r\n        Object.assign(newState.messageInfo, newState.messageInfo.articles[0]);\r\n        newState.updateIndex = 0;\r\n      }\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = JSON.parse(JSON.stringify(defaultState));\r\n      return newState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n\r\n// 公号配置\r\n\r\nexport const getReplyMessageList = () => {\r\n  return dispatch => {\r\n    axios.get('/reply')\r\n      .then(res => {\r\n        let replyMessageList = res.data.data;\r\n        const action = {\r\n          type: constants.GET_REPLY_MESSAGE_LIST,\r\n          replyMessageList\r\n        };\r\n        dispatch(action)\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteReplyMessage = (_id, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认删除吗？\",\r\n      title: \"提示\",\r\n      onOk: () => {\r\n        axios.get('/reply/del', {params: {_id}})\r\n          .then(res => {\r\n          const action = {\r\n            type: constants.DELETE_REPLY_MESSAGE,\r\n            index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"删除成功\")\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          const {data: allCodes} = res.data;\r\n          dispatch({ type: constants.GET_ALL_CODES, allCodes });\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const closeSelectModal = () => ({\r\n  type: constants.CLOSE_SELECT_MODAL\r\n});\r\n\r\nexport const openSelectModal = () => ({\r\n  type: constants.OPEN_SELECT_MODAL\r\n});\r\n\r\nexport const changeMessageInfo = (key, value) => ({\r\n  type: constants.CHANGE_MESSAGE_INFO,\r\n  key, value\r\n});\r\n\r\nexport const addToList = () => ({\r\n  type: constants.ADD_TO_LIST\r\n});\r\n\r\nexport const updateMessageItem = (item, index) => ({\r\n  type: constants.UPDATE_MESSAGE_ITEM,\r\n  item, index\r\n});\r\n\r\nexport const updateCurrentMessage = () => ({\r\n  type: constants.UPDATE_CURRENT_MESSAGE\r\n});\r\n\r\nexport const deleteCurrentMessage = () => ({\r\n  type: constants.DELETE_CURRENT_MESSAGE\r\n});\r\n\r\nexport const createConfigForm = (configInfo, history) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      title: \"确定新建一条规则吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/create\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.CREATE_CONFIG_FORM,\r\n            configInfo\r\n          };\r\n          dispatch(action);\r\n          message.success(\"创建成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const updateConfigForm = (configInfo, history, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      title: \"确定修改吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/update\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.UPDATE_CONFIG_FORM,\r\n            configInfo, index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"修改成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n\r\nexport const initState = (record, index) => ({\r\n  type: constants.INIT_STATE,\r\n  record, index\r\n});","export const GET_REPLY_MESSAGE_LIST = \"gonghao/reply/getReplyMessageList\";\r\nexport const DELETE_REPLY_MESSAGE = \"gonghao/reply/deleteReplyMessage\";\r\n\r\nexport const INIT_STATE = \"gonghao/reply/initState\";\r\n// 获取所有公号\r\nexport const GET_ALL_CODES = \"gonghao/reply/getAllCodes\";\r\nexport const CLOSE_SELECT_MODAL = \"gonghao/reply/closeSelectModal\";\r\nexport const OPEN_SELECT_MODAL = \"gonghao/reply/openSelectModal\";\r\nexport const ADD_TO_LIST = \"gonghao/reply/addToList\";\r\nexport const CHANGE_MESSAGE_INFO = \"gonghao/reply/changeMessageInfo\";\r\nexport const UPDATE_MESSAGE_ITEM = \"gonghao/reply/updateMessageItem\";\r\nexport const UPDATE_CURRENT_MESSAGE = \"gonghao/reply/updateCurrentMessage\";\r\nexport const DELETE_CURRENT_MESSAGE = \"gonghao/reply/deleteCurrentMessage\";\r\n\r\n\r\nexport const CREATE_CONFIG_FORM = \"gonghao/reply/createConfigForm\";\r\nexport const UPDATE_CONFIG_FORM = \"gonghao/reply/updateConfigForm\";\r\n\r\n\r\nexport const RESET_STATE = \"gonghao/reply/resetState\";","import { combineReducers } from 'redux';\r\nimport { reducer as tuoguanReducer } from './tuoguan/store';\r\nimport { reducer as menuReducer } from './menu/store';\r\nimport { reducer as replyReducer } from './reply/store';\r\n\r\nconst reducer = combineReducers({\r\n  tuoguan: tuoguanReducer,\r\n  menu: menuReducer,\r\n  reply: replyReducer,\r\n});\r\n\r\nexport default reducer;","export const GET_GROUP_GONGHAO = \"gonghao/group/getGroupGonghao\";\r\nexport const CHANGE_SEARCH_INPUT = \"gonghao/group/changeSearchInput\";\r\nexport const SEARCH_BY_NAME = \"gonghao/group/search\";\r\n\r\n// 群发素材\r\nexport const GET_GROUP_MATERIAL = \"gonghao/group/getMessageList\";\r\nexport const OPEN_MODAL = \"gonghao/group/openModal\";\r\nexport const OPEN_TIMING_MODAL = \"gonghao/group/openTimingModal\";\r\nexport const CHANGE_TAG_ID = \"gonghao/group/changeTagId\";\r\nexport const GET_TAG_LIST = \"gonghao/group/getTagList\";\r\nexport const CLOSE_MODAL = \"gonghao/group/closeModal\";\r\nexport const CHANGE_TIMING_STATE = \"gonghao/group/changeTimingState\";\r\nexport const CHANGE_TIME = \"gonghao/group/changeTime\";\r\nexport const COPY = \"gonghao/group/copy\";\r\nexport const DELETE_MATERIAL = \"gonghao/group/deleteMaterial\";\r\nexport const CLEAR_MATERIAL = \"gonghao/group/clearMaterial\";\r\nexport const OPEN_UPDATE_MATERIAL_MODAL = \"gonghao/group/openUpdateMaterialModal\";\r\nexport const CLOSE_UPDATE_MATERIAL_MODAL = \"gonghao/group/closeUpdateMaterialModal\";\r\nexport const CHANGE_CONTENT_SOURCE_URL = \"gonghao/group/changeContentSourceUrl\";\r\n\r\n// 群发历史\r\nexport const GET_HISTORY_LIST = \"gonghao/group/getHistoryList\";\r\nexport const OPEN_MSG_MODAL = \"gonghao/group/openMsgModal\";\r\nexport const CLOSE_MSG_MODAL = \"gonghao/group/closeMsgModal\";\r\nexport const CHANGE_ARTICLE_IDX = \"gonghao/group/changeArticleIdx\";\r\nexport const CLEAR_HISTORY = \"gonghao/group/clearHistory\";\r\nexport const CHANGE_DATE = \"gonghao/group/changeDate\";\r\n\r\n\r\n\r\n\r\nexport const RESET_STATE = \"gonghao/group/resetState\";\r\n","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  messageList: [],\r\n  isComplete: true,\r\n  tagList: [],\r\n  sendModal: false,\r\n  sendTimingModal: false,\r\n  date: \"\",\r\n  time: \"\",\r\n  sendInfo: {\r\n    id: \"\",\r\n    tagId: null,\r\n    mediaId: \"\"\r\n  },\r\n  sendTimingInfo: {\r\n    id: \"\",\r\n    tagId: null,\r\n    isTiming: false,\r\n    timing: null\r\n  },\r\n  updateInfo: {\r\n    \"media_id\": \"\",\r\n    \"index\": null,\r\n    \"articles\": {\r\n      \"content_source_url\": \"\"\r\n    },\r\n    id: \"\"\r\n  },\r\n  updateMaterialModal: false,\r\n\r\n  historyList: [],\r\n  historyMsgModal: false,\r\n  delMsgInfo: {\r\n    code: null,\r\n    msg_id: \"\",\r\n    article_idx: \"\"\r\n  },\r\n  delDate: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n\r\n    // 群发素材\r\n\r\n    case constants.GET_GROUP_MATERIAL:\r\n      newState.messageList = [...action.data];\r\n      return newState;\r\n    case constants.GET_TAG_LIST:\r\n      newState.tagList = [...action.data];\r\n      return newState;\r\n    case constants.CHANGE_TAG_ID:\r\n      !action.isTiming && (newState.sendInfo.tagId = action.value)\r\n      action.isTiming && (newState.sendTimingInfo.tagId = action.value)\r\n      return newState;\r\n    case constants.CLOSE_MODAL:\r\n      newState.sendInfo = newState.sendTimingInfo = {};\r\n      newState.sendTimingInfo.timing = Date.now();\r\n      newState.sendTimingInfo.isTiming = newState.sendTimingModal = newState.sendModal = false;\r\n      return newState;\r\n    case constants.OPEN_MODAL:\r\n      newState.sendInfo.id = action.record._id;\r\n      newState.sendInfo.tagId = action.record.tagId;\r\n      newState.sendInfo.mediaId = action.record.media_id;\r\n      newState.sendModal = true;\r\n      return newState;\r\n    case constants.OPEN_TIMING_MODAL:\r\n      newState.sendTimingInfo.id = action.record._id;\r\n      newState.sendTimingInfo.tagId = action.record.tagId;\r\n      newState.sendTimingInfo.isTiming = action.record.isTiming;\r\n      newState.sendTimingInfo.timing = action.record.timing;\r\n      newState.sendTimingModal = true;\r\n      return newState;\r\n    case constants.CHANGE_TIMING_STATE:\r\n      newState.sendTimingInfo.isTiming = action.value;\r\n      return newState;\r\n    case constants.CHANGE_TIME:\r\n      if (action.timeType === \"date\") {\r\n        newState.date = action.time\r\n      } else {\r\n        newState.time = action.time\r\n      }\r\n      let dateTime = new Date(newState.date + \" \" + newState.time);\r\n      newState.sendTimingInfo.timing = dateTime.getTime();\r\n      return newState;\r\n    case constants.COPY:\r\n      newState.messageList.unshift({...action.data});\r\n      return newState;\r\n    case constants.DELETE_MATERIAL:\r\n      newState.messageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CLEAR_MATERIAL:\r\n      newState.messageList = [];\r\n      return newState;\r\n    case constants.OPEN_UPDATE_MATERIAL_MODAL:\r\n      newState.updateMaterialModal = true;\r\n      newState.updateInfo = action.updateInfo;\r\n      return newState;\r\n    case constants.CLOSE_UPDATE_MATERIAL_MODAL:\r\n      newState.updateMaterialModal = false;\r\n      newState.updateInfo.articles.content_source_url = \"\";\r\n      return newState;\r\n    case constants.CHANGE_CONTENT_SOURCE_URL:\r\n      newState.updateInfo.articles.content_source_url = action.content_source_url;\r\n      return newState;\r\n\r\n    // 群发历史\r\n    case constants.GET_HISTORY_LIST:\r\n      newState.historyList = [...action.data];\r\n      return newState;\r\n    case constants.OPEN_MSG_MODAL:\r\n      newState.historyMsgModal = true;\r\n      newState.delMsgInfo.code = action.code;\r\n      newState.delMsgInfo.msg_id = action.msg_id;\r\n      return newState;\r\n    case constants.CLOSE_MSG_MODAL:\r\n      newState.historyMsgModal = false;\r\n      newState.delMsgInfo.article_idx = \"\";\r\n      return newState;\r\n    case constants.CHANGE_ARTICLE_IDX:\r\n      newState.delMsgInfo.article_idx = action.value;\r\n      return newState;\r\n    case constants.CLEAR_HISTORY:\r\n      newState.historyList = [];\r\n      return newState;\r\n    case constants.CHANGE_DATE:\r\n      newState.delDate = action.delDate;\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n// 群发公号\r\nconst getGonghaoList = () => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let gonghaoList = res.data.data;\r\n          const action = {\r\n            type: constants.GET_GROUP_GONGHAO,\r\n            gonghaoList\r\n          };\r\n          resolve(action)\r\n        } else {\r\n          reject('error message: 没有数据')\r\n        }\r\n      })\r\n  });\r\n};\r\n\r\nexport const getGroupGonghao = () => {\r\n  return async dispatch => {\r\n    let action = await getGonghaoList();\r\n    dispatch(action);\r\n  }\r\n};\r\n\r\nexport const getMaterial = code => {\r\n  return dispatch => {\r\n    if(code) {\r\n      axios.get('/material', {params: {code}})\r\n        .then(res => {\r\n          message.success(res.data.success);\r\n          setTimeout(function () {\r\n            dispatch(getMessageList(code))\r\n          }, 3000)\r\n        })\r\n    } else {\r\n      message.warning(\"请选择公号后再试\")\r\n    }\r\n  }\r\n};\r\n\r\nexport const openUpdateMaterialModal = updateInfo => ({\r\n  type: constants.OPEN_UPDATE_MATERIAL_MODAL,\r\n  updateInfo\r\n});\r\n\r\nexport const closeUpdateMaterialModal = () => ({\r\n  type: constants.CLOSE_UPDATE_MATERIAL_MODAL\r\n});\r\n\r\nexport const updateMaterial = (updateInfo, code) => {\r\n  return dispatch => {\r\n    axios.put(\"/material/contentSourceUrl\", {...updateInfo, code})\r\n      .then(res => {\r\n        const { code, msg } = res.data;\r\n        if(code === 1) {\r\n          message.success(msg);\r\n          dispatch(closeUpdateMaterialModal())\r\n        } else {\r\n          message.error(msg)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeContentSourceUrl = content_source_url => ({\r\n  type: constants.CHANGE_CONTENT_SOURCE_URL,\r\n  content_source_url\r\n});\r\n\r\n// 群发素材\r\n\r\nexport const getMessageList = code => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"/material/show\", { params: { code: Number(code) } })\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        const action = {\r\n          type: constants.GET_GROUP_MATERIAL,\r\n          data\r\n        };\r\n        dispatch(action)\r\n      });\r\n  }\r\n};\r\n\r\nexport const getTagList = code => {\r\n  return dispatch => {\r\n    axios.get(\"/material/tag\", {params: {code}})\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        const action = {\r\n          type: constants.GET_TAG_LIST,\r\n          data\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeTagId = (value, isTiming) => ({\r\n  type: constants.CHANGE_TAG_ID,\r\n  value, isTiming\r\n});\r\n\r\nexport const closeModal = () => ({\r\n  type: constants.CLOSE_MODAL\r\n});\r\n\r\nexport const openModal = record => ({\r\n  type: constants.OPEN_MODAL,\r\n  record\r\n});\r\n\r\nexport const sendMessage = sendInfo => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定发送消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/material/sendMsg\", {params: {...sendInfo}})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            dispatch(closeModal());\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const openTimingModal = record => ({\r\n  type: constants.OPEN_TIMING_MODAL,\r\n  record\r\n});\r\n\r\nexport const sendTimingMessage = (sendTimingInfo, code) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定定时发送消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/material/send_timing\", {params: {...sendTimingInfo}})\r\n          .then(res => {\r\n            message.info(\"设置成功\");\r\n            dispatch(getMessageList(code));\r\n            dispatch(closeModal());\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeTimingState = value => ({\r\n  type: constants.CHANGE_TIMING_STATE,\r\n  value\r\n});\r\n\r\nexport const changeTime = (time, timeType) => ({\r\n  type: constants.CHANGE_TIME,\r\n  time, timeType\r\n});\r\n\r\nexport const copy = id => {\r\n  return dipatch => {\r\n    Modal.confirm({\r\n      title: \"确定复制这条素材吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/material/copy\", {id})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              const { data } = res.data;\r\n              message.success(res.data.success);\r\n              const action = {\r\n                type: constants.COPY,\r\n                data\r\n              };\r\n              dipatch(action)\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const deleteMaterial = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条素材吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/material/del\", {params: {id}})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.success(res.data.success);\r\n              const action = {\r\n                type: constants.DELETE_MATERIAL,\r\n                 index\r\n              };\r\n              dispatch(action);\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const clearMaterial = code => {\r\n  return dispatch => {\r\n    if(code) {\r\n      Modal.confirm({\r\n        title: \"确定清空列表吗？\",\r\n        onOk: () => {\r\n          axios.get(\"/material/clear\", { params: { code } })\r\n            .then(res => {\r\n              message.info(res.data.success);\r\n              const action = {\r\n                type: constants.CLEAR_MATERIAL\r\n              };\r\n              dispatch(action);\r\n            });\r\n        }\r\n      })\r\n    } else {\r\n      message.warning(\"请选择公号后再试\")\r\n    }\r\n  }\r\n};\r\n\r\n// 群发历史\r\n\r\nexport const getHistoryList = code => {\r\n  return dispatch => {\r\n    axios.get(\"/history\", {params: {code}})\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        const action = {\r\n          type: constants.GET_HISTORY_LIST,\r\n          data\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const checkSendState = (code, msg_id) => {\r\n  return dispatch => {\r\n    axios.get(\"/history/state\", { params: { code, msg_id }})\r\n      .then(res => {\r\n        message.info(res.data.data.msg_status)\r\n      })\r\n  }\r\n};\r\n\r\nexport const openMsgModal = (code, msg_id) => ({\r\n  type: constants.OPEN_MSG_MODAL,\r\n  code, msg_id\r\n});\r\n\r\nexport const closeMsgModal = () => ({\r\n  type: constants.CLOSE_MSG_MODAL\r\n});\r\n\r\nexport const changeArticleIdx = value => ({\r\n  type: constants.CHANGE_ARTICLE_IDX,\r\n  value\r\n});\r\n\r\nexport const deleteMsg = (delMsgInfo) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除吗？\",\r\n      onOk: () => {\r\n        axios.get('/history/del_msg', {\r\n          params: {...delMsgInfo}\r\n        }).then(res => {\r\n          message.info(res.data.success);\r\n          dispatch(closeMsgModal());\r\n        })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const clearHistory = code => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定清空列表？\",\r\n      onOk: () => {\r\n        axios.get(\"/history/clear\", {params: {code}})\r\n          .then(res => {\r\n            message.success(res.data.success);\r\n            const action = {\r\n              type: constants.CLEAR_HISTORY\r\n            };\r\n            dispatch(action);\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeDate = delDate => ({\r\n  type: constants.CHANGE_DATE,\r\n  delDate\r\n});\r\n\r\nexport const deleteMany = (code, date) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: '确认删除吗?:',\r\n      onOk: () => {\r\n        axios.get('/history/delByDate', {params: {date, code}})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            dispatch(getHistoryList())\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n","import * as constants from './constants';\r\n\r\nconst initContent = {\r\n  description: \"\",\r\n  title: \"\",\r\n  url: \"\",\r\n  picurl: \"\"\r\n};\r\n\r\nconst defaultState = {\r\n  allMessageList: [],\r\n  kefuMessageList: [],\r\n  messageType: 3,\r\n  kefuMessageInfo: {\r\n    contents: [],\r\n    type: 0,\r\n    img: \"\",\r\n    img_path: \"\",\r\n    channel: 0,\r\n    sex: \"all\",\r\n    timing_time: new Date(),\r\n    delay: null,\r\n    tagId: \"\",\r\n    tagName: \"\",\r\n    codes: [],\r\n    remarks: \"\",\r\n    action_type: 0,\r\n    isHour: 0\r\n  },\r\n  content: initContent,\r\n  messageIndex: -1,\r\n  paramsModal: false,\r\n  allCodes: [],\r\n  selectGonghaoModal: true,\r\n  previewModal: false,\r\n  openid: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case constants.GET_KEFU_MESSAGE_LIST:\r\n      newState.allMessageList = newState.kefuMessageList = [...action.kefuMessageList];\r\n      return newState;\r\n    case constants.CREATE_KEFU_MESSAGE:\r\n      newState.kefuMessageList.unshift({...action.data});\r\n      return newState;\r\n    case constants.DELETE_LAST_MESSAGE:\r\n      newState.kefuMessageList = [];\r\n      return newState;\r\n    case constants.DELETE_MESSAGE:\r\n      newState.kefuMessageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.HANDLE_CHANGE_TYPE:\r\n      const { messageType: type } = action;\r\n      newState.messageType = type;\r\n      type === 0 && (newState.kefuMessageList = newState.allMessageList.filter(item => !(item.delay || item.is_timing)));\r\n      type === 1 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item.delay));\r\n      type === 2 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item.is_timing));\r\n      type === 3 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item));\r\n      return newState;\r\n\r\n    // 编辑客服消息\r\n    case constants.CHANGE_CONTENT_VALUE:\r\n      newState.content[action.name] = action.value;\r\n      newState.kefuMessageInfo.contents.splice(newState.messageIndex, 1, newState.content);\r\n      return newState;\r\n    case constants.CHANGE_MESSAGE_VALUE:\r\n      newState.kefuMessageInfo[action.name] = action.value;\r\n      if(action.name === \"type\") {\r\n        newState.content = initContent;\r\n        newState.kefuMessageInfo.contents = [];\r\n        newState.kefuMessageInfo.img = newState.kefuMessageInfo.img_path =  \"\";\r\n        newState.messageIndex = -1;\r\n        if(action.value === 0) {\r\n          newState.kefuMessageInfo.contents.push(newState.content);\r\n          newState.messageIndex = 0;\r\n        }\r\n      }\r\n      if(action.name === \"channel\") {\r\n        Object.assign(newState.kefuMessageInfo, {timing_time: new Date(), delay: 5})\r\n      }\r\n      return newState;\r\n    case constants.ADD_MESSAGE:\r\n      newState.content = initContent;\r\n      newState.kefuMessageInfo.contents.push(newState.content);\r\n      newState.messageIndex = newState.kefuMessageInfo.contents.length - 1;\r\n      return newState;\r\n    case constants.SELECT_MESSAGE:\r\n      newState.content = {...action.info};\r\n      newState.messageIndex = action.index;\r\n      return newState;\r\n    case constants.SELECT_PARAMS:\r\n      newState.paramsModal = true;\r\n      return newState;\r\n    case constants.HIDE_PARAMS_MODAL:\r\n      newState.paramsModal = false;\r\n      return newState;\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = [...action.allCodes];\r\n      return newState;\r\n    case constants.CHANGE_GONGHAO:\r\n      newState.kefuMessageInfo.codes = [...action.codes];\r\n      return newState;\r\n    case constants.OPEN_SELECT_MODAL:\r\n      newState.selectGonghaoModal = true;\r\n      return newState;\r\n    case constants.CLOSE_SELECT_MODAL:\r\n      newState.selectGonghaoModal = false;\r\n      return newState;\r\n    case constants.INIT_KEFU_MESSAGE_INFO:\r\n      newState.kefuMessageInfo = {...action.query};\r\n      newState.kefuMessageInfo.contents.length > 0 && (newState.content = {...newState.kefuMessageInfo.contents[0]});\r\n      if(newState.kefuMessageInfo.type === 0) newState.messageIndex = 0;\r\n      if(action.query.task) {\r\n        newState.kefuMessageInfo.channel = 1\r\n      } else if(action.query.is_timing) {\r\n        newState.kefuMessageInfo.channel = 2\r\n      } else {\r\n        newState.kefuMessageInfo.channel = 0\r\n      }\r\n      newState.kefuMessageInfo.isHour && (newState.kefuMessageInfo.delay = newState.kefuMessageInfo.delay/60);\r\n      !newState.kefuMessageInfo.isHour && (newState.kefuMessageInfo.isHour = 0);\r\n      return newState;\r\n    case constants.OPEN_PREVIEW_MODAL:\r\n      newState.previewModal = true;\r\n      return newState;\r\n    case constants.CLOSE_PREVIEW_MODAL:\r\n      newState.previewModal = false;\r\n      newState.openid = \"\";\r\n      return newState;\r\n    case constants.CHANGE_OPENID:\r\n      newState.openid = action.value;\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n// 群发公号\r\nconst getData = () => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(\"/message\", {params: {sort: \"_id\"}})\r\n      .then(res => {\r\n        if (res.data.messages.length > 0) {\r\n          let kefuMessageList = res.data.messages;\r\n          const action = {\r\n            type: constants.GET_KEFU_MESSAGE_LIST,\r\n            kefuMessageList\r\n          };\r\n          resolve(action)\r\n        } else {\r\n          reject('error message: 没有数据')\r\n        }\r\n      })\r\n  });\r\n};\r\n\r\nexport const getKefuMessageList = () => {\r\n  return async dispatch => {\r\n    let action = await getData();\r\n    dispatch(action);\r\n  }\r\n};\r\n\r\nexport const createKefuMessage = record => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定新增一条客服消息吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/message/create\", {...record})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              let data = res.data.data\r\n              message.info(record._id ? \"复制成功\" : res.data.success);\r\n              const action = {\r\n                type: constants.CREATE_KEFU_MESSAGE,\r\n                data\r\n              };\r\n              dispatch(action);\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const deleteMessage = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条客服消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/message/delete\", { params: { id } })\r\n          .then(res => {\r\n            if (res.data.data.length === 0) {\r\n              message.info(\"已删除最后一条数据\");\r\n              const action = {\r\n                type: constants.DELETE_LAST_MESSAGE\r\n              };\r\n              dispatch(action);\r\n            } else {\r\n              message.info(res.data.success);\r\n              const action = {\r\n                type: constants.DELETE_MESSAGE,\r\n                index\r\n              };\r\n              dispatch(action);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const sendKefuMessage = (id, tagId) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定发送消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/message/send\", { params: { id, tagId, take_over: true } })\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const handleChangeType = messageType => ({\r\n  type: constants.HANDLE_CHANGE_TYPE,\r\n  messageType\r\n});\r\n\r\n// 编辑客服消息\r\nexport const changeContentValue = (value, name) => ({\r\n  type: constants.CHANGE_CONTENT_VALUE,\r\n  value, name\r\n});\r\n\r\nexport const changeMessageValue = (value, name) => ({\r\n  type: constants.CHANGE_MESSAGE_VALUE,\r\n  value, name\r\n});\r\n\r\nexport const addMessage = () => ({\r\n  type: constants.ADD_MESSAGE\r\n});\r\n\r\nexport const selectMessage = (info, index) => ({\r\n  type: constants.SELECT_MESSAGE,\r\n  info, index\r\n});\r\n\r\nexport const selectParams = () => ({\r\n  type: constants.SELECT_PARAMS\r\n});\r\n\r\nexport const hideParamsModal = () => ({\r\n  type: constants.HIDE_PARAMS_MODAL\r\n});\r\n\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        let allCodes = res.data.data;\r\n        const action = {\r\n          type: constants.GET_ALL_CODES,\r\n          allCodes\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeGonghao = codes => ({\r\n  type: constants.CHANGE_GONGHAO,\r\n  codes\r\n});\r\n\r\nexport const openSelectModal = () => ({\r\n  type: constants.OPEN_SELECT_MODAL\r\n});\r\n\r\nexport const closeSelectModal = () => ({\r\n  type: constants.CLOSE_SELECT_MODAL\r\n});\r\n\r\nexport const submitMessage = (info, history, allCodes) => {\r\n  return dispatch => {\r\n    info.gonghaoList = allCodes.filter(item => info.codes.indexOf(item.code) > -1);\r\n    !info.img && (info.img = info.contents[0].picurl);\r\n    info.channel === 1 ? info.task = true : info.task = false;\r\n    info.channel === 2 ? info.is_timing = true : info.is_timing = false;\r\n    if(info.channel !== 1) {\r\n      info.delay = null;\r\n    }\r\n    Modal.confirm({\r\n      title: \"确定提交吗？\",\r\n      onOk: () => {\r\n        let url = \"/message/create\";\r\n        if(history.location.query) {\r\n          url = \"/message/update\";\r\n          info.id = info._id\r\n        }\r\n        axios.post(url, {...info})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.info(res.data.success);\r\n              history.goBack();\r\n              dispatch(resetState());\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const initKefuMessageInfo = query => {\r\n  return dispatch => {\r\n    if (query.tagId) {\r\n      axios.get(\"/tag/get_name\", { params: { tagId: query.tagId } })\r\n        .then(res => {\r\n          query.tagName = res.data.data.name;\r\n          const action = {\r\n            type: constants.INIT_KEFU_MESSAGE_INFO,\r\n            query\r\n          };\r\n          dispatch(action);\r\n        });\r\n    } else {\r\n      const action = {\r\n        type: constants.INIT_KEFU_MESSAGE_INFO,\r\n        query\r\n      };\r\n      dispatch(action);\r\n    }\r\n\r\n  }\r\n};\r\n\r\nexport const openPreviewModal = () => ({\r\n  type: constants.OPEN_PREVIEW_MODAL\r\n});\r\n\r\nexport const closePreviewModal = () => ({\r\n  type: constants.CLOSE_PREVIEW_MODAL\r\n});\r\n\r\nexport const preview = ({codes, type, contents, img_path}, openid) => {\r\n  return dispatch => {\r\n    axios.post('/message/preview', {codes, type, contents, img_path, openid})\r\n      .then(res => {\r\n        message.success(res.data.msg);\r\n        dispatch(closePreviewModal());\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeOpenId = value => ({\r\n  type: constants.CHANGE_OPENID,\r\n  value\r\n});\r\n\r\n\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n","export const GET_KEFU_MESSAGE_LIST = \"message/kefu/getKefuMessageList\";\r\nexport const CREATE_KEFU_MESSAGE = \"message/kefu/createKefuMessage\";\r\nexport const DELETE_LAST_MESSAGE = \"message/kefu/deleteLastMessage\";\r\nexport const DELETE_MESSAGE = \"message/kefu/deleteMessage\";\r\nexport const CHANGE_CONTENT_VALUE = \"message/kefu/changeContentValue\";\r\nexport const CHANGE_MESSAGE_VALUE = \"message/kefu/changeMessageValue\";\r\nexport const HANDLE_CHANGE_TYPE = \"message/kefu/handleChangeType\";\r\n\r\nexport const ADD_MESSAGE = \"message/kefu/addMessage\";\r\nexport const SELECT_MESSAGE = \"message/kefu/selectMessage\";\r\nexport const GET_ALL_CODES = \"message/kefu/getAllCodes\";\r\nexport const CHANGE_GONGHAO = \"message/kefu/changeGonghao\";\r\nexport const SELECT_PARAMS = \"message/kefu/selectParams\";\r\nexport const HIDE_PARAMS_MODAL = \"message/kefu/hideParamsModal\";\r\nexport const INIT_KEFU_MESSAGE_INFO = \"message/kefu/initKefuMessageInfo\";\r\nexport const SUBMIT_MESSAGE = \"message/kefu/submitMessage\";\r\nexport const OPEN_SELECT_MODAL = \"message/kefu/openSelectModal\";\r\nexport const CLOSE_SELECT_MODAL = \"message/kefu/closeSelectModal\";\r\nexport const OPEN_PREVIEW_MODAL = \"message/kefu/openPreviewModal\";\r\nexport const CLOSE_PREVIEW_MODAL = \"message/kefu/closePreviewModal\";\r\nexport const CHANGE_OPENID = \"message/kefu/changeOpenId\";\r\n\r\nexport const RESET_STATE = \"message/kefu/resetState\";\r\n","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  templateMessageList: [],\r\n  confName: \"\",\r\n\r\n  selectGonghaoModal: true,\r\n  messageInfo: {\r\n    name: \"\",\r\n    code: null,\r\n    templateId: \"\",\r\n    templateName: \"\",\r\n    url: \"\",\r\n    content: {}\r\n  },\r\n  allCodes: [],\r\n  templateList: [],\r\n  templateInfo: {\r\n    template_id: \"\",\r\n  },\r\n  name: \"\",\r\n  templateModalVisible: false,\r\n  content: {\r\n    value: \"\",\r\n    color: \"#000\"\r\n  }\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n\r\n    case constants.GET_TEMPLATE_LIST:\r\n      newState.templateMessageList = action.data;\r\n      newState.confName = \"\";\r\n      return newState;\r\n    case constants.DELETE_TEMPLATE:\r\n      newState.templateMessageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CHANGE_CONF_NAME:\r\n      newState.confName = action.value;\r\n      return newState;\r\n    case constants.SEARCH_CONF_NAME:\r\n      newState.templateMessageList = action.data;\r\n      newState.confName = \"\";\r\n      return newState;\r\n\r\n\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = action.allCodes;\r\n      return newState;\r\n\r\n    case constants.OPEN_SELECT_MODAL:\r\n      newState.selectGonghaoModal = true;\r\n      return newState;\r\n    case constants.OPEN_EDIT_MODAL:\r\n      newState.name = action.key;\r\n      newState.content = action.content;\r\n      newState.templateModalVisible = true;\r\n      return newState;\r\n    case constants.CLOSE_TEMPLATE_MODAL:\r\n      newState.name = \"\";\r\n      newState.templateModalVisible = false;\r\n      newState.content = { value: \"\", color: \"#000\" };\r\n      return newState;\r\n    case constants.CHANGE_TEMPLATE:\r\n      newState.templateInfo = newState.templateList.filter(item => item.template_id === action.value)[0];\r\n      newState.messageInfo.templateId = newState.templateInfo.template_id;\r\n      newState.messageInfo.content = {};\r\n      for(let key in newState.templateInfo.data) {\r\n        newState.messageInfo.content[key] = {}\r\n      }\r\n      return newState;\r\n    case constants.EDIT_TEMPLATE:\r\n      newState.content[action.key] = action.value;\r\n      return newState;\r\n    case constants.SAVE_TEMPLATE_MODAL:\r\n      newState.messageInfo.content[newState.name] = newState.content;\r\n      newState.name = \"\";\r\n      newState.templateModalVisible = false;\r\n      newState.content = { value: \"\", color: \"#000\" };\r\n      return newState;\r\n\r\n    case constants.CHANGE_MESSAGE_INFO:\r\n      newState.messageInfo[action.key] = action.value;\r\n      return newState;\r\n    case constants.CONFIRM_SELECT:\r\n      newState.templateList = action.templateList;\r\n      newState.templateInfo = action.templateInfo;\r\n      newState.messageInfo.templateId = newState.templateInfo.template_id;\r\n      for(let key in newState.templateInfo.data) {\r\n        newState.messageInfo.content[key] = {}\r\n      }\r\n      return newState;\r\n    case constants.CLOSE_SELECT_MODAL:\r\n      newState.selectGonghaoModal = false;\r\n      return newState;\r\n\r\n    case constants.INIT_MESSAGE_INFO:\r\n      newState.messageInfo = JSON.parse(JSON.stringify(action.record));\r\n      newState.templateList = action.templateList;\r\n      newState.templateInfo = newState.templateList.filter(item => item.template_id === action.record.templateId)[0];\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n// 列表页\r\n\r\nexport const getTemplateList = () => {\r\n  return dispatch => {\r\n    axios.get(\"/template\")\r\n      .then(res => {\r\n        const {data} = res.data;\r\n        dispatch({ type: constants.GET_TEMPLATE_LIST, data })\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteTemplate = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条模板消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/template/del\", {params: {id}})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              message.success(res.data.success);\r\n              dispatch({ type: constants.DELETE_TEMPLATE, index })\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const sendTemplate = record => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定发送这条模板消息吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/template/send\", {...record})\r\n          .then(res => {\r\n            message.success(res.data);\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeConfNickName = value => ({\r\n  type: constants.CHANGE_CONF_NAME,\r\n  value\r\n});\r\n\r\nexport const searchConfName = confName => {\r\n  return dispatch => {\r\n    axios.get('/template/search', {params: {confName}})\r\n      .then(res => {\r\n        if(res.data.data.length > 0) {\r\n          dispatch({type: constants.SEARCH_CONF_NAME, data: res.data.data});\r\n          message.success(res.data.msg)\r\n        } else {\r\n          dispatch(getTemplateList());\r\n          message.error(\"没有查询到相关数据\")\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\n\r\n// 编辑模板消息\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.GET_ALL_CODES,\r\n          allCodes: res.data.data\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const openSelectModal = () => ({\r\n  type: constants.OPEN_SELECT_MODAL\r\n});\r\n\r\nexport const openEditModal = (key, content) => ({\r\n  type: constants.OPEN_EDIT_MODAL,\r\n  key, content\r\n});\r\n\r\nexport const closeTemplateModal = () => ({\r\n  type: constants.CLOSE_TEMPLATE_MODAL\r\n});\r\n\r\nexport const changeTemplate = value => ({\r\n  type: constants.CHANGE_TEMPLATE,\r\n  value\r\n});\r\n\r\nexport const saveTemplateModal = () => ({\r\n  type: constants.SAVE_TEMPLATE_MODAL\r\n});\r\n\r\n\r\nexport const editTemplate = (key, value) => ({\r\n  type: constants.EDIT_TEMPLATE,\r\n  key, value\r\n});\r\n\r\nexport const changeMessageInfo = (key, value) => ({\r\n  type: constants.CHANGE_MESSAGE_INFO,\r\n  key, value\r\n});\r\n\r\nexport const confirmSelect = code => {\r\n  return dispatch => {\r\n    dispatch(changeMessageInfo(\"code\", code));\r\n    axios.get('/template/list', {params: {code}})\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.CONFIRM_SELECT,\r\n          templateList: res.data, templateInfo: {...res.data[0]}, code\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const closeSelectModal = () => ({\r\n  type: constants.CLOSE_SELECT_MODAL\r\n});\r\n\r\nexport const submitMessage = (info, history, templateList) => {\r\n  return dispatch => {\r\n    let url = '/template/create';\r\n    info.templateName = templateList.filter(item => item.template_id === info.templateId)[0].title;\r\n    info._id && (url = '/template/update') && (info.id = info._id);\r\n    Modal.confirm({\r\n      title: \"确定\" + (info._id ? \"保存这\" : \"创建一\") + \"条模板消息吗？\",\r\n      onOk: () => {\r\n        axios.post(url, {...info})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              message.success(res.data.success);\r\n              history.goBack()\r\n            } else {\r\n              message.error(res.data.err)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\n\r\nexport const initMessageInfo = record => {\r\n  return dispatch => {\r\n    dispatch(closeSelectModal());\r\n    axios.get('/template/list', {params: {code: record.code}})\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.INIT_MESSAGE_INFO,\r\n          templateList: res.data,\r\n          record\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n// ({\r\n//   type: constants.INIT_MESSAGE_INFO,\r\n//   record\r\n// });\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n","// 列表页\r\n// 获取模板消息列表\r\nexport const GET_TEMPLATE_LIST = \"message/template/getTemplateList\";\r\nexport const DELETE_TEMPLATE = \"message/template/deleteTemplate\";\r\nexport const CHANGE_CONF_NAME = \"message/template/changeConfNickName\";\r\nexport const SEARCH_CONF_NAME = \"message/template/searchConfName\";\r\n\r\n\r\n// 编辑模板消息\r\n// 获取所有公号\r\nexport const GET_ALL_CODES = \"message/template/getAllCodes\";\r\n\r\n// 打开选择公号面板\r\nexport const OPEN_SELECT_MODAL = \"message/template/openSelectModal\";\r\n// 关闭选择公号面板\r\nexport const CLOSE_SELECT_MODAL = \"message/template/closeSelectModal\";\r\n\r\n// 打开列表编辑的modal\r\nexport const OPEN_EDIT_MODAL = \"message/template/openEditModal\";\r\n// 关闭列表编辑的modal\r\nexport const CLOSE_TEMPLATE_MODAL = \"message/template/closeTemplateModal\";\r\n// 更换模板\r\nexport const CHANGE_TEMPLATE = \"message/template/changeTemplate\";\r\n// 编辑模板\r\nexport const EDIT_TEMPLATE = \"message/template/editTemplate\";\r\n// 保存模板\r\nexport const SAVE_TEMPLATE_MODAL = \"message/template/saveTemplateModal\";\r\n\r\n// 修改messageInfo\r\nexport const CHANGE_MESSAGE_INFO = \"message/template/changeMessageInfo\";\r\n// 确认选择公号，关闭modal，获取模板列表\r\nexport const CONFIRM_SELECT = \"message/template/confirmSelect\";\r\n\r\n// 初始化messageInfo\r\nexport const INIT_MESSAGE_INFO = \"message/template/initMessageInfo\";\r\n\r\n\r\n// 重置state\r\nexport const RESET_STATE = \"message/template/resetState\";\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as groupReducer } from './group/store';\r\nimport { reducer as kefuReducer } from './kefu/store';\r\nimport { reducer as templateReducer } from './template/store';\r\n\r\nconst reducer = combineReducers({\r\n  group: groupReducer,\r\n  kefu: kefuReducer,\r\n  template: templateReducer\r\n});\r\n\r\nexport default reducer;","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  replyList: [],\r\n  content: {\r\n    picurl: \"\",\r\n    title: \"\",\r\n    url: \"\",\r\n    description: \"\"\r\n  },\r\n  replyInfo: {\r\n    type: 0,\r\n    contents: [],\r\n    description: \"\"\r\n  }\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case constants.GET_REPLY_LIST:\r\n      newState.replyList = action.replyList;\r\n      return newState;\r\n    case constants.DELETE_REPLY:\r\n      newState.replyList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.HANDLE_CONTENT_CHANGE:\r\n      newState.content[action.name] = action.value;\r\n      return newState;\r\n    case constants.HANDLE_REPLY_CHANGE:\r\n      if(action.name === \"type\") {\r\n        newState.content = defaultState.content;\r\n        newState.replyInfo.contents = [];\r\n      }\r\n      newState.replyInfo[action.name] = action.value;\r\n      return newState;\r\n    case constants.INIT_REPLY_INFO:\r\n      newState.replyInfo = {...action.record};\r\n      newState.replyInfo.id = newState.replyInfo._id;\r\n      newState.content = {...newState.replyInfo.contents[0]};\r\n      return newState;\r\n    case constants.COPY:\r\n      newState.replyList.unshift({...action.data});\r\n      return newState;\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n\r\nexport const getReplyList = () => {\r\n  return dispatch => {\r\n    axios.get('/msg')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let replyList = res.data.data.reverse();\r\n          const action = {\r\n            type: constants.GET_REPLY_LIST,\r\n            replyList\r\n          };\r\n          dispatch(action);\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteReply = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/msg/del\", {params: {id}})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              const action = {\r\n                type: constants.DELETE_REPLY,\r\n                index\r\n              };\r\n              dispatch(action);\r\n              message.success(res.data.success)\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const handleContentChange = (value, name) => ({\r\n  type: constants.HANDLE_CONTENT_CHANGE,\r\n  name, value\r\n});\r\n\r\nexport const handleReplyChange = (value, name) => ({\r\n  type: constants.HANDLE_REPLY_CHANGE,\r\n  name, value\r\n});\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n\r\nexport const submitReply = (replyInfo, props) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定提交吗？\",\r\n      onOk: () => {\r\n        axios.post(props.history.location.query ? \"/msg/update\" : \"/msg/create\", {...replyInfo})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              resetState();\r\n              message.success(res.data.success);\r\n              props.history.goBack();\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const copy = (record, props) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定复制这条素材吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/msg/create\", {...record})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              let data = res.data.data;\r\n              message.success(\"复制成功\");\r\n              const action = {\r\n                type: constants.COPY,\r\n                data\r\n              };\r\n              dispatch(action);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const initReplyInfo = record => ({\r\n  type: constants.INIT_REPLY_INFO,\r\n  record\r\n});\r\n\r\n","export const GET_REPLY_LIST = \"source/reply/getReplyList\";\r\nexport const DELETE_REPLY = \"source/reply/deleteReply\";\r\nexport const HANDLE_CONTENT_CHANGE = \"source/reply/handleContentChange\";\r\nexport const HANDLE_REPLY_CHANGE = \"source/reply/handleReplyChange\";\r\nexport const RESET_STATE = \"source/reply/resetState\";\r\nexport const SUBMIT_REPLY = \"source/reply/resetState\";\r\nexport const INIT_REPLY_INFO = \"source/reply/initReplyInfo\";\r\nexport const COPY = \"source/reply/copy\";","import { combineReducers } from 'redux';\r\nimport { reducer as groupReducer } from './group/store';\r\n\r\nconst reducer = combineReducers({\r\n  group: groupReducer\r\n});\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport gonghaoReducer from '../pages/gonghao/reducer';\r\nimport messageReducer from '../pages/message/reducer';\r\nimport sourceReducer from '../pages/source/reducer';\r\n\r\nconst reducer = combineReducers({\r\n  gonghao: gonghaoReducer,\r\n  message: messageReducer,\r\n  source: sourceReducer\r\n});\r\n\r\nexport default reducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from './reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport \"./index.scss\";\r\nimport {Input, Icon, message} from 'antd';\r\nimport axios from 'axios';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.login = this.login.bind(this);\r\n    this.state = {\r\n      loginInfo: {\r\n        username: \"\",\r\n        password: \"\"\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loginInfo } = this.state;\r\n    const bgStyle = {\r\n      minHeight: \"100vh\",\r\n      backgroundSize: \"100%\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundAttachment: \"fixed\",\r\n      backgroundImage: `url(${require(\"../../assets/images/login_bg.png\")})`\r\n    };\r\n    return (\r\n      <div className=\"login-bg\" style={bgStyle}>\r\n        <div className=\"bg-mask\"></div>\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"content\">\r\n            <p className=\"title\">明星说后台管理系统</p>\r\n            <p>运营与管控一体化的整合式服务平台</p>\r\n            <p>一起解构数字世界，碰撞科技创新思想</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"login-form-wrapper\">\r\n          <div className=\"login-form\">\r\n            <h4 className=\"login-title\">登录</h4>\r\n            <Input\r\n              value={loginInfo.username}\r\n              size=\"large\"\r\n              onChange={e => this.changeInputValue(e.target.value, \"username\")}\r\n              prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)', marginRight: 10}}/>}\r\n              style={{marginBottom: 30}}\r\n              placeholder=\"用户名\"\r\n              onKeyUp={e => e.keyCode === 13 && this.login()}\r\n            />\r\n            <Input\r\n              value={loginInfo.password}\r\n              size=\"large\"\r\n              type=\"password\"\r\n              onChange={e => this.changeInputValue(e.target.value, \"password\")}\r\n              prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)', marginRight: 10}}/>}\r\n              placeholder=\"密码\"\r\n              onKeyUp={e => e.keyCode === 13 && this.login()}\r\n            />\r\n            <button className=\"login-btn cursor\" onClick={this.login}>登录</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  changeInputValue(value, name) {\r\n    const { loginInfo } = this.state;\r\n    loginInfo[name] = value;\r\n    this.setState(state => ({loginInfo: {...state.loginInfo, ...loginInfo}}))\r\n  }\r\n\r\n  login() {\r\n    const { loginInfo } = this.state;\r\n    if(loginInfo.username && loginInfo.password) {\r\n      loginInfo.password = this.$MD5(loginInfo.password).toString();\r\n      axios.post('/account/login', {...loginInfo})\r\n        .then(res => {\r\n          const { code, msg, data } = res.data;\r\n          if(code === -1) {\r\n            message.error(msg);\r\n          } else {\r\n            const userInfo = JSON.stringify(data[0]);\r\n            localStorage.setItem(\"userInfo\", userInfo);\r\n            window.location.href = '/admin';\r\n            this.setState({loginInfo: {}});\r\n            message.success(msg)\r\n          }\r\n        })\r\n    } else {\r\n      message.warning(\"用户名或密码不能为空\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Avatar, Popover, Icon, message } from 'antd';\r\n\r\nimport './index.scss';\r\n\r\nclass HeaderWrapper extends Component {\r\n\r\n  state = {\r\n    username: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userInfo = localStorage.getItem(\"userInfo\");\r\n    if(userInfo) {\r\n      userInfo = JSON.parse(userInfo);\r\n      this.setState({username: userInfo.username})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='header-wrapper'>\r\n        <Link to=\"/\">\r\n          <img className=\"logo fl\" src={require(\"../../../assets/images/logo.png\")} alt=\"\"/>\r\n        </Link>\r\n        <div className=\"user-info fr\">\r\n          <Avatar shape=\"square\" size={25} icon=\"user\" />\r\n          <Popover content={<p style={{fontSize: 12}} className=\"cursor\" onClick={logout}><Icon type=\"logout\" />退出</p>}>\r\n            <div className=\"user fr cursor\">\r\n              <p>{this.state.username},</p>\r\n              <p>欢迎回来<Icon type=\"down\" /></p>\r\n            </div>\r\n          </Popover>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.setItem(\"userInfo\", \"\");\r\n  message.success(\"退出登录成功\");\r\n  setTimeout(() => {\r\n    window.location.href = \"/admin/login\";\r\n  }, 500)\r\n};\r\n\r\nexport default HeaderWrapper;\r\n","import React, {Component} from 'react';\r\nimport {Menu, Icon} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './index.scss';\r\n\r\nconst {SubMenu} = Menu;\r\nconst MenuItem = Menu.Item;\r\n\r\nclass SideWrapper extends Component {\r\n  menuList = [\r\n    {\r\n      keyIndex: 'gonghao',\r\n      title: '公号管理',\r\n      icon: 'appstore',\r\n      role: 2,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'tuoguan',\r\n          title: '公号托管',\r\n          path: '/admin/gonghao/tuoguan'\r\n        }, {\r\n          keyIndex: 'menu',\r\n          title: '菜单配置',\r\n          path: '/admin/gonghao/menu'\r\n        }, {\r\n          keyIndex: 'reply',\r\n          title: '自动回复',\r\n          path: '/admin/gonghao/reply'\r\n        // }, {\r\n        //   keyIndex: 'qrcode',\r\n        //   title: '参数二维码',\r\n        //   path: '/admin/gonghao/qrcode'\r\n        }\r\n      ]\r\n    }, {\r\n      keyIndex: 'message',\r\n      title: '消息管理',\r\n      icon: 'snippets',\r\n      role: 2,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'kefu',\r\n          title: '客服消息',\r\n          path: '/admin/message/kefu'\r\n        }, {\r\n          keyIndex: 'group',\r\n          title: '群发消息',\r\n          path: '/admin/message/group'\r\n        }, {\r\n          keyIndex: 'template',\r\n          title: '模板消息',\r\n          path: '/admin/message/template'\r\n        }\r\n      ]\r\n    }, {\r\n      keyIndex: 'channel',\r\n      title: '渠道推广',\r\n      icon: 'control',\r\n      role: 2,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'spread',\r\n          title: '推广链接',\r\n          path: '/admin/channel/spread'\r\n        }\r\n      ]\r\n    // }, {\r\n    //   keyIndex: \"source\",\r\n    //   title: \"素材库\",\r\n    //   icon: \"desktop\",\r\n    //   role: 2,\r\n    //   subMenuList: [\r\n    //     {\r\n    //       keyIndex: \"group\",\r\n    //       title: \"图文素材\",\r\n    //       path: '/admin/source/group'\r\n    //     }\r\n    //   ]\r\n    // }, {\r\n    //   keyIndex: 'edit',\r\n    //   title: '编辑器',\r\n    //   icon: 'edit',\r\n    //   role: 2,\r\n    //   subMenuList: [\r\n    //     {\r\n    //       keyIndex: 'aaa',\r\n    //       title: '编辑器',\r\n    //       path: '/admin/edit/index'\r\n    //     }\r\n    //   ]\r\n    }, {\r\n      keyIndex: 'account',\r\n      title: '账户管理',\r\n      icon: 'user',\r\n      role: 0,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'list',\r\n          title: '账户管理',\r\n          path: '/admin/account/list'\r\n        }, {\r\n          keyIndex: 'add',\r\n          title: '新增用户',\r\n          path: '/admin/account/add'\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  state = {\r\n    selectedKeys: [],\r\n    role: null\r\n  };\r\n\r\n  onSelect = async (selectItem) => {\r\n    const latestSelectedKey = selectItem.selectedKeys.find(key => this.state.selectedKeys.indexOf(key) === -1);\r\n    let selectList = [];\r\n    await this.menuList.map(item => (selectList = [...selectList, ...item.subMenuList]));\r\n    await selectList.find(item => (\r\n      item.keyIndex === latestSelectedKey\r\n      && this.setState({ selectedKeys: latestSelectedKey ? [latestSelectedKey] : [this.state.role === 2 ? 'tuoguan' : 'list'] })\r\n    ))\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userInfo = localStorage.getItem(\"userInfo\");\r\n    if(userInfo) {\r\n      userInfo = JSON.parse(userInfo);\r\n      this.setState({\r\n        role: userInfo.role,\r\n        selectedKeys: [window.location.pathname.split('/')[3] || (userInfo.role === 2 ? 'tuoguan' : 'list')]\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const pathName = window.location.pathname;\r\n    const MenuListRender = this.menuList.map((item, index) => {\r\n      if(item.role === this.state.role) {\r\n        const SubMenuList = item.subMenuList.map(subItem => (\r\n          <MenuItem key={subItem.keyIndex}><Link to={subItem.path}>{subItem.title}</Link></MenuItem>\r\n        ));\r\n        return (<SubMenu\r\n          key={item.keyIndex}\r\n          title={\r\n            <span className='side-item'>\r\n            <Icon className=\"side-icon\" type={item.icon}/>\r\n            <span>{item.title}</span>\r\n          </span>\r\n          }\r\n        >\r\n          {SubMenuList}\r\n        </SubMenu>)\r\n      }\r\n      return '';\r\n    });\r\n    return (\r\n      <div className='side-wrapper'>\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"light\"\r\n          selectedKeys={this.state.selectedKeys}\r\n          defaultOpenKeys={[window.location.pathname.split('/')[2] || (this.state.role === 2 ? 'gonghao' : 'account')]}\r\n          onSelect={this.onSelect}\r\n          defaultSelectedKeys={[pathName]}\r\n        >\r\n          {MenuListRender}\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SideWrapper;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Breadcrumb } from 'antd';\r\nimport { withRouter } from 'react-router'\r\nimport './index.scss';\r\n\r\nconst breadList = {\r\n  '/gonghao': '公号管理',\r\n\r\n  '/gonghao/tuoguan': '公号托管',\r\n  '/gonghao/tuoguan/group': '分组管理',\r\n\r\n  '/gonghao/tuoguan/config': '公号配置',\r\n  '/gonghao/tuoguan/config/create': '新建配置',\r\n  '/gonghao/tuoguan/config/update': '修改配置',\r\n\r\n  '/gonghao/menu': '配置菜单',\r\n  '/gonghao/menu/create': '新建菜单',\r\n  '/gonghao/menu/update': '修改菜单',\r\n\r\n  '/gonghao/reply': '自动回复',\r\n  '/gonghao/reply/create': '新建素材',\r\n  '/gonghao/reply/update': '修改素材',\r\n\r\n  '/message': '消息管理',\r\n\r\n  '/message/kefu': '客服消息',\r\n  '/message/kefu/create': '新建消息',\r\n  '/message/kefu/update': '修改消息',\r\n\r\n  '/message/group': '群发消息',\r\n  '/message/group/material': '群发素材',\r\n  '/message/group/history': '历史记录',\r\n\r\n  '/message/template': '模板消息',\r\n  '/message/template/create': '创建消息',\r\n  '/message/template/update': '修改消息',\r\n\r\n  '/channel': \"渠道推广\",\r\n  '/channel/spread': '推广链接',\r\n  '/channel/spread/create': '创建素材',\r\n  '/channel/spread/update': '修改素材',\r\n\r\n  '/source': '素材库',\r\n  '/source/group': '图文素材',\r\n  '/source/group/create': '新建素材',\r\n  '/source/group/update': '修改素材',\r\n\r\n  '/edit': '编辑器',\r\n  '/edit/index': '编辑器',\r\n\r\n  '/wechat/qrcode': '参数二维码',\r\n  '/wechat/qrcode/create': '新增二维码',\r\n  '/wechat/qrcode/update': '修改二维码',\r\n\r\n  '/account': '账户管理',\r\n  '/account/list': '账户列表',\r\n  '/account/add': '新增账户',\r\n};\r\n\r\nclass BreadWrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pathSnippets: null,\r\n      extraBreadcrumbItems: null,\r\n    }\r\n  }\r\n\r\n  getPath = () => {\r\n    this.setState({\r\n      pathSnippets: window.location.pathname.split('/').slice(2)\r\n    });\r\n    this.setState((prev) => {\r\n      return {\r\n        extraBreadcrumbItems: prev.pathSnippets.map((_, index) => {\r\n          let url = `/${prev.pathSnippets.slice(0, index + 1).join('/')}`;\r\n          return (\r\n            <Breadcrumb.Item key={url}>\r\n              {breadList[url]}\r\n            </Breadcrumb.Item>\r\n          );\r\n        })\r\n      }\r\n    })\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps () {\r\n    this.getPath();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPath();\r\n  }\r\n\r\n  render() {\r\n    const { extraBreadcrumbItems } = this.state;\r\n    return (\r\n    \t<div className='bread-wrapper'>\r\n    \t\t<div className='bread-nav'>\r\n          <Breadcrumb>\r\n            {extraBreadcrumbItems}\r\n          </Breadcrumb>\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(BreadWrapper);","import React from 'react';\r\nimport {Layout, Card} from 'antd';\r\nimport HeaderWrapper from './header';\r\nimport SiderWrapper from './sider';\r\nimport BreadCrumb from './bread';\r\nimport \"./index.scss\";\r\n\r\nconst {Content, Sider, Header, Footer} = Layout;\r\n\r\nconst BasicLayout = props => <Layout className=\"basic-layout\">\r\n  <HeaderWrapper/>\r\n  <Layout>\r\n    <Sider collapsible  theme=\"light\" width=\"180\" style={{minHeight: \"calc(100vh - 50px)\"}}>\r\n      <SiderWrapper/>\r\n    </Sider>\r\n    <Layout>\r\n      <Content style={{marginLeft: 2}}>\r\n        <Card style={{minHeight: \"calc(100vh - 90px)\"}}>\r\n          <Layout>\r\n            <Header style={{ background: '#fff', padding: 0, borderBottom: \"2px solid #eee\", height: 43 }}><BreadCrumb /></Header>\r\n            <Content>{props.content}</Content>\r\n          </Layout>\r\n        </Card>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center', padding: \"10px 0\" }}>Copyright&copy;2019  最终解释权归本公司所有</Footer>\r\n    </Layout>\r\n  </Layout>\r\n</Layout>;\r\n\r\nexport default BasicLayout;","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\n\r\nconst ButtonList = {\r\n  \"warning\": \"#F39C12\",\r\n  \"danger\": \"#E74C3C\",\r\n  \"success\": \"#2ECC71\",\r\n  \"info\": \"#7F8C8D\",\r\n  \"update\": \"#3498DB\"\r\n};\r\n\r\n\r\nclass ButtonWrapper extends Component {\r\n  state = {\r\n    buttonStyle: {\r\n      background: \"#3498DB\",\r\n      color: \"#fff\",\r\n      marginRight: 5,\r\n      marginLeft: 0,\r\n      marginBottom: 0\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    const { background = \"update\", color = \"#fff\", mr = 5, ml = 0, mb = 0 } = this.props;\r\n    this.setState({\r\n      buttonStyle: { background: ButtonList[background], color, marginRight: mr, marginLeft: ml, marginBottom: mb }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { size = \"small\", buttonContent, disabled = false, onClick } = this.props;\r\n    const { buttonStyle } = this.state;\r\n    return (\r\n    \t<Button size={size} disabled={disabled} style={buttonStyle} onClick={onClick}>{buttonContent}</Button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ButtonWrapper;","import React, {Component} from 'react';\r\nimport {Input, Card, List, Modal, Form, Select, Radio, Tag, Tooltip, Avatar} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport {actionCreators} from './store';\r\nimport './index.scss';\r\nimport Button from \"../../../common/components/Button\";\r\n\r\nconst {Search} = Input;\r\nconst {Option} = Select;\r\n\r\nclass Tuoguan extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getGroupList();\r\n    this.props.getAllGonghaoList();\r\n  }\r\n\r\n  render() {\r\n    const {gonghaoTagList, gonghaoList, searchByName, searchName, changeSearchInput, jieguan, addNewGonghao, openGonghaoModal, gonghaoModal, closeGonghaoModal, gonghaoInfo, updateGonghaoInfo, changeGroup, changeAttribute, deleteGonghao, group, changeSelectValue, status} = this.props;\r\n    return (\r\n      <div>\r\n        <div className='container'>\r\n          <Search\r\n            placeholder='请输入公号名称'\r\n            className='search-btn'\r\n            value={searchName}\r\n            onChange={changeSearchInput}\r\n            onSearch={searchName => searchByName(searchName)}\r\n          />\r\n          <Select value={group} onChange={value => changeSelectValue(\"group\", value)} style={{width: 150, marginLeft: 10}}>\r\n            <Option value=\"全部\">全部公号</Option>\r\n            <Option value=\"未分组\">未分组</Option>\r\n            {gonghaoTagList.map(item => <Option key={item._id} value={item.name}>{item.name}</Option>)}\r\n          </Select>\r\n          <Select value={status} onChange={value => changeSelectValue(\"status\", value)} style={{width: 100, marginLeft: 10}}>\r\n            <Option value=\"全部\">全部</Option>\r\n            <Option value={1}>已接管</Option>\r\n            <Option value={-1}>接管中</Option>\r\n            <Option value={0}>待接管</Option>\r\n            <Option value={-2}>未接管</Option>\r\n          </Select>\r\n          <div className=\"fr btn-wrapper\">\r\n            <Button background=\"success\" size=\"default\"\r\n                    buttonContent={<Link to='/admin/gonghao/tuoguan/group'>分组管理</Link>}/>\r\n            <Button size=\"default\" buttonContent=\"添加新公号\" onClick={addNewGonghao}/>\r\n          </div>\r\n          <div className='table-wrapper'>\r\n            <List\r\n              grid={{gutter: 16, sm: 4, xxl: 6}}\r\n              dataSource={gonghaoList}\r\n              pagination={{pageSize: 12}}\r\n              renderItem={(item, index) => (\r\n                <List.Item>\r\n                  <Card className=\"card-item\"\r\n                        actions={\r\n                          [\r\n                            <Tooltip title=\"修改分组和公号属性\"><span onClick={() => openGonghaoModal(item._id, item.group, item.attribute)}>修改</span></Tooltip>,\r\n                            <Tooltip title=\"接管粉丝，打标签\"><span className={item.status === -2 ? \"\" : \"disabled-click\"}\r\n                                           onClick={() => item.status === -2 ? jieguan(item.code, index) : console.log(\"已接管或接管中\")}>{item.status === -2 ? \"接管\" : (item.status === -1 ? \"接管中\" : (item.status === 0 ? \"待接管\" : \"已接管\"))}</span></Tooltip>,\r\n                            <Tooltip title={<p>删除公号信息<br />解除授权请在公号后台操作</p>}><span onClick={() => deleteGonghao(item._id, index)}>删除</span></Tooltip>\r\n                          ]\r\n                        }>\r\n                    {item.head_img ? <img src={item.head_img} alt=\"\"/> : <Avatar shape=\"circle\" size={40} icon=\"user\" style={{marginRight: 5, marginTop: -20}}/>}\r\n                    <div className=\"gonghao-info\">\r\n                      <p>{item.nick_name}</p>\r\n                      <Tag>{item.group}</Tag>\r\n                    </div>\r\n                  </Card>\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Modal visible={gonghaoModal} title=\"修改公号信息\" onCancel={closeGonghaoModal} onOk={() => updateGonghaoInfo(gonghaoInfo)}>\r\n          <Form labelCol={{span: 6}} wrapperCol={{span: 14}}>\r\n            <Form.Item label=\"分组\">\r\n              <Select value={gonghaoInfo.group || \"未分组\"} onChange={changeGroup}>\r\n                <Option value=\"未分组\">未分组</Option>\r\n                {gonghaoTagList.map(item => <Option key={item._id} value={item.name}>{item.name}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item label=\"公号属性\">\r\n              <Radio.Group value={gonghaoInfo.attribute} onChange={changeAttribute}>\r\n                <Radio value={0}>默认</Radio>\r\n                <Radio value={1}>男</Radio>\r\n                <Radio value={2}>女</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  gonghaoTagList: state.gonghao.tuoguan.gonghaoTagList,\r\n  allGonghaoList: state.gonghao.tuoguan.allGonghaoList,\r\n  gonghaoList: state.gonghao.tuoguan.gonghaoList,\r\n  currentPage: state.gonghao.tuoguan.currentPage,\r\n  searchName: state.gonghao.tuoguan.searchName,\r\n  gonghaoModal: state.gonghao.tuoguan.gonghaoModal,\r\n  gonghaoInfo: state.gonghao.tuoguan.gonghaoInfo,\r\n  group: state.gonghao.tuoguan.group,\r\n  status: state.gonghao.tuoguan.status,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getGroupList() {\r\n    dispatch(actionCreators.getGroupList())\r\n  },\r\n  getAllGonghaoList() {\r\n    dispatch(actionCreators.getAllGonghaoList())\r\n  },\r\n  changePage(page) {\r\n    dispatch(actionCreators.changePage(page))\r\n  },\r\n  changeSearchInput(e) {\r\n    dispatch(actionCreators.changeSearchInput(e.target.value))\r\n  },\r\n  searchByName(value) {\r\n    dispatch(actionCreators.searchByName(value));\r\n  },\r\n  deleteGonghao(id, index) {\r\n    dispatch(actionCreators.deleteGonghao(id, index));\r\n  },\r\n  jieguan(code, index) {\r\n    dispatch(actionCreators.jieguan(code, index));\r\n  },\r\n  addNewGonghao() {\r\n    dispatch(actionCreators.addNewGonghao());\r\n  },\r\n  openGonghaoModal(id, group, attribute) {\r\n    dispatch(actionCreators.openGonghaoModal(id, group, attribute));\r\n  },\r\n  closeGonghaoModal() {\r\n    dispatch(actionCreators.closeGonghaoModal());\r\n  },\r\n  updateGonghaoInfo(gonghaoInfo) {\r\n    dispatch(actionCreators.updateGonghaoInfo(gonghaoInfo));\r\n  },\r\n  changeGroup(name) {\r\n    dispatch(actionCreators.changeGroup(name));\r\n  },\r\n  changeAttribute(e) {\r\n    let attribute = e.target.value;\r\n    dispatch(actionCreators.changeAttribute(attribute));\r\n  },\r\n  changeSelectValue(key, value) {\r\n    dispatch(actionCreators.changeSelectValue(key, value));\r\n  },\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Tuoguan);","import React, { Component } from 'react';\r\nimport { Layout, List, Input, Card, Table, Button, Modal, Radio, message, Icon } from 'antd'\r\nimport axios from 'axios';\r\n\r\nconst { Sider, Content } = Layout;\r\nconst { Search } = Input;\r\n\r\n\r\nclass GonghaoGroup extends Component {\r\n  columns = [\r\n    {\r\n      key: \"nick_name\",\r\n      dataIndex: \"nick_name\",\r\n      title: \"公号名称\",\r\n      align: \"center\",\r\n      width: 200\r\n    }, {\r\n      key: \"group\",\r\n      dataIndex: \"group\",\r\n      title: \"分组\",\r\n      align: \"center\"\r\n    }, {\r\n      key: \"action\",\r\n      title: \"操作\",\r\n      align: \"center\",\r\n      width: 100,\r\n      render: (text, record, index) => <Button type=\"primary\" size=\"small\" onClick={() => this.setState({gonghaoModal: true, gonghao_id: record._id, gonghao_index: index})}>修改分组</Button>\r\n    }\r\n  ];\r\n\r\n  state = {\r\n    gonghaoTagList: [],\r\n    gonghaoModal: false,\r\n    editGroupModalVisible: false,\r\n    group: \"\",\r\n    gonghaoList: [],\r\n    group_id: \"\",\r\n    group_index: -1,\r\n    gonghao_id: \"\",\r\n    gonghao_index: -1,\r\n    selectGroup: \"\",\r\n    selectedRowKeys: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGonghaoTagList();\r\n    this.getGroupGonghao();\r\n  }\r\n\r\n  getGonghaoTagList = () => {\r\n    axios.get(\"/gonghaoTag\")\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          const { data: gonghaoTagList } = res.data;\r\n          this.setState({gonghaoTagList})\r\n        }\r\n      })\r\n  };\r\n\r\n  getGroupGonghao = group => {\r\n    axios.get('/conf/group', { params: {group} })\r\n      .then(res => {\r\n        let { data: gonghaoList } = res.data;\r\n        this.setState({gonghaoList})\r\n        gonghaoList.length === 0 && message.warning(\"该分组中还没有数据，请添加\")\r\n      })\r\n  };\r\n\r\n  openEditGroupModal = () => {\r\n    this.setState({editGroupModalVisible: true})\r\n  };\r\n\r\n  closeEditGroupModal = () => {\r\n    this.setState({editGroupModalVisible: false, group: \"\"})\r\n  };\r\n\r\n  confirmEditGroup = () => {\r\n    const { group: name, group_id, group_index } = this.state;\r\n    if(!group_id) {\r\n      this.addGroup(name)\r\n    } else {\r\n      this.updateGroup(name, group_id, group_index)\r\n    }\r\n  };\r\n\r\n  addGroup = name => {\r\n    Modal.confirm({\r\n      title: \"确定添加一个分组吗？\",\r\n      onOk: () => {\r\n        if(name) {\r\n          axios.post(\"/gonghaoTag\", {name})\r\n            .then(res => {\r\n              if(res.data.code === 1 && res.data.exist === 0) {\r\n                const { data, msg } = res.data;\r\n                this.setState(state => {\r\n                  let gonghaoTagList = [...state.gonghaoTagList];\r\n                  gonghaoTagList.push(data);\r\n                  return {gonghaoTagList};\r\n                });\r\n                message.success(msg);\r\n                this.closeEditGroupModal();\r\n              } else if (res.data.code === 1 && res.data.exist === 1) {\r\n                message.warning(\"分组已存在，请更换分组名称\");\r\n              } else {\r\n                message.error(res.data.msg)\r\n              }\r\n            });\r\n        } else {\r\n          message.error(\"分组名称不能为空\")\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  updateGroup = (name, id, index) => {\r\n    Modal.confirm({\r\n      title: \"确定修改分组名称吗？\",\r\n      onOk: () => {\r\n        if(name) {\r\n          axios.put(\"/gonghaoTag\", {name, id})\r\n            .then(res => {\r\n              if(res.data.code === 1) {\r\n                const { data, msg } = res.data;\r\n                this.setState(state => {\r\n                  let gonghaoTagList = state.gonghaoTagList;\r\n                  Object.assign(gonghaoTagList[index], data);\r\n                  return {gonghaoTagList};\r\n                });\r\n                message.success(msg);\r\n                this.closeEditGroupModal();\r\n              }else {\r\n                message.error(res.data.msg)\r\n              }\r\n            });\r\n        } else {\r\n          message.error(\"分组名称不能为空\")\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  deleteGroup = (id, index) => {\r\n    Modal.confirm({\r\n      title: \"确定删除这个分组吗？\",\r\n      onOk: () => {\r\n        axios.delete('/gonghaoTag/' + id)\r\n          .then(res => {\r\n            const {code , msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.getGroupGonghao();\r\n              this.setState(state => {\r\n                let gonghaoTagList = state.gonghaoTagList;\r\n                gonghaoTagList.splice(index, 1);\r\n                return {gonghaoTagList}\r\n              })\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  changeGroupValue = e => {\r\n    let group = e.target.value;\r\n    this.setState({group})\r\n  };\r\n\r\n  searchGroupGonghao = nick_name => {\r\n    if(nick_name) {\r\n      axios.get('/conf/find_one', {params: {nick_name}})\r\n        .then(res => {\r\n          const {data: gonghaoList, code, msg} = res.data;\r\n          if(code === 1) {\r\n            message.success(msg);\r\n            this.setState({gonghaoList})\r\n          } else {\r\n            message.error(\"没有查询到相关数据，请检查输入是否有误\")\r\n          }\r\n        })\r\n    } else {\r\n      message.error(\"公号名称不能为空\")\r\n    }\r\n\r\n  };\r\n\r\n  closeGonghaoModal = () => {\r\n    this.setState({\r\n      gonghaoModal: false,\r\n      gonghao_id: \"\",\r\n      gonghao_index: -1,\r\n      selectGroup: \"\"\r\n    })\r\n  };\r\n\r\n  submitGonghaoModal = () => {\r\n    const { gonghao_id: id, gonghao_index, selectGroup: group, selectedRowKeys: ids } = this.state;\r\n    if(id) {\r\n      this.updateOne(id, gonghao_index, group)\r\n    } else {\r\n      this.updateMore(ids, group)\r\n    }\r\n  };\r\n\r\n  openUpdateMoreModal = () => {\r\n    const {selectedRowKeys} = this.state;\r\n    if(selectedRowKeys.length === 0) {\r\n      message.warning(\"请先选择公号\")\r\n    } else {\r\n      this.setState({\r\n        gonghaoModal: true\r\n      })\r\n    }\r\n  };\r\n\r\n  updateOne = (id, gonghao_index, group) => {\r\n    Modal.confirm({\r\n      title: \"确定修改分组吗？\",\r\n      onOk: () => {\r\n        axios.put('/conf', {id, group})\r\n          .then(res => {\r\n            const { code, msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.setState(state => {\r\n                let gonghaoList = [...state.gonghaoList];\r\n                gonghaoList.splice(gonghao_index, 1);\r\n                return {gonghaoList}\r\n              });\r\n              this.closeGonghaoModal();\r\n            } else {\r\n              message.error(msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  updateMore = (ids, group) => {\r\n    Modal.confirm({\r\n      title: \"确定修改分组1吗？\",\r\n      onOk: () => {\r\n        axios.put('/conf/multi_select', {ids, group})\r\n          .then(res => {\r\n            const { code, msg } = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.getGroupGonghao();\r\n              this.closeGonghaoModal();\r\n              this.setState({selectedRowKeys: []})\r\n            } else {\r\n              message.error(msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  changeSelectGroup = e => {\r\n    let selectGroup = e.target.value;\r\n    this.setState({selectGroup});\r\n  };\r\n\r\n  render() {\r\n    const { gonghaoTagList, gonghaoModal, editGroupModalVisible, gonghaoList, group, selectGroup } = this.state;;\r\n    const addGroupStyle = {\r\n      width: \"90%\",\r\n      margin: \"15px auto 0\",\r\n      padding: \"10px 0\",\r\n      borderRadius: 5,\r\n      border: \"1px dashed #999\"\r\n    };\r\n    const rowSelection = {\r\n      selectedRowKeys: this.state.selectedRowKeys,\r\n      onChange: selectedRowKeys => {\r\n        this.setState({selectedRowKeys})\r\n      }\r\n    };\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Layout>\r\n            <Sider theme=\"light\">\r\n              <List\r\n                header={<div className=\"cursor userSelect\" onClick={() => this.getGroupGonghao(\"未分组\")}>未分组</div>}\r\n                bordered\r\n                dataSource={gonghaoTagList}\r\n                style={{marginRight: 10}}\r\n                renderItem={(item, index) => (\r\n                  <List.Item className=\"userSelect\">\r\n                    <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", width: \"100%\", lineHeight: 1}}>\r\n                      <p className=\"cursor\" onClick={() => this.getGroupGonghao(item.name)}>{item.name}</p>\r\n                      <div>\r\n                        <Icon className=\"cursor\" style={{marginRight: 10}} type=\"form\" onClick={() => this.setState({editGroupModalVisible: true, group_id: item._id, group_index: index})} />\r\n                        <Icon className=\"cursor\" type=\"close-square\" onClick={() => this.deleteGroup(item._id, index)} />\r\n                      </div>\r\n                    </div>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n              <div className=\"tc cursor userSelect\" style={addGroupStyle} onClick={this.openEditGroupModal}>+ 添加分组</div>\r\n            </Sider>\r\n            <Content>\r\n              <Card style={{padding: 20}}>\r\n                <Search placeholder=\"请输入公众号名称\" style={{width: 200, marginBottom: 20, marginTop: -10}} onSearch={this.searchGroupGonghao} />\r\n                <Button type=\"primary\" style={{display: 'block', marginBottom: 20}} onClick={this.openUpdateMoreModal}>批量修改</Button>\r\n                <Table rowSelection={rowSelection} bordered size=\"small\" rowKey={record => record._id} columns={this.columns} dataSource={gonghaoList} />\r\n              </Card>\r\n            </Content>\r\n          </Layout>\r\n        </div>\r\n        <Modal visible={gonghaoModal} onCancel={this.closeGonghaoModal} onOk={this.submitGonghaoModal}>\r\n          <Radio.Group value={selectGroup} onChange={this.changeSelectGroup}>\r\n            <Radio value=\"未分组\">未分组</Radio>\r\n            {gonghaoTagList.map(item => <Radio key={item._id} value={item.name}>{item.name}</Radio>)}\r\n          </Radio.Group>\r\n        </Modal>\r\n        <Modal visible={editGroupModalVisible} title=\"新建分组名称\" onCancel={this.closeEditGroupModal} onOk={this.confirmEditGroup}>\r\n          分组名称：<Input onChange={this.changeGroupValue} value={group} style={{width: 300}} placeholder=\"请输入分组名称\" />\r\n        </Modal>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GonghaoGroup;","import React, { Component } from 'react';\r\nimport { Table, Button } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport backTop from '../../../utils';\r\n\r\nimport {actionCreators} from \"./store\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    const { menuList, deleteMenu } = this.props;\r\n    const menuHeader =  [\r\n      {\r\n        title: \"菜单类型\",\r\n        key: \"individual\",\r\n        dataIndex: \"individual\",\r\n        align: \"center\",\r\n        render: (text, record) => record.individual ? \"个性化菜单\" : \"通用菜单\"\r\n      },\r\n      {\r\n        title: \"菜单性别\",\r\n        key: \"sex\",\r\n        dataIndex: \"sex\",\r\n        align: \"center\",\r\n        render: (text, record) => (record.individual ? (record.sex === '0' ? \"未知\"\r\n          : (record.sex === '1' ? '男' : '女')) : '——')\r\n      },\r\n      {\r\n        key: \"title\",\r\n        dataIndex: \"title\",\r\n        title: \"标题\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        key: \"Action\",\r\n        align: \"center\",\r\n        render: (text, record, index) => (\r\n          <div>\r\n            <Button size=\"small\" type=\"primary\" style={{marginRight: \"10px\"}}>\r\n              <Link to={{pathname: \"/admin/gonghao/menu/update\", query: record}}>编辑</Link>\r\n            </Button>\r\n            <Button size=\"small\" type=\"danger\" onClick={() => deleteMenu(record._id, index)}>删除</Button>\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n    \t<div>\r\n    \t\t<div className=\"container\">\r\n          <Button type=\"primary\" style={{marginBottom: \"20px\"}}>\r\n            <Link to=\"/admin/gonghao/menu/create\">配置新菜单栏</Link>\r\n          </Button>\r\n          <Table size=\"small\" rowKey={record => record._id} columns={menuHeader} dataSource={menuList} pagination={{onChange: () => backTop()}} />\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n  componentDidMount() {\r\n    this.props.getMenuList()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  menuList: state.gonghao.menu.menuList\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getMenuList() {\r\n    dispatch(actionCreators.getMenuList())\r\n  },\r\n  deleteMenu(id, index) {\r\n    dispatch(actionCreators.deleteMenu(id, index))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Menu);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Form, Button, Input, Radio, Transfer, Switch} from \"antd\";\r\nimport * as actionCreators from '../store/actionCreators';\r\nimport './index.scss';\r\n\r\nclass EditMenuInfo extends Component {\r\n\r\n  componentDidMount() {\r\n    let query = this.props.history.location.query;\r\n    query && this.props.initMenuInfo(query);\r\n  }\r\n\r\n  render() {\r\n    const {menuInfo, menuForm, sub_button, menuIndex, handleInputChange, handleSubInputChange, addFirstMenu, editMenu, submitMenu, addSecondMenu, editSecMenu, deleteFirMenu, deleteSubMenu, allCodes, targetKeys, changeGonghao, isSubmit, cancelMenu, handleInfoChange, handleIndividualChange, openModal, resetState} = this.props;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: {span: 4}\r\n      },\r\n      wrapperCol: {\r\n        sm: {span: 16, offset: 0}\r\n      },\r\n      colon: false\r\n    };\r\n    const menuList = menuInfo[\"values\"].map((item, index) => (\r\n      <div className=\"menu\"\r\n           style={{width: menuInfo[\"values\"].length === 1 ? \"50%\" : menuInfo[\"values\"].length === 2 ? \"33.33%\" : \"33.33%\"}}\r\n           key={index} onClick={() => editMenu(item, index)}>\r\n        <span className=\"nav-title cursor\">{item.name}</span>\r\n        <ul className=\"sub-menu-list\"\r\n            style={{top: item.sub_button ? (-item.sub_button.length * 46 - 55 + \"px\") : -55, display: menuIndex === index ? \"block\" : \"none\"}}>\r\n          {item.sub_button && item.sub_button.map((i, idx) => (\r\n            <li className=\"textEllipsis\" key={idx} onClick={() => editSecMenu(i, idx)}>{i.name}</li>\r\n          ))}\r\n          <li onClick={addSecondMenu}>+</li>\r\n          <div className=\"sanjiao sanjiao-out\"/>\r\n          <div className=\"sanjiao sanjiao-in\"/>\r\n        </ul>\r\n      </div>\r\n    ));\r\n    let keyOrUrl, subKeyOrUrl;\r\n    if (sub_button.type === 'view') {\r\n      subKeyOrUrl = <Form.Item label=\"链接\">\r\n        <Input value={sub_button.url} placeholder=\"请输入网页跳转链接\" onChange={(e) => handleSubInputChange(e, \"url\")}/>\r\n      </Form.Item>\r\n    } else if (sub_button.type === 'click') {\r\n      subKeyOrUrl = <Form.Item label=\"关键词\">\r\n        <Input value={sub_button.key} placeholder=\"请输入发送消息关键词\" onChange={(e) => handleSubInputChange(e, \"key\")}/>\r\n      </Form.Item>\r\n    }\r\n    if (menuForm.type === 'view') {\r\n      keyOrUrl = <Form.Item label=\"链接\">\r\n        <Input value={menuForm.url} placeholder=\"请输入网页跳转链接\" onChange={(e) => handleInputChange(e, \"url\")}/>\r\n      </Form.Item>\r\n    } else if (menuForm.type === 'click') {\r\n      keyOrUrl = <Form.Item label=\"关键词\">\r\n        <Input value={menuForm.key} placeholder=\"请输入发送消息关键词\" onChange={(e) => handleInputChange(e, \"key\")}/>\r\n      </Form.Item>\r\n    }\r\n    let menuInfoForm, submitButton;\r\n    if (menuInfo.values.length !== 0) {\r\n      if (menuForm.sub_button && menuForm.sub_button.length !== 0) {\r\n        menuInfoForm =\r\n          <div className=\"menu-right fl\">\r\n            <div className=\"menu-parent\">\r\n              <div className=\"menu-title\">\r\n                <h4 className=\"fl\">菜单编辑</h4>\r\n                <Button className=\"fr\" type=\"link\" onClick={deleteFirMenu}>删除菜单</Button>\r\n              </div>\r\n              <Form {...formItemLayout}>\r\n                <Form.Item label=\"菜单名称\">\r\n                  <Input value={menuForm.name} placeholder=\"仅支持中英文和数字，字数不超过4个汉字或8个字母\"\r\n                         onChange={(e) => handleInputChange(e, \"name\")}/>\r\n                </Form.Item>\r\n              </Form>\r\n              <div className=\"menu-children\">\r\n                <div className=\"menu-title\">\r\n                  <h4 className=\"fl\">子菜单编辑</h4>\r\n                  <Button className=\"fr\" type=\"link\" onClick={deleteSubMenu}>删除子菜单</Button>\r\n                </div>\r\n                <Form {...formItemLayout}>\r\n                  <Form.Item label=\"子菜单名称\">\r\n                    <Input value={sub_button.name} placeholder=\"仅支持中英文和数字，字数不超过8个汉字或16个字母\"\r\n                           onChange={(e) => handleSubInputChange(e, \"name\")}/>\r\n                  </Form.Item>\r\n                  <Form.Item label=\"子菜单内容\">\r\n                    <Radio.Group value={sub_button.type} onChange={(e) => handleSubInputChange(e, \"type\")}>\r\n                      <Radio value=\"view\">跳转网页</Radio>\r\n                      <Radio value=\"click\">发送消息</Radio>\r\n                    </Radio.Group>\r\n                  </Form.Item>\r\n                  {subKeyOrUrl}\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      } else {\r\n        menuInfoForm =\r\n          <div className=\"menu-right fl\">\r\n            <div className=\"menu-parent\">\r\n              <div className=\"menu-title\">\r\n                <h4 className=\"fl\">菜单编辑</h4>\r\n                <Button className=\"fr\" type=\"link\" onClick={deleteFirMenu}>删除菜单</Button>\r\n              </div>\r\n              <Form {...formItemLayout}>\r\n                <Form.Item label=\"菜单名称\">\r\n                  <Input value={menuForm.name} placeholder=\"仅支持中英文和数字，字数不超过4个汉字或8个字母\"\r\n                         onChange={(e) => handleInputChange(e, \"name\")}/>\r\n                </Form.Item>\r\n                <Form.Item label=\"菜单内容\">\r\n                  <Radio.Group value={menuForm.type} onChange={(e) => handleInputChange(e, \"type\")}>\r\n                    <Radio value=\"view\">跳转网页</Radio>\r\n                    <Radio value=\"click\">发送消息</Radio>\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n                {keyOrUrl}\r\n              </Form>\r\n            </div>\r\n          </div>\r\n      }\r\n      submitButton = <div className=\"menu-right-btm fl\">\r\n        <Button type=\"primary\" onClick={() => {openModal();this.props.getAllCodes()}\r\n        }>提交</Button>\r\n      </div>\r\n    }\r\n    let menuModal;\r\n    if (isSubmit) {\r\n      let individualSex;\r\n      if (menuInfo.individual) {\r\n        individualSex = <Form.Item label=\"性别\">\r\n          <Radio.Group value={menuInfo.sex} onChange={e => handleInfoChange(e, \"sex\")}>\r\n            <Radio value=\"0\">未知</Radio>\r\n            <Radio value=\"1\">男</Radio>\r\n            <Radio value=\"2\">女</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n      }\r\n      menuModal = <div className=\"menu-modal-wrapper\">\r\n        <div className=\"menu-modal\">\r\n          <Transfer\r\n            dataSource={allCodes}\r\n            showSearch\r\n            targetKeys={targetKeys}\r\n            onChange={changeGonghao}\r\n            render={item => item.nick_name}\r\n            rowKey={record => record.code}\r\n            className=\"menu-transfer fl\"\r\n          />\r\n          <Form className=\"fl\" colon={false} labelCol={{sm: {span: 30}}} wrapperCol={{sm: {span: 30, offset: 0}}}\r\n                labelAlign=\"left\">\r\n            <Form.Item label=\"标题\">\r\n              <Input value={menuInfo.title} placeholder=\"请输入标题\" onChange={(e) => handleInfoChange(e, \"title\")}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"个性化菜单\">\r\n              <Switch onChange={handleIndividualChange} checked={menuInfo.individual}/>\r\n            </Form.Item>\r\n            {individualSex}\r\n            <Form.Item label=\" \">\r\n              <Button style={{marginRight: \"10px\"}} type=\"primary\" onClick={() => submitMenu(this.props)}>提交</Button>\r\n              <Button onClick={cancelMenu}>取消</Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    }\r\n    return (\r\n      <div>\r\n        <div className='container edit-menu'>\r\n          <div className=\"title-wrapper\">\r\n            <h2>菜单配置</h2>\r\n            <Button className=\"fr\" onClick={() => resetState(this.props)}>返回上一级</Button>\r\n          </div>\r\n          <div className=\"menu-left fl\">\r\n            <div className=\"menu-wrapper\">\r\n              <div className=\"menu-cont\">\r\n                <div className=\"menu-list\">\r\n                  {menuList}\r\n                  <div className=\"menu add\"\r\n                       style={menuList.length === 1 ? {width: \"50%\"} : (menuList.length === 2 ? {width: \"33%\"} : (menuList.length === 3 ? {display: \"none\"} : {width: \"100%\"}))}\r\n                       onClick={addFirstMenu}>\r\n                    <span className=\"nav-title cursor\">+ 添加菜单</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {menuInfoForm}\r\n          {submitButton}\r\n        </div>\r\n        {menuModal}\r\n      </div>\r\n    )\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.unMountState();\r\n  }\r\n\r\n}\r\n\r\nconst mapState = state => ({\r\n  menuInfo: state.gonghao.menu.menuInfo,\r\n  menuForm: state.gonghao.menu.menuForm,\r\n  sub_button: state.gonghao.menu.sub_button,\r\n  menuIndex: state.gonghao.menu.menuIndex,\r\n  allCodes: state.gonghao.menu.allCodes,\r\n  isSubmit: state.gonghao.menu.isSubmit,\r\n  targetKeys: state.gonghao.menu.targetKeys\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  initMenuInfo(record) {\r\n    dispatch(actionCreators.initMenuInfo(record));\r\n  },\r\n  handleInfoChange(e, name) {\r\n    dispatch(actionCreators.handleInfoChange(e.target.value, name));\r\n  },\r\n  handleIndividualChange(value) {\r\n    dispatch(actionCreators.handleIndividualChange(value));\r\n  },\r\n  handleInputChange(e, name) {\r\n    dispatch(actionCreators.handleInputChange(name, e.target.value))\r\n  },\r\n  handleSubInputChange(e, name) {\r\n    dispatch(actionCreators.handleSubInputChange(name, e.target.value))\r\n  },\r\n  addFirstMenu() {\r\n    dispatch(actionCreators.addFirstMenu())\r\n  },\r\n  editMenu(item, index) {\r\n    dispatch(actionCreators.editMenu(item, index))\r\n  },\r\n  addSecondMenu(e) {\r\n    e.stopPropagation();\r\n    dispatch(actionCreators.addSecondMenu())\r\n  },\r\n  submitMenu(props) {\r\n    dispatch(actionCreators.submitMenu(props))\r\n  },\r\n  openModal() {\r\n    dispatch(actionCreators.openModal())\r\n  },\r\n  editSecMenu(data, idx) {\r\n    dispatch(actionCreators.editSecMenu(data, idx))\r\n  },\r\n  deleteFirMenu() {\r\n    dispatch(actionCreators.deleteFirMenu())\r\n  },\r\n  deleteSubMenu() {\r\n    dispatch(actionCreators.deleteSubMenu())\r\n  },\r\n  changeGonghao(targetKeys) {\r\n    dispatch(actionCreators.changeGonghao(targetKeys))\r\n  },\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  cancelMenu() {\r\n    dispatch(actionCreators.cancelMenu())\r\n  },\r\n  resetState(props) {\r\n    props.history.goBack();\r\n    dispatch(actionCreators.resetState());\r\n  },\r\n  unMountState() {\r\n    dispatch(actionCreators.resetState());\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Form.create({name: 'editMenuInfo'})(EditMenuInfo));","import React, {Component} from 'react';\r\nimport {Button, Table} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport {actionCreators} from './store';\r\nimport './index.scss';\r\n\r\nclass Config extends Component {\r\n\r\n  render() {\r\n    const {replyMessageList, allCodes, deleteReplyMessage} = this.props;\r\n    const configHeader = [\r\n      {\r\n        key: \"type\",\r\n        title: \"类型\",\r\n        dataIndex: \"type\",\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return (\r\n            <span>\r\n              {record.type === 0 ? \"文本\"\r\n                : (record.type === 1 ? \"点击\"\r\n                  : (record.type === 2 ? \"关注\"\r\n                    : (record.type === 4 ? \"默认回复\" : \"~~\")))}\r\n            </span>\r\n          )\r\n        }\r\n      }, {\r\n        key: \"name\",\r\n        dataIndex: \"name\",\r\n        title: \"消息名称\",\r\n        align: \"center\"\r\n      },{\r\n        key: \"sex\",\r\n        title: \"性别\",\r\n        dataIndex: \"sex\",\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return (\r\n            <span>\r\n              {record.sex === 1 ? \"男\" : (record.sex === 2\r\n                ? \"女\" : (record.sex === 0 ? \"未知\" : \"默认\"))}\r\n            </span>\r\n          )\r\n        }\r\n      }, {\r\n        key: \"text\",\r\n        title: \"用户回复文本\",\r\n        dataIndex: \"text\",\r\n        align: \"center\",\r\n        render: text => text ? text : \"——\"\r\n      }, {\r\n        key: \"key\",\r\n        title: \"点击关键词\",\r\n        dataIndex: \"key\",\r\n        align: \"center\",\r\n        render: text => text ? text : \"——\"\r\n      }, {\r\n        key: \"codes\",\r\n        title: \"公号名称\",\r\n        dataIndex: \"codes\",\r\n        align: \"center\",\r\n        render: text => text.length > 0 ? text.slice(0, 4).map(item => {\r\n          let a = allCodes.filter(i => i.code === item)[0];\r\n          return a && a.nick_name\r\n        }) : \"无\"\r\n      }, {\r\n        key: \"Action\",\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 120,\r\n        render: (text, record, index) => {\r\n          return (\r\n            <div className=\"btn-wrapper\">\r\n              <Button size=\"small\" type=\"primary\">\r\n                <Link to={{pathname: './update', state: {record, index}}}>编辑</Link>\r\n              </Button>\r\n              <Button size=\"small\" style={{background: \"red\", marginLeft: \"5px\"}}\r\n                      onClick={() => deleteReplyMessage(record._id, index)}>删除</Button>\r\n            </div>\r\n          )\r\n        }\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"edit-config\">\r\n          <Button type=\"primary\" className=\"edit-btn\">\r\n            <Link to='./create'>新建回复规则</Link>\r\n          </Button>\r\n          <Table className='config-table' size=\"small\" rowKey={(record => record._id)} columns={configHeader} dataSource={replyMessageList} bordered pagination={false}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getReplyMessageList();\r\n    this.props.getAllCodes();\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  allCodes: state.gonghao.reply.allCodes,\r\n  replyMessageList: state.gonghao.reply.replyMessageList\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  getReplyMessageList() {\r\n    dispatch(actionCreators.getReplyMessageList())\r\n  },\r\n  deleteReplyMessage(id, index) {\r\n    dispatch(actionCreators.deleteReplyMessage(id, index))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Config);","import React from 'react';\r\nimport {Card, List} from 'antd';\r\nimport \"./index.scss\";\r\n\r\nconst GraphicMessage = props => {\r\n  const {messageList, updateMessageItem} = props;\r\n  return (\r\n    <div className=\"graphic-message-list-wrapper\">\r\n      <Card className=\"message-list-card\" title={\r\n        messageList.length > 1 ?\r\n        <List className=\"message-list\">\r\n            <List.Item className=\"cursor\" onClick={() => updateMessageItem(messageList[0], 0)}>\r\n              <div className=\"head-message\">\r\n                <p className=\"ellipse-two\">{messageList[0].title}</p>\r\n                <img src={messageList[0].picurl} alt=\"\"/>\r\n              </div>\r\n          </List.Item>\r\n          {messageList.slice(1).map((message, index) => \r\n            <List.Item className=\"border_btm cursor\" onClick={() => updateMessageItem(message, index + 1)} key={index}>\r\n              <div className=\"rest-message\">\r\n                <p className=\"ellipse-two\">{message.title}</p>\r\n                <img src={message.picurl} alt=\"\"/>\r\n              </div>\r\n            </List.Item>)}\r\n        </List> : <div className=\"cursor\" onClick={() => updateMessageItem(messageList[0], 0)}>\r\n          <div className=\"head-other\">\r\n            <img src={messageList[0].picurl} alt=\"\"/>\r\n            <h3 className=\"title textEllipsis\">{messageList[0].title}</h3>\r\n            <p className=\"ellipse-two\">{messageList[0].description}</p>\r\n          </div>\r\n        </div>}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default GraphicMessage;","import React from 'react';\r\nimport { Checkbox, Row, Col, Modal, Button } from 'antd';\r\n\r\nconst MultiSelectModal = props => {\r\n  const {selectGonghaoModal, allCodes, codes = [], changeGonghao, closeSelectModal} = props;\r\n  return (\r\n    <Modal width={1000} visible={selectGonghaoModal} maskClosable={false} closable={false} mask={false}  footer={<Button type=\"primary\" disabled={codes.length === 0} onClick={closeSelectModal}>确定</Button>}>\r\n      <Checkbox.Group value={codes} style={{ width: '100%' }} onChange={changeGonghao}>\r\n        <Row>\r\n          {allCodes.map(item =>  <Col span={4} key={item._id}>\r\n            <Checkbox value={item.code}>{item.nick_name}</Checkbox>\r\n          </Col>)}\r\n        </Row>\r\n      </Checkbox.Group>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default MultiSelectModal;","import React, {Component, Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Form, Button, Input, Upload, Radio, Icon, Row, Col, Divider, Avatar} from \"antd\";\r\nimport * as actionCreators from '../store/actionCreators';\r\nimport \"./index.scss\";\r\nimport GraphicMessage from '../../../../common/components/GraphicMessage';\r\nimport MultiSelectModal from '../../../../common/components/SelectGonghao/MultiSelectModal';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    sm: {span: 4}\r\n  },\r\n  wrapperCol: {\r\n    sm: {span: 14, offset: 0}\r\n  },\r\n};\r\n\r\nclass EditConfigInfo extends Component {\r\n\r\n  UNSAFE_componentWillMount() {\r\n    const { location: {state}, getAllCodes, initState, closeSelectModal } = this.props;\r\n    getAllCodes();\r\n    state && initState(state.record, state.index);\r\n    state && closeSelectModal();\r\n  }\r\n  render() {\r\n    const {selectGonghaoModal, allCodes, closeSelectModal, openSelectModal, submitForm, messageInfo, updateMessageItem, addToList, changeMessageInfo, uploadImg, history, updateIndex, updateCurrentMessage, deleteCurrentMessage} = this.props;\r\n    let TextOrKey, MessageContent;\r\n    if (messageInfo.type === 0) {\r\n      TextOrKey = <Form.Item label=\"用户回复内容\">\r\n        <Input onChange={e => changeMessageInfo(\"text\", e.target.value)} value={messageInfo.text} placeholder='请输入用户回复内容'/>\r\n      </Form.Item>\r\n    } else if (messageInfo.type === 1) {\r\n      TextOrKey = <Form.Item label=\"点击关键词\">\r\n        <Input onChange={e => changeMessageInfo(\"key\", e.target.value)} value={messageInfo.key} placeholder='请输入菜单栏点击关键词'/>\r\n      </Form.Item>\r\n    }\r\n    if (messageInfo.replyType === 0) {\r\n      MessageContent = <Form.Item className=\"inputtxt\" label=\"文本消息\">\r\n        <Input.TextArea onChange={e => changeMessageInfo(\"content\", e.target.value)} value={messageInfo.content} autosize={{minRows: 3, maxRows: 6}} placeholder='请输入回复文本消息'/>\r\n      </Form.Item>\r\n    } else {\r\n      let UploadImg;\r\n      if (messageInfo.picurl) {\r\n        UploadImg = <img style={{width: \"100px\"}} src={messageInfo.picurl} alt=\"图片走丢啦~\"/>\r\n      } else {\r\n        UploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n      }\r\n      MessageContent = <Fragment>\r\n        <Form.Item label=\"图文标题\">\r\n          <Input onChange={e => changeMessageInfo(\"title\", e.target.value)} value={messageInfo.title} placeholder='请输入图文标题'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文链接\">\r\n          <Input onChange={e => changeMessageInfo(\"url\", e.target.value)} value={messageInfo.url} placeholder='请输入图文链接'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文描述\">\r\n          <Input.TextArea onChange={e => changeMessageInfo(\"description\", e.target.value)} value={messageInfo.description} autosize={{minRows: 3, maxRows: 6}} placeholder='请输入图文描述'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"上传图片\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" showUploadList={false} onChange={uploadImg}>\r\n            {UploadImg}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item label=\" \" colon={false}>\r\n          {updateIndex > -1 ? <div>\r\n            <Button onClick={updateCurrentMessage} type=\"primary\" style={{marginRight: 20}}>保存</Button>\r\n            <Button onClick={deleteCurrentMessage}>删除此条消息</Button>\r\n          </div> : <div><Button onClick={addToList}>添加到图文列表</Button><p className=\"tips\">Tips: 当用户发送文本、图片、视频、图文、地理位置这五种消息时，只能回复1条图文消息；其余场景最多可回复8条图文消息</p></div>}\r\n        </Form.Item>\r\n      </Fragment>\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        {selectGonghaoModal && <MultiSelectModal allCodes={allCodes} selectGonghaoModal={selectGonghaoModal} changeGonghao={codes => changeMessageInfo(\"codes\", codes)} closeSelectModal={closeSelectModal} codes={messageInfo.codes} />}\r\n        <Form className=\"reply-form\" labelAlign=\"right\" {...formItemLayout}>\r\n          <Col span={17}>\r\n            <Form.Item label=\"选择公号\">\r\n              <Avatar className=\"cursor\" shape=\"square\" icon=\"user\" onClick={openSelectModal}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"消息名称\">\r\n              <Input onChange={e => changeMessageInfo(\"name\", e.target.value)} value={messageInfo.name} placeholder='请输入消息名称,(仅供备注，不会发送给粉丝)'/>\r\n            </Form.Item>\r\n          </Col>\r\n          <Divider style={{width: \"110%\", marginLeft: -50}}/>\r\n          <h2 className=\"block-title\">设置自动回复</h2>\r\n          <Row>\r\n            <Col span={17}>\r\n              <Form.Item wrapperCol={{offset: 1}}>\r\n                <Radio.Group value={messageInfo.replyType} onChange={e => changeMessageInfo(\"replyType\", e.target.value)}>\r\n                  <Radio.Button value={0}>文本消息</Radio.Button>\r\n                  <Radio.Button value={1}>图文消息</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              {MessageContent}\r\n            </Col>\r\n            <Col span={7}>\r\n              {messageInfo.articles.length > 0 && <GraphicMessage messageList={messageInfo.articles} updateMessageItem={updateMessageItem} />}\r\n            </Col>\r\n          </Row>\r\n          <Divider style={{width: \"110%\", marginLeft: -50}}/>\r\n          <h2 className=\"block-title\">设置模板消息</h2>\r\n          <Col span={17}>\r\n            <Form.Item wrapperCol={{offset: 1}}>\r\n              <Radio.Group value={messageInfo.type} onChange={e => changeMessageInfo(\"type\", e.target.value)}>\r\n                <Radio.Button value={0}>特定回复</Radio.Button>\r\n                <Radio.Button value={1}>用户点击</Radio.Button>\r\n                <Radio.Button value={2}>用户关注</Radio.Button>\r\n                <Radio.Button value={4}>默认回复</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item label=\"粉丝性别\">\r\n              <Radio.Group value={messageInfo.sex} onChange={e => changeMessageInfo(\"sex\", e.target.value)}>\r\n                <Radio value={3}>默认</Radio>\r\n                <Radio value={1}>男</Radio>\r\n                <Radio value={2}>女</Radio>\r\n                <Radio value={0}>未知</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item label=\"未知性别\">\r\n              <Radio.Group value={messageInfo.attribute} onChange={e => changeMessageInfo(\"attribute\", e.target.value)}>\r\n                <Radio value={1}>男</Radio>\r\n                <Radio value={2}>女</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            {TextOrKey}\r\n          </Col>\r\n          <Divider style={{width: \"110%\", marginLeft: -50}}/>\r\n          <Form.Item wrapperCol={{offset: 1}}>\r\n            <Button type=\"primary\" style={{marginRight: 20}} onClick={() => submitForm(messageInfo, this.props)}>提交</Button>\r\n            <Button onClick={() => history.goBack()}>取消</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  messageInfo: state.gonghao.reply.messageInfo,\r\n  allCodes: state.gonghao.reply.allCodes,\r\n  selectGonghaoModal: state.gonghao.reply.selectGonghaoModal,\r\n  updateIndex: state.gonghao.reply.updateIndex,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  closeSelectModal() {\r\n    dispatch(actionCreators.closeSelectModal())\r\n  },\r\n  openSelectModal() {\r\n    dispatch(actionCreators.openSelectModal())\r\n  },\r\n  changeMessageInfo(key, value) {\r\n    dispatch(actionCreators.changeMessageInfo(key, value))\r\n  },\r\n  uploadImg(info) {\r\n    if (info.file.status === 'done') {\r\n      let picurl = `http://t.dmmup.com/uploads/${info.file.response.filename}`;\r\n      dispatch(actionCreators.changeMessageInfo(\"picurl\", picurl))\r\n    }\r\n  },\r\n  addToList() {\r\n    dispatch(actionCreators.addToList())\r\n  },\r\n  updateMessageItem(item, index) {\r\n    dispatch(actionCreators.updateMessageItem(item, index))\r\n  },\r\n  updateCurrentMessage() {\r\n    dispatch(actionCreators.updateCurrentMessage())\r\n  },\r\n  deleteCurrentMessage() {\r\n    dispatch(actionCreators.deleteCurrentMessage())\r\n  },\r\n  submitForm(messageInfo, props) {\r\n    const { title, picurl, url, description } = messageInfo;\r\n    const {state} = props.location;\r\n    messageInfo.articles.length === 0 && (messageInfo.articles.push({ title, picurl, url, description }));\r\n    messageInfo.title = messageInfo.picurl = messageInfo.url = messageInfo.description = \"\";\r\n    if (state) {\r\n      messageInfo._id = state.record._id;\r\n      dispatch(actionCreators.updateConfigForm(messageInfo, props.history))\r\n    } else {\r\n      dispatch(actionCreators.createConfigForm(messageInfo, props.history))\r\n    }\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState());\r\n  },\r\n  initState(record, index) {\r\n    dispatch(actionCreators.initState(record, index))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Form.create({name: 'editConfigInfo'})(EditConfigInfo));","import React, { Component } from 'react';\r\nimport { Button, Table, Modal, message } from 'antd';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass QrCode extends Component {\r\n  state = {\r\n    qrCodeList: []\r\n  };\r\n  render() {\r\n    const { qrCodeList } = this.state;\r\n    const qrCodeHeader = [\r\n      {\r\n        key: \"name\",\r\n        dataIndex: \"name\",\r\n        title: \"二维码名称\",\r\n        align: \"center\",\r\n        width: 300\r\n      },\r\n      {\r\n        key: \"content\",\r\n        dataIndex: \"content\",\r\n        title: \"关注后回复内容\",\r\n        align: \"center\",\r\n      },\r\n      {\r\n        key: \"gonghao\",\r\n        dataIndex: \"gonghao\",\r\n        title: \"公号\",\r\n        align: \"center\",\r\n        width: 300\r\n      },\r\n      {\r\n        key: \"qr_code_url\",\r\n        dataIndex: \"qr_code_url\",\r\n        title: \"二维码\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record) => <img style={{width: \"100%\"}} src={text} alt=\"\"/>\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record, index) => <div>\r\n          <Button style={{marginRight: 10}} size=\"small\" type=\"primary\">\r\n            <Link to={{pathname: \"./update\", query: record}}>修改</Link>\r\n          </Button>\r\n          <Button size=\"small\" type=\"danger\" onClick={() => this.deleteQrCode(record._id, index)}>删除</Button>\r\n        </div>\r\n      }\r\n    ];\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Button type=\"primary\" style={{marginBottom: 20}}><Link to=\"./create\">新增参数二维码</Link></Button>\r\n          <Table rowKey={record => record._id} size=\"small\" bordered columns={qrCodeHeader} dataSource={qrCodeList} />\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getQrCodeList()\r\n  }\r\n\r\n  getQrCodeList() {\r\n    axios.get(\"/qr_code/show\").then(res => {\r\n      let {codes, data} = res.data;\r\n      for (var i = 0, codesLength = codes.length; i < codesLength; i++) {\r\n        for (var j = 0, dataLength = data.length; j < dataLength; j++) {\r\n          if (codes[i].code === parseInt(data[j].code)) {\r\n            data[j].gonghao = codes[i].name;\r\n          }\r\n        }\r\n      }\r\n      this.setState({qrCodeList: data.reverse()});\r\n    });\r\n  }\r\n\r\n  deleteQrCode(id, index) {\r\n    const { qrCodeList } = this.state;\r\n    Modal.confirm({\r\n      title: \"确定删除这条内容吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/qr_code/deleteOne\", { id })\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            qrCodeList.splice(index, 1);\r\n            this.setState({qrCodeList})\r\n          });\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default QrCode;","import React, { Component } from 'react';\r\nimport { Button, Input, Form, Modal, message, Select } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst { Option } = Select;\r\n\r\nconst initState = {\r\n  gonghaoList: [],\r\n  qrCodeInfo: {\r\n    name: \"\",\r\n    content: \"\",\r\n    code: null\r\n  }\r\n};\r\n\r\nclass EditQrCode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.cancelEdit = this.cancelEdit.bind(this);\r\n    this.submitEdit = this.submitEdit.bind(this);\r\n  }\r\n  state = JSON.parse(JSON.stringify(initState));\r\n  render() {\r\n    const { gonghaoList, qrCodeInfo } = this.state;\r\n    const { query } = this.props.history.location;\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <div className=\"title-wrapper\">\r\n            <h2>编辑二维码信息</h2>\r\n            <div className=\"fr\">\r\n              <Button type=\"primary\" style={{marginRight: 10}} onClick={this.submitEdit}>提交</Button>\r\n              <Button onClick={this.cancelEdit}>取消</Button>\r\n            </div>\r\n          </div>\r\n          <Form className=\"fl\" style={{width: \"40%\"}} labelCol={{sm: 6}} wrapperCol={{sm: 18}}>\r\n            <Form.Item label=\"二维码名称\">\r\n              <Input value={qrCodeInfo.name} placeholder=\"请输入二维码名称\" onChange={e => this.changeInputValue(e.target.value, \"name\")} />\r\n            </Form.Item>\r\n            <Form.Item label=\"关注回复内容\">\r\n              <Input.TextArea value={qrCodeInfo.content} placeholder=\"请输入关注回复内容\" onChange={e => this.changeInputValue(e.target.value, \"content\")} />\r\n            </Form.Item>\r\n            <Form.Item label=\"选择公号\">\r\n              <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"输入公号/选择公号\"\r\n                optionFilterProp=\"children\"\r\n                value={qrCodeInfo.code ? this.getGonghaoName(qrCodeInfo.code) : qrCodeInfo.gonghao}\r\n                onChange={value => this.changeInputValue(value, \"code\")}\r\n                filterOption={(input, option) =>\r\n                  option.props.children.indexOf(input) >= 0\r\n                }\r\n                disabled={!!query}\r\n              >\r\n                {gonghaoList.map(item => <Option key={item._id} value={item.code}>{item.nick_name}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { query } = this.props.history.location;\r\n    this.getGonghaoList();\r\n    query && this.initState(query)\r\n  }\r\n\r\n  getGonghaoName(code) {\r\n    if(code) {\r\n      const { gonghaoList } = this.state;\r\n      let result = gonghaoList.filter(item => item.code === parseInt(code));\r\n      return result.length > 0 && result[0].name\r\n    }\r\n  }\r\n\r\n  initState(query) {\r\n    axios.get(\"/tag/get_name\", { params: { tagId: query.tagId } })\r\n      .then(res => {\r\n        if(res.data.data) {\r\n          const { name } = res.data.data;\r\n          query.tagName = name;\r\n          this.setState(state => ({qrCodeInfo: {...query,}}))\r\n        }\r\n      });\r\n  }\r\n\r\n  getGonghaoList() {\r\n    axios.get(\"/qr_code/get_code\").then(res => {\r\n      const { codes: gonghaoList } = res.data;\r\n      this.setState({gonghaoList})\r\n    });\r\n  }\r\n\r\n  changeInputValue(value, name) {\r\n    const { qrCodeInfo } = this.state;\r\n    qrCodeInfo[name] = value;\r\n    this.setState(state => ({qrCodeInfo: {...state.qrCodeInfo, ...qrCodeInfo}}))\r\n  }\r\n\r\n  submitEdit() {\r\n    const { qrCodeInfo } = this.state;\r\n    const { query } = this.props.history.location;\r\n    let url = \"/qr_code/create\";\r\n    if(query) {\r\n      qrCodeInfo.id = qrCodeInfo._id;\r\n      url = \"/qr_code/update\";\r\n    }\r\n    Modal.confirm({\r\n      title: \"确定提交吗？\",\r\n      onOk: () => {\r\n        axios.post(url, {...qrCodeInfo})\r\n          .then(res => {\r\n            const { data } = res.data;\r\n            if (!data) {\r\n              message.error(query ? \"修改失败\" : \"创建失败\");\r\n            } else {\r\n              message.info(query ? \"修改成功\" : \"创建成功\");\r\n              this.cancelEdit();\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  cancelEdit() {\r\n    this.props.history.goBack();\r\n    this.resetState();\r\n  }\r\n\r\n  resetState() {\r\n    this.setState({...initState})\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.resetState();\r\n  }\r\n}\r\n\r\nexport default EditQrCode;","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Tuoguan from './tuoguan';\r\nimport GonghaoGroup from './tuoguan/group'\r\n\r\nimport Menu from './menu';\r\nimport editMenu from './menu/edit';\r\n\r\nimport Replay from './reply';\r\nimport editReplay from './reply/edit';\r\n\r\nimport QRCode from './qrcode';\r\nimport editQRCode from './qrcode/edit';\r\n\r\n\r\nclass TuoguanWrapper extends Component {\r\n  render() {\r\n    return (\r\n        <Route path=\"/admin/gonghao\" render={() =>\r\n          <Switch>\r\n            {/*接管公号*/}\r\n            <Route path='/admin/gonghao/tuoguan/'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/tuoguan/index\" component={Tuoguan} />\r\n                <Route path=\"/admin/gonghao/tuoguan/group\" component={GonghaoGroup} />\r\n                <Redirect from=\"/admin/gonghao/tuoguan\" exact to='/admin/gonghao/tuoguan/index' />\r\n              </Switch>\r\n            </Route>\r\n            {/*菜单配置*/}\r\n            <Route path='/admin/gonghao/menu/'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/menu/index\" component={Menu} />\r\n                <Route path='/admin/gonghao/menu/create' component={editMenu} />\r\n                <Route path='/admin/gonghao/menu/update' component={editMenu} />\r\n                <Redirect from=\"/admin/gonghao/menu\" exact to='/admin/gonghao/menu/index' />\r\n              </Switch>\r\n            </Route>\r\n            {/*自动回复*/}\r\n            <Route path='/admin/gonghao/reply'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/reply/index\" component={Replay} />\r\n                <Route path='/admin/gonghao/reply/create' component={editReplay} />\r\n                <Route path='/admin/gonghao/reply/update' component={editReplay} />\r\n                <Redirect from=\"/admin/gonghao/reply\" exact to='/admin/gonghao/reply/index' />\r\n              </Switch>\r\n            </Route>\r\n            {/*参数二维码*/}\r\n            <Route path='/admin/gonghao/qrcode/'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/qrcode/index\" component={QRCode} />\r\n                <Route path='/admin/gonghao/qrcode/create' component={editQRCode} />\r\n                <Route path='/admin/gonghao/qrcode/update' component={editQRCode} />\r\n                <Redirect from=\"/admin/gonghao/qrcode\" exact to='/admin/gonghao/qrcode/index' />\r\n              </Switch>\r\n            </Route>\r\n            <Redirect from=\"/admin/gonghao\" exact to='/admin/gonghao/tuoguan' />\r\n          </Switch>\r\n        } />\r\n    )\r\n  }\r\n}\r\n\r\nexport default TuoguanWrapper;","import React from 'react';\r\nimport {Card, List, Icon, Tooltip} from 'antd';\r\nimport \"./index.scss\";\r\nimport moment from 'moment';\r\n\r\nconst GraphicMessage = props => {\r\n  const {messageList, openSyncModal, openModal, openTimingModal, copy, deleteMaterial, openUpdateMaterialModal} = props;\r\n  return (\r\n    <div className=\"message-list-wrapper\">\r\n      <List grid={{gutter: 20, sm: 4, xxl: 6}} dataSource={messageList}\r\n            renderItem={(item, index) => <List.Item key={item._id}>\r\n              <Card className=\"message-list-card\" title={\r\n                <List className=\"message-list\">\r\n                  <div className=\"update-time\"><Icon\r\n                    type=\"sound\"/> 更新于 {moment(item.update_time * 1000).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                  <Tooltip title=\"\" key={item.content.news_item[0].thumb_media_id + \"0\"}>\r\n                    <List.Item className=\"cursor\" onClick={() => openUpdateMaterialModal(item.media_id, 0, item.content.news_item[0], item._id)}>\r\n                      <div className=\"head-message\">\r\n                        <p className=\"ellipse-two\">{item.content.news_item[0].title}</p>\r\n                        <img src={item.content.news_item[0].local_img_path} alt=\"\"/>\r\n                      </div>\r\n                  </List.Item>\r\n                  </Tooltip>\r\n                  {item.content.news_item.slice(1).map((message, index) => <Tooltip title=\"点击修改原文链接\" key={message.thumb_media_id + index + 1} placement=\"rightTop\">\r\n                    <List.Item className=\"border_btm cursor\" onClick={() => openUpdateMaterialModal(item.media_id, index + 1, item.content.news_item[index + 1], item._id)}>\r\n                      <div className=\"rest-message\">\r\n                        <p className=\"ellipse-two\">{message.title}</p>\r\n                        <img src={message.local_img_path} alt=\"\"/>\r\n                      </div>\r\n                    </List.Item>\r\n                  </Tooltip>)}\r\n                </List>}\r\n                    actions={[\r\n                      <Tooltip title=\"同步\"><Icon onClick={() => openSyncModal(item)} type=\"cloud-upload\"\r\n                                                key=\"sync\"/></Tooltip>,\r\n                      <Tooltip title=\"发送\"><Icon onClick={() => openModal(item)} type=\"message\" key=\"send\"/></Tooltip>,\r\n                      <Tooltip title=\"定时发送\"><Icon onClick={() => openTimingModal(item)} type=\"history\" key=\"timing\"/></Tooltip>,\r\n                      <Tooltip title=\"复制\"><Icon onClick={() => copy(item._id)} type=\"fork\" key=\"copy\"/></Tooltip>,\r\n                      <Tooltip title=\"删除\"><Icon onClick={() => deleteMaterial(item._id, index)} type=\"delete\"\r\n                                                key=\"del\"/></Tooltip>,\r\n                    ]}\r\n              />\r\n            </List.Item>}/>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default GraphicMessage;","import React, {PureComponent} from 'react';\r\nimport {message, Modal, Radio, Switch, DatePicker, TimePicker, Checkbox, Row, Col, Input} from \"antd\";\r\nimport moment from 'moment';\r\nimport {connect} from \"react-redux\";\r\nimport { actionCreators } from '../store';\r\nimport GraphicMessage from '../components/GraphicMessage';\r\n\r\nimport axios from 'axios';\r\n\r\nclass groupMessage extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      syncModal: false,\r\n      checkedList: [],\r\n      indeterminate: false,\r\n      checkAll: false,\r\n      messageInfo: {},\r\n      code: props.code,\r\n      gonghaoList: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { code } = this.state;\r\n    this.props.getMessageList(code);\r\n    this.props.getTagList(code);\r\n    this.props.getGroupGonghao();\r\n    this.getGonghaoList();\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\r\n    if(this.props.code !== nextProps.code) {\r\n      const { code } = nextProps;\r\n      this.props.getMessageList(code);\r\n    }\r\n  }\r\n\r\n  getGonghaoList = () => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        const { data, code } = res.data;\r\n        if (code === 1) {\r\n          this.setState({gonghaoList: data})\r\n        }\r\n      })\r\n  };\r\n\r\n  render() {\r\n    const { messageList, openModal, sendModal, sendMessage, sendInfo, tagList, closeModal, changeTagId, sendTimingModal, sendTimingMessage, sendTimingInfo, openTimingModal, changeTimingState, copy, changeTime, deleteMaterial, isComplete, openUpdateMaterialModal, closeUpdateMaterialModal, updateMaterialModal, updateMaterial, updateInfo, changeContentSourceUrl }  = this.props;\r\n    const { code, gonghaoList } = this.state;\r\n    let selectGonghaoList = gonghaoList.filter(item => item.code !== code);\r\n    const selectTagRadio = tagList.map(item => (\r\n      <Radio key={item._id} value={item.id}>{item.name}</Radio>\r\n    ));\r\n    return (\r\n      <div>\r\n        <div className=\"container\" style={{padding: 0}}>\r\n          <GraphicMessage messageList={messageList} openSyncModal={message => this.setState({syncModal: true, messageInfo: message})} openModal={openModal} openTimingModal={openTimingModal} copy={copy} deleteMaterial={deleteMaterial} isComplete={isComplete} openUpdateMaterialModal={openUpdateMaterialModal} />\r\n        </div>\r\n        <Modal\r\n          title=\"请选择要发送的标签\"\r\n          visible={sendModal}\r\n          onOk={() => sendMessage(sendInfo)}\r\n          onCancel={closeModal}\r\n        >\r\n          <Radio.Group value={sendInfo.tagId} onChange={e => changeTagId(e, false)}>\r\n            {selectTagRadio}\r\n          </Radio.Group>\r\n        </Modal>\r\n        <Modal\r\n          title=\"创建定时发送任务？\"\r\n          visible={sendTimingModal}\r\n          onOk={() => sendTimingMessage(sendTimingInfo, code)}\r\n          onCancel={closeModal}\r\n        >\r\n          <label htmlFor=\"tagId\">\r\n            标签：\r\n            <Radio.Group id=\"tagId\" value={sendTimingInfo.tagId} onChange={e => changeTagId(e, true)}>\r\n              {selectTagRadio}\r\n            </Radio.Group>\r\n          </label>\r\n          <label style={{display: \"block\", margin: \"20px 0\"}} htmlFor=\"isTiming\">\r\n            是否定时：\r\n            <Switch checked={sendTimingInfo.isTiming} onChange={changeTimingState} />\r\n          </label>\r\n          <label htmlFor=\"timing\" style={{display: sendTimingInfo.isTiming ? \"block\" : \"none\"}}>\r\n            时间选择：\r\n            <DatePicker\r\n              value={moment(new Date(sendTimingInfo.timing), 'YYYY-MM-DD')}\r\n              onChange={(time, timeString) => changeTime(timeString, \"date\")}\r\n            />\r\n            <TimePicker\r\n              value={moment(new Date(sendTimingInfo.timing), 'HH-MM-SS')}\r\n              onChange={(time, timeString) => changeTime(timeString, \"time\")}\r\n            />\r\n          </label>\r\n        </Modal>\r\n        <Modal width={640} title=\"请选择需要同步素材的公号：\" visible={this.state.syncModal} onOk={this.syncMaterial} onCancel={this.closeSyncModal}>\r\n          <div style={{ borderBottom: '1px solid #E9E9E9', paddingBottom: 10, marginBottom: 10 }}>\r\n            <Checkbox\r\n              indeterminate={this.state.indeterminate}\r\n              onChange={this.onCheckAllChange}\r\n              checked={this.state.checkAll}\r\n            >全选</Checkbox>\r\n          </div>\r\n          <Checkbox.Group style={{width: \"100%\"}} onChange={this.onChange} value={this.state.checkedList}>\r\n            <Row>\r\n              {selectGonghaoList.map(item => <Col span={6} key={item._id}>\r\n                <Checkbox value={item.code}>{item.nick_name}</Checkbox>\r\n              </Col>)}\r\n            </Row>\r\n          </Checkbox.Group>\r\n        </Modal>\r\n        <Modal visible={updateMaterialModal} onCancel={closeUpdateMaterialModal} onOk={() => updateMaterial(updateInfo, code)} title=\"修改原文链接\">\r\n          <Input value={updateInfo.articles.content_source_url} placeholder=\"请输入新的原文链接\" onChange={changeContentSourceUrl} />\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n\r\n  syncMaterial = () => {\r\n    const { messageInfo, checkedList: codes } = this.state;\r\n    Modal.confirm({\r\n      title: \"确定同步这条素材吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/material/syncMaterial\", {codes, docs: [messageInfo]})\r\n          .then(res => {\r\n            const {code, msg } = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.closeSyncModal();\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  closeSyncModal = () => {\r\n    this.setState({\r\n      syncModal: false,\r\n      checkedList: [],\r\n      indeterminate: false,\r\n      checkAll: false,\r\n      messageInfo: {}\r\n    })\r\n  };\r\n\r\n  onCheckAllChange = e => {\r\n    const { code } = this.props.location.state;\r\n    const plainOptions = this.props.gonghaoList.filter(item => item.code !== code);\r\n    const codes = plainOptions.map(item => item.code);\r\n    this.setState({\r\n      checkedList: e.target.checked ? codes : [],\r\n      indeterminate: false,\r\n      checkAll: e.target.checked,\r\n    });\r\n  };\r\n\r\n  onChange = checkedList => {\r\n    const { code } = this.props.location.state;\r\n    const plainOptions = this.props.gonghaoList.filter(item => item.code !== code);\r\n    const codes = plainOptions.map(item => item.code);\r\n    this.setState({\r\n      checkedList,\r\n      indeterminate: !!checkedList.length && checkedList.length < codes.length,\r\n      checkAll: checkedList.length === codes.length,\r\n    });\r\n  };\r\n}\r\n\r\n\r\nconst mapState = state => ({\r\n  tagList: state.message.group.tagList,\r\n  messageList: state.message.group.messageList,\r\n  sendInfo: state.message.group.sendInfo,\r\n  sendTimingInfo: state.message.group.sendTimingInfo,\r\n  sendModal: state.message.group.sendModal,\r\n  sendTimingModal: state.message.group.sendTimingModal,\r\n  gonghaoList: state.message.group.gonghaoList,\r\n  isComplete: state.message.group.isComplete,\r\n  updateMaterialModal: state.message.group.updateMaterialModal,\r\n  updateInfo: state.message.group.updateInfo,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getTagList(code) {\r\n    dispatch(actionCreators.getTagList(code))\r\n  },\r\n  getMessageList(code) {\r\n    dispatch(actionCreators.getMessageList(code))\r\n  },\r\n  openModal(record) {\r\n    dispatch(actionCreators.openModal(record));\r\n  },\r\n  sendMessage(sendInfo) {\r\n    dispatch(actionCreators.sendMessage(sendInfo));\r\n  },\r\n  changeTagId(e, isTiming) {\r\n    dispatch(actionCreators.changeTagId(e.target.value, isTiming));\r\n  },\r\n  openTimingModal(record) {\r\n    dispatch(actionCreators.openTimingModal(record));\r\n  },\r\n  closeModal() {\r\n    dispatch(actionCreators.closeModal());\r\n  },\r\n  sendTimingMessage(sendTimingInfo, code) {\r\n    dispatch(actionCreators.sendTimingMessage(sendTimingInfo, code));\r\n  },\r\n  changeTimingState(value) {\r\n    dispatch(actionCreators.changeTimingState(value));\r\n  },\r\n  changeTime(time, type) {\r\n    dispatch(actionCreators.changeTime(time, type));\r\n  },\r\n  copy(id) {\r\n    dispatch(actionCreators.copy(id));\r\n  },\r\n  deleteMaterial(id, index) {\r\n    dispatch(actionCreators.deleteMaterial(id, index));\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState());\r\n  },\r\n  getGroupGonghao() {\r\n    dispatch(actionCreators.getGroupGonghao());\r\n  },\r\n  openUpdateMaterialModal(media_id, index, articles, id) {\r\n    dispatch(actionCreators.openUpdateMaterialModal({media_id, index, articles, id}));\r\n  },\r\n  closeUpdateMaterialModal() {\r\n    dispatch(actionCreators.closeUpdateMaterialModal());\r\n  },\r\n  updateMaterial(updateInfo, code) {\r\n    dispatch(actionCreators.updateMaterial(updateInfo, code));\r\n  },\r\n  changeContentSourceUrl(e) {\r\n    let content_source_url = e.target.value;\r\n    dispatch(actionCreators.changeContentSourceUrl(content_source_url));\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(groupMessage);","import React, {Component} from 'react';\r\nimport {Avatar, Input, List, Layout, Collapse, message} from \"antd\";\r\nimport axios from 'axios';\r\nimport \"./index.scss\";\r\n\r\nconst {Sider, Content} = Layout;\r\nconst {Panel} = Collapse;\r\n\r\nclass SingleSelectByGroup extends Component {\r\n\r\n  state = {\r\n    gonghaoTagList: [],\r\n    gonghaoList: [],\r\n    nick_name: \"\",\r\n    _id: \"\",\r\n    activeKey: \"\"\r\n  };\r\n\r\n  search = nick_name => {\r\n    const {gonghaoTagList} = this.state;\r\n    if (nick_name !== \"\") {\r\n      axios.get(\"/conf/find_one\", {params: {nick_name}})\r\n        .then(res => {\r\n          if (res.data.data.length !== 0) {\r\n            const {data} = res.data;\r\n            this.props.setCode(data[0].code);\r\n            let selectGonghao = gonghaoTagList.filter(item => data[0].group === item.name);\r\n            this.setState({nick_name: \"\", _id: data[0]._id, activeKey: selectGonghao[0].name})\r\n          } else {\r\n            message.info(\"没有查询到包含该字符的公号，请检查后重新输入\")\r\n          }\r\n        })\r\n    } else {\r\n      message.info(\"公号名不能为空\")\r\n    }\r\n  };\r\n\r\n  changeSearchInput = e => {\r\n    let nick_name = e.target.value;\r\n    this.setState({nick_name})\r\n  };\r\n\r\n  selectGonghao = gonghao => {\r\n    const {code, _id} = gonghao;\r\n    this.props.setCode(code);\r\n    this.setState({_id})\r\n  };\r\n\r\n  handleChangeGroup = value => {\r\n    this.setState({activeKey: value || \"\"})\r\n  };\r\n\r\n  render() {\r\n    const {gonghaoTagList, gonghaoList, nick_name, _id, activeKey} = this.state;\r\n    const PanelList = name => (\r\n      <List className=\"gonghao-list\" dataSource={gonghaoList.length > 0 ? gonghaoList.filter(i => i.group === name) : null} locale={{emptyText: <span style={{display: \"none\"}}>123</span>}}\r\n        renderItem={gonghao =>\r\n          <List.Item className={gonghao._id === _id ? \"cursor selected\" : \"cursor\"} onClick={() => this.selectGonghao(gonghao)} key={gonghao._id}>\r\n            <Avatar shape=\"square\" size={22} icon=\"user\"/>{gonghao.nick_name}\r\n        </List.Item>\r\n      }/>\r\n    );\r\n    return (\r\n      <Layout style={{background: \"#fff\"}} className=\"message-group-wrapper\">\r\n        <Sider className=\"message-sider-wrapper\" theme=\"light\" width=\"180\">\r\n          <Input.Search\r\n            className=\"search-input\"\r\n            placeholder=\"请输入公号名称\"\r\n            onSearch={this.search}\r\n            value={nick_name}\r\n            onChange={this.changeSearchInput}\r\n          />\r\n          <List>\r\n            <List.Item>\r\n              <Collapse bordered={false} accordion activeKey={activeKey} onChange={this.handleChangeGroup}>\r\n                <Panel header=\"未分组\" key=\"未分组\">\r\n                  {PanelList(\"未分组\")}\r\n                </Panel>\r\n                {gonghaoTagList.map(item =>\r\n                  <Panel header={item.name} key={item.name}>\r\n                    {PanelList(item.name)}\r\n                  </Panel>\r\n                )}\r\n              </Collapse>\r\n            </List.Item>\r\n          </List>\r\n        </Sider>\r\n        <Content>{this.props.content}</Content>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  getGonghaoTagList = () => {\r\n    axios.get(\"/gonghaoTag\")\r\n      .then(res => {\r\n        if (res.data.code === 1) {\r\n          const {data: gonghaoTagList} = res.data;\r\n          this.setState({gonghaoTagList})\r\n        }\r\n      })\r\n  };\r\n\r\n  getGonghaoList = () => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        const {data, code} = res.data;\r\n        if (code === 1) {\r\n          this.setState({gonghaoList: data})\r\n        }\r\n      })\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGonghaoTagList();\r\n    this.getGonghaoList();\r\n  }\r\n}\r\n\r\nexport default SingleSelectByGroup;","import React, { Component } from 'react';\r\nimport {Modal, Table, Tooltip, Input} from 'antd';\r\nimport moment from 'moment';\r\nimport {connect} from \"react-redux\";\r\nimport { actionCreators } from '../store';\r\nimport Button from '../../../../common/components/Button';\r\n\r\n\r\nclass History extends Component {\r\n\r\n  componentWillMount() {\r\n    const { code } = this.props;\r\n    this.props.getTagList(code);\r\n    this.props.getHistoryList(code);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\r\n    if(this.props.code !== nextProps.code) {\r\n      const { code } = nextProps;\r\n      this.props.getTagList(code);\r\n      this.props.getHistoryList(code);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { historyList, tagList, checkSendState, openMsgModal, closeMsgModal, deleteMsg, changeArticleIdx, delMsgInfo, historyMsgModal, code } = this.props;\r\n    const historyHeader = [\r\n      {\r\n        key: \"update_time\",\r\n        title: \"发送消息时间\",\r\n        align: \"center\",\r\n        width: 120,\r\n        render: (text, record) => {\r\n          let time = moment(record.update_time * 1000).format(\"YYYY-MM-DD, HH:mm:ss\");\r\n          return (\r\n            <span>{time}</span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: \"发送对象\",\r\n        align: \"center\",\r\n        render: (text, record) => {\r\n          let tag = \"无\";\r\n          if(record.tagId) {\r\n            tag = tagList.map(item => {\r\n              return (record.tagId === item.id) && (tag = item.name);\r\n            });\r\n          }\r\n          return (\r\n            <div>\r\n              {tag}\r\n            </div>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: \"是否成功\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record) => {\r\n          let msg_id = record.msg_id;\r\n          let success;\r\n          if(msg_id === \"\") {\r\n            success = \"无msg_id,发送不成功\"\r\n          } else {\r\n            success = \"msg_id存在,发送成功\"\r\n          }\r\n          return <span>{success}</span>\r\n        }\r\n      },\r\n      {\r\n        title: \"图文标题\",\r\n        align: \"center\",\r\n        width: 300,\r\n        render: (text, record) => {\r\n          let arr =\r\n            record.content.news_item.length !== 0\r\n              ? record.content.news_item\r\n              : [];\r\n          let titles = [];\r\n          for (let i = 0; i < arr.length; i++) {\r\n            titles.push(i + 1 + \".\" + arr[i].title);\r\n          }\r\n          return (\r\n            <Tooltip placement=\"top\" title={titles}>\r\n              <p className=\"textEllipsis\" style={{width: 300}}>{titles}</p>\r\n            </Tooltip>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"isTiming\",\r\n        title: \"是否定时\",\r\n        align: \"center\",\r\n        render: (text, record) => {\r\n          let time = record.isTiming ? \"是\" : \"否\";\r\n          return (\r\n            <span>{time}</span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"timing\",\r\n        title: \"定时时间\",\r\n        align: \"center\",\r\n        render: (text, record) => {\r\n          let time = \"~~\";\r\n          if (record.timing) {\r\n            time = moment(record.timing).format(\"YYYY-MM-DD, HH:mm:ss\")\r\n          }\r\n          return (\r\n            <span>{time}</span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: (text, record) => (\r\n          <div>\r\n            <Button mb={10} onClick={() => checkSendState(code, record.msg_id)} buttonContent=\"发送状态\" />\r\n            <Button background=\"danger\" onClick={() => openMsgModal(record.code, record.msg_id)} buttonContent=\"删除消息\" />\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          {/*<Button size=\"default\" background=\"warning\" onClick={() => clearHistory(code)} buttonContent=\"清空列表\" />*/}\r\n            {/*<div className=\"fr\">*/}\r\n              {/*<DatePicker value={delDate ? moment(delDate): null} onChange={changeDate} />*/}\r\n              {/*<Button background=\"danger\" size=\"default\" ml={10} onClick={() => deleteMany(code, delDate)} buttonContent=\"批量删除\" />*/}\r\n            {/*</div>*/}\r\n          <Table size=\"small\" bordered rowKey={record => record._id} columns={historyHeader} dataSource={historyList} />\r\n        </div>\r\n        <Modal\r\n          title=\"请输入要删除的消息的索引\"\r\n          visible={historyMsgModal}\r\n          onOk={() => deleteMsg(delMsgInfo)}\r\n          onCancel={closeMsgModal}\r\n        >\r\n          <Input style={{width: 100}} value={delMsgInfo.article_idx} onChange={changeArticleIdx} />\r\n          <p style={{color: \"red\", marginTop: 10}}>Tips:   0为全部删除  1、2、3...为对应第几条</p>\r\n        </Modal>\r\n    \t</div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nconst mapState = state => ({\r\n  tagList: state.message.group.tagList,\r\n  historyList: state.message.group.historyList,\r\n  historyMsgModal: state.message.group.historyMsgModal,\r\n  delMsgInfo: state.message.group.delMsgInfo,\r\n  delDate: state.message.group.delDate\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getHistoryList(code) {\r\n    dispatch(actionCreators.getHistoryList(code))\r\n  },\r\n  getTagList(code) {\r\n    dispatch(actionCreators.getTagList(code))\r\n  },\r\n  checkSendState(code, msg_id) {\r\n    dispatch(actionCreators.checkSendState(code, msg_id))\r\n  },\r\n  openMsgModal(code, msg_id) {\r\n    dispatch(actionCreators.openMsgModal(code, msg_id))\r\n  },\r\n  closeMsgModal() {\r\n    dispatch(actionCreators.closeMsgModal())\r\n  },\r\n  deleteMsg(delMsgInfo) {\r\n    dispatch(actionCreators.deleteMsg(delMsgInfo))\r\n  },\r\n  changeArticleIdx(e) {\r\n    dispatch(actionCreators.changeArticleIdx(e.target.value))\r\n  },\r\n  clearHistory(code) {\r\n    dispatch(actionCreators.clearHistory(code))\r\n  },\r\n  changeDate(date, dataString) {\r\n    dispatch(actionCreators.changeDate(dataString))\r\n  },\r\n  deleteMany(code, delDate) {\r\n    let time = new Date(delDate).getTime()/1000;\r\n    dispatch(actionCreators.deleteMany(code, time))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(History);\r\n","import React from 'react';\r\nimport {Spin} from 'antd';\r\n\r\nconst loadingWrapper = {\r\n  width: \"100%\",\r\n  textAlign: \"center\",\r\n  background: \"rgba(241, 244, 245, .7)\",\r\n  position: \"absolute\",\r\n  padding: \"200px 0\",\r\n  top: 0,\r\n  left: 0,\r\n  zIndex: 1,\r\n};\r\n\r\nconst Loading = props => <div style={loadingWrapper}><Spin spinning={props.spinning}/></div>\r\n\r\nexport default Loading;","import React, {Component} from 'react';\r\nimport {Empty, Modal, message} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {actionCreators} from \"./store\";\r\nimport './index.scss';\r\nimport GroupMaterial from './material';\r\nimport SingleSelectByGroup from \"../../../common/components/SelectGonghao/SingleSelectByGroup\";\r\nimport Button from '../../../common/components/Button';\r\nimport History from './history';\r\nimport Loading from '../../../common/components/Loading';\r\n\r\nclass groupMessage extends Component {\r\n\r\n  state = {\r\n    code: null,\r\n    historyModalVisible: false,\r\n    spinning: true\r\n  };\r\n\r\n  timer = () => setTimeout(() => {\r\n    this.setState({spinning: false})\r\n  }, 1000);\r\n\r\n  setCode = code => {\r\n    clearTimeout(this.timer);\r\n    this.setState({spinning: true});\r\n    this.setState({code});\r\n    this.timer();\r\n  };\r\n\r\n  componentDidMount() {\r\n    message.warning(\"请选择公号进行操作\")\r\n  }\r\n\r\n  render() {\r\n    const {getMaterial, clearMaterial} = this.props;\r\n    const {code, historyModalVisible, spinning} = this.state;\r\n    const imageStyle = {\r\n      height: \"auto\",\r\n      margin: \"0 auto\"\r\n    };\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <SingleSelectByGroup setCode={this.setCode} content={\r\n            code\r\n              ? spinning\r\n                ? <div>\r\n                    <Loading spinning={spinning}/><Empty description=\"\" image=\"https://s.weituibao.com/static/1544235586856/empty.png\" imageStyle={imageStyle}/>\r\n                  </div>\r\n                : <div>\r\n                    <Button size=\"default\" background=\"success\" buttonContent=\"同步素材\" onClick={() => getMaterial(code)}/>\r\n                    <Button size=\"default\" buttonContent=\"群发记录\" onClick={() => this.setState({historyModalVisible: true})}/>\r\n                    <Button size=\"default\" mb={20} background=\"danger\" onClick={() => clearMaterial(code)} buttonContent=\"清空列表\"/>\r\n                    <GroupMaterial code={code}/>\r\n                  </div>\r\n              : <Empty description=\"\" image=\"https://s.weituibao.com/static/1544235586856/empty.png\" imageStyle={imageStyle}/>}/>\r\n        </div>\r\n        {code && <Modal title=\"发送记录\" visible={historyModalVisible} width={1200} footer=\"\" onCancel={() => this.setState({historyModalVisible: false})}><History code={code}/></Modal>}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getMaterial(code) {\r\n    dispatch(actionCreators.getMaterial(code))\r\n  },\r\n  clearMaterial(code) {\r\n    dispatch(actionCreators.clearMaterial(code));\r\n  },\r\n});\r\n\r\nexport default connect(null, mapDispatch)(groupMessage);","import React, { Component } from 'react';\r\nimport { Table, Select } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionCreators } from './store';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '../../../common/components/Button';\r\n\r\nconst { Option } = Select;\r\n\r\nclass Kefu extends Component {\r\n\r\n  state = {\r\n    messageType: \"请选择消息类型\"\r\n  };\r\n\r\n  UNSAFE_componentWillMount () {\r\n    this.props.getKefuMessageList()\r\n  }\r\n\r\n  render() {\r\n    const { kefuMessageList, copyMessage, deleteMessage, sendKefuMessage, messageType, handleChangeType }  = this.props;\r\n    const kefuMessageHeader = [\r\n      {\r\n        key: \"remarks\",\r\n        title: \"消息名称\",\r\n        dataIndex: \"remarks\",\r\n        align: \"center\",\r\n        render: text => !text ? \"请点击修改，编辑消息名称\" : text\r\n      },\r\n      {\r\n        key: \"delay\",\r\n        title: \"延时时间\",\r\n        align: \"center\",\r\n        width: 120,\r\n        render: (text, record) => record.task ? (record.isHour ? record.delay / 60 + \"小时\" : record.delay + \"分钟\") : \"——\"\r\n      },\r\n      {\r\n        key: \"timing_time\",\r\n        title: \"定时时间(分钟)\",\r\n        align: \"center\",\r\n        sorter: (a, b) => (new Date(a.timing_time)).getTime() - (new Date(b.timing_time)).getTime(),\r\n        render: (text, record) => record.is_timing ? record.time : \"——\"\r\n      },\r\n      {\r\n        key: \"gonghaoList\",\r\n        dataIndex: \"gonghaoList\",\r\n        title: \"已选公号 (最多显示4个)\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: text => text.slice(0, 4).map(item => <p key={item._id}>{item.nick_name}</p>)\r\n      },\r\n      {\r\n        key: \"sex\",\r\n        title: \"群发粉丝\",\r\n        align: \"center\",\r\n        dataIndex: \"sex\",\r\n        width: 120,\r\n        render: text => text === \"0\" ? \"仅未知粉丝\" : text === \"1\"  ? \"仅男性粉丝\" : text === \"2\" ? \"仅女性粉丝\" : \"全部粉丝\"\r\n      },\r\n      {\r\n        key: \"action_type\",\r\n        title: \"互动行为\",\r\n        align: \"center\",\r\n        dataIndex: \"action_type\",\r\n        width: 100,\r\n        render: text => text === 0 ? \"全部\" : text === 3  ? \"用户回复\" : text === 2 ? \"点击菜单\" : \"用户关注\"\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 280,\r\n        render: (text, record, index) => (\r\n          <div>\r\n            <Button background=\"success\" onClick={() => copyMessage(record)} buttonContent=\"复制\" />\r\n            <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />\r\n            <Button disabled={record.is_timing || record.delay} background={(record.is_timing || record.delay) ? \"info\" : \"warning\"} onClick={() => sendKefuMessage(record._id, record.tagId)} buttonContent=\"发送消息\" />\r\n            <Button background=\"danger\" onClick={() => deleteMessage(record._id, index)} buttonContent=\"删除\" />\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Button size=\"default\" mb={20} buttonContent={<Link to=\"./create\">新建客服消息</Link>} />\r\n          <Select value={messageType} onChange={handleChangeType}>\r\n            <Option value={3}>全部</Option>\r\n            <Option value={0}>手动</Option>\r\n            <Option value={1}>延时</Option>\r\n            <Option value={2}>定时</Option>\r\n          </Select>\r\n          <Table size=\"middle\" rowKey={record => record._id} columns={kefuMessageHeader} dataSource={kefuMessageList} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  kefuMessageList: state.message.kefu.kefuMessageList,\r\n  messageType: state.message.kefu.messageType\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getKefuMessageList() {\r\n    dispatch(actionCreators.getKefuMessageList())\r\n  },\r\n  copyMessage(record) {\r\n    dispatch(actionCreators.createKefuMessage(record))\r\n  },\r\n  deleteMessage(id, index) {\r\n    dispatch(actionCreators.deleteMessage(id, index))\r\n  },\r\n  sendKefuMessage(id, tagId) {\r\n    dispatch(actionCreators.sendKefuMessage(id, tagId))\r\n  },\r\n  handleChangeType(value) {\r\n    dispatch(actionCreators.handleChangeType(value))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Kefu);","import React, {Component} from 'react';\r\nimport {Icon, Form, Button, Radio, DatePicker, Input, Upload, InputNumber, Avatar, Divider, Modal, Select } from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {actionCreators} from '../store';\r\nimport moment from \"moment\";\r\nimport \"./index.scss\";\r\nimport MultiSelectModal from '../../../../common/components/SelectGonghao/MultiSelectModal';\r\n\r\nconst { Option } = Select;\r\n\r\nclass EditMessage extends Component {\r\n  state = {\r\n    selectGonghaoModal: true\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.props.getAllCodes();\r\n    let query = this.props.history.location.query;\r\n    query && this.props.closeSelectModal();\r\n    query && this.props.initKefuMessageInfo(query);\r\n  }\r\n\r\n  render() {\r\n    const { kefuMessageInfo, content, changeContentValue, changeMessageValue, uploadImg, submitMessage, allCodes, changeGonghao, selectGonghaoModal, history, openSelectModal, closeSelectModal, openPreviewModal, closePreviewModal, openid, changeOpenId, previewModal, preview } = this.props;\r\n    let isUploadImg, isTextUploadImg, FormItemWrapper;\r\n    if (content.picurl) {\r\n      isTextUploadImg = <img style={{width: \"100px\"}} src={content.picurl} alt=\"\"/>\r\n    } else {\r\n      isTextUploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n    }\r\n    if (kefuMessageInfo.img) {\r\n      isUploadImg = <img style={{width: \"100px\"}} src={kefuMessageInfo.img} alt=\"\"/>\r\n    } else {\r\n      isUploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n    }\r\n    if (kefuMessageInfo.type === 1) {\r\n      FormItemWrapper = <Form.Item label=\"文本消息\" className=\"text-message\">\r\n        <Input.TextArea autosize={{minRows: 6}} value={content.description} placeholder=\"请输入文本消息\" onChange={e => changeContentValue(e, \"description\")}/>\r\n      </Form.Item>\r\n    } else if (kefuMessageInfo.type === 0) {\r\n      FormItemWrapper = <div>\r\n        <Form.Item label=\"图片封面\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" onChange={(info) => {\r\n            uploadImg(kefuMessageInfo, info)\r\n          }} showUploadList={false}>\r\n            {isTextUploadImg}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文标题\">\r\n          <Input placeholder=\"请输入图文标题\" value={content.title} onChange={e => changeContentValue(e, \"title\")}/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文描述\" className=\"text-message\">\r\n          <Input.TextArea autosize={{minRows: 6}} value={content.description} placeholder=\"请输入图文描述\" onChange={e => changeContentValue(e, \"description\")}/>\r\n        </Form.Item>\r\n        <Form.Item label=\"跳转链接\">\r\n          <Input placeholder=\"请输入跳转链接\" value={content.url} onChange={e => changeContentValue(e, \"url\")}/>\r\n        </Form.Item>\r\n      </div>\r\n    } else if (kefuMessageInfo.type === 2) {\r\n      FormItemWrapper =\r\n        <Form.Item label=\"图片消息\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" onChange={(info) => {\r\n            uploadImg(kefuMessageInfo, info)\r\n          }} showUploadList={false}>\r\n            {isUploadImg}\r\n          </Upload>\r\n        </Form.Item>;\r\n    }\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: {span: 4}\r\n      },\r\n      wrapperCol: {\r\n        sm: {span: 20, offset: 0}\r\n      },\r\n    };\r\n    let Channel;\r\n    if(kefuMessageInfo.channel === 1) {\r\n      Channel = <><Form.Item label=\"延时时间\">\r\n        <InputNumber value={kefuMessageInfo.delay} min={1} onChange={value => changeMessageValue(value, \"delay\")} />\r\n        <Select value={kefuMessageInfo.isHour}  onChange={value => changeMessageValue(value, \"isHour\")} style={{width: 80}}>\r\n          <Option value={0}>分钟</Option>\r\n          <Option value={1}>小时</Option>\r\n        </Select>\r\n      </Form.Item>\r\n        <Form.Item label=\"互动类型\">\r\n          <Radio.Group value={kefuMessageInfo.action_type} onChange={e => changeMessageValue(e.target.value, \"action_type\")}>\r\n            <Radio value={0}>全部</Radio>\r\n            <Radio value={1}>用户关注</Radio>\r\n            <Radio value={3}>用户回复</Radio>\r\n            <Radio value={2}>点击菜单</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        </>\r\n    } else if(kefuMessageInfo.channel === 2) {\r\n      Channel =\r\n        <Form.Item label=\"定时时间\">\r\n          <DatePicker showTime placeholder=\"选择时间\" value={moment(kefuMessageInfo.timing_time)} onChange={(value, dateString) => changeMessageValue(dateString, 'timing_time')} />\r\n        </Form.Item>\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"container edit-message\">\r\n          {/*{isImgAndText}*/}\r\n          <div className=\"kefu-form fl\">\r\n            <Form {...formItemLayout}>\r\n              <Form.Item label=\"选择公号\">\r\n                <Avatar onClick={openSelectModal} className=\"cursor\" shape=\"square\" icon=\"user\" />\r\n              </Form.Item>\r\n              <Form.Item label=\"消息名称\">\r\n                <Input value={kefuMessageInfo.remarks} placeholder=\"请输入消息名称,(仅供备注，不会发送给粉丝)\" onChange={e => changeMessageValue(e.target.value, \"remarks\")} />\r\n              </Form.Item>\r\n              <Divider style={{width: \"205%\", marginLeft: -50}} />\r\n              <h2 className=\"block-title\">设置客服消息</h2>\r\n              <Form.Item>\r\n                <Radio.Group buttonStyle=\"solid\" value={kefuMessageInfo.type} onChange={e => changeMessageValue(e.target.value, \"type\")}>\r\n                  <Radio.Button value={0}>图文消息</Radio.Button>\r\n                  <Radio.Button value={1}>文本消息</Radio.Button>\r\n                  <Radio.Button value={2}>图片消息</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              {FormItemWrapper}\r\n              <Divider style={{width: \"175%\", marginLeft: -50}} />\r\n              <h2 className=\"block-title\">选择群发对象</h2>\r\n              <Form.Item label=\"群发粉丝\">\r\n                <Radio.Group value={kefuMessageInfo.sex} onChange={e => changeMessageValue(e.target.value, \"sex\")}>\r\n                  <Radio value=\"all\">全部粉丝</Radio>\r\n                  <br/>\r\n                  <Radio value=\"1\">仅男性粉丝</Radio>\r\n                  <Radio value=\"2\">仅女性粉丝</Radio>\r\n                  <Radio value=\"0\">仅未知粉丝</Radio>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              <Divider style={{width: \"175%\", marginLeft: -50}} />\r\n              <h2 className=\"block-title\">设置群发方式</h2>\r\n              <Form.Item label=\"发送方式\">\r\n                <Radio.Group value={kefuMessageInfo.channel} onChange={e => changeMessageValue(e.target.value, \"channel\")}>\r\n                  <Radio.Button value={0}>人工</Radio.Button>\r\n                  <Radio.Button value={1}>延时</Radio.Button>\r\n                  <Radio.Button value={2}>定时</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              {Channel}\r\n              <Divider style={{width: \"175%\", marginLeft: -50}} />\r\n              <Form.Item>\r\n                <Button size=\"large\" type=\"primary\" onClick={() => submitMessage(kefuMessageInfo, history, allCodes)}>确定{!kefuMessageInfo._id ? \"并创建消息\" : \"并保存消息\"}</Button>\r\n                {kefuMessageInfo._id && <Button style={{marginLeft: 20}} type=\"info\" size=\"large\" onClick={() => history.goBack()}>取消编辑</Button>}\r\n                <Button size=\"large\" style={{marginLeft: 30, background: \"yellowgreen\", borderColor: \"yellowgreen\"}} type=\"primary\" onClick={openPreviewModal}>发送预览</Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n        {selectGonghaoModal && <MultiSelectModal allCodes={allCodes} selectGonghaoModal={selectGonghaoModal} changeGonghao={changeGonghao} closeSelectModal={closeSelectModal} codes={kefuMessageInfo.codes} />}\r\n        <Modal title=\"发送预览\" visible={previewModal} onCancel={closePreviewModal} onOk={() => preview(kefuMessageInfo, openid)}>\r\n          <Input onChange={changeOpenId} value={openid} placeholder=\"请输入预览用户的openid\"/>\r\n          <span className=\"tips\">Tips: 在预览公号回复<span> openid </span>,将返回的内容复制到输入框中<br/>一个openid只对应一个公号</span>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  kefuMessageInfo: state.message.kefu.kefuMessageInfo,\r\n  content: state.message.kefu.content,\r\n  allCodes: state.message.kefu.allCodes,\r\n  selectGonghaoModal: state.message.kefu.selectGonghaoModal,\r\n  previewModal: state.message.kefu.previewModal,\r\n  openid: state.message.kefu.openid,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  initKefuMessageInfo(query) {\r\n    dispatch(actionCreators.initKefuMessageInfo(query));\r\n  },\r\n  changeContentValue(e, name) {\r\n    dispatch(actionCreators.changeContentValue(e.target.value, name));\r\n  },\r\n  uploadImg(kefuMessageInfo, info) {\r\n    if (info.file.status === 'done') {\r\n      let img = `http://t.dmmup.com//uploads/${info.file.response.filename}`,\r\n        img_path = `./public/uploads/${info.file.response.filename}`;\r\n      if (kefuMessageInfo.type === 0) {\r\n        dispatch(actionCreators.changeContentValue(img, \"picurl\"));\r\n      } else {\r\n        dispatch(actionCreators.changeMessageValue(img, \"img\"));\r\n        dispatch(actionCreators.changeMessageValue(img_path, \"img_path\"));\r\n      }\r\n    }\r\n  },\r\n  changeMessageValue(value, name) {\r\n    dispatch(actionCreators.changeMessageValue(value, name));\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState());\r\n  },\r\n  selectParams() {\r\n    dispatch(actionCreators.selectParams());\r\n  },\r\n  submitMessage(info, history, allCodes) {\r\n    dispatch(actionCreators.submitMessage(info, history, allCodes));\r\n  },\r\n  changeGonghao(codes) {\r\n    dispatch(actionCreators.changeGonghao(codes))\r\n  },\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  openSelectModal() {\r\n    dispatch(actionCreators.openSelectModal())\r\n  },\r\n  closeSelectModal() {\r\n    dispatch(actionCreators.closeSelectModal())\r\n  },\r\n  changeOpenId(e) {\r\n    dispatch(actionCreators.changeOpenId(e.target.value))\r\n  },\r\n  openPreviewModal() {\r\n    dispatch(actionCreators.openPreviewModal())\r\n  },\r\n  closePreviewModal() {\r\n    dispatch(actionCreators.closePreviewModal())\r\n  },\r\n  preview(info, openid) {\r\n    dispatch(actionCreators.preview(info, openid))\r\n  },\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(EditMessage);","import React, {Component} from 'react';\r\nimport {Input, Table} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../../common/components/Button';\r\nimport {actionCreators} from './store';\r\n\r\nconst {Search} = Input;\r\n\r\nclass Template extends Component {\r\n  render() {\r\n    const {confName, templateMessageList, deleteTemplate, sendTemplate, changeConfNickName, searchConfName} = this.props;\r\n    const templateColumns = [\r\n      {\r\n        key: \"confName\",\r\n        dataIndex: \"confName\",\r\n        title: \"公众号\",\r\n        align: \"center\"\r\n      }, {\r\n        key: \"name\",\r\n        dataIndex: \"name\",\r\n        title: \"消息名称\",\r\n        align: \"center\"\r\n      }, {\r\n        key: \"templateName\",\r\n        dataIndex: \"templateName\",\r\n        title: \"模板名称\",\r\n        align: \"center\"\r\n      // }, {\r\n      //   key: \"sendAt\",\r\n      //   dataIndex: \"sendAt\",\r\n      //   title: \"发送时间\",\r\n      //   align: \"center\"\r\n      }, {\r\n        key: \"Action\",\r\n        title: \"操作\",\r\n        align: \"center\",\r\n        width: 240,\r\n        render: (text, record, index) => <div>\r\n          <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />\r\n          <Button buttonContent=\"发送\" onClick={() => sendTemplate(record)} background=\"success\"/>\r\n          <Button buttonContent=\"删除\" onClick={() => deleteTemplate(record._id, index)} background=\"danger\"/>\r\n        </div>\r\n      }\r\n    ];\r\n    return (\r\n      <div className=\"container\">\r\n        <Search style={{width: 200}} placeholder=\"搜索公众号\" value={confName} onChange={changeConfNickName} onSearch={searchConfName}/>\r\n        <div className=\"fr\"><Button size=\"default\" className=\"fr\" mb={20} buttonContent={<Link to=\"./create\">+ 新建模板消息</Link>}/></div>\r\n        <Table rowKey={record => record._id} size=\"middle\" dataSource={templateMessageList} columns={templateColumns}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getTemplateList()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  templateMessageList: state.message.template.templateMessageList,\r\n  confName: state.message.template.confName,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getTemplateList() {\r\n    dispatch(actionCreators.getTemplateList())\r\n  },\r\n  deleteTemplate(id, index) {\r\n    dispatch(actionCreators.deleteTemplate(id, index))\r\n  },\r\n  sendTemplate(record) {\r\n    dispatch(actionCreators.sendTemplate(record))\r\n  },\r\n  changeConfNickName(e) {\r\n    dispatch(actionCreators.changeConfNickName(e.target.value))\r\n  },\r\n  searchConfName(value) {\r\n    dispatch(actionCreators.searchConfName(value))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Template);","import React from 'react';\r\nimport { Radio, Row, Col, Modal, Button } from 'antd';\r\n\r\nconst SingleSelectModal = props => {\r\n  const {selectGonghaoModal, allCodes, code, confirmSelect, closeSelectModal} = props;\r\n  return (\r\n    <Modal width={1000} visible={selectGonghaoModal} maskClosable={false} closable={false} mask={false}  footer={<Button type=\"primary\" disabled={!code} onClick={closeSelectModal}>确定</Button>}>\r\n      <Radio.Group value={code} style={{ width: '100%' }} onChange={e => confirmSelect(e.target.value, code)}>\r\n        <Row>\r\n          {allCodes.map(item => <Col span={4} key={item._id}>\r\n            <Radio value={item.code}>{item.nick_name}</Radio>\r\n          </Col>)}\r\n        </Row>\r\n      </Radio.Group>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default SingleSelectModal;","import React from 'react';\r\nimport {Modal, Input, Button} from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport {actionCreators} from \"../store\";\r\n\r\nconst colors = [\"#000\", \"rgb(208, 2, 27)\", \"rgb(245, 166, 35)\", \"rgb(59, 116, 255)\", \"rgb(189, 16, 224)\", \"rgb(153, 153, 153)\"];\r\nconst colorWrapperStyle = {\r\n  width: 20,\r\n  height: 20,\r\n  marginLeft: 10,\r\n  display: \"inline-block\",\r\n  marginTop: 5\r\n};\r\n\r\nconst TemplateModal = props => {\r\n  const { show, content, closeTemplateModal, saveTemplateModal, editTemplate } = props;\r\n  const footer = (\r\n    <div style={{overflow: \"hidden\", lineHeight: 1.5}}>\r\n      <div className=\"fl\">\r\n        {colors.map(item => <span className=\"cursor\" style={{...colorWrapperStyle, background: item}} key={item} onClick={() => editTemplate('color', item)} />)}\r\n      </div>\r\n      <Button type=\"primary\" className=\"fr\" onClick={saveTemplateModal}>保存</Button>\r\n    </div>);\r\n  return(\r\n    <Modal\r\n      visible={show}\r\n      onCancel={closeTemplateModal}\r\n      closable={false}\r\n      footer={footer}\r\n      mask={false}\r\n    >\r\n      <Input.TextArea style={{color: content[\"color\"]}} value={content[\"value\"]} autosize={{ minRows: 3, maxRows: 6 }} onChange={e => editTemplate('value', e.target.value)} />\r\n    </Modal>\r\n  )\r\n};\r\n\r\nconst mapState = state => ({\r\n  content: state.message.template.content,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  closeTemplateModal() {\r\n    dispatch(actionCreators.closeTemplateModal())\r\n  },\r\n  saveTemplateModal() {\r\n    dispatch(actionCreators.saveTemplateModal())\r\n  },\r\n  editTemplate(key, value) {\r\n    dispatch(actionCreators.editTemplate(key, value))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(TemplateModal);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Icon, Form, Button, Radio, Input, Avatar, Divider, Select, Row, Col } from \"antd\";\r\nimport SingleSelectModal from '../../../../common/components/SelectGonghao/SingleSelectModal';\r\nimport {actionCreators} from \"../store\";\r\nimport './index.scss';\r\nimport TemplateModal from '../components/TemplateModal';\r\n\r\nconst { Option } = Select;\r\n\r\nclass EditTemplate extends Component {\r\n\r\n  async componentWillMount() {\r\n    this.props.getAllCodes();\r\n    const { query } = this.props.location;\r\n    query && await this.props.initMessageInfo(query);\r\n  }\r\n\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: {span: 4}\r\n      },\r\n      wrapperCol: {\r\n        sm: {span: 20, offset: 0}\r\n      },\r\n    };\r\n\r\n    const { openSelectModal, messageInfo, changeMessageInfo, selectGonghaoModal, allCodes, openEditModal, templateList, templateInfo, templateModalVisible, changeTemplate, history, submitMessage, confirmSelect, closeSelectModal } =this.props;\r\n    let template = [];\r\n    for(let key in templateInfo.data) {\r\n      let content = messageInfo.content[key];\r\n      if(key === \"first\") {\r\n        template.unshift(<Form.Item label={templateInfo.data[\"first\"].pre || \"\"} key=\"first\">\r\n          <span className=\"mr5\">{content.value}</span>\r\n          <Icon className=\"cursor\" onClick={() => openEditModal(key, content)} type=\"edit\" />\r\n        </Form.Item>)\r\n      } else {\r\n        template.push(<Form.Item label={templateInfo.data[key].pre || \"\"} key={key}>\r\n          <span className=\"mr5\">{content.value}</span>\r\n          <Icon className=\"cursor\" onClick={() => openEditModal(key, content)} type=\"edit\" />\r\n        </Form.Item>)\r\n      }\r\n    }\r\n    let GonghaoModal;\r\n    selectGonghaoModal && (GonghaoModal = <SingleSelectModal code={messageInfo.code} confirmSelect={confirmSelect} closeSelectModal={closeSelectModal} allCodes={allCodes} selectGonghaoModal={selectGonghaoModal} />);\r\n    return (\r\n    \t<div className=\"container edit-message\">\r\n        <Form className=\"kefu-form\" {...formItemLayout} style={{width: 520}}>\r\n          <Form.Item label=\"选择公号\">\r\n            <Avatar onClick={openSelectModal} className=\"cursor\" shape=\"square\" icon=\"user\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"消息名称\">\r\n            <Input value={messageInfo.name}  onChange={e => changeMessageInfo(\"name\", e.target.value)} placeholder=\"请输入消息名称,(仅供备注，不会发送给粉丝)\" />\r\n          </Form.Item>\r\n          <Divider style={{width: \"175%\", marginLeft: -50}} />\r\n          <h2 className=\"block-title\">设置模板消息</h2>\r\n          <Form.Item label=\"选择模板\">\r\n            <Select value={messageInfo.templateId} onChange={changeTemplate}>\r\n              {templateList.map(item => <Option value={item.template_id} key={item.template_id}>{item.title}</Option>)}\r\n            </Select>\r\n          </Form.Item>\r\n          <Row className=\"template-wrapper\">\r\n            <Col span={4}/>\r\n            <Col span={20}>\r\n              <div className=\"message-block\">\r\n                {template}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item label=\"点击跳转\">\r\n            <Input value={messageInfo.url} placeholder=\"输入跳转链接，且必须以http://或https://开头\" onChange={e => changeMessageInfo(\"url\", e.target.value)} />\r\n          </Form.Item>\r\n          <Divider style={{width: \"175%\", marginLeft: -50}} />\r\n          <h2 className=\"block-title\">选择群发对象</h2>\r\n          <Form.Item label=\"群发粉丝\">\r\n            <Radio.Group defaultValue=\"all\">\r\n              <Radio value=\"all\">全部粉丝</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Divider style={{width: \"175%\", marginLeft: -50}} />\r\n          <Form.Item>\r\n            <Button size=\"large\" type=\"primary\" onClick={() => submitMessage(messageInfo, history, templateList)}>确定{!messageInfo._id ? \"并创建消息\" : \"并保存消息\"}</Button>\r\n            {messageInfo._id && <Button style={{marginLeft: 20}} type=\"info\" size=\"large\" onClick={() => history.goBack()}>取消编辑</Button>}\r\n          </Form.Item>\r\n        </Form>\r\n        {GonghaoModal}\r\n        <TemplateModal show={templateModalVisible} />\r\n    \t</div>\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  messageInfo: state.message.template.messageInfo,\r\n  templateList: state.message.template.templateList,\r\n  templateInfo: state.message.template.templateInfo,\r\n  templateModalVisible: state.message.template.templateModalVisible,\r\n  selectGonghaoModal: state.message.template.selectGonghaoModal,\r\n  allCodes: state.message.template.allCodes,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  openEditModal(key, content) {\r\n    !content.color && (content.color = \"#000\");\r\n    dispatch(actionCreators.openEditModal(key, content))\r\n  },\r\n  changeTemplate(value){\r\n    dispatch(actionCreators.changeTemplate(value))\r\n  },\r\n  submitMessage(info, history, templateList) {\r\n    dispatch(actionCreators.submitMessage(info, history, templateList));\r\n  },\r\n  openSelectModal() {\r\n    dispatch(actionCreators.openSelectModal())\r\n  },\r\n  changeMessageInfo(key, value) {\r\n    dispatch(actionCreators.changeMessageInfo(key, value))\r\n  },\r\n  initMessageInfo(record) {\r\n    dispatch(actionCreators.initMessageInfo(record))\r\n  },\r\n  confirmSelect(code) {\r\n    dispatch(actionCreators.confirmSelect(code))\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState())\r\n  },\r\n  closeSelectModal() {\r\n    dispatch(actionCreators.closeSelectModal())\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(EditTemplate);","import React, { Component } from 'react';\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Group from \"./group\";\r\nimport GroupMaterial from \"./group/material\";\r\nimport History from './group/history';\r\nimport Kefu from './kefu';\r\nimport EditKefuMSg from './kefu/edit';\r\nimport Template from './template';\r\nimport EditTemplate from './template/edit';\r\n\r\nclass GroupRouter extends Component {\r\n  render() {\r\n    return (\r\n    \t<div>\r\n        <Route path='/admin/message'>\r\n          <Switch>\r\n            <Route path=\"/admin/message/group/index\" component={Group} />\r\n            <Route path=\"/admin/message/group/material\" component={GroupMaterial} />\r\n            <Route path=\"/admin/message/group/history\" component={History} />\r\n            <Route path=\"/admin/message/kefu/index\" component={Kefu} />\r\n            <Route path=\"/admin/message/kefu/create\" component={EditKefuMSg} />\r\n            <Route path=\"/admin/message/kefu/update\" component={EditKefuMSg} />\r\n            <Route path=\"/admin/message/template/index\" component={Template} />\r\n            <Route path=\"/admin/message/template/create\" component={EditTemplate} />\r\n            <Route path=\"/admin/message/template/update\" component={EditTemplate} />\r\n            <Redirect from=\"/admin/message\" exact to='/admin/message/group' />\r\n            <Redirect from=\"/admin/message/group\" exact to='/admin/message/group/index' />\r\n            <Redirect from=\"/admin/message/kefu\" exact to='/admin/message/kefu/index' />\r\n            <Redirect from=\"/admin/message/template\" exact to='/admin/message/template/index' />\r\n          </Switch>\r\n        </Route>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroupRouter;","import React, {Component} from 'react';\r\nimport {Table, Modal, message, Tabs} from 'antd';\r\nimport axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '../../../common/components/Button';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\nclass Advertise extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeTab = this.changeTab.bind(this);\r\n  }\r\n\r\n  state = {\r\n    spreadData: [],\r\n    domain_names: [],\r\n    tagList: [],\r\n    dataList: []\r\n  };\r\n\r\n  render() {\r\n    const {spreadData, tagList} = this.state;\r\n    const tabsRender = tagList.map(item => (\r\n      <TabPane tab={item.name} key={item.name}/>\r\n    ));\r\n    const spreadHeader = [\r\n      {\r\n        key: \"links\",\r\n        title: \"链接\",\r\n        align: \"center\",\r\n        width: 280,\r\n        render: (text, record) => <p\r\n          style={{width: 280, wordWrap: \"break-word\", userSelect: \"all\"}}>{'http://tiexie0.wang/cmst/' + record.id}</p>\r\n      },\r\n      {\r\n        key: \"group\",\r\n        dataIndex: \"group\",\r\n        title: \"分组\",\r\n        align: \"center\",\r\n        width: 120\r\n      },\r\n      {\r\n        key: \"title\",\r\n        dataIndex: \"title\",\r\n        title: \"标题\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        key: \"remarks\",\r\n        dataIndex: \"remarks\",\r\n        title: \"备注\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: text => text ? text : \"无\"\r\n      },\r\n      {\r\n        title: \"数据\",\r\n        align: \"center\",\r\n        width: 80,\r\n        render: (text, record) => <a href={'http://tiexie0.wang/transfer/' + record.id} target={\"_blank\"}>查看数据</a>\r\n      },\r\n      {\r\n        title: \"置顶\",\r\n        align: \"center\",\r\n        width: 80,\r\n        render: (text, record) => <Button background=\"warning\" onClick={() => this.goTop(record._id)} buttonContent=\"置顶\" />\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record, index) => <div>\r\n          <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />\r\n          <Button background=\"danger\" buttonContent=\"删除\" onClick={() => this.deleteLink(record._id, index)} />\r\n          <Button background=\"success\" mr={0} buttonContent=\"复制\" onClick={() => this.copyLink({...record})} />\r\n        </div>\r\n      }\r\n    ];\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <Button size=\"default\" background=\"success\" mb={20} buttonContent={<Link to=\"./create\">添加新链接</Link>} />\r\n          <Tabs animated={false} defaultActiveKey=\"ALL\" tabBarGutter={0} onChange={this.changeTab}\r\n                size='small'>\r\n            <TabPane tab=\"ALL\" key=\"ALL\"/>\r\n            {tabsRender}\r\n          </Tabs>\r\n          <Table rowKey={record => record._id} size=\"small\" bordered columns={spreadHeader} dataSource={spreadData}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSpreadList();\r\n    this.getTagList();\r\n  }\r\n\r\n  getSpreadList() {\r\n    axios.get(\"/transfer\").then(res => {\r\n      let spreadData = res.data.messages;\r\n      let domain_names = res.data.domain_names;\r\n      this.setState({\r\n        spreadData,\r\n        dataList: spreadData,\r\n        domain_names\r\n      })\r\n    });\r\n  }\r\n\r\n  getTagList() {\r\n    axios.get(\"/tuiguangTag\").then(res => {\r\n      const {data: tagList} = res.data;\r\n      this.setState({tagList})\r\n    });\r\n  }\r\n\r\n  changeTab(key) {\r\n    const {dataList} = this.state;\r\n    if (key === 'ALL') {\r\n      this.setState({\r\n        spreadData: dataList\r\n      });\r\n    } else {\r\n      let data = [];\r\n      for (let i = 0; i < dataList.length; i++) {\r\n        if (key === dataList[i].group) {\r\n          data.push(dataList[i]);\r\n        }\r\n      }\r\n      this.setState({spreadData: [...data]})\r\n    }\r\n  }\r\n\r\n  goTop(id) {\r\n    Modal.confirm({\r\n      title: \"确定置顶这条链接吗？\",\r\n      onOk: () => {\r\n        axios.post('/transfer/goTop', {id})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            this.getSpreadList();\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteLink(id, index) {\r\n    const {spreadData} = this.state;\r\n    Modal.confirm({\r\n      title: '确认删除这条内容吗？:',\r\n      onOk: () => {\r\n        axios.get('/transfer/delete', {params: {id}})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            spreadData.splice(index, 1);\r\n            this.setState({spreadData});\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  copyLink(record) {\r\n    record.id += '_copy';\r\n    const {spreadData} = this.state;\r\n    Modal.confirm({\r\n      title: \"确定复制一条推广链接吗？\",\r\n      onOk: () => {\r\n        axios.post('/transfer/create', {...record})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.info('复制成功');\r\n              spreadData.unshift(res.data.data);\r\n              this.setState({spreadData})\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default Advertise;","import React, {Component, Fragment} from 'react';\r\nimport {Form, Input, Button, Switch, InputNumber, message, Modal, List, Tag } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst initState = {\r\n  spreadLinkInfo: {\r\n    id: \"\",\r\n    title: \"\",\r\n    links: [],\r\n    weights: [],\r\n    back_urls: [],\r\n    link: \"\",\r\n    back_url: \"\",\r\n    weight: \"\",\r\n    type: false,\r\n    status: false,\r\n    granularity: 1,\r\n    group: \"\",\r\n    remarks: \"\"\r\n  },\r\n  tagList: [],\r\n  index: -1\r\n};\r\n\r\nclass EditAdvertise extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addTag = this.addTag.bind(this);\r\n    this.cancelSelectTag = this.cancelSelectTag.bind(this);\r\n    this.cancelEdit = this.cancelEdit.bind(this);\r\n    this.submitSpreadLink = this.submitSpreadLink.bind(this);\r\n    this.cancelUpdate= this.cancelUpdate.bind(this);\r\n  }\r\n\r\n  state = {...initState};\r\n\r\n  componentWillMount() {\r\n    let query = this.props.history.location.query;\r\n    query && this.initData(query);\r\n    this.getTagList();\r\n  }\r\n\r\n  render() {\r\n    const {spreadLinkInfo, tagList, index} = this.state;\r\n    const {id, title, links, weights, back_urls, link, back_url, weight, type, status, granularity, group, remarks} = spreadLinkInfo;\r\n    let isAddWeight, hasLink, hasBackUrl, hasWeight, selectedTag;\r\n    links.length > 0 && (hasLink = <Form.Item label=\"链接组\">\r\n      <List\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={links}\r\n        renderItem={(item, index) => (\r\n          <List.Item actions={[<span className=\"cursor\" style={{color: \"#f00\"}} onClick={() => this.delLink(index, \"links\")}>del</span>]}>\r\n            {item}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </Form.Item>);\r\n    back_urls.length > 0 && (hasBackUrl = <Form.Item label=\"返回链接组\">\r\n      <List\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={back_urls}\r\n        renderItem={(item, index) => (\r\n          <List.Item actions={[<span className=\"cursor\" style={{color: \"#f00\"}} onClick={() => this.delLink(index, \"back_urls\")}>del</span>]}>\r\n            {item}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </Form.Item>);\r\n    weights.length > 0 && (hasWeight = <Form.Item label=\"权重组\">\r\n      <List\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={weights}\r\n        renderItem={(item, i) => {\r\n          let isUpdate;\r\n          if(index === i) {\r\n            isUpdate = [<span className=\"cursor\" style={{color: \"#f00\"}} onClick={this.cancelUpdate}>取消</span>]\r\n          } else {\r\n            isUpdate = [<span className=\"cursor\" style={{color: \"#f00\"}} onClick={e => this.delLink(i, \"weights\", e)}>删除</span>]\r\n          }\r\n          return (\r\n          <List.Item onClick={() => this.updateWeight(i)} actions={isUpdate}>\r\n            {index === i ? <Input.Search size=\"small\" enterButton=\"保存\" onSearch={(value, e) => this.saveUpdate(value, e)} /> : item}\r\n          </List.Item>\r\n        )}}\r\n      />\r\n    </Form.Item>);\r\n    if (type) {\r\n      isAddWeight = <Fragment>\r\n        <Form.Item label=\"权重\">\r\n          <Input.Search value={weight} enterButton=\"添加\" placeholder=\"请输入权重\"\r\n                        onChange={e => this.changeInputValue(e.target.value, \"weight\")} onSearch={value => this.addLink(value, \"weights\", \"weight\")}/>\r\n        </Form.Item>\r\n        {hasWeight}\r\n        <Form.Item label=\"投放状态\">\r\n          <Switch checked={status} onChange={value => this.changeInputValue(value, \"status\")}/>\r\n        </Form.Item>\r\n        <Form.Item label=\"时间颗粒度\">\r\n          <InputNumber min={1} value={granularity} placeholder=\"请输入标题\"\r\n                       onChange={value => this.changeInputValue(value, \"granularity\")}/>\r\n        </Form.Item>\r\n      </Fragment>\r\n    }\r\n    if(group) {\r\n      selectedTag = <Tag closable onClose={this.cancelSelectTag}>{group}</Tag>\r\n    } else {\r\n     selectedTag = <Input.Search enterButton=\"确定\" placeholder=\"请输入标签\" onSearch={this.addTag}/>\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"title-wrapper\">\r\n            <h2>编辑推广链接</h2>\r\n            <div className=\"fr\">\r\n              <Button type=\"primary\" style={{marginRight: 10}} onClick={this.submitSpreadLink}>提交</Button>\r\n              <Button onClick={this.cancelEdit}>取消</Button>\r\n            </div>\r\n          </div>\r\n          <Form className=\"fl\" style={{width: \"60%\", borderRight: \"1px solid #eee\"}} labelCol={{sm: 3}} wrapperCol={{sm: 18, offset: 0}} colon={false}>\r\n            <Form.Item label=\"标题\">\r\n              <Input value={title} placeholder=\"请输入标题\"\r\n                     onChange={e => this.changeInputValue(e.target.value, \"title\")}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"链接\">\r\n              <Input.Search value={link} enterButton=\"添加\" placeholder=\"请输入链接\" onChange={e => this.changeInputValue(e.target.value, \"link\")} onSearch={value => this.addLink(value, \"links\", \"link\")}/>\r\n            </Form.Item>\r\n            {hasLink}\r\n            <Form.Item label=\"返回链接\">\r\n              <Input.Search value={back_url} enterButton=\"添加\" placeholder=\"请输入返回链接\" onChange={e => this.changeInputValue(e.target.value, \"back_url\")} onSearch={value => this.addLink(value, \"back_urls\", \"back_url\")}/>\r\n            </Form.Item>\r\n            {hasBackUrl}\r\n            <Form.Item label=\"选择标签\">\r\n              {selectedTag}\r\n            </Form.Item>\r\n            <Form.Item label=\"标签选项\">\r\n              {tagList.map((item, index) => <Tag className=\"cursor\" closable onClose={(e) => this.deleteTag(e, item._id, index)} key={item._id} onClick={() => this.selectTag(item.name)}>{item.name}</Tag>)}\r\n            </Form.Item>\r\n          </Form>\r\n          <Form className=\"fl\" style={{width: \"36%\", paddingLeft: \"4%\"}} labelCol={{sm: 7}} wrapperCol={{sm: 17, offset: 0}} colon={false}>\r\n            <Form.Item label=\"是否增加权重\">\r\n              <Switch checked={type} onChange={value => this.changeInputValue(value, \"type\")}/>\r\n            </Form.Item>\r\n            {isAddWeight}\r\n            <Form.Item label=\"链接备注\">\r\n              <Input value={remarks} placeholder=\"请输入备注\" onChange={e => this.changeInputValue(e.target.value, \"remarks\")}/>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  initData(query) {\r\n    query.type = query.type === 1;\r\n    query.status = query.status === 1;\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...query}}))\r\n  }\r\n\r\n  changeInputValue(value, name) {\r\n    let {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo[name] = value;\r\n    this.setState({spreadLinkInfo})\r\n  }\r\n\r\n  addLink(value, list, item) {\r\n    const {spreadLinkInfo} = this.state;\r\n    if(!value.trim()) {\r\n      message.error(\"链接不能为空\")\r\n    } else {\r\n      spreadLinkInfo[list].push(value.trim());\r\n      spreadLinkInfo[item] = \"\";\r\n      this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}))\r\n    }\r\n  }\r\n\r\n  delLink(index, list, e) {\r\n    e && e.stopPropagation();\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo[list].splice(index, 1);\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}))\r\n  }\r\n\r\n  updateWeight(index) {\r\n    this.setState({index})\r\n  }\r\n\r\n  saveUpdate(value, e) {\r\n    e.stopPropagation();\r\n    const {spreadLinkInfo, index} = this.state;\r\n    spreadLinkInfo[\"weights\"].splice(index, 1, value);\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}, index: -1}));\r\n  }\r\n\r\n  cancelUpdate(e) {\r\n    e.stopPropagation();\r\n    this.setState({index: -1})\r\n  }\r\n\r\n  getTagList() {\r\n    axios.get(\"/tuiguangTag\").then(res => {\r\n      let tagList = res.data.data;\r\n      this.setState({tagList});\r\n    });\r\n  }\r\n\r\n  addTag(value) {\r\n    const { spreadLinkInfo } = this.state;\r\n    if(!value.trim()) {\r\n      message.error(\"标签名不能为空\")\r\n    } else {\r\n      axios.post(\"/tuiguangTag\", {name: value.trim()})\r\n        .then(res => {\r\n          if (res.data.exist === 0) {\r\n            const { data } = res.data;\r\n            this.setState(state => ({tagList: [...state.tagList, data]}));\r\n          }\r\n          spreadLinkInfo.group = value;\r\n          this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\r\n        })\r\n    }\r\n  }\r\n\r\n  selectTag(group) {\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo.group = group;\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\r\n  }\r\n\r\n  cancelSelectTag() {\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo.group = \"\";\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\r\n  }\r\n\r\n  deleteTag(e, id, index) {\r\n    e.stopPropagation();\r\n    const {tagList} = this.state;\r\n    axios.delete('/tuiguangTag', {params: {id}})\r\n      .then(res => {\r\n        tagList.splice(index, 1)\r\n        this.setState({tagList})\r\n      });\r\n  }\r\n\r\n  submitSpreadLink() {\r\n    const { query } = this.props.history.location;\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo.type = spreadLinkInfo.type ? 1 : 0;\r\n    spreadLinkInfo.status = spreadLinkInfo.status ? 1 : 0;\r\n    let url = '/transfer/create';\r\n    if(query) {\r\n      url = '/transfer/update'\r\n    }\r\n    Modal.confirm({\r\n      title: \"确定提交吗？\",\r\n      onOk: () => {\r\n        axios.post(url, {...spreadLinkInfo})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.info(res.data.success);\r\n              this.cancelEdit()\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  cancelEdit() {\r\n    this.props.history.goBack();\r\n    this.resetState();\r\n  }\r\n\r\n  resetState() {\r\n    this.setState({...initState})\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.resetState()\r\n  }\r\n}\r\n\r\nexport default EditAdvertise;","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Spread from './spread';\r\nimport EditSpread from './spread/edit';\r\n\r\nclass ChannelWrapper extends Component {\r\n  render() {\r\n    return (\r\n        <Route path=\"/admin/channel\" render={\r\n          () =>\r\n            <Switch>\r\n              <Route path=\"/admin/channel/spread/index\" component={Spread} />\r\n              <Route path=\"/admin/channel/spread/create\" component={EditSpread} />\r\n              <Route path=\"/admin/channel/spread/update\" component={EditSpread} />\r\n              <Redirect from=\"/admin/channel\" exact to='/admin/channel/spread' />\r\n              <Redirect from=\"/admin/channel/spread\" exact to='/admin/channel/spread/index' />\r\n            </Switch>\r\n          }\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChannelWrapper;","import React, { Component } from 'react';\r\nimport { Input, Table, message, Modal } from 'antd';\r\nimport Button from '../../common/components/Button';\r\nimport axios from 'axios';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nconst Search = Input.Search;\r\n\r\nclass Account extends Component {\r\n\r\n  state = {\r\n    accountList: [],\r\n    searchValue: \"\"\r\n  };\r\n\r\n  columns = [\r\n    {\r\n      key: 'username',\r\n      dataIndex: 'username',\r\n      title: '账户名',\r\n      align: 'center'\r\n    }, {\r\n      key: 'password',\r\n      dataIndex: 'password',\r\n      title: '密码（点击自动复制，打开解密网站）',\r\n      align: 'center',\r\n      render: text => <CopyToClipboard text={text} onCopy={() => message.success(\"复制成功\")}><a href=\"https://www.somd5.com/\" target=\"__blank\">{text}</a></CopyToClipboard>\r\n    }, {\r\n      key: 'role',\r\n      dataIndex: 'role',\r\n      title: '权限',\r\n      align: 'center',\r\n      render: text => text === 0 ? \"超级管理员\" : (text === 1 ? \"一级代理\" : \"二级代理\")\r\n    }, {\r\n      title: 'Action',\r\n      key: 'action',\r\n      align: 'center',\r\n      render: (text, record, index) => <Button mr={0} background=\"danger\" disabled={record.role === 0} buttonContent=\"删除\" onClick={() => this.deleteAccount(record._id, index)} />\r\n    }\r\n  ];\r\n\r\n  searchAccount = () => {\r\n    const { searchValue } = this.state;\r\n    axios.get('/account', {params: {username: searchValue}})\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          const {data: accountList, msg} = res.data;\r\n          this.setState({accountList, searchValue: \"\"});\r\n          message.success(msg)\r\n        } else {\r\n          message.error(res.data.msg);\r\n          this.getAccountList()\r\n        }\r\n      })\r\n  };\r\n\r\n  deleteAccount(_id, index) {\r\n    Modal.confirm({\r\n      title: \"确定删除这个账户吗？\",\r\n      onOk: () => {\r\n        axios.delete('/account', {params: {_id}})\r\n          .then(res => {\r\n            if(res.data.code === 1) {\r\n              this.setState(state => {\r\n                let accountList = state.accountList;\r\n                accountList.splice(index, 1);\r\n                message.success(res.data.msg);\r\n                return {accountList}\r\n              })\r\n            } else {\r\n              message.error(res.data.msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  getAccountList = () => {\r\n    axios.get('/account')\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          const { data: accountList } = res.data;\r\n          this.setState({accountList});\r\n        }\r\n      })\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAccountList()\r\n  }\r\n\r\n  handleChangeSearchValue = e => {\r\n    this.setState({searchValue: e.target.value})\r\n  };\r\n\r\n  render() {\r\n    const {accountList, searchValue} = this.state;\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Search onChange={this.handleChangeSearchValue} value={searchValue} style={{width: 300, marginBottom: 20}} placeholder=\"请输入账户名\" enterButton=\"查询\" onSearch={this.searchAccount} />\r\n          <Table rowKey={record => record._id} size=\"small\" dataSource={accountList} columns={this.columns} />\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","import React, { Component } from 'react';\r\nimport { Form, Input, message, Modal, Select } from 'antd';\r\nimport Button from '../../../common/components/Button';\r\nimport axios from 'axios';\r\n\r\nconst { Option  } = Select;\r\n\r\nclass AddAccount extends Component {\r\n\r\n  addAccount = () => {\r\n    const { form: {validateFields} } = this.props;\r\n    validateFields((errors, values) => {\r\n      if(errors) {\r\n        message.error(\"输入有误，请检查输入是否有误\");\r\n        return\r\n      }\r\n      values.password = this.$MD5(values.password).toString();\r\n      Modal.confirm({\r\n        title: \"确定创建一个新账户吗？\",\r\n        onOk: () => {\r\n          axios.post('/account', {...values})\r\n            .then(res => {\r\n              if(res.data.code === 1) {\r\n                this.resetForm()\r\n                message.success(res.data.msg)\r\n              } else {\r\n                message.error(res.data.msg)\r\n              }\r\n            })\r\n        }\r\n      })\r\n    })\r\n    // console.log(getFieldsValue())\r\n  };\r\n\r\n  resetForm = () => {\r\n    const { form: {setFieldsValue} } = this.props;\r\n    setFieldsValue({username: \"\", password: \"\", role: 2})\r\n  };\r\n\r\n  render() {\r\n    const { form: {getFieldDecorator} } = this.props;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 2 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      colon: false\r\n    };\r\n    return (\r\n\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Form {...formItemLayout}>\r\n            <Form.Item label=\"用户名\">\r\n              {getFieldDecorator('username', {\r\n                rules: [{ required: true, message: '用户名不能为空' }],\r\n              })(\r\n                <Input placeholder=\"请输入用户名\"/>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"密码\">\r\n              {getFieldDecorator('password', {\r\n                rules: [{ required: true, message: '密码不能为空' }],\r\n              })(\r\n                <Input placeholder=\"请输入密码\"/>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"管理员权限\">\r\n              {getFieldDecorator('role', {\r\n                rules: [{ required: true }],\r\n                initialValue: 2\r\n              })(\r\n                <Select>\r\n                  <Option value={0}>超级管理员</Option>\r\n                  <Option value={1}>一级代理</Option>\r\n                  <Option value={2}>二级代理</Option>\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\" \">\r\n              <Button size=\"default\" buttonContent=\"新增\" onClick={this.addAccount} />\r\n              <Button ml={20} background=\"info\" size=\"default\" buttonContent=\"清空\" onClick={this.resetForm}  />\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddAccount);","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Account from './index';\r\nimport AddAccount from './add';\r\nclass AccountRouter extends Component {\r\n  render() {\r\n    return (\r\n    \t<Switch>\r\n        <Route path=\"/admin/account/list\" component={Account} />\r\n        <Route path=\"/admin/account/add\" component={AddAccount} />\r\n        <Redirect from=\"/admin/account\" exact to=\"/admin/account/list\"/>\r\n    \t</Switch>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AccountRouter;","import React, { Component } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\nclass Index extends Component {\r\n  handleInputChange = e => {\r\n    console.log(e.target.getContent())\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    \t<div className=\"container\">\r\n        <Editor\r\n          apiKey=\"0716d4da8zojzntbxderqtt6hahy4pg7832a1gj024wxtzdp\"\r\n          init={{\r\n            menubar: \"edit\",\r\n            max_height: 750,\r\n            plugins: [\r\n              'image code lists emoticons advlist link charmap codesample fullscreen help hr insertdatetime nonbreaking preview searchreplace table'\r\n            ],\r\n            toolbar: 'formatselect | fontsizeselect | fontselect | bold italic underline strikethrough forecolor backcolor | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent | charmap nonbreaking hr | table | insertdatetime link image emoticons codesample | preview fullscreen code | searchreplace help',\r\n            min_height:500,\r\n            default_link_target: \"_blank\",\r\n            fontsize_formats: \"12px 14px 16px 18px 20px 22px 24px 30px 36px 40px 48px 50px\",\r\n          }}\r\n          onChange={this.handleInputChange}\r\n        />\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Index;","import React, { Component } from 'react';\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Index from './index';\r\n\r\nclass EditRouter extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Route path='/admin/edit'>\r\n          <Switch>\r\n            <Route path=\"/admin/edit/index\" component={Index} />\r\n            <Redirect from=\"/admin/edit\" exact to='/admin/edit/index' />\r\n          </Switch>\r\n        </Route>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditRouter;","import React, { Component } from 'react';\r\nimport { Table, Button, Tooltip } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport backTop from '../../../utils';\r\n\r\nimport {actionCreators} from \"./store\";\r\n\r\nclass Reply extends Component {\r\n  render() {\r\n    const { replyList, deleteReply, copy } = this.props;\r\n    const replyHeader =  [\r\n      {\r\n        title: \"msgId\",\r\n        key: \"msgId\",\r\n        dataIndex: \"msgId\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: \"类型\",\r\n        key: \"type\",\r\n        dataIndex: \"type\",\r\n        align: \"center\",\r\n        render: (text, record) => (record.type === 0 ? \"文本消息\"\r\n          : \"图文消息\")\r\n      },\r\n      {\r\n        key: \"title\",\r\n        dataIndex: \"title\",\r\n        title: \"标题\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: (text, record) => {\r\n          let title = record.contents ? record.contents[0].title : \"\";\r\n          return (\r\n            <Tooltip placement=\"top\" title={title}><span className=\"textEllipsis\" style={{width: 100}}>{title}</span></Tooltip>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"description\",\r\n        dataIndex: \"description\",\r\n        title: \"详细信息\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record) => {\r\n          let content = record.contents ? record.contents[0].description : \"\";\r\n          return (\r\n            <Tooltip placement=\"top\" title={content}><span className=\"textEllipsis\" style={{width: 200}}>{content}</span></Tooltip>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"url\",\r\n        dataIndex: \"url\",\r\n        title: \"链接\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: (text, record) => {\r\n          let url = record.contents ? record.contents[0].url : \"\";\r\n          return (\r\n            <Tooltip placement=\"top\" title={url}><span className=\"textEllipsis\" style={{width: 100}}>{url}</span></Tooltip>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"picurl\",\r\n        dataIndex: \"picurl\",\r\n        title: \"图片\",\r\n        align: \"center\",\r\n        render: (text, record) => (record.contents ? <img style={{width: 80, verticalAlign: \"middle\"}} src={record.contents[0].picurl} alt=\"图片找不到啦~\"/> : <span></span>)\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        key: \"Action\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record, index) => (\r\n          <div>\r\n            <Button size=\"small\" onClick={() => copy(record, this.props)}>复制</Button>\r\n            <Button size=\"small\" type=\"primary\" style={{margin: \"0 10px\"}}>\r\n              <Link to={{pathname: \"/admin/source/reply/update\", query: record}}>编辑</Link>\r\n            </Button>\r\n            <Button size=\"small\" type=\"danger\" onClick={() => deleteReply(record._id, index)}>删除</Button>\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n    \t<div>\r\n    \t\t<div className=\"container\">\r\n          <Button type=\"primary\" style={{marginBottom: \"20px\"}}>\r\n            <Link to=\"/admin/source/reply/create\">添加新素材</Link>\r\n          </Button>\r\n          <Table size=\"small\" rowKey={record => record._id} columns={replyHeader} dataSource={replyList} pagination={{onChange: () => backTop()}} />\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n  componentDidMount() {\r\n    this.props.getReplyList()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  replyList: state.source.group.replyList\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getReplyList() {\r\n    dispatch(actionCreators.getReplyList())\r\n  },\r\n  deleteReply(id, index) {\r\n    dispatch(actionCreators.deleteReply(id, index))\r\n  },\r\n  copy(record, props) {\r\n    dispatch(actionCreators.copy(record, props))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Reply);","import React, {Component, Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Form, Button, Input, Radio, Icon, Upload} from \"antd\";\r\nimport * as actionCreators from '../store/actionCreators';\r\n\r\nclass EditReplyInfo extends Component {\r\n\r\n  componentDidMount() {\r\n    let query = this.props.history.location.query;\r\n    query && this.props.initReplyInfo(query);\r\n  }\r\n\r\n  render() {\r\n    const { replyInfo, content, uploadImg, handleReplyChange, handleContentChange, submitReply, cancel } = this.props;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: {span: 6}\r\n      },\r\n      wrapperCol: {\r\n        sm: {span: 16, offset: 0}\r\n      },\r\n      colon: false\r\n    };\r\n    let textOrImgText;\r\n    if(replyInfo.type === 0) {\r\n      textOrImgText = <Form.Item label=\"详细信息\">\r\n        <Input type=\"textarea\" value={content.description} placeholder=\"请输入详细信息\" onChange={e => handleContentChange(e, \"description\")} />\r\n      </Form.Item>\r\n    } else {\r\n      let UploadImg;\r\n      if(content.picurl) {\r\n        UploadImg = <img style={{width: \"100px\"}} src={content.picurl} alt=\"图片走丢啦~\" />\r\n      } else {\r\n        UploadImg = <Button><Icon type=\"upload\" /> 上传图片 </Button>\r\n      }\r\n      textOrImgText = <Fragment>\r\n        <Form.Item label=\"图文标题\">\r\n          <Input value={content.title} placeholder=\"请输入图文标题\" onChange={e => handleContentChange(e, \"title\")} />\r\n        </Form.Item>\r\n        <Form.Item label=\"图文链接\">\r\n          <Input value={content.url} placeholder=\"请输入图文链接\" onChange={e => handleContentChange(e, \"url\")} />\r\n        </Form.Item>\r\n        <Form.Item label=\"图片\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" onChange={(info) => {uploadImg(content, info)}} showUploadList={false}>\r\n            {UploadImg}\r\n          </Upload>\r\n        </Form.Item>\r\n      </Fragment>\r\n    }\r\n    return (\r\n      <div>\r\n        <div className='container'>\r\n          <div className=\"title-wrapper\">\r\n            <h2>编辑素材</h2>\r\n          </div>\r\n          <Form style={{width: 400}} {...formItemLayout}>\r\n            <Form.Item label=\"类型\">\r\n              <Radio.Group value={replyInfo.type} onChange={e => handleReplyChange(e, \"type\")}>\r\n                <Radio.Button value={0}>文本</Radio.Button>\r\n                <Radio.Button value={1}>图文</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            {textOrImgText}\r\n            <Form.Item label=\" \">\r\n              <Button type=\"primary\" style={{marginRight: 10}} onClick={() => submitReply(content, replyInfo, this.props)}>提交</Button>\r\n              <Button onClick={() => cancel(this.props)}>取消</Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.unMountState();\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  replyInfo: state.source.group.replyInfo,\r\n  content: state.source.group.content\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  uploadImg(content, info) {\r\n    if (info.file.status === 'done') {\r\n      let picurl = `http://t.dmmup.com/uploads/${info.file.response.filename}`\r\n      dispatch(actionCreators.handleContentChange(picurl, \"picurl\"))\r\n    }\r\n  },\r\n  handleContentChange(e, name) {\r\n    dispatch(actionCreators.handleContentChange(e.target.value, name))\r\n  },\r\n  handleReplyChange(e, name) {\r\n    dispatch(actionCreators.handleReplyChange(e.target.value, name))\r\n  },\r\n  cancel(props) {\r\n    props.history.goBack();\r\n    dispatch(actionCreators.resetState())\r\n  },\r\n  submitReply(content, replyInfo, props) {\r\n    if(props.history.location.query) {\r\n      replyInfo.contents.splice(0, 1, content);\r\n    } else {\r\n      replyInfo.contents.push(content);\r\n    }\r\n    dispatch(actionCreators.submitReply(replyInfo, props))\r\n  },\r\n  initReplyInfo(record) {\r\n    dispatch(actionCreators.initReplyInfo(record))\r\n  },\r\n  unMountState() {\r\n    dispatch(actionCreators.resetState())\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Form.create({name: 'editReplyInfo'})(EditReplyInfo));","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Group from './group';\r\nimport editGroup from './group/edit';\r\n\r\nclass SourceWrapper extends Component {\r\n  render() {\r\n    return (\r\n      <Route path=\"/admin/source\" render={() =>\r\n        <Switch>\r\n          {/*图文素材*/}\r\n          <Route path='/admin/source/group'>\r\n            <Switch>\r\n              <Route path=\"/admin/source/group/index\" component={Group} />\r\n              <Route path='/admin/source/group/create' component={editGroup} />\r\n              <Route path='/admin/source/group/update' component={editGroup} />\r\n              <Redirect from=\"/admin/source/group\" exact to='/admin/source/group/index' />\r\n            </Switch>\r\n          </Route>\r\n          <Redirect from=\"/admin/source\" exact to='/admin/source/group' />\r\n        </Switch>\r\n      } />\r\n    )\r\n  }\r\n}\r\n\r\nexport default SourceWrapper;","import React, { Component } from 'react';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport store from './store';\n\nimport Login from './pages/login';\n\nimport BasicLayout from './common/BasicLayout';\nimport TuoguanRouter from './pages/gonghao/router';\nimport MessageRouter from './pages/message/router';\nimport ChannelRouter from './pages/channel/router';\nimport AccountRouter from './pages/account/router';\nimport EditRouter from './pages/edit/router';\nimport SourceWrapper from './pages/source/router';\n\nclass App extends Component{\n\n  state = {\n    userInfo: {}\n  };\n\n  componentDidMount() {\n    let userInfo = localStorage.getItem(\"userInfo\");\n    if(userInfo && Date.now() - (+ new Date(JSON.parse(userInfo).loginAt)) < 12 * 60 * 60 * 1000) {\n      this.setState({userInfo: JSON.parse(userInfo)});\n    }\n  }\n\n  render() {\n    const { userInfo } = this.state;\n    const needLogin = Object.keys(userInfo).length > 0;\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/admin/login\" render={() => needLogin ? <Redirect to={window.location.search ? decodeURIComponent(window.location.search.split(\"=\")[1]) : \"/admin\"} /> : <Login />} />\n            <Route path=\"/admin\" render={() => (\n              needLogin ?\n                <BasicLayout content={\n                    <Switch>\n                      <Route path='/admin/gonghao' component={TuoguanRouter} />\n                      <Route path='/admin/message' component={MessageRouter} />\n                      <Route path='/admin/channel' component={ChannelRouter} />\n                      <Route path='/admin/account' component={AccountRouter} />\n                      <Route path='/admin/edit' component={EditRouter} />\n                      <Route path='/admin/source' component={SourceWrapper} />\n                      <Redirect from=\"/admin\" exact to={userInfo.role === 2 ? \"/admin/gonghao\" : \"/admin/account\"} />\n                    </Switch>\n                } />\n                : <Redirect to={\"/admin/login?redirect=\" + encodeURIComponent(window.location.pathname)} />\n            )} />\n            <Redirect from=\"/\" exact to=\"/admin\" />\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './assets/css/reset.css';\nimport App from './App.jsx';\nimport MD5 from 'crypto-js/md5'\n\nReact.Component.prototype.$MD5 = MD5;\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}