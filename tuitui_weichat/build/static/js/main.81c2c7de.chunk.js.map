{"version":3,"sources":["assets/images/login_bg.png","assets/images/logo.png","pages/gonghao/tuoguan/store/reducer.js","utils/http.js","utils/index.js","pages/gonghao/tuoguan/store/actionCreators.js","pages/gonghao/tuoguan/store/constants.js","pages/gonghao/menu/store/constants.js","pages/gonghao/menu/store/reducer.js","pages/gonghao/menu/store/actionCreators.js","pages/gonghao/reply/store/reducer.js","pages/gonghao/reply/store/actionCreators.js","pages/gonghao/reply/store/constants.js","pages/gonghao/reducer.js","pages/message/group/store/constants.js","pages/message/group/store/reducer.js","pages/message/group/store/actionCreators.js","pages/message/kefu/store/reducer.js","pages/message/kefu/store/actionCreators.js","pages/message/kefu/store/constants.js","pages/message/template/store/reducer.js","pages/message/template/store/actionCreators.js","pages/message/template/store/constants.js","pages/message/reducer.js","store/reducer.js","store/index.js","pages/login/index.jsx","common/BasicLayout/header/index.jsx","common/BasicLayout/sider/index.jsx","common/BasicLayout/bread/index.jsx","common/BasicLayout/index.jsx","common/components/Button/index.jsx","pages/gonghao/tuoguan/index.jsx","pages/gonghao/tuoguan/group/index.jsx","pages/gonghao/menu/index.jsx","common/components/GraphicMessage/index.jsx","pages/gonghao/menu/components/MenuReplyMessage.jsx","pages/gonghao/menu/edit/index.jsx","pages/gonghao/reply/index.jsx","common/components/SelectGonghao/MultiSelectSider/index.jsx","pages/gonghao/reply/edit/index.jsx","pages/gonghao/router.jsx","pages/message/group/components/GraphicMessage/index.jsx","pages/message/group/material/index.jsx","pages/message/group/components/EditTextMaterialModal/index.jsx","pages/message/group/textMaterial/index.jsx","common/components/SelectGonghao/SingleSelectByGroup/index.jsx","pages/message/group/history/index.jsx","common/components/Loading/index.jsx","pages/message/group/index.jsx","pages/message/kefu/index.jsx","pages/message/kefu/edit/index.jsx","pages/message/template/index.jsx","common/components/SelectGonghao/SingleSelectModal/index.jsx","pages/message/template/edit/index.jsx","pages/message/router.jsx","pages/channel/spread/index.jsx","pages/channel/spread/edit/index.jsx","pages/channel/router.jsx","pages/account/index.jsx","pages/account/add/index.jsx","pages/account/router.jsx","pages/tools/tikTok/index.jsx","pages/tools/router.jsx","App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","defaultState","gonghaoTagList","allGonghaoList","originalGonghaoList","gonghaoList","group","status","currentPage","searchName","isSelectTag","selectedTag","isCreate","gonghaoModal","gonghaoInfo","id","attribute","ab_test","configList","configForm","type","sex","text","replyType","msgId","key","urlList","axios","defaults","timeout","userInfo","localStorage","getItem","account_id","JSON","parse","_id","interceptors","request","use","config","method","url","indexOf","Date","getTime","data","_t","err","Promise","reject","response","message","concat","resolve","backTop","timer","setInterval","osTop","document","documentElement","scrollTop","body","ispeed","Math","floor","clearInterval","getGroupList","dispatch","get","then","res","code","getAllGonghaoList","length","changePage","page","action","regenerator_default","a","async","_context","prev","next","awrap","stop","changeSearchInput","searchByName","nick_name","params","success","changeSelectValue","value","deleteGonghao","index","Modal","confirm","okText","cancelText","content","title","onOk","jieguan","addNewGonghao","window","open","openGonghaoModal","closeGonghaoModal","updateGonghaoInfo","console","log","put","Object","objectSpread2","msg","changeGroup","name","changeAttribute","changeAbTest","selectTag","removeTag","tagConfirm","props","post","exist","form","setFieldsValue","deleteTagItem","delete","createForm","history","goBack","updateForm","checkPageAttr","getConfigList","deleteConfig","changeConfigForm","formInfo","createConfigForm","configInfo","updateConfigForm","SAVE_TO_CONTENTS","firstMenuForm","sub_button","messageInfo","articles","menuList","menuForm","stringify","menuInfo","individual","values","codes","contents","menuIndex","secMenuIndex","isSubmit","updateIndex","currentKey","getMenuList","reverse","deleteMenu","handleInfoChange","handleIndividualChange","handleInputChange","randomString","handleSubInputChange","constants","addFirstMenu","editMenu","addSecondMenu","editSecMenu","deleteFirMenu","deleteSubMenu","openModal","submitMenu","validateArray","location","query","resetState","cancelMenu","getAllCodes","allCodes","changeGonghao","targetKeys","initMenuInfo","record","changeMessageInfo","addToList","updateMessageItem","item","updateCurrentMessage","deleteCurrentMessage","chars","result","i","random","j","warning","replyMessageList","is_nickname","messageIndex","getReplyMessageList","deleteReplyMessage","selectGonghao","error","initState","reducer","combineReducers","tuoguan","_start","_end","state","arguments","undefined","newState","toConsumableArray","filter","slice","splice","push","menu","_newState$messageInfo","picurl","description","assign","currentMessage","_newState$messageInfo2","reply","COPY","messageList","isComplete","tagList","sendModal","sendTimingModal","date","time","sendInfo","tagId","mediaId","sendTimingInfo","isTiming","timing","updateInfo","media_id","content_source_url","updateMaterialModal","historyList","historyMsgModal","delMsgInfo","msg_id","article_idx","delDate","getGroupGonghao","sent","getMaterial","setTimeout","getMessageList","openUpdateMaterialModal","closeUpdateMaterialModal","updateMaterial","_res$data","catch","changeContentSourceUrl","Number","getTagList","changeTagId","closeModal","sendMessage","info","openTimingModal","sendTimingMessage","changeTimingState","changeTime","timeType","copy","dipatch","deleteMaterial","clearMaterial","getHistoryList","checkSendState","msg_status","openMsgModal","closeMsgModal","changeArticleIdx","deleteMsg","clearHistory","changeDate","deleteMany","initContent","allMessageList","kefuMessageList","messageType","messageGroup","selectedMessages","updateGroupModal","kefuMessageInfo","img","img_path","channel","timing_time","daily_time_show","delay","tagName","remarks","action_type","isHour","paramsModal","allGroup","previewModal","openid","groupInputVisible","groupValue","getKefuMessageList","sort","messages","createKefuMessage","deleteMessage","sendKefuMessage","take_over","handleChangeSelect","changeSelectedMessages","openUpdateGroupModal","cancelUpdateGroup","updateMoreGroup","changeSearchName","searchInputChange","clearCondition","deleteMultiMsg","changeContentValue","changeMessageValue","addMessage","selectMessage","selectParams","hideParamsModal","getAllGroup","showGroupInput","that","handleGroupInputChange","handleGroupInputConfirm","_res$data2","handleClose","_res$data3","cancelSelectGroup","submitMessage","task","is_timing","is_daily","_d","initKefuMessageInfo","openPreviewModal","closePreviewModal","preview","_ref","_res$data4","changeOpenId","templateMessageList","confName","selectGonghaoModal","templateId","templateName","templateList","templateInfo","template_id","templateModalVisible","color","getTemplateList","deleteTemplate","sendTemplate","changeConfNickName","searchConfName","test","openSelectModal","openEditModal","closeTemplateModal","changeTemplate","saveTemplateModal","editTemplate","confirmSelect","closeSelectModal","initMessageInfo","now","dateTime","unshift","kefu","gonghaoList1","map","gonghaoList2","input","focus","keys","_newState2","template","gonghao","gonghaoReducer","messageReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","login","bind","assertThisInitialized","loginInfo","username","password","_this2","bgStyle","minHeight","backgroundSize","backgroundRepeat","backgroundAttachment","backgroundImage","require","_react_16_12_0_react_default","createElement","className","style","size","onChange","e","changeInputValue","target","prefix","icon","marginRight","marginBottom","placeholder","onKeyUp","keyCode","onClick","setState","_this3","$MD5","toString","setItem","href","Component","HeaderWrapper","getFieldsValue","_getFieldsValue","trim","md5Password","cancelUpdate","showUpdateModal","_this$state","getFieldDecorator","react_router_dom","to","src","alt","tooltip","avatar","backgroundColor","popover","Fragment","fontSize","logout","modal","visible","onCancel","es_form","labelCol","span","wrapperCol","Item","label","initialValue","rules","required","Form","create","SubMenu","Menu","MenuItem","SideWrapper","keyIndex","role","subMenuList","path","selectedKeys","onSelect","selectItem","latestSelectedKey","selectList","find","pathname","split","pathName","MenuListRender","SubMenuList","subItem","mode","theme","defaultOpenKeys","defaultSelectedKeys","breadList","/gonghao","/gonghao/tuoguan","/gonghao/tuoguan/group","/gonghao/tuoguan/error","/gonghao/tuoguan/config","/gonghao/tuoguan/config/create","/gonghao/tuoguan/config/update","/gonghao/menu","/gonghao/menu/create","/gonghao/menu/update","/gonghao/reply","/gonghao/reply/create","/gonghao/reply/update","/message","/message/kefu","/message/kefu/create","/message/kefu/update","/message/group","/message/group/material","/message/group/history","/message/template","/message/template/create","/message/template/update","/channel","/channel/spread","/channel/spread/create","/channel/spread/update","/source","/source/group","/source/group/create","/source/group/update","/wechat/qrcode","/wechat/qrcode/create","/wechat/qrcode/update","/tools","/tools/tikTok","/account","/account/list","/account/add","BreadWrapper","getPath","pathSnippets","extraBreadcrumbItems","_","join","breadcrumb","seeDetail","notification","width","marginLeft","withRouter","Content","Layout","Sider","Header","Footer","BasicLayout","layout","BasicLayout_header","collapsible","BasicLayout_sider","card","BasicLayout_bread","ButtonList","danger","update","ButtonWrapper","buttonStyle","background","_this$props","_this$props$backgroun","_this$props$color","_this$props$mr","mr","_this$props$ml","ml","_this$props$mb","mb","_this$props2","_this$props2$size","buttonContent","_this$props2$disabled","disabled","es_button","Search","Input","Option","Select","Grid","Card","Tuoguan","pagination","pageSize","innerWidth","onSearch","es_select","Button","es_list","grid","gutter","sm","xxl","dataSource","renderItem","actions","yesterdayCount","todayCount","head_img","shape","marginTop","tag","es_radio","Group","connect","actionCreators","GonghaoGroup","columns","dataIndex","align","render","gonghao_id","gonghao_index","editGroupModalVisible","group_id","group_index","selectGroup","selectedRowKeys","getGonghaoTagList","openEditGroupModal","closeEditGroupModal","confirmEditGroup","updateGroup","addGroup","deleteGroup","changeGroupValue","searchGroupGonghao","submitGonghaoModal","_this$state2","ids","updateOne","updateMore","openUpdateMoreModal","_res$data5","_res$data6","changeSelectGroup","_this$state3","rowSelection","group_Sider","header","bordered","display","flexDirection","justifyContent","lineHeight","margin","padding","borderRadius","border","group_Content","group_Search","table","rowKey","menuHeader","GraphicMessage","MenuReplyMessage","MessageContent","UploadImg","uploadImg","TextArea","autoSize","minRows","maxRows","_react_16_12_0_react","upload","showUploadList","colon","divider","dashed","common_components_GraphicMessage","offset","EditMenuInfo","keyOrUrl","subKeyOrUrl","menuInfoForm","submitButton","menuModal","individualSex","formItemLayout","top","idx","components_MenuReplyMessage","maxLength","allowClear","transfer","showSearch","labelAlign","es_switch","checked","unMountState","resetMessageInfo","stopPropagation","file","filename","Config","configHeader","MultiSelectByGroup","AllGonghaoList","search","handleChangeGroup","getGonghaoList","nextProps","MultiSelectSider_Sider","MultiSelectSider_Option","locale","emptyText","MultiSelectSider_Content","EditConfigInfo","TextOrKey","submitForm","SelectGonghao_MultiSelectSider","col","closable","onClose","row","TuoguanWrapper","react_router","component","from","exact","Replay","editReplay","openSyncModal","moment","format","news_item","thumb_media_id","local_img_path","placement","groupMessage","syncMaterial","checkedList","docs","closeSyncModal","syncModal","indeterminate","checkAll","onCheckAllChange","nextContext","_this$state4","selectGonghaoList","config_provider","zhCN","message_group_components_GraphicMessage","htmlFor","date_picker","timeString","time_picker","borderBottom","paddingBottom","es_checkbox","PureComponent","EditTextMaterialModal","openidModalVisible","initMaterial","openOpenidModal","prevTextMaterial","cancelPrev","submitTextMaterial","resetFields","cancelEditMaterial","_this$props2$form","getFieldValue","editMaterialModalVisible","_this$props2$initMate","footer","rows","valuePropName","showTime","TextMaterial","textMaterialList","openEditMaterialModal","updateTextMaterial","textMaterial","_this$state$initMater","parseInt","prevState","isSend","_this4","_this5","_this6","xl","userSelect","sendMaterial","components_EditTextMaterialModal","Panel","Collapse","SingleSelectByGroup","activeKey","setCode","PanelList","SingleSelectByGroup_Sider","collapse","accordion","SingleSelectByGroup_Content","History","historyHeader","update_time","arr","titles","dataString","loadingWrapper","textAlign","position","left","zIndex","Loading","spin","spinning","TabPane","Tabs","historyModalVisible","clearTimeout","imageStyle","height","components_SelectGonghao_SingleSelectByGroup","components_Loading","empty","image","tabs","tabPosition","tab","material","message_group_textMaterial","group_history","Kefu","copyMessage","kefuMessageHeader","sorter","b","showQuickJumper","hideOnSinglePage","current","kefu_Option","EditMessage","isUploadImg","isTextUploadImg","FormItemWrapper","Channel","input_number","min","edit_Option","dateString","borderStyle","ref","onBlur","onPressEnter","borderColor","preventDefault","Template","templateColumns","template_Search","SingleSelectModal","maskClosable","mask","colors","colorWrapperStyle","EditTemplate","GonghaoModal","show","overflow","_loop","pre","SelectGonghao_SingleSelectModal","template_edit_Option","GroupRouter","GroupMaterial","EditKefuMSg","Advertise","spreadData","domain_names","dataList","changeTab","tabsRender","spread_TabPane","spreadHeader","wordWrap","goTop","deleteLink","copyLink","animated","defaultActiveKey","tabBarGutter","getSpreadList","_this7","spreadLinkInfo","links","weights","back_urls","link","back_url","weight","granularity","EditAdvertise","addTag","cancelSelectTag","cancelEdit","submitSpreadLink","initData","isAddWeight","hasLink","hasBackUrl","hasWeight","delLink","isUpdate","updateWeight","enterButton","saveUpdate","addLink","borderRight","deleteTag","paddingLeft","list","ChannelWrapper","Spread","EditSpread","Account","accountList","searchValue","updateRemarksIndex","searchAccount","getAccountList","handleChangeSearchValue","lib","onCopy","deleteAccount","account_Search","AddAccount","addAccount","validateFields","errors","resetForm","xs","add_Option","AccountRouter","TikTok","newUrl","changeUrl","jiexi","tikTok_Search","controlslist","controls","muted","autoPlay","download","ToolsRouter","App","loginAt","needLogin","es","decodeURIComponent","src_pages_login","src_common_BasicLayout","TuoguanRouter","MessageRouter","ChannelRouter","encodeURIComponent","React","prototype","MD5","ReactDOM","src_App","getElementById"],"mappings":"+JAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gFCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2/OCElCC,EAAe,CAEnBC,eAAgB,GAChBC,eAAgB,GAChBC,oBAAqB,GACrBC,YAAa,GACbC,MAAO,eACPC,OAAQ,eACRC,YAAa,EACbC,WAAY,GACZC,aAAa,EACbC,YAAa,GACbC,UAAU,EACVC,cAAc,EACdC,YAAa,CACXR,MAAO,GACPS,GAAI,GACJC,UAAW,EACXC,QAAS,GAGXC,WAAY,GACZC,WAAY,CAACC,KAAM,EAAGC,IAAK,EAAGL,UAAW,EAAGM,KAAM,GAAIC,UAAW,EAAGC,MAAO,KAAMC,IAAK,GAAIC,QAAS,+CCtBrGC,IAAMC,SAASC,QAAU,IAMzB,IAAIC,EAAWC,aAAaC,QAAQ,YAEhCC,EAAaH,EAAWI,KAAKC,MAAML,GAAUM,IAAO,GAExDT,IAAMU,aAAaC,QAAQC,IACzB,SAAAC,GAWE,MAVqB,QAAlBA,EAAOC,QAAsC,WAAlBD,EAAOC,OAC/BD,EAAOE,IAAIC,QAAQ,MAAQ,EAC7BH,EAAOE,KAAQ,eAAiBT,EAAa,QAAS,IAAIW,MAAOC,UAEjEL,EAAOE,KAAQ,eAAiBT,EAAa,QAAS,IAAIW,MAAOC,UAEzC,SAAlBL,EAAOC,QAAuC,QAAlBD,EAAOC,SAC3CD,EAAOM,KAAKb,WAAaA,EACzBO,EAAOM,KAAKC,IAAK,IAAIH,MAAOC,WAEvBL,GAET,SAAAQ,GACE,OAAOC,QAAQC,OAAOF,KAK1BrB,IAAMU,aAAac,SAASZ,IAC1B,SAAAY,GACE,OAAOA,GAET,SAAAH,GACE,GAAIA,GAAOA,EAAIG,SACb,OAAQH,EAAIG,SAAS5C,QACnB,KAAK,IACHyC,EAAII,QAAU,2BACd,MACF,KAAK,IACHJ,EAAII,QAAU,uCACd,MACF,KAAK,IACHJ,EAAII,QAAU,2BACd,MACF,KAAK,IACHJ,EAAII,QAAU,gEACd,MACF,KAAK,IACHJ,EAAII,QAAU,6CACd,MACF,KAAK,IACHJ,EAAII,QAAU,2BACd,MACF,KAAK,IACHJ,EAAII,QAAU,uCACd,MACF,KAAK,IACHJ,EAAII,QAAU,iCACd,MACF,KAAK,IACHJ,EAAII,QAAU,2BACd,MACF,KAAK,IACHJ,EAAII,QAAU,iCACd,MACF,KAAK,IACHJ,EAAII,QAAU,2BACd,MACF,KAAK,IACHJ,EAAII,QAAU,uDACd,MACF,QACEJ,EAAII,QAAJ,2BAAAC,OAAqBL,EAAIG,SAAS5C,aAGtCyC,EAAII,QAAU,mDAEhB,OAAOH,QAAQK,QAAQN,EAAIG,YAIhBxB,QAAf,oBCpEe4B,EAjBC,WACd,OAAO,IAAIN,QAAQ,SAACK,EAASJ,GAC3B,IAAIM,EACJA,EAAQC,YAAY,WAClB,IAAIC,EACFC,SAASC,gBAAgBC,WAAaF,SAASG,KAAKD,UAClDE,EAASC,KAAKC,OAAOP,EAAQ,KACjCC,SAASC,gBAAgBC,UAAYF,SAASG,KAAKD,UACjDH,EAAQK,EACI,IAAVL,GACFQ,cAAcV,IAEf,IACHF,EAAQ,SCRCa,EAAe,WAC1B,OAAO,SAACC,GACNzC,EAAM0C,IAAI,eACPC,KAAK,SAAAC,GACJ,GAAsB,IAAlBA,EAAIzB,KAAK0B,KAAY,CACvB,IAAItE,EAAiBqE,EAAIzB,KAAKA,KAK9BsB,EAJe,CACbhD,KCZwB,oCDaxBlB,wBAQCuE,EAAoB,WAC/B,OAAO,SAAAL,GACLzC,EAAM0C,IAAI,SACPC,KAAK,SAAAC,GACJ,GAAIA,EAAIzB,KAAKA,KAAK4B,OAAS,EAAG,CAC5B,IAAIvE,EAAiBoE,EAAIzB,KAAKA,KAM9BsB,EALe,CACbhD,KC3BwB,oCD4BxBjB,iBACAE,YAAaF,SAQZwE,EAAa,SAACC,GACzB,OAAO,SAAMR,GAAN,IAAAS,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACCN,EAAS,CACbzD,KCvCqB,6BDwCrBwD,QAHGK,EAAAE,KAAA,EAAAL,EAAAC,EAAAK,MAKC7B,KALD,cAAA0B,EAAAE,KAAA,EAAAL,EAAAC,EAAAK,MAMChB,EAASS,IANV,wBAAAI,EAAAI,YAWIC,EAAoB,SAAA7E,GAAU,MAAK,CAC9CW,KC7CiC,oCD8CjCX,eAGW8E,EAAe,SAAAC,GAC1B,OAAO,SAAApB,GACLzC,EAAM0C,IAAI,iBAAkB,CAACoB,OAAQ,CAACD,eACnClB,KAAK,SAAAC,GACJ,GAAIA,EAAIzB,KAAKA,KAAK4B,OAAS,EAAG,CAC5B,IAAIvE,EAAiBoE,EAAIzB,KAAKA,KAM9BsB,EAJe,CACbhD,KC5DkB,+BD6DlBjB,iBAAgBE,YAHFF,IAMhBiD,IAAQsC,QAAQ,iCAMbC,EAAoB,SAAClE,EAAKmE,GAAN,MAAiB,CAChDxE,KCvDiC,oCDwDjCK,MAAKmE,UAGMC,EAAgB,SAAC9E,EAAI+E,GAChC,OAAO,SAAA1B,GACL2B,IAAMC,QAAQ,CACZC,OAAQ,eACRC,WAAY,eACZC,QAAS,uCACfC,MAAO,eACDC,KAAM,WACJ1E,EAAM0C,IAAI,YAAa,CACrBoB,OAAQ,CAAC1E,QACRuD,KAAK,SAAAC,GAKNH,EAJe,CACbhD,KCtFkB,gCDuFlB0E,UAGF1C,IAAQsC,QAAQ,mCAObY,EAAU,SAAC9B,EAAMsB,GAC5B,OAAO,SAAA1B,GACL2B,IAAMC,QAAQ,CACZC,OAAQ,eACRC,WAAY,eACZC,QAAS,uCACfC,MAAO,eACDC,KAAM,WACJ1E,EAAM0C,IAAI,gBAAiB,CACzBoB,OAAQ,CAACjB,UACRF,KAAK,SAAAC,GAKNH,EAJe,CACbhD,KC5GmB,0BD6GnB0E,iBASCS,EAAgB,WAC3B,OAAO,SAAAnC,GACLzC,EAAM0C,IAAI,iCACPC,KAAK,SAAAC,GACJiC,OAAOC,KAAKlC,EAAIzB,UAKX4D,EAAmB,SAAC3F,EAAIT,EAAOU,EAAWC,GAAvB,MAAoC,CAClEG,KCvHgC,mCDwHhCL,KAAIT,QAAOU,YAAWC,YAGX0F,EAAoB,iBAAO,CACtCvF,KC3HiC,sCD8HtBwF,EAAoB,SAAA9F,GAC/B,OAAO,SAAAsD,GACLyC,QAAQC,IAAIhG,GACZa,EAAMoF,IAAI,QAAVC,OAAAC,EAAA,EAAAD,CAAA,GAAuBlG,IACpBwD,KAAK,SAAAC,GACiB,IAAlBA,EAAIzB,KAAK0B,OACVpB,IAAQsC,QAAQnB,EAAIzB,KAAKoE,KACzB9C,EAASuC,UAMNQ,EAAc,SAAAC,GAAI,MAAK,CAClChG,KC3I0B,8BD4I1BgG,SAGWC,EAAkB,SAAArG,GAAS,MAAK,CAC3CI,KC/I8B,kCDgJ9BJ,cAGWsG,EAAe,SAAArG,GAAO,MAAK,CACtCG,KCnJ4B,+BDoJ5BH,YAGWsG,EAAY,SAAC5G,GAAD,MAAkB,CACzCS,KCnKwB,4BDoKxBT,gBAGW6G,EAAY,iBAAO,CAC9BpG,KCvKwB,8BD0KbqG,EAAa,SAACnH,EAAOoH,GAChC,OAAO,SAACtD,GACN,IAAIgD,EACJzF,EAAMgG,KAAK,cAAe,CAACP,KAAM9G,IAC9BgE,KAAK,SAAAC,GACmB,IAAnBA,EAAIzB,KAAK8E,QACXR,EAAO7C,EAAIzB,KAAKA,MAElB4E,EAAMG,KAAKC,eAAe,CAACxH,UAK3B8D,EAJe,CACbhD,KCnLiB,6BDoLjBgG,OAAM9G,cAOHyH,GAAgB,SAAChH,EAAI+E,GAChC,OAAO,SAAC1B,GACNzC,EAAMqG,OAAO,eAAiBjH,GAC3BuD,KAAK,SAAAC,GAKJH,EAJe,CACbhD,KC/LqB,gCDgMrB0E,cAOGmC,GAAa,SAACnH,EAAaoH,GACtC,OAAO,SAAC9D,GACNzC,EAAMgG,KAAK,eAAgB7G,GAAawD,KAAK,SAAAC,GAC3C2D,EAAQC,SAKR/D,EAJe,CACbhD,KC3MmB,6BD4MnBN,gBAGFsC,IAAQsC,QAAQ,gCAKT0C,GAAa,SAACtH,EAAaoH,GACtC,OAAO,SAAC9D,GACNzC,EAAMgG,KAAK,eAAgB7G,GAAawD,KAAK,SAAAC,GAC3C2D,EAAQC,SACR1D,IAKAL,EAJe,CACbhD,KCzNmB,6BD0NnBN,gBAGFsC,IAAQsC,QAAQ,gCAKT2C,GAAgB,iBAAO,CAClCjH,KClO6B,kCDuOlBkH,GAAgB,SAAC9D,GAC5B,OAAO,SAACJ,GACNzC,EAAM0C,IAAI,SAAU,CAACoB,OAAQ,CAACjB,UAC3BF,KAAK,SAAAC,GACJ,IAAIrD,EAAaqD,EAAIzB,KAAKA,KAK1BsB,EAJe,CACbhD,KCpOqB,gCDqOrBF,mBAOGqH,GAAe,SAACxH,EAAI+E,GAC/B,OAAO,SAAC1B,GACN2B,IAAMC,QAAQ,CACZC,OAAQ,eACRC,WAAY,eACZC,QAAS,uCACTC,MAAO,eACPC,KAAM,WACJ1E,EAAM0C,IAAI,aAAc,CAACoB,OAAQ,CAAC1E,QAC/BuD,KAAK,SAAAC,GAKNH,EAJe,CACbhD,KCtPiB,+BDuPjB0E,UAGF1C,IAAQsC,QAAQ,mCAQb8C,GAAmB,SAACC,GAAD,MAAe,CAC7CrH,KChQgC,mCDiQhCqH,aAGWC,GAAmB,SAACC,EAAYT,GAC3C,OAAO,SAAC9D,GACN2B,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,EAAMgG,KAAK,gBAAiBgB,GAAYrE,KAAK,SAAAC,GAC3C2D,EAAQC,SAKR/D,EAJe,CACbhD,KC9QsB,mCD+QtBuH,eAGFvF,IAAQsC,QAAQ,mCAObkD,GAAmB,SAACD,EAAYT,EAASpC,GACpD,OAAO,SAAC1B,GACN2B,IAAMC,QAAQ,CACZI,MAAO,uCACPC,KAAM,WACJ1E,EAAMgG,KAAK,gBAAiBgB,GAAYrE,KAAK,SAAAC,GAC3C2D,EAAQC,SAKR/D,EAJe,CACbhD,KChSsB,mCDiStBuH,aAAY7C,UAGd1C,IAAQsC,QAAQ,mCEpSbmD,GAAmB,8BCvB1BC,GAAgB,CACpB1B,KAAM,GACNhG,KAAM,OACNK,IAAK,GACLiB,IAAK,GACLqG,WAAY,IAGRA,GAAa,CACjB3B,KAAM,GACNhG,KAAM,OACNK,IAAK,GACLiB,IAAK,IAYDsG,GAAc,CAClBzH,UAAW,EACX0H,SAAU,GACV9C,QAAS,IAGLlG,GAAe,CACnBiJ,SAAU,GACVC,SAAUjH,KAAKC,MAAMD,KAAKkH,UAAUN,KACpCO,SAAUnH,KAAKC,MAAMD,KAAKkH,UAlBJ,CACtBhD,MAAO,GACPkD,YAAY,EACZjI,IAAK,IACLkI,OAAQ,GACRC,MAAO,GACPC,SAAU,MAaVC,WAAY,EACZX,WAAY7G,KAAKC,MAAMD,KAAKkH,UAAUL,KACtCY,cAAe,EACfC,UAAU,EACVC,aAAc,EACdb,YAAa9G,KAAKC,MAAMD,KAAKkH,UAAUJ,KACvCc,WAAY,ICrCDC,GAAc,WACzB,OAAO,SAAA3F,GACLzC,EAAM0C,IAAI,SACPC,KAAK,SAAAC,GACJ,GAAIA,EAAIzB,KAAKA,KAAK4B,OAAS,EAAG,CAC5B,IAAIwE,EAAW3E,EAAIzB,KAAKA,KAAKkH,UAK7B5F,EAJe,CACbhD,KFZiB,2BEajB8H,kBAQCe,GAAa,SAAClJ,EAAI+E,GAC7B,OAAO,SAAA1B,GACL2B,IAAMC,QAAQ,CACZI,MAAO,eACPD,QAAS,uCACTE,KAAM,WACJ1E,EAAM0C,IAAI,YAAa,CAACoB,OAAQ,CAAC1E,GAAIA,KAClCuD,KAAK,SAAAC,GACAA,EAAIzB,KAAK4C,UAKXtB,EAJe,CACbhD,KF9BW,0BE+BX0E,UAGF1C,IAAQsC,QAAQnB,EAAIzB,KAAK4C,iBAQ1BwE,GAAmB,SAACtE,EAAOwB,GAAR,MAAkB,CAChDhG,KF1CgC,gCE2ChCwE,QAAOwB,SAGI+C,GAAyB,SAAAvE,GAAK,MAAK,CAC9CxE,KF9CsC,sCE+CtCwE,UAGWwE,GAAoB,SAAChD,EAAMxB,GACtC,OAAO,SAAAxB,GACS,UAAVwB,GACFxB,EAASiG,MAEXjG,EAAS,CACPhD,KFvD6B,iCEwD7BgG,OAAMxB,YAKC0E,GAAuB,SAAClD,EAAMxB,GACzC,OAAO,SAAAxB,GACS,UAAVwB,IACFxB,EAASiG,MACTjG,EAAS,CAAChD,KAAMmJ,MAElBnG,EAAS,CACPhD,KFnEiC,oCEoEjCgG,OAAMxB,YAKC4E,GAAe,WAC1B,OAAO,SAAApG,GACLA,EAAS,CAAChD,KAAMmJ,KAChBnG,EAAS,CAAChD,KF3EgB,gCE+EjBqJ,GAAW,SAAC3H,EAAMgD,GAC7B,OAAO,SAAA1B,GACLA,EAAS,CAAChD,KAAMmJ,KAChBnG,EAAS,CACPhD,KFjFmB,wBEkFnB0E,QAAOhD,WAKA4H,GAAgB,WAC3B,OAAO,SAAAtG,GACLA,EAAS,CAAChD,KAAMmJ,KAChBnG,EAAS,CAAChD,KF3FiB,iCE+FlBuJ,GAAc,SAAC7H,EAAMgD,GAChC,OAAO,SAAA1B,GACDtB,EAAKrB,KACP2C,EAAS,CAAChD,KAAMmJ,KAElBnG,EAAS,CACPhD,KFnGuB,2BEoGvB0E,QAAOhD,WAKA8H,GAAgB,WAC3B,OAAO,SAAAxG,GACL2B,IAAMC,QAAQ,CACZI,MAAO,eACPD,QAAS,uCACTE,KAAM,WACJjC,EAAS,CAAChD,KF3Ga,oCEiHlByJ,GAAgB,WAC3B,OAAO,SAAAzG,GACL2B,IAAMC,QAAQ,CACZI,MAAO,eACPD,QAAS,uCACTE,KAAM,WACJjC,EAAS,CAAChD,KFtHa,oCE4HlB0J,GAAY,WACvB,OAAO,SAAA1G,GACLA,EAAS,CAAChD,KFjIY,2BEkItBgD,EAAS,CAAChD,KAAMmJ,OAIPQ,GAAa,SAAArD,GACxB,OAAO,SAAAtD,GACD,IAACiF,EAAY3B,EAAZ2B,SAAoBE,EAAUF,EAAVE,OACJyB,GAAczB,IACjBxD,IAAMC,QAAQ,CAC9BI,MAAO,eACPD,QAAS,uCACTE,KAAM,WACJ1E,EAAMgG,KAAKD,EAAMQ,QAAQ+C,SAASC,MAAQ,eAAiB,eAA3DlE,OAAAC,EAAA,EAAAD,CAAA,GAA+EqC,IAC5E/E,KAAK,SAAAC,GAIJH,EAHe,CACbhD,KFlJa,4BEqJfsG,EAAMQ,QAAQC,SACd/D,EAAS+G,aAORA,GAAa,iBAAO,CAC/B/J,KFtJyB,4BEyJdgK,GAAa,iBAAO,CAC/BhK,KFhKyB,4BEoKdiK,GAAc,WACzB,OAAO,SAAAjH,GACLzC,EAAM0C,IAAI,SACPC,KAAK,SAAAC,GACJ,IAAI+G,EAAW/G,EAAIzB,KAAKA,KAKxBsB,EAJe,CACbhD,KFvKmB,2BEwKnBkK,iBAOGC,GAAgB,SAAAC,GAAU,MAAK,CAC1CpK,KF/K4B,6BEgL5BoK,eAGWC,GAAe,SAAAC,GAAM,MAAK,CACrCtK,KFnL4B,4BEoL5BsK,WAGWC,GAAoB,SAAClK,EAAKmE,GAAN,MAAiB,CAChDxE,KFtLiC,iCEuLjCK,MAAKmE,UAGMgG,GAAY,iBAAO,CAC9BxK,KF1LyB,2BE6LdyK,GAAoB,SAACC,EAAMhG,GAAP,MAAkB,CACjD1E,KF7LiC,iCE8LjC0K,OAAMhG,UAIKiG,GAAuB,iBAAO,CACzC3K,KFlMoC,sCEqMzB4K,GAAuB,iBAAO,CACzC5K,KFrMoC,sCEwMzBiJ,GAAe,WAC1B,OAAO,SAAAjG,GAGL,IAFA,IAAI6H,EAAQ,iEACRC,EAAS,GACJC,EAAI,EAAGA,EAAI,IAAKA,EAAGD,GAAUD,EAAMjI,KAAKC,MAAMD,KAAKoI,SAAWH,EAAMvH,SAC7EN,EAAS,CAAChD,KF1Me,4BE0MgB8K,aAIvClB,GAAgB,SAAAzB,GACpB,IAAI,IAAI8C,EAAI,EAAGA,EAAI9C,EAAO7E,OAAQ2H,IAAM,CACtC,IAAIP,EAAOvC,EAAO8C,GAClB,GAAGP,EAAK/C,YACN,IAAK,IAAIoD,EAAI,EAAGA,EAAIL,EAAK/C,WAAWrE,OAAQyH,IAC1C,GAA+B,SAA5BL,EAAK/C,WAAWoD,GAAG/K,OAChB0K,EAAK/C,WAAWoD,GAAGzJ,IAErB,OADAU,IAAQkJ,QAAQ,mFACT,OAKb,GAAiB,SAAdR,EAAK1K,OACF0K,EAAKpJ,IAEP,OADAU,IAAQkJ,QAAQ,mFACT,EAKf,OAAO,GChPHrM,GAAe,CAEnBsM,iBAAkB,GAClBvD,YAAa9G,KAAKC,MAAMD,KAAKkH,UAdX,CAClBhI,KAAM,EACNC,IAAK,EACLL,UAAW,EACXO,UAAW,EACXiI,MAAO,GACPP,SAAU,GACVuD,aAAa,EACbrG,QAAS,MAOTmF,SAAU,GACVzB,aAAc,EACd4C,cAAe,GCZJC,GAAsB,WACjC,OAAO,SAAAtI,GACLzC,EAAM0C,IAAI,UACPC,KAAK,SAAAC,GACJ,IAAIgI,EAAmBhI,EAAIzB,KAAKA,KAKhCsB,EAJe,CACbhD,KCb4B,oCDc5BmL,yBAOGI,GAAqB,SAACvK,EAAK0D,GACtC,OAAO,SAAC1B,GACN2B,IAAMC,QAAQ,CACZC,OAAQ,eACRC,WAAY,eACZC,QAAS,uCACTC,MAAO,eACPC,KAAM,WACJ1E,EAAM0C,IAAI,aAAc,CAACoB,OAAQ,CAACrD,SAC/BkC,KAAK,SAAAC,GAKNH,EAJe,CACbhD,KC/BwB,mCDgCxB0E,UAGF1C,IAAQsC,QAAQ,mCASb2F,GAAc,WACzB,OAAO,SAAAjH,GACLzC,EAAM0C,IAAI,SACPC,KAAK,SAAAC,GACJ,GAAIA,EAAIzB,KAAKA,KAAK4B,OAAS,EAAG,KACf4G,EAAY/G,EAAIzB,KAAtBA,KACPsB,EAAS,CAAEhD,KC9CQ,4BD8CuBkK,kBAMvCsB,GAAgB,SAAApD,GAAK,MAAK,CACrCpI,KCpD4B,8BDqD5BoI,UAGWmC,GAAoB,SAAClK,EAAKmE,GAAN,MAAiB,CAChDxE,KCvDiC,kCDwDjCK,MAAKmE,UAGMgG,GAAY,iBAAO,CAC9BxK,KC7DyB,4BDgEdyK,GAAoB,SAACC,EAAMhG,GAAP,MAAkB,CACjD1E,KC/DiC,kCDgEjC0K,OAAMhG,UAGKiG,GAAuB,iBAAO,CACzC3K,KCnEoC,uCDsEzB4K,GAAuB,iBAAO,CACzC5K,KCtEoC,uCDyEzBsH,GAAmB,SAACC,EAAYT,GAC3C,OAAO,SAAC9D,GACFuE,EAAWa,MAAM9E,OAIrBqB,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,EAAMgG,KAAK,gBAAiBgB,GAAYrE,KAAK,SAAAC,GAC3C2D,EAAQC,SAKR/D,EAJe,CACbhD,KClFsB,iCDmFtBuH,eAGFvF,IAAQsC,QAAQ,iCAbpBtC,IAAQyJ,MAAM,sDAoBPjE,GAAmB,SAACD,EAAYT,EAASpC,GACpD,OAAO,SAAC1B,GACFuE,EAAWa,MAAM9E,OAIrBqB,IAAMC,QAAQ,CACZI,MAAO,uCACPC,KAAM,WACJ1E,EAAMgG,KAAK,gBAAiBgB,GAAYrE,KAAK,SAAAC,GAC3C2D,EAAQC,SAKR/D,EAJe,CACbhD,KCxGsB,iCDyGtBuH,aAAY7C,UAGd1C,IAAQsC,QAAQ,iCAbpBtC,IAAQyJ,MAAM,sDAoBP1B,GAAa,iBAAO,CAC/B/J,KCjHyB,6BDoHd0L,GAAY,SAACpB,EAAQ5F,GAAT,MAAoB,CAC3C1E,KCpIwB,0BDqIxBsK,SAAQ5F,UEnIJiH,GAAUC,YAAgB,CAC9BC,QXsBa,WAAkC,IACGC,EAAQC,EAD5CC,EAAiCC,UAAA3I,OAAA,QAAA4I,IAAAD,UAAA,GAAAA,UAAA,GAAzBpN,EAAc4E,EAAWwI,UAAA3I,OAAA,EAAA2I,UAAA,QAAAC,EAC3CC,EAAWrL,KAAKC,MAAMD,KAAKkH,UAAUgE,IACzC,OAAQvI,EAAOzD,MACb,II/BgC,oCJiC9B,OADAmM,EAASrN,eAAiB2E,EAAO3E,eAC1BqN,EACT,IIjCgC,oCJoC9B,OAFAA,EAASpN,eAAiBoN,EAASnN,oBAAsByE,EAAO1E,eAChEoN,EAASlN,YAAcwE,EAAOxE,YACvBkN,EACT,IInB+B,oCJ2B7B,OAPAA,EAASjN,MAAQiN,EAAShN,OAAS,eACnCgN,EAAS1I,EAAOpD,KAAOoD,EAAOe,MACF,iBAAzB2H,EAAS1I,EAAOpD,KACjB8L,EAASlN,YAAT2G,OAAAwG,EAAA,EAAAxG,CAA2BuG,EAASpN,gBAEpCoN,EAASlN,YAAT2G,OAAAwG,EAAA,EAAAxG,CAA2BuG,EAASpN,eAAesN,OAAO,SAAA3B,GAAI,OAAIA,EAAKjH,EAAOpD,OAASoD,EAAOe,SAEzF2H,EACT,II7CuB,6BJkDrB,OAJAL,EAA6B,IAAnBrI,EAAOD,KAAO,GACxBuI,EAAqB,GAAdtI,EAAOD,KACd2I,EAASlN,YAAckN,EAASpN,eAAeuN,MAAMR,EAAQC,GAC7DI,EAAS/M,YAAcqE,EAAOD,KACvB2I,EACT,II/C+B,oCJiD7B,OADAA,EAAS9M,WAAaoE,EAAOpE,WACtB8M,EACT,IIrD0B,+BJyDxB,OAHAA,EAASpN,eAAiB0E,EAAO1E,eACjCoN,EAASlN,YAAcwE,EAAOxE,YAC9BkN,EAAS9M,WAAa,GACf8M,EACT,II/C8B,mCJkD5B,OAFAA,EAAS1M,cAAe,EACxB0M,EAASzM,YAAc,CAACC,GAAI8D,EAAO9D,GAAIT,MAAOuE,EAAOvE,MAAOU,UAAW6D,EAAO7D,UAAWC,QAAS4D,EAAO5D,SAClGsM,EACT,IIlD+B,oCJqD7B,OAFAA,EAAS1M,cAAe,EACxB0M,EAASzM,YAAc,CAACE,UAAW,GAC5BuM,EACT,IIrDwB,8BJuDtB,OADAA,EAASzM,YAAYR,MAAQuE,EAAOuC,KAC7BmG,EACT,IIvD4B,kCJyD1B,OADAA,EAASzM,YAAYE,UAAY6D,EAAO7D,UACjCuM,EACT,IIzD0B,+BJ2DxB,OADAA,EAASzM,YAAYG,QAAU4D,EAAO5D,QAC/BsM,EACT,II1E0B,gCJ4ExB,OADAA,EAASlN,YAAYsN,OAAO9I,EAAOiB,MAAO,GACnCyH,EACT,II1EsB,4BJ6EpB,OAFAA,EAAS7M,aAAc,EACvB6M,EAAS5M,YAAckE,EAAOlE,YACvB4M,EACT,II7EsB,4BJgFpB,OAFAA,EAAS7M,aAAc,EACvB6M,EAAS5M,YAAc,GAChB4M,EACT,IIhFuB,6BJoFrB,OAHAA,EAAS7M,aAAc,EACvB6M,EAAS5M,YAAckE,EAAOvE,MAC9BuE,EAAOuC,MAAQmG,EAASrN,eAAe0N,KAAK/I,EAAOuC,MAC5CmG,EACT,IIpF2B,gCJwFzB,OAHAA,EAAS7M,aAAc,EACvB6M,EAAS5M,YAAc,GACvB4M,EAASrN,eAAeyN,OAAO9I,EAAOiB,MAAO,GACtCyH,EACT,IItF2B,gCJwFzB,OADAA,EAAS3M,UAAW,EACb2M,EACT,IIjG2B,0BJmGzB,OADAA,EAASlN,YAAYwE,EAAOiB,OAAOvF,OAAS,EACrCgN,EACT,QACE,OAAOH,IWnGXS,KLsCa,WAAkC,IAAjCT,EAAiCC,UAAA3I,OAAA,QAAA4I,IAAAD,UAAA,GAAAA,UAAA,GAAzBpN,GAAc4E,EAAWwI,UAAA3I,OAAA,EAAA2I,UAAA,QAAAC,EAC3CC,EAAWrL,KAAKC,MAAMD,KAAKkH,UAAUgE,IACzC,OAAQvI,EAAOzD,MAEb,IDjDyB,2BCmDvB,OADAmM,EAASrE,SAAWrE,EAAOqE,SACpBqE,EACT,IDnDuB,0BCqDrB,OADAA,EAASrE,SAASyE,OAAO9I,EAAOiB,MAAO,GAChCyH,EAGT,ID1CyB,2BC4CvB,OADAA,EAASjC,SAATtE,OAAAwG,EAAA,EAAAxG,CAAwBnC,EAAOyG,UACxBiC,EACT,ID5C0B,6BC8CxB,OADAA,EAASlE,SAASG,MAAQ+D,EAAS/B,WAATxE,OAAAwG,EAAA,EAAAxG,CAA0BnC,EAAO2G,YACpD+B,EACT,IDzD0B,4BC6DxB,OAHAA,EAASpE,SAAWjH,KAAKC,MAAMD,KAAKkH,UAAUN,KAC9CyE,EAASlE,SAASE,OAAOqE,KAAzB5G,OAAAC,EAAA,EAAAD,CAAA,GAAkCuG,EAASpE,WAC3CoE,EAAS7D,UAAY6D,EAASlE,SAASE,OAAO7E,OAAS,EAChD6I,EACT,ID5DqB,wBC+EnB,OAlBAA,EAAS5D,cAAgB,EACzB4D,EAAS7D,UAAY7E,EAAOiB,MAC5ByH,EAASpE,SAATnC,OAAAC,EAAA,EAAAD,CAAA,GAAwBnC,EAAO/B,MAC5ByK,EAASpE,SAASJ,YAAcwE,EAASpE,SAASJ,WAAWrE,SAC9D6I,EAASxE,WAAT/B,OAAAC,EAAA,EAAAD,CAAA,GAA0BuG,EAASpE,SAASJ,WAAW,IACvDwE,EAAS5D,aAAe,GAE1B4D,EAASzD,WAAa,GACnByD,EAAS7D,WAAa,IACpB6D,EAASxE,WAAWtH,KAAO8L,EAAS5D,cAAgB,GACrD4D,EAASlE,SAASE,OAAOgE,EAAS7D,WAAWjI,IAAM8L,EAASpE,SAAS1H,IAAM,GAC3E8L,EAASzD,WAAayD,EAASxE,WAAWtH,IAC1C8L,EAASvE,YAAcuE,EAASlE,SAASI,SAAS8D,EAASzD,aACnDjF,EAAO/B,KAAKrB,MACpB8L,EAASzD,WAAayD,EAASpE,SAAS1H,IAAM8L,EAASlE,SAASE,OAAOgE,EAAS7D,WAAWjI,IAC3F8L,EAASvE,YAAcuE,EAASlE,SAASI,SAAS8D,EAASzD,cAGxDyD,EACT,ID3E2B,6BCiFzB,OALAA,EAASlE,SAASE,OAAOoE,OAAOJ,EAAS7D,UAAW,GACpD6D,EAAS7D,UAAY,EACrB6D,EAASpE,SAAWoE,EAASlE,SAASE,OAAO,IAAMrH,KAAKC,MAAMD,KAAKkH,UAAUN,YACtEyE,EAASlE,SAASI,SAAS8D,EAASzD,YAC3CyD,EAASpE,SAAS1H,MAAQ8L,EAASvE,YAAcuE,EAASlE,SAASI,SAAS8D,EAASpE,SAAS1H,MACvF8L,EACT,ID3F+B,iCCwG7B,MAZmB,SAAhB1I,EAAOuC,OACRmG,EAASpE,SAASzG,IAAM,GACxB6K,EAASvE,YAAc9G,KAAKC,MAAMD,KAAKkH,UAAUJ,KAC7B,UAAjBnE,EAAOe,MAER2H,EAASpE,SAAS1H,IAAM8L,EAASlE,SAASE,OAAOgE,EAAS7D,WAAWjI,IAAO8L,EAASzD,WAErFyD,EAASpE,SAAS1H,IAAM8L,EAASlE,SAASE,OAAOgE,EAAS7D,WAAWjI,IAAM8L,EAASzD,WAAa,IAGrGyD,EAASpE,SAAStE,EAAOuC,MAAQvC,EAAOe,MACxC2H,EAASlE,SAASE,OAAOoE,OAAOJ,EAAS7D,UAAW,EAApD1C,OAAAC,EAAA,EAAAD,CAAA,GAA2DuG,EAASpE,WAC7DoE,EACT,IDtG2B,6BC4GzB,OALAA,EAASxE,WAAa7G,KAAKC,MAAMD,KAAKkH,UAAUL,KAChDwE,EAASpE,SAASJ,WAAW6E,KAA7B5G,OAAAC,EAAA,EAAAD,CAAA,GAAsCuG,EAASxE,aAC/CwE,EAASvE,YAAc9G,KAAKC,MAAMD,KAAKkH,UAAUJ,KACjDuE,EAASlE,SAASE,OAAOoE,OAAOJ,EAAS7D,UAAW,EAApD1C,OAAAC,EAAA,EAAAD,CAAA,GAA2DuG,EAASpE,WACpEoE,EAAS5D,aAAe4D,EAASpE,SAASJ,WAAWrE,OAAS,EACvD6I,EACT,ID3GyB,2BCqHvB,OATAA,EAASzD,aAAeyD,EAASlE,SAASI,SAAS8D,EAASzD,YAAcyD,EAASvE,aACnFuE,EAAS5D,aAAe9E,EAAOiB,MAC/ByH,EAASxE,WAAT/B,OAAAC,EAAA,EAAAD,CAAA,GAA0BnC,EAAO/B,MACjCyK,EAASzD,WAAa,GACnBjF,EAAO/B,KAAKrB,KAAO8L,EAAS5D,cAAgB,IAC7C4D,EAASlE,SAASE,OAAOgE,EAAS7D,WAAWjI,IAAM8L,EAASpE,SAAS1H,IAAM,GAC3E8L,EAASzD,WAAayD,EAASxE,WAAWtH,IAC1C8L,EAASvE,YAAcuE,EAASlE,SAASI,SAAS8D,EAASzD,aAEtDyD,EACT,IDjH2B,6BCwHzB,OANAA,EAASpE,SAASJ,WAAW4E,OAAOJ,EAAS5D,aAAc,GAC3D4D,EAASlE,SAASE,OAAOgE,EAAS7D,WAAWX,WAAW4E,OAAOJ,EAAS5D,aAAc,GACtF4D,EAAS5D,aAAe,EACxB4D,EAASxE,WAAawE,EAASpE,SAASJ,WAAW,IAAK7G,KAAKC,MAAMD,KAAKkH,UAAUL,YAC3EwE,EAASlE,SAASI,SAAS8D,EAASzD,YAC3CyD,EAASxE,WAAWtH,MAAQ8L,EAASvE,YAAcuE,EAASlE,SAASI,SAAS8D,EAASxE,WAAWtH,MAC3F8L,EACT,IDlImC,oCCgJjC,MAbmB,SAAhB1I,EAAOuC,OACRmG,EAASxE,WAAWrG,IAAM,GAC1B6K,EAASvE,YAAc9G,KAAKC,MAAMD,KAAKkH,UAAUJ,KAC7B,UAAjBnE,EAAOe,OACR2H,EAASlE,SAASE,OAAOgE,EAAS7D,WAAWjI,IAAM8L,EAASpE,SAAS1H,IAAM,GAC3E8L,EAASxE,WAAWtH,IAAM8L,EAASzD,YAEnCyD,EAASxE,WAAWtH,IAAM8L,EAASzD,WAAa,IAGpDyD,EAASxE,WAAWlE,EAAOuC,MAAQvC,EAAOe,MAC1C2H,EAASpE,SAASJ,WAAW4E,OAAOJ,EAAS5D,aAAc,EAA3D3C,OAAAC,EAAA,EAAAD,CAAA,GAAkEuG,EAASxE,aAC3EwE,EAASlE,SAASE,OAAOoE,OAAOJ,EAAS7D,UAAW,EAApD1C,OAAAC,EAAA,EAAAD,CAAA,GAA2DuG,EAASpE,WAC7DoE,EACT,IDnI+B,iCC0I7B,MANkB,cAAf1I,EAAOpD,KACR8L,EAASvE,YAAc9G,KAAKC,MAAMD,KAAKkH,UAAUJ,KACjDuE,EAASvE,YAAYzH,UAAYsD,EAAOe,OAExC2H,EAASvE,YAAYnE,EAAOpD,KAAOoD,EAAOe,MAErC2H,EACT,ID1IuB,yBC0IvB,IAAAO,EAC8CP,EAASvE,YAA7C5C,EADV0H,EACU1H,MAAO2H,EADjBD,EACiBC,OAAQrL,EADzBoL,EACyBpL,IAAKsL,EAD9BF,EAC8BE,YAG5B,OAFAT,EAASvE,YAAYC,SAAS2E,KAA9B5G,OAAAC,EAAA,EAAAD,CAAA,GAAuC,CAAEZ,QAAO2H,SAAQrL,MAAKsL,iBAC7DT,EAASvE,YAAY5C,MAAQmH,EAASvE,YAAY+E,OAASR,EAASvE,YAAYtG,IAAM6K,EAASvE,YAAYgF,YAAc,GAClHT,EACT,ID9I+B,iCC8I/B,IACUzB,EAAgBjH,EAAhBiH,KAAMhG,EAAUjB,EAAViB,MAGd,OAFAkB,OAAOiH,OAAOV,EAASvE,YAAvBhC,OAAAC,EAAA,EAAAD,CAAA,GAAwC8E,IACxCyB,EAAS1D,YAAc/D,EAChByH,EACT,IDlJkC,oCCmJhC,IAAIW,EAAiB,CACnB9H,MAAOmH,EAASvE,YAAY5C,MAC5B2H,OAAQR,EAASvE,YAAY+E,OAC7BrL,IAAK6K,EAASvE,YAAYtG,IAC1BsL,YAAaT,EAASvE,YAAYgF,aAIpC,OAHAT,EAASvE,YAAYC,SAAS0E,OAAOJ,EAAS1D,YAAa,EAA3D7C,OAAAC,EAAA,EAAAD,CAAA,GAAkEkH,IAClEX,EAASvE,YAAY5C,MAAQmH,EAASvE,YAAY+E,OAASR,EAASvE,YAAYtG,IAAM6K,EAASvE,YAAYgF,YAAc,GACzHT,EAAS1D,aAAe,EACjB0D,EACT,ID3JkC,oCC+JhC,OAHAA,EAASvE,YAAYC,SAAS0E,OAAOJ,EAAS1D,YAAa,GAC3D0D,EAASvE,YAAY5C,MAAQmH,EAASvE,YAAY+E,OAASR,EAASvE,YAAYtG,IAAM6K,EAASvE,YAAYgF,YAAc,GACzHT,EAAS1D,aAAe,EACjB0D,EACT,ID/JoC,qCCkKlC,OAFAA,EAASvE,YAAY5C,MAAQmH,EAASvE,YAAY+E,OAASR,EAASvE,YAAYtG,IAAM6K,EAASvE,YAAYgF,YAAc,GACzHT,EAAS1D,aAAe,EACjB0D,EACT,KAAKhD,GAAL,IAAA4D,EACuCZ,EAASvE,YAC1C5F,EAAU,CAAC6F,SAFjBkF,EACOlF,SACoB9C,QAF3BgI,EACiBhI,QACmB5E,UAFpC4M,EAC0B5M,WAGxB,OADAgM,EAASzD,aAAeyD,EAASlE,SAASI,SAAS8D,EAASzD,YAApC9C,OAAAC,EAAA,EAAAD,CAAA,GAAsD5D,IACvEmK,EACT,IDtKyB,4BCwKvB,OADAA,EAASzD,WAAajF,EAAOqH,OACtBqB,EAET,IDzLsB,yBC2LpB,OADAA,EAAS3D,UAAW,EACb2D,EACT,ID7LuB,0BCgMvB,ID9LuB,0BCgMrB,OADAA,EAAS3D,UAAW,EACb2D,EACT,ID3M8B,gCC6M5B,OADAA,EAASlE,SAASxE,EAAOuC,MAAQvC,EAAOe,MACjC2H,EACT,ID7MoC,sCCkNlC,OAJAA,EAASlE,SAASC,WAAazE,EAAOe,MACtCoB,OAAOiH,OAAOV,EAASpE,SAAU,CAC/B9H,IAAK,IAEAkM,EAET,IDtM0B,4BCuNxB,OAhBAA,EAASlE,SAATrC,OAAAC,EAAA,EAAAD,CAAA,GAAwBnC,EAAO6G,OAA/B,CAAuCjC,SAAU,KACjD8D,EAASlE,SAAStI,GAAK8D,EAAO6G,OAAOtJ,IACrCmL,EAAS/B,WAATxE,OAAAwG,EAAA,EAAAxG,CAA0BuG,EAASlE,SAASG,OAC5C+D,EAASpE,SAATnC,OAAAC,EAAA,EAAAD,CAAA,GAAwBuG,EAASlE,SAASE,OAAO,IACjDgE,EAAS7D,UAAY,EAClB6D,EAASpE,SAASJ,YAAcwE,EAASpE,SAASJ,WAAWrE,QAC9D6I,EAASxE,WAAT/B,OAAAC,EAAA,EAAAD,CAAA,GAA0BuG,EAASpE,SAASJ,WAAW,IACvDwE,EAAS5D,aAAe,EACrB4D,EAASxE,WAAWtH,MACrB8L,EAASzD,WAAayD,EAASxE,WAAWtH,IAC1C8L,EAASvE,YAAcuE,EAASlE,SAASI,SAAS8D,EAASzD,eAG7DyD,EAASpE,SAAS1H,MAAQ8L,EAASzD,WAAayD,EAASpE,SAAS1H,KAClE8L,EAASzD,aAAeyD,EAASvE,YAAcuE,EAASlE,SAASI,SAAS8D,EAASzD,cAE9EyD,EAET,IDxNuB,0BC0NrB,OADAA,EAAWtN,GAEb,QACE,OAAOmN,IKtOXgB,MHca,WAAkC,IAAjChB,EAAiCC,UAAA3I,OAAA,QAAA4I,IAAAD,UAAA,GAAAA,UAAA,GAAzBpN,GAAc4E,EAAWwI,UAAA3I,OAAA,EAAA2I,UAAA,QAAAC,EAC3CC,EAAWrL,KAAKC,MAAMD,KAAKkH,UAAUgE,IACzC,OAAQvI,EAAOzD,MAEb,IE1BkC,oCF4BhC,OADAmM,EAAShB,iBAAmB1H,EAAO0H,iBAAiBkB,OAAO,SAAA3B,GAAI,OAAkB,IAAdA,EAAK1K,OACjEmM,EACT,IE5BgC,mCF8B9B,OADAA,EAAShB,iBAAiBoB,OAAO9I,EAAOiB,MAAO,GACxCyH,EACT,IE3ByB,4BF6BvB,OADAA,EAASjC,SAAWzG,EAAOyG,SACpBiC,EACT,IE7B0B,8BF+BxB,OADAA,EAASvE,YAAYQ,MAArBxC,OAAAwG,EAAA,EAAAxG,CAAiCnC,EAAO2E,OACjC+D,EACT,IE9B+B,kCFgC7B,OADAA,EAASvE,YAAYnE,EAAOpD,KAAOoD,EAAOe,MACnC2H,EACT,IElCuB,0BFkCvB,IAAAO,EAC8CP,EAASvE,YAA7C5C,EADV0H,EACU1H,MAAO2H,EADjBD,EACiBC,OAAQrL,EADzBoL,EACyBpL,IAAKsL,EAD9BF,EAC8BE,YAG5B,OAFAT,EAASvE,YAAYC,SAAS2E,KAA9B5G,OAAAC,EAAA,EAAAD,CAAA,GAAuC,CAAEZ,QAAO2H,SAAQrL,MAAKsL,iBAC7DT,EAASvE,YAAY5C,MAAQmH,EAASvE,YAAY+E,OAASR,EAASvE,YAAYtG,IAAM6K,EAASvE,YAAYgF,YAAc,GAClHT,EACT,IErC+B,kCFqC/B,IACUzB,EAAejH,EAAfiH,KAAMhG,EAASjB,EAATiB,MAGd,OAFAkB,OAAOiH,OAAOV,EAASvE,YAAvBhC,OAAAC,EAAA,EAAAD,CAAA,GAAwC8E,IACxCyB,EAAS1D,YAAc/D,EAChByH,EACT,IEzCkC,qCF0ChC,IAAInK,EAAU,CACZgD,MAAOmH,EAASvE,YAAY5C,MAC5B2H,OAAQR,EAASvE,YAAY+E,OAC7BrL,IAAK6K,EAASvE,YAAYtG,IAC1BsL,YAAaT,EAASvE,YAAYgF,aAKpC,OAHAT,EAASvE,YAAYC,SAAS0E,OAAOJ,EAAS1D,YAAa,EAA3D7C,OAAAC,EAAA,EAAAD,CAAA,GAAkE5D,IAClEmK,EAASvE,YAAY5C,MAAQmH,EAASvE,YAAY+E,OAASR,EAASvE,YAAYtG,IAAM6K,EAASvE,YAAYgF,YAAc,GACzHT,EAAS1D,aAAe,EACjB0D,EACT,IEnDkC,qCFuDhC,OAHAA,EAASvE,YAAYC,SAAS0E,OAAOJ,EAAS1D,YAAa,GAC3D0D,EAASvE,YAAY5C,MAAQmH,EAASvE,YAAY+E,OAASR,EAASvE,YAAYtG,IAAM6K,EAASvE,YAAYgF,YAAc,GACzHT,EAAS1D,aAAe,EACjB0D,EAET,IEjEsB,0BFwEpB,OANAA,EAASvE,YAAc9G,KAAKC,MAAMD,KAAKkH,UAAUvE,EAAO6G,SACxD6B,EAASd,aAAe5H,EAAOiB,MACO,IAAnCyH,EAASvE,YAAYzH,YACtByF,OAAOiH,OAAOV,EAASvE,YAAauE,EAASvE,YAAYC,SAAS,IAClEsE,EAAS1D,YAAc,GAElB0D,EAET,IE3DuB,2BF6DrB,OADAA,EAAWrL,KAAKC,MAAMD,KAAKkH,UAAUnJ,KAGvC,QACE,OAAOmN,MGvEEL,MCEFsB,GAAO,qBCXdpO,GAAe,CACnBqO,YAAa,GACbC,YAAY,EACZC,QAAS,GACTC,WAAW,EACXC,iBAAiB,EACjBC,KAAM,GACNC,KAAM,GACNC,SAAU,CACR9N,GAAI,GACJ+N,MAAO,KACPC,QAAS,IAEXC,eAAgB,CACdjO,GAAI,GACJ+N,MAAO,KACPG,UAAU,EACVC,OAAQ,MAEVC,WAAY,CACVC,SAAY,GACZtJ,MAAS,KACTmD,SAAY,CACVoG,mBAAsB,IAExBtO,GAAI,IAENuO,qBAAqB,EAErBC,YAAa,GACbC,iBAAiB,EACjBC,WAAY,CACVjL,KAAM,KACNkL,OAAQ,GACRC,YAAa,IAEfC,QAAS,ICfEC,GAAkB,WAC7B,OAAO,SAAMzL,GAAN,IAAAS,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAAL,EAAAC,EAAAK,MAlBA,IAAInC,QAAQ,SAACK,EAASJ,GAC3BvB,EAAM0C,IAAI,SACPC,KAAK,SAAAC,GACJ,GAAIA,EAAIzB,KAAKA,KAAK4B,OAAS,EAAG,CAC5B,IAAIrE,EAAckE,EAAIzB,KAAKA,KAK3BQ,EAJe,CACblC,KFZqB,gCEarBf,qBAIF6C,EAAO,gDAOR,OACD2B,EADCI,EAAA6K,KAEL1L,EAASS,GAFJ,wBAAAI,EAAAI,YAMI0K,GAAc,SAAAvL,GACzB,OAAO,SAAAJ,GACFI,EACD7C,EAAM0C,IAAI,YAAa,CAACoB,OAAQ,CAACjB,UAC9BF,KAAK,SAAAC,GACJnB,IAAQsC,QAAQnB,EAAIzB,KAAK4C,SACzBsK,WAAW,WACT5L,EAAS6L,GAAezL,KACvB,OAGPpB,IAAQkJ,QAAQ,sDAKT4D,GAA0B,SAAAf,GAAU,MAAK,CACpD/N,KF/BwC,wCEgCxC+N,eAGWgB,GAA2B,iBAAO,CAC7C/O,KFnCyC,2CEsC9BgP,GAAiB,SAACjB,EAAY3K,GACzC,OAAO,SAAAJ,GACLzC,EAAMoF,IAAI,6BAAVC,OAAAC,EAAA,EAAAD,CAAA,GAA4CmI,EAA5C,CAAwD3K,UACrDF,KAAK,SAAAC,GAAO,IAAA8L,EACW9L,EAAIzB,KAAlB0B,EADG6L,EACH7L,KAAM0C,EADHmJ,EACGnJ,IACF,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChB9C,EAAS+L,OAET/M,IAAQyJ,MAAM3F,KAGjBoJ,MAAM,SAAAzD,GACLhG,QAAQC,IAAI+F,OAKP0D,GAAyB,SAAAlB,GAAkB,MAAK,CAC3DjO,KFxDuC,uCEyDvCiO,uBAKWY,GAAiB,SAAAzL,GAC5B,OAAO,SAAAJ,GACLzC,EACG0C,IAAI,iBAAkB,CAAEoB,OAAQ,CAAEjB,KAAMgM,OAAOhM,MAC/CF,KAAK,SAAAC,GAAO,IACHzB,EAASyB,EAAIzB,KAAbA,KAKRsB,EAJe,CACbhD,KFlFwB,+BEmFxB0B,aAOG2N,GAAa,SAAAjM,GACxB,OAAO,SAAAJ,GACLzC,EAAM0C,IAAI,gBAAiB,CAACoB,OAAQ,CAACjB,UAClCF,KAAK,SAAAC,GAAO,IACHzB,EAASyB,EAAIzB,KAAbA,KAKRsB,EAJe,CACbhD,KF5FkB,2BE6FlB0B,aAOG4N,GAAc,SAAC9K,EAAOqJ,GAAR,MAAsB,CAC/C7N,KFtG2B,4BEuG3BwE,QAAOqJ,aAGI0B,GAAa,iBAAO,CAC/BvP,KFzGyB,6BE4Gd0J,GAAY,SAAAY,GAAM,MAAK,CAClCtK,KFjHwB,0BEkHxBsK,WAGWkF,GAAc,SAAA/B,GACzB,OAAO,SAAAzK,GACL2B,IAAMC,QAAQ,CACZI,MAAO,mDACPC,KAAM,WACJ1E,EAAM0C,IAAI,oBAAqB,CAACoB,OAAOuB,OAAAC,EAAA,EAAAD,CAAA,GAAK6H,KACzCvK,KAAK,SAAAC,GACJnB,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SACtBtB,EAASuM,aAORG,GAAkB,SAAApF,GAAM,MAAK,CACxCtK,KFpI+B,gCEqI/BsK,WAGWqF,GAAoB,SAAC/B,EAAgBxK,GAChD,OAAO,SAAAJ,GACL2B,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,EAAM0C,IAAI,wBAAyB,CAACoB,OAAOuB,OAAAC,EAAA,EAAAD,CAAA,GAAKgI,KAC7C1K,KAAK,SAAAC,GACJnB,IAAQyN,KAAK,4BACbzM,EAAS6L,GAAezL,IACxBJ,EAASuM,aAORK,GAAoB,SAAApL,GAAK,MAAK,CACzCxE,KFrJiC,kCEsJjCwE,UAGWqL,GAAa,SAACrC,EAAMsC,GAAP,MAAqB,CAC7C9P,KFzJyB,2BE0JzBwN,OAAMsC,aAGKC,GAAO,SAAApQ,GAClB,OAAO,SAAAqQ,GACLrL,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,EAAMgG,KAAK,iBAAkB,CAAC5G,OAC3BuD,KAAK,SAAAC,GACJ,GAAIA,EAAIzB,KAAK4C,QAAS,KACZ5C,EAASyB,EAAIzB,KAAbA,KACRM,IAAQsC,QAAQnB,EAAIzB,KAAK4C,SAKzB0L,EAJe,CACbhQ,KAAMmJ,GACNzH,cAIFM,IAAQyN,KAAKtM,EAAIzB,KAAKE,YAQvBqO,GAAiB,SAACtQ,EAAI+E,GACjC,OAAO,SAAA1B,GACL2B,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,EAAM0C,IAAI,gBAAiB,CAACoB,OAAQ,CAAC1E,QAClCuD,KAAK,SAAAC,GACAA,EAAIzB,KAAK4C,SACXtC,IAAQsC,QAAQnB,EAAIzB,KAAK4C,SAKzBtB,EAJe,CACbhD,KF7Le,+BE8Ld0E,WAIH1C,IAAQyN,KAAKtM,EAAIzB,KAAKE,YAQvBsO,GAAgB,SAAA9M,GAC3B,OAAO,SAAAJ,GACFI,EACDuB,IAAMC,QAAQ,CACZI,MAAO,mDACPC,KAAM,WACJ1E,EAAM0C,IAAI,kBAAmB,CAAEoB,OAAQ,CAAEjB,UACtCF,KAAK,SAAAC,GACJnB,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SAItBtB,EAHe,CACbhD,KFnNc,qCE0NxBgC,IAAQkJ,QAAQ,sDAOTiF,GAAiB,SAAA/M,GAC5B,OAAO,SAAAJ,GACLzC,EAAM0C,IAAI,WAAY,CAACoB,OAAQ,CAACjB,UAC7BF,KAAK,SAAAC,GAAO,IACHzB,EAASyB,EAAIzB,KAAbA,KAKRsB,EAJe,CACbhD,KFjOsB,+BEkOtB0B,aAOG0O,GAAiB,SAAChN,EAAMkL,GACnC,OAAO,SAAAtL,GACLzC,EAAM0C,IAAI,iBAAkB,CAAEoB,OAAQ,CAAEjB,OAAMkL,YAC3CpL,KAAK,SAAAC,GACJnB,IAAQyN,KAAKtM,EAAIzB,KAAKA,KAAK2O,gBAKtBC,GAAe,SAAClN,EAAMkL,GAAP,MAAmB,CAC7CtO,KFlP4B,6BEmP5BoD,OAAMkL,WAGKiC,GAAgB,iBAAO,CAClCvQ,KFtP6B,gCEyPlBwQ,GAAmB,SAAAhM,GAAK,MAAK,CACxCxE,KFzPgC,iCE0PhCwE,UAGWiM,GAAY,SAACpC,GACxB,OAAO,SAAArL,GACL2B,IAAMC,QAAQ,CACZI,MAAO,uCACPC,KAAM,WACJ1E,EAAM0C,IAAI,mBAAoB,CAC5BoB,OAAOuB,OAAAC,EAAA,EAAAD,CAAA,GAAKyI,KACXnL,KAAK,SAAAC,GACNnB,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SACtBtB,EAASuN,aAONG,GAAe,SAAAtN,GAC1B,OAAO,SAAAJ,GACL2B,IAAMC,QAAQ,CACZI,MAAO,6CACPC,KAAM,WACJ1E,EAAM0C,IAAI,iBAAkB,CAACoB,OAAQ,CAACjB,UACnCF,KAAK,SAAAC,GACJnB,IAAQsC,QAAQnB,EAAIzB,KAAK4C,SAIzBtB,EAHe,CACbhD,KFrRe,sCE8RhB2Q,GAAa,SAAAnC,GAAO,MAAK,CACpCxO,KF9RyB,2BE+RzBwO,YAGWoC,GAAa,SAACxN,EAAMmK,GAC/B,OAAO,SAAAvK,GACL2B,IAAMC,QAAQ,CACZI,MAAO,mCACPC,KAAM,WACJ1E,EAAM0C,IAAI,qBAAsB,CAACoB,OAAQ,CAACkJ,OAAMnK,UAC7CF,KAAK,SAAAC,GACJnB,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SACtBtB,EAASmN,aAORpG,GAAa,iBAAO,CAC/B/J,KF7SyB,6BG7BrB6Q,GAAc,CAClBjE,YAAa,GACb5H,MAAO,GACP1D,IAAK,GACLqL,OAAQ,IAGJ9N,GAAe,CACnBiS,eAAgB,GAChBC,gBAAiB,GACjBC,YAAa,EACbC,aAAc,2BACdC,iBAAkB,GAClBC,kBAAkB,EAClBjS,MAAO,GACPE,YAAa,EACbC,gBAAY6M,EACZkF,gBAAiB,CACf/I,SAAU,GACVrI,KAAM,EACNqR,IAAK,GACLC,SAAU,GACVC,QAAS,EACTtR,IAAK,MACLuR,YAAa,IAAIhQ,KACjBiQ,gBAAiB,IAAIjQ,KACrBkQ,MAAO,EACPhE,MAAO,GACPiE,QAAS,GACTvJ,MAAO,GACPwJ,QAAS,GACTC,YAAa,EACbC,OAAQ,EACR5S,MAAO,sBAET6F,QAAS8L,GACTxF,cAAe,EACf0G,aAAa,EACb7H,SAAU,GACV8H,SAAU,GACVC,cAAc,EACdC,OAAQ,GACRC,mBAAmB,EACnBC,WAAY,ICtBDC,GAAqB,WAChC,OAAO,SAAMrP,GAAN,IAAAS,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAAL,EAAAC,EAAAK,MAlBA,IAAInC,QAAQ,SAACK,EAASJ,GAC3BvB,EAAM0C,IAAI,WAAY,CAACoB,OAAQ,CAACiO,KAAM,SACnCpP,KAAK,SAAAC,GACJ,GAAIA,EAAIzB,KAAK6Q,SAASjP,OAAS,EAAG,CAChC,IAAIyN,EAAkB5N,EAAIzB,KAAK6Q,SAK/BrQ,EAJe,CACblC,KCZyB,kCDazB+Q,yBAIFjP,EAAO,gDAOR,OACD2B,EADCI,EAAA6K,KAEL1L,EAASS,GAFJ,wBAAAI,EAAAI,YAMIuO,GAAoB,SAAAlI,GAC/B,OAAO,SAAAtH,GACLsH,EAAOoH,OAASpH,EAAOwH,SAAWxH,EAAOoH,OAAS,IAClD/M,IAAMC,QAAQ,CACZI,MAAO,2EACPC,KAAM,WACJ1E,EAAMgG,KAAK,kBAAXX,OAAAC,EAAA,EAAAD,CAAA,GAAkC0E,IAC/BpH,KAAK,SAAAC,GACJ,GAAIA,EAAIzB,KAAK4C,QAAS,CACpB,IAAI5C,EAAOyB,EAAIzB,KAAKA,KACpBM,IAAQyN,KAAKnF,EAAOtJ,IAAM,2BAASmC,EAAIzB,KAAK4C,SAK5CtB,EAJe,CACbhD,KCzCmB,iCD0CnB0B,cAIFM,IAAQyN,KAAKtM,EAAIzB,KAAKE,YAQvB6Q,GAAgB,SAAC9S,EAAI+E,GAChC,OAAO,SAAA1B,GACL2B,IAAMC,QAAQ,CACZI,MAAO,2EACPC,KAAM,WACJ1E,EAAM0C,IAAI,kBAAmB,CAAEoB,OAAQ,CAAE1E,QACtCuD,KAAK,SAAAC,IACJH,EAASqP,MACoB,IAAzBlP,EAAIzB,KAAKA,KAAK4B,SAChBtB,IAAQyN,KAAK,0DAIbzM,EAHe,CACbhD,KChEmB,qCDoErBgC,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SAKtBtB,EAJe,CACbhD,KCrEc,6BDsEd0E,kBAUHgO,GAAkB,SAAC/S,EAAI+N,GAClC,OAAO,SAAA1K,GACL2B,IAAMC,QAAQ,CACZI,MAAO,mDACPC,KAAM,WACJ1E,EAAM0C,IAAI,gBAAiB,CAAEoB,OAAQ,CAAE1E,KAAI+N,QAAOiF,WAAW,KAC1DzP,KAAK,SAAAC,GACJnB,IAAQyN,KAAKtM,EAAIzB,KAAK4C,gBAOrBsO,GAAqB,SAACpO,EAAOwB,GAAR,MAAkB,CAClDhG,KC5FkC,kCD6FlCwE,QAAOwB,SAGI6M,GAAyB,SAAA3B,GAAgB,MAAK,CACzDlR,KChGsC,sCDiGtCkR,qBAGW4B,GAAuB,iBAAO,CACzC9S,KCpGqC,sCDuG1B+F,GAAc,SAAAvB,GAAK,MAAK,CACnCxE,KCvG0B,2BDwG1BwE,UAGWuO,GAAoB,iBAAO,CACtC/S,KC3GiC,mCD8GtBgT,GAAkB,SAAC9B,EAAkBhS,GAChD,OAAO,SAAA8D,GACLzC,EAAMoF,IAAI,uBAAwB,CAACuL,mBAAkBhS,UAClDgE,KAAK,SAAAC,GAAO,IAAA8L,EACW9L,EAAIzB,KAAlB0B,EADG6L,EACH7L,KAAM0C,EADHmJ,EACGnJ,IACF,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChB9C,EAASqP,MACTrP,EAAS,CAAChD,KCrHa,iCDsHvBgD,EAAS+P,OAET/Q,IAAQyJ,MAAM3F,OAMXmN,GAAmB,SAAAzO,GAAK,MAAK,CACxCxE,KC9HgC,gCD+HhCwE,QAAOxC,cAGIkR,GAAoB,SAAA1O,GAAK,MAAK,CACzCxE,KClIgC,iCDmIhCwE,UAGW2O,GAAiB,iBAAO,CACnCnT,KCtI6B,gCDyIlBoT,GAAiB,SAAAlC,GAC5B,OAAO,SAAAlO,GACL2B,IAAMC,QAAQ,CACZI,MAAO,iFACPC,KAAM,WACJ1E,EAAMqG,OAAO,qBAAsB,CAACvC,OAAQ,CAAC6M,sBAC1ChO,KAAK,SAAAC,GACJnB,IAAQsC,QAAQnB,EAAIzB,KAAKoE,KACzB9C,EAASqP,aAQRgB,GAAqB,SAAC7O,EAAOwB,GAAR,MAAkB,CAClDhG,KCpKkC,kCDqKlCwE,QAAOwB,SAGIsN,GAAqB,SAAC9O,EAAOwB,GAAR,MAAkB,CAClDhG,KCxKkC,kCDyKlCwE,QAAOwB,SAIIuN,GAAa,iBAAO,CAC/BvT,KCnKyB,4BDsKdwT,GAAgB,SAAC/D,EAAM/K,GAAP,MAAkB,CAC7C1E,KCtK4B,6BDuK5ByP,OAAM/K,UAGK+O,GAAe,iBAAO,CACjCzT,KCxK2B,8BD2KhB0T,GAAkB,iBAAO,CACpC1T,KC3K+B,iCD8KpBiK,GAAc,WACzB,OAAO,SAAAjH,GACLzC,EAAM0C,IAAI,SACPC,KAAK,SAAAC,GACJ,IAAI+G,EAAW/G,EAAIzB,KAAKA,KAKxBsB,EAJe,CACbhD,KCvLmB,2BDwLnBkK,iBAOGyJ,GAAc,WACzB,OAAO,SAAA3Q,GACLzC,EAAM0C,IAAI,iBACPC,KAAK,SAAAC,GAAO,IACA6O,EAAY7O,EAAIzB,KAAtBA,KAKLsB,EAJe,CACbhD,KC3LmB,2BD4LnBgS,iBAOG4B,GAAiB,SAAAC,GAAI,MAAK,CACrC7T,KCnM8B,8BDoM9B6T,SAGWC,GAAyB,SAAAtP,GAAK,MAAK,CAC9CxE,KCvMuC,sCDwMvCwE,UAGWuP,GAA0B,SAAA7U,GACrC,OAAO,SAAA8D,GACF9D,EACDqB,EAAMgG,KAAK,gBAAiB,CAACrH,UAC1BgE,KAAK,SAAAC,GAAO,IAAA6Q,EACe7Q,EAAIzB,KAAvB0B,EADI4Q,EACJ5Q,KAAM0C,EADFkO,EACElO,IAAKpE,EADPsS,EACOtS,KACL,IAAT0B,GACFpB,IAAQsC,QAAQwB,GAChB9C,EAAS,CAAChD,KClNoB,uCDkNwB0B,UAEtDM,IAAQyJ,MAAM3F,KAIpB9C,EAAS,CAAChD,KCxN0B,uCDwNkB0B,KAAM,OAKrDuS,GAAc,SAACjT,EAAK0D,GAC/B,OAAO,SAAA1B,GACL2B,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,EAAMqG,OAAO,gBAAiB,CAACvC,OAAQ,CAACrD,SACrCkC,KAAK,SAAAC,GAAO,IAAA+Q,EACS/Q,EAAIzB,KAAjB0B,EADI8Q,EACJ9Q,KAAM0C,EADFoO,EACEpO,IACD,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChB9C,EAAS,CAAChD,KCtOI,2BDsO0B0E,WAExC1C,IAAQyJ,MAAM3F,UAQfqO,GAAoB,iBAAO,CACtCnU,KChPiC,mCDmPtBwL,GAAgB,SAAApD,GAAK,MAAK,CACrCpI,KClQ4B,6BDmQ5BoI,UAGWgM,GAAgB,SAAC3E,EAAM3I,EAASoD,GAC3C,OAAO,SAAAlH,GACLyM,EAAKxQ,YAAciL,EAASmC,OAAO,SAAA3B,GAAI,OAAI+E,EAAKrH,MAAM7G,QAAQmJ,EAAKtH,OAAS,KAC3EqM,EAAK4B,KAAO5B,EAAKpH,SAAS/E,OAAS,IAAMmM,EAAK4B,IAAM5B,EAAKpH,SAAS,GAAGsE,QACrD,IAAjB8C,EAAK8B,QAAgB9B,EAAK4E,MAAO,EAAO5E,EAAK4E,MAAO,EACnC,IAAjB5E,EAAK8B,QAAgB9B,EAAK6E,WAAY,EAAO7E,EAAK6E,WAAY,EAC1C,IAAjB7E,EAAK8B,UACN9B,EAAKiC,MAAQ,MAEK,IAAjBjC,EAAK8B,SACN9B,EAAK8E,UAAW,EACb9E,EAAKgC,gBAAgB+C,GACtB/E,EAAKgC,gBAAkB,IAAIjQ,KAAKiO,EAAKgC,gBAAgB+C,IAAI/S,UAEzDgO,EAAKgC,gBAAkB,IAAIjQ,KAAKiO,EAAKgC,iBAAiBhQ,YAGxDgO,EAAK8E,UAAW,EAChB9E,EAAKgC,gBAAkB,GAErBhC,EAAKrH,MAAM9E,OAIfqB,IAAMC,QAAQ,CACZI,MAAO,uCACPC,KAAM,WACJ,IAAI3D,EAAM,kBACPwF,EAAQ+C,SAASC,QAClBxI,EAAM,kBACNmO,EAAK9P,GAAK8P,EAAKzO,KAEjBT,EAAMgG,KAAKjF,EAAXsE,OAAAC,EAAA,EAAAD,CAAA,GAAoB6J,IACjBvM,KAAK,SAAAC,GACAA,EAAIzB,KAAK4C,SACXtC,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SACtBwC,EAAQC,SACR/D,EAAS+G,OAET/H,IAAQyN,KAAKtM,EAAIzB,KAAKE,UAlB9BI,IAAQyJ,MAAM,sDA0BPgJ,GAAsB,SAAA3K,GACjC,OAAO,SAAA9G,GACD8G,EAAM4D,MACRnN,EAAM0C,IAAI,gBAAiB,CAAEoB,OAAQ,CAAEqJ,MAAO5D,EAAM4D,SACjDxK,KAAK,SAAAC,GACJ2G,EAAM6H,QAAUxO,EAAIzB,KAAKA,KAAKsE,KAK9BhD,EAJe,CACbhD,KCzT0B,mCD0T1B8J,YASN9G,EAJe,CACbhD,KChU8B,mCDiU9B8J,YAQK4K,GAAmB,iBAAO,CACrC1U,KCxUgC,kCD2UrB2U,GAAoB,iBAAO,CACtC3U,KC3UiC,mCD8UtB4U,GAAU,SAAAC,EAAoC3C,GAAW,IAA7C9J,EAA6CyM,EAA7CzM,MAAOpI,EAAsC6U,EAAtC7U,KAAMqI,EAAgCwM,EAAhCxM,SAAUiJ,EAAsBuD,EAAtBvD,SAC9C,OAAO,SAAAtO,GACLzC,EAAMgG,KAAK,mBAAoB,CAAC6B,QAAOpI,OAAMqI,WAAUiJ,WAAUY,WAC9DhP,KAAK,SAAAC,GAAO,IAAA2R,EACW3R,EAAIzB,KAAlB0B,EADG0R,EACH1R,KAAM0C,EADHgP,EACGhP,IACF,IAAT1C,EACDpB,IAAQsC,QAAQwB,GAEhB9D,IAAQkJ,QAAQpF,GAElB9C,EAAS2R,UAKJI,GAAe,SAAAvQ,GAAK,MAAK,CACpCxE,KC7V2B,4BD8V3BwE,UAGWjB,GAAa,SAAAC,GAAI,MAAK,CACjCxD,KCzVyB,0BD0VzBwD,SAGWuG,GAAa,iBAAO,CAC/B/J,KC3VyB,4BCpCrBnB,GAAe,CACnBmW,oBAAqB,GACrBC,SAAU,GAEVC,oBAAoB,EACpBtN,YAAa,CACX5B,KAAM,GACN5C,KAAM,KACN+R,WAAY,GACZC,aAAc,GACd9T,IAAK,GACLrB,IAAK,MACL8E,QAAS,GACTuP,WAAW,EACX9C,YAAa,IAAIhQ,MAEnB0I,SAAU,GACVmL,aAAc,GACdC,aAAc,CACZC,YAAa,IAEfvP,KAAM,GACNwP,sBAAsB,EACtBzQ,QAAS,CACPP,MAAO,GACPiR,MAAO,QAETxD,cAAc,EACdC,OAAQ,ICxBGwD,GAAkB,WAC7B,OAAO,SAAA1S,GACLzC,EAAM0C,IAAI,aACPC,KAAK,SAAAC,GAAO,IACJzB,EAAQyB,EAAIzB,KAAZA,KACPsB,EAAS,CAAEhD,KCTc,mCDSqB0B,aAKzCiU,GAAiB,SAAChW,EAAI+E,GACjC,OAAO,SAAA1B,GACL2B,IAAMC,QAAQ,CACZI,MAAO,2EACPC,KAAM,WACJ1E,EAAM0C,IAAI,gBAAiB,CAACoB,OAAQ,CAAC1E,QAClCuD,KAAK,SAAAC,GACDA,EAAIzB,KAAK4C,UACVtC,IAAQsC,QAAQnB,EAAIzB,KAAK4C,SACzBtB,EAAS,CAAEhD,KCtBM,kCDsB2B0E,kBAQ7CkR,GAAe,SAACjW,EAAI+E,GAC/B,OAAO,SAAA1B,GACL2B,IAAMC,QAAQ,CACZI,MAAO,2EACPC,KAAM,WACJ1E,EAAM0C,IAAI,iBAAkB,CAACoB,OAAQ,CAAC1E,QACnCuD,KAAK,SAAAC,GACJnB,IAAQsC,QAAQnB,EAAIzB,MACpBsB,EAAS,CACPhD,KCpCmB,gCDqCnBL,cAQDkW,GAAqB,SAAArR,GAAK,MAAK,CAC1CxE,KChD8B,sCDiD9BwE,UAGWsR,GAAiB,SAAAb,GAC5B,OAAO,SAAAjS,GACF,QAAQ+S,KAAKd,IAChB1U,EAAM0C,IAAI,mBAAoB,CAACoB,OAAQ,CAAC4Q,cACrC/R,KAAK,SAAAC,GACDA,EAAIzB,KAAKA,KAAK4B,OAAS,GACxBN,EAAS,CAAChD,KCzDY,kCDyDsB0B,KAAMyB,EAAIzB,KAAKA,OAC3DM,IAAQsC,QAAQnB,EAAIzB,KAAKoE,OAEzB9C,EAAS0S,MACT1T,IAAQyJ,MAAM,+DAQXxB,GAAc,WACzB,OAAO,SAAAjH,GACLzC,EAAM0C,IAAI,SACPC,KAAK,SAAAC,GACJ,IAAMM,EAAS,CACbzD,KCpEmB,+BDqEnBkK,SAAU/G,EAAIzB,KAAKA,MAErBsB,EAASS,OAKJuS,GAAkB,iBAAO,CACpChW,KC1E+B,qCD6EpBiW,GAAgB,SAAC5V,EAAK0E,GAAN,MAAmB,CAC9C/E,KCzE6B,iCD0E7BK,MAAK0E,YAGMmR,GAAqB,iBAAO,CACvClW,KC5EkC,wCD+EvBmW,GAAiB,SAAA3R,GAAK,MAAK,CACtCxE,KC9E6B,kCD+E7BwE,UAGW4R,GAAoB,iBAAO,CACtCpW,KC/EiC,uCDmFtBqW,GAAe,SAAChW,EAAKmE,GAAN,MAAiB,CAC3CxE,KCtF2B,gCDuF3BK,MAAKmE,UAGM+F,GAAoB,SAAClK,EAAKmE,GAAN,MAAiB,CAChDxE,KCtFiC,qCDuFjCK,MAAKmE,UAGM8R,GAAgB,SAAAlT,GAC3B,OAAO,SAAAJ,GACLA,EAASuH,GAAkB,OAAQnH,IACnC7C,EAAM0C,IAAI,iBAAkB,CAACoB,OAAQ,CAACjB,UACnCF,KAAK,SAAAC,GACJ,IAAMM,EAAS,CACbzD,KC9FoB,iCD+FpBqV,aAAclS,EAAIzB,KAAM4T,aAAa1P,OAAAC,EAAA,EAAAD,CAAA,GAAKzC,EAAIzB,KAAK,IAAK0B,QAE1DJ,EAASS,OAKJ8S,GAAmB,iBAAO,CACrCvW,KCvHgC,sCD2HrB0U,GAAmB,iBAAO,CACrC1U,KC1GgC,sCD6GrB2U,GAAoB,iBAAO,CACtC3U,KC7GiC,uCDgHtB4U,GAAU,SAAAC,EAAmC3C,GAAW,IAA5C9O,EAA4CyR,EAA5CzR,KAAM+R,EAAsCN,EAAtCM,WAAY7T,EAA0BuT,EAA1BvT,IAAKyD,EAAqB8P,EAArB9P,QAC9C,OAAO,SAAA/B,GACLzC,EAAMgG,KAAK,oBAAqB,CAACnD,OAAM+R,aAAY7T,MAAKyD,UAASmN,WAC9DhP,KAAK,SAAAC,GACJnB,IAAQsC,QAAQnB,EAAIzB,KAAKoE,KACzB9C,EAAS2R,UAKJI,GAAe,SAAAvQ,GAAK,MAAK,CACpCxE,KC1H2B,gCD2H3BwE,UAGW4P,GAAgB,SAAC3E,EAAM3I,EAASuO,GAC3C,OAAO,SAAArS,GACL,IAAI1B,EAAM,mBACVmO,EAAK2F,aAAeC,EAAahJ,OAAO,SAAA3B,GAAI,OAAIA,EAAK6K,cAAgB9F,EAAK0F,aAAY,GAAGnQ,MACzFyK,EAAKzO,MAAQM,EAAM,sBAAwBmO,EAAK9P,GAAK8P,EAAKzO,KAC1DyO,EAAK6E,YAAc7E,EAAK+B,YAAc,IAAIhQ,KAAKiO,EAAK+B,cACpD7M,IAAMC,QAAQ,CACZI,MAAO,gBAAQyK,EAAKzO,IAAM,qBAAQ,sBAAS,6CAC3CiE,KAAM,WACJ1E,EAAMgG,KAAKjF,EAAXsE,OAAAC,EAAA,EAAAD,CAAA,GAAoB6J,IACjBvM,KAAK,SAAAC,GACDA,EAAIzB,KAAK4C,SACVtC,IAAQsC,QAAQnB,EAAIzB,KAAK4C,SACzBwC,EAAQC,UAER/E,IAAQyJ,MAAMtI,EAAIzB,KAAKE,YASxB4U,GAAkB,SAAAlM,GAC7B,OAAO,SAAAtH,GACLA,EAASuT,MACThW,EAAM0C,IAAI,iBAAkB,CAACoB,OAAQ,CAACjB,KAAMkH,EAAOlH,QAChDF,KAAK,SAAAC,GACJ,IAAMM,EAAS,CACbzD,KCzJuB,mCD0JvBqV,aAAclS,EAAIzB,KAClB4I,UAEFtH,EAASS,OASJsG,GAAa,iBAAO,CAC/B/J,KCnKyB,gCCtCrB2L,GAAUC,YAAgB,CAC9B1M,MRmCa,WAAkC,IAAjC8M,EAAiCC,UAAA3I,OAAA,QAAA4I,IAAAD,UAAA,GAAAA,UAAA,GAAzBpN,GAAc4E,EAAWwI,UAAA3I,OAAA,EAAA2I,UAAA,QAAAC,EAC3CC,EAAWrL,KAAKC,MAAMD,KAAKkH,UAAUgE,IACzC,OAAQvI,EAAOzD,MAIb,ID1C8B,+BC4C5B,OADAmM,EAASe,YAATtH,OAAAwG,EAAA,EAAAxG,CAA2BnC,EAAO/B,MAC3ByK,EACT,IDzCwB,2BC2CtB,OADAA,EAASiB,QAATxH,OAAAwG,EAAA,EAAAxG,CAAuBnC,EAAO/B,MACvByK,EACT,ID7CyB,4BCgDvB,OAFC1I,EAAOoK,WAAa1B,EAASsB,SAASC,MAAQjK,EAAOe,OACtDf,EAAOoK,WAAa1B,EAASyB,eAAeF,MAAQjK,EAAOe,OACpD2H,EACT,ID/CuB,2BCmDrB,OAHAA,EAASsB,SAAWtB,EAASyB,eAAiB,GAC9CzB,EAASyB,eAAeE,OAAStM,KAAKiV,MACtCtK,EAASyB,eAAeC,SAAW1B,EAASmB,gBAAkBnB,EAASkB,WAAY,EAC5ElB,EACT,IDxDsB,0BC6DpB,OAJAA,EAASsB,SAAS9N,GAAK8D,EAAO6G,OAAOtJ,IACrCmL,EAASsB,SAASC,MAAQjK,EAAO6G,OAAOoD,MACxCvB,EAASsB,SAASE,QAAUlK,EAAO6G,OAAO0D,SAC1C7B,EAASkB,WAAY,EACdlB,EACT,ID7D6B,gCCmE3B,OALAA,EAASyB,eAAejO,GAAK8D,EAAO6G,OAAOtJ,IAC3CmL,EAASyB,eAAeF,MAAQjK,EAAO6G,OAAOoD,MAC9CvB,EAASyB,eAAeC,SAAWpK,EAAO6G,OAAOuD,SACjD1B,EAASyB,eAAeE,OAASrK,EAAO6G,OAAOwD,OAC/C3B,EAASmB,iBAAkB,EACpBnB,EACT,IDhE+B,kCCkE7B,OADAA,EAASyB,eAAeC,SAAWpK,EAAOe,MACnC2H,EACT,IDlEuB,2BCmEG,SAApB1I,EAAOqM,SACT3D,EAASoB,KAAO9J,EAAO+J,KAEvBrB,EAASqB,KAAO/J,EAAO+J,KAEzB,IAAIkJ,EAAW,IAAIlV,KAAK2K,EAASoB,KAAO,IAAMpB,EAASqB,MAEvD,OADArB,EAASyB,eAAeE,OAAS4I,EAASjV,UACnC0K,EACT,KAAKhD,GAEH,OADAgD,EAASe,YAAYyJ,QAArB/Q,OAAAC,EAAA,EAAAD,CAAA,GAAiCnC,EAAO/B,OACjCyK,EACT,ID5E2B,+BC8EzB,OADAA,EAASe,YAAYX,OAAO9I,EAAOiB,MAAO,GACnCyH,EACT,ID9E0B,8BCgFxB,OADAA,EAASe,YAAc,GAChBf,EACT,IDhFsC,wCCmFpC,OAFAA,EAAS+B,qBAAsB,EAC/B/B,EAAS4B,WAAatK,EAAOsK,WACtB5B,EACT,IDnFuC,yCCsFrC,OAFAA,EAAS+B,qBAAsB,EAC/B/B,EAAS4B,WAAWlG,SAASoG,mBAAqB,GAC3C9B,EACT,IDtFqC,uCCwFnC,OADAA,EAAS4B,WAAWlG,SAASoG,mBAAqBxK,EAAOwK,mBAClD9B,EAGT,IDxF4B,+BC0F1B,OADAA,EAASgC,YAATvI,OAAAwG,EAAA,EAAAxG,CAA2BnC,EAAO/B,MAC3ByK,EACT,ID1F0B,6BC8FxB,OAHAA,EAASiC,iBAAkB,EAC3BjC,EAASkC,WAAWjL,KAAOK,EAAOL,KAClC+I,EAASkC,WAAWC,OAAS7K,EAAO6K,OAC7BnC,EACT,ID9F2B,8BCiGzB,OAFAA,EAASiC,iBAAkB,EAC3BjC,EAASkC,WAAWE,YAAc,GAC3BpC,EACT,IDjG8B,iCCmG5B,OADAA,EAASkC,WAAWE,YAAc9K,EAAOe,MAClC2H,EACT,IDnGyB,6BCqGvB,OADAA,EAASgC,YAAc,GAChBhC,EACT,IDrGuB,2BCuGrB,OADAA,EAASqC,QAAU/K,EAAO+K,QACnBrC,EAET,IDpGuB,2BCsGrB,OADAA,EAAWtN,GAEb,QACE,OAAOmN,IQhIX4K,KNyCa,WAAkC,IAAjC5K,EAAiCC,UAAA3I,OAAA,QAAA4I,IAAAD,UAAA,GAAAA,UAAA,GAAzBpN,GAAc4E,EAAWwI,UAAA3I,OAAA,EAAA2I,UAAA,QAAAC,EAC3CC,EAAWrL,KAAKC,MAAMD,KAAKkH,UAAUgE,IACzC,OAAQvI,EAAOzD,MACb,IEnDiC,kCFkE/B,OAdAmM,EAAS2E,eAATlL,OAAAwG,EAAA,EAAAxG,CAA8BnC,EAAOsN,iBACR,6BAA1B5E,EAAS8E,aACV9E,EAAS4E,gBAAkB5E,EAAS2E,eAAezE,OAAO,SAAA3B,GAAI,OAAIA,EAAKxL,QAAUiN,EAAS8E,eACjF9E,EAAS9M,WAClB8M,EAAS4E,gBAAkB5E,EAAS2E,eAAezE,OAAO,SAAA3B,GACxD,IAAImM,EAAe,GAInB,OAHAnM,EAAKzL,YAAY6X,IAAI,SAAA/L,GACnBA,EAAE3G,YAAc+H,EAAS9M,YAAcwX,EAAarK,KAAKzB,KAEpD8L,EAAavT,OAAS,IAG/B6I,EAAS4E,gBAAkB5E,EAAS2E,eAE/B3E,EACT,IElE+B,iCFoE7B,OADAA,EAAS4E,gBAAgB4F,QAAzB/Q,OAAAC,EAAA,EAAAD,CAAA,GAAqCnC,EAAO/B,OACrCyK,EACT,IEpE+B,iCFsE7B,OADAA,EAAS4E,gBAAkB,GACpB5E,EACT,IEtE0B,6BFwExB,OADAA,EAAS4E,gBAAgBxE,OAAO9I,EAAOiB,MAAO,GACvCyH,EACT,IEtEgC,kCFyE9B,GAFAA,EAAS6E,YAAc,EACvB7E,EAAS8E,aAAe,2BACL,gBAAhBxN,EAAOuC,KAAwB,KACjBhG,EAASyD,EAAhBe,MACR2H,EAAS6E,YAAchR,EACd,IAATA,IAAemM,EAAS4E,gBAAkB5E,EAAS2E,eAAezE,OAAO,SAAA3B,GAAI,QAAMA,EAAKgH,OAAShH,EAAK4J,WAAa5J,EAAK6J,aAC/G,IAATvU,IAAemM,EAAS4E,gBAAkB5E,EAAS2E,eAAezE,OAAO,SAAA3B,GAAI,QAAMA,EAAKgH,SAC/E,IAAT1R,IAAemM,EAAS4E,gBAAkB5E,EAAS2E,eAAezE,OAAO,SAAA3B,GAAI,QAAMA,EAAK4J,aAC/E,IAATtU,IAAemM,EAAS4E,gBAAkB5E,EAAS2E,eAAezE,OAAO,SAAA3B,GAAI,QAAMA,EAAK6J,YAC/E,IAATvU,IAAemM,EAAS4E,gBAAkB5E,EAAS2E,eAAezE,OAAO,SAAA3B,GAAI,QAAMA,SAC9E,KACUxL,EAAUuE,EAAjBe,MACR2H,EAAS8E,aAAe/R,EAEtBiN,EAAS4E,gBADG,6BAAV7R,EACyBiN,EAAS2E,eAAezE,OAAO,SAAA3B,GAAI,MAAmB,6BAAfA,EAAKxL,QAE5CiN,EAAS2E,eAAezE,OAAO,SAAA3B,GAAI,OAAIA,EAAKxL,QAAUA,IAYrF,OATGiN,EAAS9M,aACV8M,EAAS4E,gBAAkB5E,EAAS4E,gBAAgB1E,OAAO,SAAA3B,GACzD,IAAIqM,EAAe,GAInB,OAHArM,EAAKzL,YAAY6X,IAAI,SAAA/L,GACnBA,EAAE3G,YAAc+H,EAAS9M,YAAc0X,EAAavK,KAAKzB,KAEpDgM,EAAazT,OAAS,KAG1B6I,EACT,IEnGoC,sCFqGlC,OADAA,EAAS+E,iBAAmBzN,EAAOyN,iBAC5B/E,EACT,IErGmC,oCFuGjC,OADAA,EAASgF,kBAAmB,EACrBhF,EACT,IEvGwB,2BFyGtB,OADAA,EAASjN,MAAQuE,EAAOe,MACjB2H,EACT,IEzG+B,iCF4G7B,OAFAA,EAASgF,kBAAmB,EAC5BhF,EAASjN,MAAQ,GACViN,EACT,IE5G6B,+BF8G3B,OADAA,EAAS+E,iBAAmB,GACrB/E,EACT,IE9G8B,gCF8G9B,IACQ2E,EAAmB3E,EAAnB2E,eAiBN,OAhBA3E,EAAS9M,WAAaoE,EAAOe,MAC7B2H,EAAS6E,YAAc,EACvB7E,EAAS8E,aAAe,2BACxB9E,EAAS4E,gBAAkBD,EAAezE,OAAO,SAAA3B,GAC/C,IAAIzL,EAAc,GAIlB,OAHAyL,EAAKzL,YAAY6X,IAAI,SAAA/L,GACnBA,EAAE3G,YAAcX,EAAOe,OAASvF,EAAYuN,KAAKzB,KAE5C9L,EAAYqE,OAAS,IAE3B6I,EAAS4E,gBAAgBzN,OAAS,EACnCG,EAAOzB,QAAQsC,QAAQ,6BAEvB6H,EAAS4E,gBAAkBD,EAC3BrN,EAAOe,OAASf,EAAOzB,QAAQkJ,QAAQ,2DAElCiB,EACT,IEhI8B,iCFmI5B,OAFAA,EAAS9M,WAAaoE,EAAOe,OAC5B2H,EAAS9M,aAAe8M,EAAS4E,gBAAkB5E,EAAS2E,gBACtD3E,EACT,IEnI2B,8BFwIzB,OAJAA,EAASjN,MAAQiN,EAAS9M,WAAa,GACvC8M,EAAS8E,aAAe,2BACxB9E,EAAS/M,YAAc,EACvB+M,EAAS4E,gBAAkB5E,EAAS2E,eAC7B3E,EAGT,IErJgC,kCFwJ9B,OAFAA,EAASpH,QAAQtB,EAAOuC,MAAQvC,EAAOe,MACvC2H,EAASiF,gBAAgB/I,SAASkE,OAAOJ,EAASd,aAAc,EAAGc,EAASpH,SACrEoH,EACT,IExJgC,kCFuK9B,OAdAA,EAASiF,gBAAgB3N,EAAOuC,MAAQvC,EAAOe,MAC5B,SAAhBf,EAAOuC,OACRmG,EAASpH,QAAU8L,GACnB1E,EAASiF,gBAAgB/I,SAAW,GACpC8D,EAASiF,gBAAgBC,IAAMlF,EAASiF,gBAAgBE,SAAY,GACpEnF,EAASd,cAAgB,EACL,IAAjB5H,EAAOe,QACR2H,EAASiF,gBAAgB/I,SAASmE,KAAKL,EAASpH,SAChDoH,EAASd,aAAe,IAGT,YAAhB5H,EAAOuC,MACRJ,OAAOiH,OAAOV,EAASiF,gBAAiB,CAACI,YAAa,IAAIhQ,KAAQkQ,MAAO,EAAGD,gBAAiB,IAAIjQ,OAE5F2K,EACT,IE7JuB,0BFiKrB,OAHAA,EAASpH,QAAU8L,GACnB1E,EAASiF,gBAAgB/I,SAASmE,KAAKL,EAASpH,SAChDoH,EAASd,aAAec,EAASiF,gBAAgB/I,SAAS/E,OAAS,EAC5D6I,EACT,IEjK0B,6BFoKxB,OAFAA,EAASpH,QAATa,OAAAC,EAAA,EAAAD,CAAA,GAAuBnC,EAAOgM,MAC9BtD,EAASd,aAAe5H,EAAOiB,MACxByH,EACT,IElKyB,4BFoKvB,OADAA,EAAS4F,aAAc,EAChB5F,EACT,IEpK6B,+BFsK3B,OADAA,EAAS4F,aAAc,EAChB5F,EACT,IE1KyB,2BF4KvB,OADAA,EAASjC,SAATtE,OAAAwG,EAAA,EAAAxG,CAAwBnC,EAAOyG,UACxBiC,EACT,IE5K0B,6BF8KxB,OADAA,EAASiF,gBAAgBhJ,MAAzBxC,OAAAwG,EAAA,EAAAxG,CAAqCnC,EAAO2E,OACrC+D,EACT,IE5KkC,mCF2LhC,OAdAA,EAASiF,gBAATxL,OAAAC,EAAA,EAAAD,CAAA,GAA+BnC,EAAOqG,OACtCqC,EAASiF,gBAAgB/I,SAAS/E,OAAS,IAAM6I,EAASpH,QAATa,OAAAC,EAAA,EAAAD,CAAA,GAAuBuG,EAASiF,gBAAgB/I,SAAS,KACrE,IAAlC8D,EAASiF,gBAAgBpR,OAAYmM,EAASd,aAAe,GAC7D5H,EAAOqG,MAAMuK,KACdlI,EAASiF,gBAAgBG,QAAU,EAC3B9N,EAAOqG,MAAMwK,UACrBnI,EAASiF,gBAAgBG,QAAU,EAC3B9N,EAAOqG,MAAMyK,SACrBpI,EAASiF,gBAAgBG,QAAU,EAEnCpF,EAASiF,gBAAgBG,QAAU,EAErCpF,EAASiF,gBAAgBU,SAAW3F,EAASiF,gBAAgBM,MAAQvF,EAASiF,gBAAgBM,MAAM,KACnGvF,EAASiF,gBAAgBU,SAAW3F,EAASiF,gBAAgBU,OAAS,GAChE3F,EACT,IE1L8B,gCF4L5B,OADAA,EAAS8F,cAAe,EACjB9F,EACT,IE5L+B,iCF+L7B,OAFAA,EAAS8F,cAAe,EACxB9F,EAAS+F,OAAS,GACX/F,EACT,IE/LyB,4BFiMvB,OADAA,EAAS+F,OAASzO,EAAOe,MAClB2H,EAET,IEjMyB,2BFmMvB,OADAA,EAAS6F,SAATpM,OAAAwG,EAAA,EAAAxG,CAAwBnC,EAAOuO,UACxB7F,EACT,IEnM4B,8BFwM1B,OAJAA,EAASgG,mBAAoB,EAC7BvD,WAAW,WACTnL,EAAOoQ,KAAKmD,MAAMC,SACjB,KACI9K,EACT,IExMqC,sCF0MnC,OADAA,EAASiG,WAAa3O,EAAOe,MACtB2H,EACT,IE1MsC,uCF8MpC,OAHAvG,OAAOsR,KAAKzT,EAAO/B,MAAM4B,OAAS,GAAK6I,EAAS6F,SAASxF,KAAK/I,EAAO/B,MACrEyK,EAASgG,mBAAoB,EAC7BhG,EAASiG,WAAa,GACfjG,EACT,IE9MwB,2BFgNtB,OADAA,EAAS6F,SAASzF,OAAO9I,EAAOiB,MAAO,GAChCyH,EACT,IEhN+B,iCFkN7B,OADAA,EAASiF,gBAAgBlS,MAAQ,qBAC1BiN,EAET,IElNuB,0BFoNrB,OADAA,EAAS/M,YAAcqE,EAAOD,KACvB2I,EAET,IEnNuB,0BFmNvB,IAAAgL,EACgDhL,EAAzC/M,EADP+X,EACO/X,YAAa6R,EADpBkG,EACoBlG,aAAc5R,EADlC8X,EACkC9X,WAKhC,OAJA8M,EAAWtN,IACFO,YAAcA,EACvB+M,EAAS8E,aAAeA,EACxB9E,EAAS9M,WAAaA,EACf8M,EACT,QACE,OAAOH,IMzPXoL,SHyBa,WAAkC,IAAjCpL,EAAiCC,UAAA3I,OAAA,QAAA4I,IAAAD,UAAA,GAAAA,UAAA,GAAzBpN,GAAc4E,EAAWwI,UAAA3I,OAAA,EAAA2I,UAAA,QAAAC,EAC3CC,EAAWrL,KAAKC,MAAMD,KAAKkH,UAAUgE,IACzC,OAAQvI,EAAOzD,MAEb,IEnC6B,mCFsC3B,OAFAmM,EAAS6I,oBAAsBvR,EAAO/B,KACtCyK,EAAS8I,SAAW,GACb9I,EACT,IEtC2B,kCFwCzB,OADAA,EAAS6I,oBAAoBzI,OAAO9I,EAAOiB,MAAO,GAC3CyH,EACT,IExC4B,sCF0C1B,OADAA,EAAS8I,SAAWxR,EAAOe,MACpB2H,EACT,IE1C4B,kCF6C1B,OAFAA,EAAS6I,oBAAsBvR,EAAO/B,KACtCyK,EAAS8I,SAAW,GACb9I,EACT,IE7C6B,gCF8C3B,IAAI6I,EAAsB7I,EAAS6I,oBAAoB8B,IAAI,SAAApM,GAEzD,OADAA,EAAK1J,MAAQyC,EAAO9D,KAAO+K,EAAKvL,OAAS,GAClCuL,IAGT,OADAyB,EAAS6I,oBAAsBA,EACxB7I,EAET,IEhDyB,+BFkDvB,OADAA,EAASjC,SAAWzG,EAAOyG,SACpBiC,EAET,IEjD6B,mCFmD3B,OADAA,EAAS+I,oBAAqB,EACvB/I,EACT,IE/C2B,iCFmDzB,OAHAA,EAASnG,KAAOvC,EAAOpD,IACvB8L,EAASpH,QAAUtB,EAAOsB,QAC1BoH,EAASqJ,sBAAuB,EACzBrJ,EACT,IElDgC,sCFsD9B,OAHAA,EAASnG,KAAO,GAChBmG,EAASqJ,sBAAuB,EAChCrJ,EAASpH,QAAU,CAAEP,MAAO,GAAIiR,MAAO,QAChCtJ,EACT,IErD2B,kCFyDzB,IAAI,IAAI9L,KAHR8L,EAASmJ,aAAenJ,EAASkJ,aAAahJ,OAAO,SAAA3B,GAAI,OAAIA,EAAK6K,cAAgB9R,EAAOe,QAAO,GAChG2H,EAASvE,YAAYuN,WAAahJ,EAASmJ,aAAaC,YACxDpJ,EAASvE,YAAY7C,QAAU,GAChBoH,EAASmJ,aAAa5T,KACnCyK,EAASvE,YAAY7C,QAAQ1E,GAAO,CAClCmE,MAAO,GACPiR,MAAO,QAGX,OAAOtJ,EACT,IE9DyB,gCFgEvB,OADAA,EAASpH,QAAQtB,EAAOpD,KAAOoD,EAAOe,MAC/B2H,EACT,IE/D+B,qCFoE7B,OAJAA,EAASvE,YAAY7C,QAAQoH,EAASnG,MAAQmG,EAASpH,QACvDoH,EAASnG,KAAO,GAChBmG,EAASqJ,sBAAuB,EAChCrJ,EAASpH,QAAU,CAAEP,MAAO,GAAIiR,MAAO,QAChCtJ,EAET,IEnE+B,qCFwE7B,OAJAA,EAASvE,YAAYnE,EAAOpD,KAAOoD,EAAOe,MACxB,cAAff,EAAOpD,MACR8L,EAASvE,YAAY4J,YAAc,IAAIhQ,MAElC2K,EACT,IEvE0B,iCF2ExB,IAAI,IAAI9L,KAHR8L,EAASkJ,aAAe5R,EAAO4R,aAC/BlJ,EAASmJ,aAAe7R,EAAO6R,aAC/BnJ,EAASvE,YAAYuN,WAAahJ,EAASmJ,aAAaC,YACzCpJ,EAASmJ,aAAa5T,KACnCyK,EAASvE,YAAY7C,QAAQ1E,GAAO,CAClCmE,MAAO,GACPiR,MAAO,QAGX,OAAOtJ,EACT,IElG8B,oCFoG5B,OADAA,EAAS+I,oBAAqB,EACvB/I,EACT,IEnF8B,oCFqF5B,OADAA,EAAS8F,cAAe,EACjB9F,EACT,IErF+B,qCFwF7B,OAFAA,EAAS8F,cAAe,EACxB9F,EAAS+F,OAAS,GACX/F,EACT,IExFyB,gCF0FvB,OADAA,EAAS+F,OAASzO,EAAOe,MAClB2H,EAET,IEzF6B,mCF6F3B,OAHAA,EAASvE,YAAc9G,KAAKC,MAAMD,KAAKkH,UAAUvE,EAAO6G,SACxD6B,EAASkJ,aAAe5R,EAAO4R,aAC/BlJ,EAASmJ,aAAenJ,EAASkJ,aAAahJ,OAAO,SAAA3B,GAAI,OAAIA,EAAK6K,cAAgB9R,EAAO6G,OAAO6K,aAAY,GACrGhJ,EAET,IE3FuB,8BF6FrB,OADAA,EAAWtN,GAEb,QACE,OAAOmN,MG/HEL,MCFAA,GALCC,YAAgB,CAC9ByL,QAASC,GACTtV,QAASuV,KCALC,GAAmBpS,OAAOqS,sCAAwCC,IAMzDC,GAJDC,YAAYjM,GAAS6L,GACjCK,YAAgBC,2CCqFHC,eAvFb,SAAAA,EAAYzR,GAAO,IAAA0R,EAAA,OAAApS,OAAAqS,EAAA,EAAArS,CAAAsS,KAAAH,IACjBC,EAAApS,OAAAuS,EAAA,EAAAvS,CAAAsS,KAAAtS,OAAAwS,EAAA,EAAAxS,CAAAmS,GAAAM,KAAAH,KAAM5R,KACDgS,MAAQN,EAAKM,MAAMC,KAAX3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IACbA,EAAKhM,MAAQ,CACXyM,UAAW,CACTC,SAAU,GACVC,SAAU,KANGX,wEAWV,IAAAY,EAAAV,KACCO,EAAcP,KAAKlM,MAAnByM,UACFI,EAAU,CACdC,UAAW,QACXC,eAAgB,OAChBC,iBAAkB,YAClBC,qBAAsB,QACtBC,gBAAe,OAAAjX,OAASkX,EAAQ,KAAjB,MAEjB,OACEC,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,WAAWC,MAAOV,GAC/BO,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,YACfF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,mBACbF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,WACbF,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,SAAb,0DACAF,EAAAzV,EAAA0V,cAAA,6GACAD,EAAAzV,EAAA0V,cAAA,qHAGJD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,sBACbF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,cACbF,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,gBACAF,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CACExS,MAAOiU,EAAUC,SACjBc,KAAK,QACLC,SAAU,SAAAC,GAAC,OAAId,EAAKe,iBAAiBD,EAAEE,OAAOpV,MAAO,aACrDqV,OAAQT,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,OAAOuZ,MAAO,CAAC9D,MAAO,kBAAmBsE,YAAa,MACzER,MAAO,CAACS,aAAc,IACtBC,YAAY,qBACZC,QAAS,SAAAR,GAAC,OAAkB,KAAdA,EAAES,SAAkBvB,EAAKN,WAEzCc,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CACExS,MAAOiU,EAAUE,SACjBa,KAAK,QACLxZ,KAAK,WACLyZ,SAAU,SAAAC,GAAC,OAAId,EAAKe,iBAAiBD,EAAEE,OAAOpV,MAAO,aACrDqV,OAAQT,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,OAAOuZ,MAAO,CAAC9D,MAAO,kBAAmBsE,YAAa,MACzEE,YAAY,eACZC,QAAS,SAAAR,GAAC,OAAkB,KAAdA,EAAES,SAAkBvB,EAAKN,WAEzCc,EAAAzV,EAAA0V,cAAA,UAAQC,UAAU,mBAAmBc,QAASlC,KAAKI,OAAnD,4DAOO9T,EAAOwB,GAAM,IACpByS,EAAcP,KAAKlM,MAAnByM,UACRA,EAAUzS,GAAQxB,EAClB0T,KAAKmC,SAAS,SAAArO,GAAK,MAAK,CAACyM,UAAU7S,OAAAC,EAAA,EAAAD,CAAA,GAAKoG,EAAMyM,UAAZ,GAA0BA,sCAGtD,IAAA6B,EAAApC,KACEO,EAAcP,KAAKlM,MAAnByM,UACLA,EAAUC,UAAYD,EAAUE,UACjCF,EAAUE,SAAWT,KAAKqC,KAAK9B,EAAUE,UAAU6B,WACnDja,EAAMgG,KAAK,iBAAXX,OAAAC,EAAA,EAAAD,CAAA,GAAiC6S,IAC9BvV,KAAK,SAAAC,GAAO,IAAA8L,EACiB9L,EAAIzB,KAAxB0B,EADG6L,EACH7L,KAAM0C,EADHmJ,EACGnJ,IAAKpE,EADRuN,EACQvN,KACnB,IAAa,IAAV0B,EACDpB,IAAQyJ,MAAM3F,OACT,CACL,IAAMpF,EAAWI,KAAKkH,UAAUtG,EAAK,IACrCf,aAAa8Z,QAAQ,WAAY/Z,GACjC0E,OAAOyE,SAAS6Q,KAAO,SACvBJ,EAAKD,SAAS,CAAC5B,UAAW,KAC1BzW,IAAQsC,QAAQwB,OAItB9D,IAAQkJ,QAAQ,uEAnFFyP,yECCdC,sNAEJ5O,MAAQ,CACNtL,SAAU,MA+DZqN,WAAa,WAAM,IACT8M,EAAmB7C,EAAK1R,MAAMG,KAA9BoU,eACgBlb,EAAQqY,EAAKhM,MAA7BtL,SAAWM,IAFF8Z,EAGcD,IAAvBnC,EAHSoC,EAGTpC,SAAUC,EAHDmC,EAGCnC,SACfA,EAASoC,QAAUrC,EAASqC,OAC7BpW,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ,IAAI+V,EAAchD,EAAKuC,KAAK5B,GAAU6B,WACtCja,IAAMoF,IAAI,WAAY,CAAChG,KAAI+Y,WAAUC,SAAUqC,IAC5C9X,KAAK,SAAAC,GAAO,IAAA8L,EACS9L,EAAIzB,KAAjB0B,EADI6L,EACJ7L,KAAM0C,EADFmJ,EACEnJ,IACD,IAAT1C,GACDpB,IAAQsC,QAAQwB,EAAM,kCACtBkS,EAAKiD,eACLta,aAAa8Z,QAAQ,WAAY,IACjCrV,OAAOyE,SAAS6Q,KAAO,gBAEvB1Y,IAAQyJ,MAAM3F,QAMxB9D,IAAQyJ,MAAM,yHAIlBwP,aAAe,WAAM,IACXvU,EAAmBsR,EAAK1R,MAAMG,KAA9BC,eACRsR,EAAKqC,SAAS,CAACa,iBAAiB,IAChCxU,EAAe,CAACiS,SAAU,yFA1F1B,IAAIjY,EAAWC,aAAaC,QAAQ,YACjCF,IACDA,EAAWI,KAAKC,MAAML,GACtBwX,KAAKmC,SAAS,CAAC3Z,+CAIV,IAAAkY,EAAAV,KAAAiD,EAC+BjD,KAAKlM,MAAnCtL,EADDya,EACCza,SAAUwa,EADXC,EACWD,gBACVE,EAAsBlD,KAAK5R,MAAMG,KAAjC2U,kBACR,OACEhC,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,kBACbF,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAG,KACPlC,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,UAAUiC,IAAKpC,EAAQ,KAAoCqC,IAAI,MAEhFpC,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACbF,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,4BACboU,EAAAzV,EAAA0V,cAAA,KAAGqB,KAAK,gFAAmCd,OAAO,WAChDR,EAAAzV,EAAA0V,cAACqC,GAAA,EAAD,CAAQlC,KAAM,GAAIM,KAAK,WAAWP,MAAO,CAACQ,YAAa,GAAItE,MAAO,UAAWkG,gBAAiB,eAGlGvC,EAAAzV,EAAA0V,cAACqC,GAAA,EAAD,CAAQlC,KAAM,GAAIM,KAAK,SACvBV,EAAAzV,EAAA0V,cAACuC,GAAA,EAAD,CAAS7W,QACPqU,EAAAzV,EAAA0V,cAAAD,EAAAzV,EAAAkY,SAAA,KACEzC,EAAAzV,EAAA0V,cAAA,KAAGE,MAAO,CAACuC,SAAU,GAAI9B,aAAc,IAAKV,UAAU,SAASc,QAAS,kBAAMxB,EAAKyB,SAAS,CAACa,iBAAiB,MAAQ9B,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMP,MAAO,CAACQ,YAAa,GAAI/Z,KAAK,SAA1J,4BACAoZ,EAAAzV,EAAA0V,cAAA,KAAGE,MAAO,CAACuC,SAAU,IAAKxC,UAAU,SAASc,QAAS2B,IAAQ3C,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMP,MAAO,CAACQ,YAAa,GAAI/Z,KAAK,WAAlG,kBAGFoZ,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,kBACbF,EAAAzV,EAAA0V,cAAA,SAAI3Y,EAASgY,SAAb,KACAU,EAAAzV,EAAA0V,cAAA,oCAAOD,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,YAGtBoZ,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOC,QAASf,EAAiBlW,MAAM,uCAASC,KAAMiT,KAAKnK,WAAYmO,SAAUhE,KAAK+C,cACpF7B,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAD,CAAMC,SAAU,CAACC,KAAM,GAAIC,WAAY,CAACD,KAAM,KAC5CjD,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACdpB,EAAkB,WAAY,CAC7BqB,aAAc/b,EAASgY,UADxB0C,CAGChC,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOiD,YAAY,2CAGvBb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACdpB,EAAkB,WAAY,CAC7BsB,MAAO,CAAC,CACNC,UAAU,EACV3a,QAAS,sDAHZoZ,CAMChC,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOhX,KAAK,WAAWia,YAAY,sDAxDzBU,cAsGtBoB,GAAS,WACbpb,aAAa8Z,QAAQ,WAAY,IACjCzY,IAAQsC,QAAQ,wCAChBsK,WAAW,WACTxJ,OAAOyE,SAAS6Q,KAAO,gBACtB,MAGUkC,QAAKC,QAALD,CAAchC,cC/GtBkC,WAAWC,KAAXD,SACDE,GAAWD,KAAKR,KA2JPU,8MAxJbnV,SAAW,CACT,CACEoV,SAAU,UACVlY,MAAO,2BACP8U,KAAM,WACNqD,KAAM,EACNC,YAAa,CACX,CACEF,SAAU,UACVlY,MAAO,2BACPqY,KAAM,0BACL,CACDH,SAAU,OACVlY,MAAO,2BACPqY,KAAM,uBACL,CACDH,SAAU,QACVlY,MAAO,2BACPqY,KAAM,0BAOT,CACDH,SAAU,UACVlY,MAAO,2BACP8U,KAAM,WACNqD,KAAM,EACNC,YAAa,CACX,CACEF,SAAU,OACVlY,MAAO,2BACPqY,KAAM,uBACL,CACDH,SAAU,QACVlY,MAAO,2BACPqY,KAAM,wBACL,CACDH,SAAU,WACVlY,MAAO,2BACPqY,KAAM,6BAGT,CACDH,SAAU,UACVlY,MAAO,2BACP8U,KAAM,UACNqD,KAAM,EACNC,YAAa,CACX,CACEF,SAAU,SACVlY,MAAO,2BACPqY,KAAM,2BAGT,CACDH,SAAU,QACVlY,MAAO,2BACP8U,KAAM,UACNqD,KAAM,EACNC,YAAa,CACX,CACEF,SAAU,SACVlY,MAAO,2BACPqY,KAAM,yBAGT,CACDH,SAAU,UACVlY,MAAO,2BACP8U,KAAM,OACNqD,KAAM,EACNC,YAAa,CACX,CACEF,SAAU,OACVlY,MAAO,2BACPqY,KAAM,uBACL,CACDH,SAAU,MACVlY,MAAO,2BACPqY,KAAM,2BAMdrR,MAAQ,CACNsR,aAAc,GACdH,KAAM,QAGRI,SAAW,SAAOC,GAAP,IAAAC,EAAAC,EAAA,OAAAha,EAAAC,EAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACH0Z,EAAoBD,EAAWF,aAAaK,KAAK,SAAAtd,GAAG,OAA8C,IAA1C2X,EAAKhM,MAAMsR,aAAa/b,QAAQlB,KAC1Fqd,EAAa,GAFR7Z,EAAAE,KAAA,EAAAL,EAAAC,EAAAK,MAGHgU,EAAKlQ,SAASgP,IAAI,SAAApM,GAAI,OAAKgT,EAAU,GAAAzb,OAAA2D,OAAAwG,EAAA,EAAAxG,CAAO8X,GAAP9X,OAAAwG,EAAA,EAAAxG,CAAsB8E,EAAK0S,iBAH7D,cAAAvZ,EAAAE,KAAA,EAAAL,EAAAC,EAAAK,MAIH0Z,EAAWC,KAAK,SAAAjT,GAAI,OACxBA,EAAKwS,WAAaO,GACfzF,EAAKqC,SAAS,CAAEiD,aAAcG,EAAoB,CAACA,GAAqB,CAAqB,IAApBzF,EAAKhM,MAAMmR,KAAa,UAAY,aANzG,wBAAAtZ,EAAAI,sGAWT,IAAIvD,EAAWC,aAAaC,QAAQ,YACjCF,IACDA,EAAWI,KAAKC,MAAML,GACtBwX,KAAKmC,SAAS,CACZ8C,KAAMzc,EAASyc,KACfG,aAAc,CAAClY,OAAOyE,SAAS+T,SAASC,MAAM,KAAK,KAAyB,IAAlBnd,EAASyc,KAAa,UAAY,6CAKzF,IAAAvE,EAAAV,KACD4F,EAAW1Y,OAAOyE,SAAS+T,SAC3BG,EAAiB7F,KAAKpQ,SAASgP,IAAI,SAACpM,EAAMhG,GAC9C,GAAGgG,EAAKyS,OAASvE,EAAK5M,MAAMmR,KAAM,CAChC,IAAMa,EAActT,EAAK0S,YAAYtG,IAAI,SAAAmH,GAAO,OAC9C7E,EAAAzV,EAAA0V,cAAC2D,GAAD,CAAU3c,IAAK4d,EAAQf,UAAU9D,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAI2C,EAAQZ,MAAOY,EAAQjZ,UAEpE,OAAQoU,EAAAzV,EAAA0V,cAACyD,GAAD,CACNzc,IAAKqK,EAAKwS,SACVlY,MACEoU,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,aAChBF,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMR,UAAU,YAAYtZ,KAAM0K,EAAKoP,OACvCV,EAAAzV,EAAA0V,cAAA,YAAO3O,EAAK1F,SAIbgZ,GAGL,MAAO,KAET,OACE5E,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACbF,EAAAzV,EAAA0V,cAAC5M,GAAA,EAAD,CACEyR,KAAK,SACLC,MAAM,QACNb,aAAcpF,KAAKlM,MAAMsR,aACzBc,gBAAiB,CAAChZ,OAAOyE,SAAS+T,SAASC,MAAM,KAAK,KAA2B,IAApB3F,KAAKlM,MAAMmR,KAAa,UAAY,YACjGI,SAAUrF,KAAKqF,SACfc,oBAAqB,CAACP,IAErBC,WAlJepD,iCCJpB2D,WAAY,CAChBC,WAAY,2BAEZC,mBAAoB,2BACpBC,yBAA0B,2BAE1BC,yBAA0B,2BAE1BC,0BAA2B,2BAC3BC,iCAAkC,2BAClCC,iCAAkC,2BAElCC,gBAAiB,2BACjBC,uBAAwB,2BACxBC,uBAAwB,2BAExBC,iBAAkB,2BAClBC,wBAAyB,2BACzBC,wBAAyB,2BAEzBC,WAAY,2BAEZC,gBAAiB,2BACjBC,uBAAwB,2BACxBC,uBAAwB,2BAExBC,iBAAkB,2BAClBC,0BAA2B,2BAC3BC,yBAA0B,2BAE1BC,oBAAqB,2BACrBC,2BAA4B,2BAC5BC,2BAA4B,2BAE5BC,WAAY,2BACZC,kBAAmB,2BACnBC,yBAA0B,2BAC1BC,yBAA0B,2BAE1BC,UAAW,qBACXC,gBAAiB,2BACjBC,uBAAwB,2BACxBC,uBAAwB,2BAExBC,iBAAkB,iCAClBC,wBAAyB,iCACzBC,wBAAyB,iCAEzBC,SAAU,2BACVC,gBAAiB,iCAEjBC,WAAY,2BACZC,gBAAiB,2BACjBC,eAAgB,6BAGZC,eACJ,SAAAA,EAAYxa,GAAO,IAAA0R,EAAA,OAAApS,OAAAqS,EAAA,EAAArS,CAAAsS,KAAA4I,IACjB9I,EAAApS,OAAAuS,EAAA,EAAAvS,CAAAsS,KAAAtS,OAAAwS,EAAA,EAAAxS,CAAAkb,GAAAzI,KAAAH,KAAM5R,KAORya,QAAU,WACR/I,EAAKqC,SAAS,CACZ2G,aAAc5b,OAAOyE,SAAS+T,SAASC,MAAM,KAAKvR,MAAM,KAE1D0L,EAAKqC,SAAS,SAACvW,GACb,MAAO,CACLmd,qBAAsBnd,EAAKkd,aAAalK,IAAI,SAACoK,EAAGxc,GAC9C,IAAIpD,EAAG,IAAAW,OAAO6B,EAAKkd,aAAa1U,MAAM,EAAG5H,EAAQ,GAAGyc,KAAK,MACzD,OACE/H,EAAAzV,EAAA0V,cAAC+H,GAAA,EAAW7E,KAAZ,CAAiBlc,IAAKiB,GACnBgd,GAAUhd,UAlBJ0W,EA0BnBqJ,UAAY,WACVC,KAAa7R,KAAK,CAChBzN,QAAS,mDACT4K,YAAa,qgBACb2M,MAAO,CACLgI,MAAO,IACPC,YAAY,QA9BhBxJ,EAAKhM,MAAQ,CACXgV,aAAc,KACdC,qBAAsB,MAJPjJ,kGAsCjBE,KAAK6I,sDAIL7I,KAAK6I,2CAGE,IACCE,EAAyB/I,KAAKlM,MAA9BiV,qBACR,OACC7H,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACdF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACXF,EAAAzV,EAAA0V,cAAC+H,GAAA,EAAD,KACGH,IAGL7H,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,UACbF,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,gBAAhB,wCACAF,EAAAzV,EAAA0V,cAAA,QAAMe,QAASlC,KAAKmJ,UAAW/H,UAAU,4BAAzC,+gBAzDiBqB,aAmEZ8G,eAAWX,ICzHnBY,WAAkCC,KAAlCD,SAASE,GAAyBD,KAAzBC,MAAOC,GAAkBF,KAAlBE,OAAQC,GAAUH,KAAVG,OA8BhBC,GA5BK,SAAAzb,GAAK,OAAI8S,EAAAzV,EAAA0V,cAAC2I,GAAA,EAAD,CAAQ1I,UAAU,gBAC7CF,EAAAzV,EAAA0V,cAAC4I,GAAD,MACA7I,EAAAzV,EAAA0V,cAAC2I,GAAA,EAAD,KACE5I,EAAAzV,EAAA0V,cAACuI,GAAD,CAAOM,aAAW,EAAC5I,UAAU,cAAc6E,MAAM,QAAQoD,MAAM,OAC7DnI,EAAAzV,EAAA0V,cAAC8I,GAAD,OAEF/I,EAAAzV,EAAA0V,cAAC2I,GAAA,EAAD,KACE5I,EAAAzV,EAAA0V,cAACqI,GAAD,CAASpI,UAAU,iBACjBF,EAAAzV,EAAA0V,cAAC+I,GAAA,EAAD,CAAM9I,UAAU,cACdF,EAAAzV,EAAA0V,cAAC2I,GAAA,EAAD,KACE5I,EAAAzV,EAAA0V,cAACwI,GAAD,CAAQvI,UAAU,gBAAeF,EAAAzV,EAAA0V,cAACgJ,GAAD,OACjCjJ,EAAAzV,EAAA0V,cAACqI,GAAD,KAAUpb,EAAMvB,SAChBqU,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,WACbF,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,mBAAmBme,MAAM,WACpC/E,EAAAzV,EAAA0V,cAAA,yBACAD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,kBACbF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBAAiBiC,IAAI,kEAAkEC,IAAI,KAC1GpC,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,iBAAb,iFAMVF,EAAAzV,EAAA0V,cAACyI,GAAD,CAAQxI,UAAU,gBAAlB,uJC7BAgJ,GAAa,CACjBpX,QAAW,UACXqX,OAAU,UACVje,QAAW,UACXmL,KAAQ,UACR+S,OAAU,WA8BGC,8MAzBbzW,MAAQ,CACN0W,YAAa,CACXC,WAAY,UACZlN,MAAO,OACPsE,YAAa,EACbyH,WAAY,EACZxH,aAAc,uFAGE,IAAA4I,EACwD1K,KAAK5R,MAD7Duc,EAAAD,EACVD,kBADU,IAAAE,EACG,SADHA,EAAAC,EAAAF,EACanN,aADb,IAAAqN,EACqB,OADrBA,EAAAC,EAAAH,EAC6BI,UAD7B,IAAAD,EACkC,EADlCA,EAAAE,EAAAL,EACqCM,UADrC,IAAAD,EAC0C,EAD1CA,EAAAE,EAAAP,EAC6CQ,UAD7C,IAAAD,EACkD,EADlDA,EAElBjL,KAAKmC,SAAS,CACZqI,YAAa,CAAEC,WAAYL,GAAWK,GAAalN,QAAOsE,YAAaiJ,EAAIxB,WAAY0B,EAAIlJ,aAAcoJ,sCAIpG,IAAAC,EAC8DnL,KAAK5R,MADnEgd,EAAAD,EACC7J,YADD,IAAA8J,EACQ,QADRA,EACiBC,EADjBF,EACiBE,cADjBC,EAAAH,EACgCI,gBADhC,IAAAD,KACkDpJ,EADlDiJ,EACkDjJ,QACjDsI,EAAgBxK,KAAKlM,MAArB0W,YACR,OACCtJ,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQlK,KAAMA,EAAMiK,SAAUA,EAAUlK,MAAOmJ,EAAatI,QAASA,GAAUmJ,UArBxD5I,aCJrBgJ,GAAUC,KAAVD,OACAE,GAAUC,KAAVD,OACCE,GAASC,KAATD,KAEFE,+LAGF/L,KAAK5R,MAAMvD,eACXmV,KAAK5R,MAAMjD,qDAGJ,IAAAuf,EACoR1K,KAAK5R,MAAzRxH,EADA8jB,EACA9jB,eAAgBG,EADhB2jB,EACgB3jB,YAAakF,EAD7Bye,EAC6Bze,aAAc9E,EAD3CujB,EAC2CvjB,WAAY6E,EADvD0e,EACuD1e,kBAAmBgB,EAD1E0d,EAC0E1d,QAASC,EADnFyd,EACmFzd,cAAeG,EADlGsd,EACkGtd,iBAAkB7F,EADpHmjB,EACoHnjB,aAAc8F,EADlIqd,EACkIrd,kBAAmB7F,EADrJkjB,EACqJljB,YAAa8F,EADlKod,EACkKpd,kBAAmBO,EADrL6c,EACqL7c,YAAaE,EADlM2c,EACkM3c,gBAAiBC,EADnN0c,EACmN1c,aAAczB,EADjOme,EACiOne,cAAevF,EADhP0jB,EACgP1jB,MAAOqF,EADvPqe,EACuPre,kBAAmBpF,EAD1QyjB,EAC0QzjB,OAE3Q+kB,EAAa,CACjBC,SAFe/e,OAAOgf,WAAa,KAEZ,GAAK,IAE9B,OACEhL,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAACsK,GAAD,CACE1J,YAAY,6CACZX,UAAU,aACV9U,MAAOnF,EACPoa,SAAUvV,EACVmgB,SAAU,SAAAhlB,GAAU,OAAI8E,EAAa9E,MAEvC+Z,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CAAQ9f,MAAOtF,EAAOua,SAAU,SAAAjV,GAAK,OAAID,EAAkB,QAASC,IAAQ+U,MAAO,CAACgI,MAAO,IAAKC,WAAY,KAC1GpI,EAAAzV,EAAA0V,cAACwK,GAAD,CAAQrf,MAAM,gBAAd,4BACA4U,EAAAzV,EAAA0V,cAACwK,GAAD,CAAQrf,MAAM,sBAAd,sBACC1F,EAAegY,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAACwK,GAAD,CAAQxjB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAK1E,MAAO0E,EAAK1E,SAE7EoT,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CAAQ9f,MAAOrF,EAAQsa,SAAU,SAAAjV,GAAK,OAAID,EAAkB,SAAUC,IAAQ+U,MAAO,CAACgI,MAAO,IAAKC,WAAY,KAC5GpI,EAAAzV,EAAA0V,cAACwK,GAAD,CAAQrf,MAAM,gBAAd,gBACA4U,EAAAzV,EAAA0V,cAACwK,GAAD,CAAQrf,MAAO,GAAf,sBACA4U,EAAAzV,EAAA0V,cAACwK,GAAD,CAAQrf,OAAQ,GAAhB,sBACA4U,EAAAzV,EAAA0V,cAACwK,GAAD,CAAQrf,MAAO,GAAf,sBACA4U,EAAAzV,EAAA0V,cAACwK,GAAD,CAAQrf,OAAQ,GAAhB,uBAEF4U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,kBACbF,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ5B,WAAW,UAAUnJ,KAAK,UAC1B+J,cAAenK,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAG,gCAAT,8BACvBlC,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ/K,KAAK,UAAU+J,cAAc,iCAAQnJ,QAASjV,KAExDiU,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACbF,EAAAzV,EAAA0V,cAACmL,GAAA,EAAD,CACEC,KAAM,CAACC,OAAQ,GAAIC,GAAI,EAAGC,IAAK,GAC/BC,WAAY5lB,EACZilB,WAAYA,EACZY,WAAY,SAACpa,EAAMhG,GAAP,OACV0U,EAAAzV,EAAA0V,cAACmL,GAAA,EAAKjI,KAAN,KACEnD,EAAAzV,EAAA0V,cAAC0K,GAAD,CAAMzK,UAAU,aAEhBF,EAAAzV,EAAA0V,cAAC+I,GAAA,EAAD,CAAM9I,UAAU,YACVyL,QACE,CACE3L,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,0DAAYoU,EAAAzV,EAAA0V,cAAA,QAAMe,QAAS,kBAAM9U,EAAiBoF,EAAK1J,IAAK0J,EAAKxL,MAAOwL,EAAK9K,UAAW8K,EAAK7K,WAAjF,iBAC3BuZ,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,OAAwB,IAAjB0F,EAAKvL,OAAgB,oDAA+B,IAAjBuL,EAAKvL,OAAgB,mDAA8B,IAAhBuL,EAAKvL,OAAe,gEAAiC,IAAjBuL,EAAKvL,OAAgB,+DAAe,4BAAWia,EAAAzV,EAAA0V,cAAA,QAAMC,WAA4B,IAAjB5O,EAAKvL,OAAgB,GAAK,iBAAkBib,QAAS,kBAAuB,IAAjB1P,EAAKvL,OAAgB+F,EAAQwF,EAAKtH,KAAMsB,GAASe,QAAQC,IAAI,iDAA8B,IAAjBgF,EAAKvL,OAAgB,gBAAyB,IAAjBuL,EAAKvL,OAAgB,qBAAyB,IAAhBuL,EAAKvL,OAAe,sBAA0B,IAAjBuL,EAAKvL,OAAgB,2BAAS,uBACrbia,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAOoU,EAAAzV,EAAA0V,cAAA,gDAASD,EAAAzV,EAAA0V,cAAA,WAAT,6EAAiCD,EAAAzV,EAAA0V,cAAA,QAAMe,QAAS,kBAAM3V,EAAciG,EAAK1J,IAAK0D,KAA7C,mBAGzD0U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,wBACbF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBAAf,2BACMF,EAAAzV,EAAA0V,cAAA,gBAAQ3O,EAAKsa,gBAAkB,IAErC5L,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBAAf,4BACOF,EAAAzV,EAAA0V,cAAA,YAAO3O,EAAKua,YAAc,KAGlCva,EAAKwa,SAAW9L,EAAAzV,EAAA0V,cAAA,OAAKkC,IAAK7Q,EAAKwa,SAAU1J,IAAI,KAAOpC,EAAAzV,EAAA0V,cAACqC,GAAA,EAAD,CAAQyJ,MAAM,SAAS3L,KAAM,GAAIM,KAAK,OAAOP,MAAO,CAACQ,YAAa,EAAGqL,WAAY,MACtIhM,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACbF,EAAAzV,EAAA0V,cAAA,SAAI3O,EAAKtG,WACTgV,EAAAzV,EAAA0V,cAACgM,GAAA,EAAD,KAAM3a,EAAKxL,gBASzBka,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOC,QAASxc,EAAcuF,MAAM,uCAASkX,SAAU3W,EAAmBN,KAAM,kBAAMO,EAAkB9F,KACtG0Z,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAD,CAAMC,SAAU,CAACC,KAAM,GAAIC,WAAY,CAACD,KAAM,KAC5CjD,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CAAQ9f,MAAO9E,EAAYR,OAAS,qBAAOua,SAAU1T,GACnDqT,EAAAzV,EAAA0V,cAACwK,GAAD,CAAQrf,MAAM,sBAAd,sBACC1F,EAAegY,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAACwK,GAAD,CAAQxjB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAK1E,MAAO0E,EAAK1E,UAG/EoT,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAO9E,EAAYE,UAAW6Z,SAAUxT,GACnDmT,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAO,GAAd,gBACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAO,GAAd,UACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAO,GAAd,YAGJ4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAOpD,EAAAzV,EAAA0V,cAAA,wCAAWD,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAOoU,EAAAzV,EAAA0V,cAAA,wIAA2BD,EAAAzV,EAAA0V,cAAA,WAA3B,+EAAwDD,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMR,UAAU,SAAStZ,KAAK,kBAAkBme,MAAM,cACzJ/E,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAO9E,EAAYG,QAAS4Z,SAAUvT,GACjDkT,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAO,GAAd,gBACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAO,GAAd,UACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAO,GAAd,sBAhGMmW,aAwKP6K,eA9DE,SAAAxZ,GAAK,MAAK,CACzBlN,eAAgBkN,EAAMqL,QAAQxL,QAAQ/M,eACtCC,eAAgBiN,EAAMqL,QAAQxL,QAAQ9M,eACtCE,YAAa+M,EAAMqL,QAAQxL,QAAQ5M,YACnCG,YAAa4M,EAAMqL,QAAQxL,QAAQzM,YACnCC,WAAY2M,EAAMqL,QAAQxL,QAAQxM,WAClCI,aAAcuM,EAAMqL,QAAQxL,QAAQpM,aACpCC,YAAasM,EAAMqL,QAAQxL,QAAQnM,YACnCR,MAAO8M,EAAMqL,QAAQxL,QAAQ3M,MAC7BC,OAAQ6M,EAAMqL,QAAQxL,QAAQ1M,SAGZ,SAAA6D,GAAQ,MAAK,CAC/BD,aAD+B,WAE7BC,EAASyiB,EAAe1iB,iBAE1BM,kBAJ+B,WAK7BL,EAASyiB,EAAepiB,sBAE1BE,WAP+B,SAOpBC,GACTR,EAASyiB,EAAeliB,WAAWC,KAErCU,kBAV+B,SAUbwV,GAChB1W,EAASyiB,EAAevhB,kBAAkBwV,EAAEE,OAAOpV,SAErDL,aAb+B,SAalBK,GACXxB,EAASyiB,EAAethB,aAAaK,KAEvCC,cAhB+B,SAgBjB9E,EAAI+E,GAChB1B,EAASyiB,EAAehhB,cAAc9E,EAAI+E,KAE5CQ,QAnB+B,SAmBvB9B,EAAMsB,GACZ1B,EAASyiB,EAAevgB,QAAQ9B,EAAMsB,KAExCS,cAtB+B,WAuB7BnC,EAASyiB,EAAetgB,kBAE1BG,iBAzB+B,SAyBd3F,EAAIT,EAAOU,EAAWC,GACrCmD,EAASyiB,EAAengB,iBAAiB3F,EAAIT,EAAOU,EAAWC,KAEjE0F,kBA5B+B,WA6B7BvC,EAASyiB,EAAelgB,sBAE1BC,kBA/B+B,SA+Bb9F,GAChBsD,EAASyiB,EAAejgB,kBAAkB9F,KAE5CqG,YAlC+B,SAkCnBC,GACVhD,EAASyiB,EAAe1f,YAAYC,KAEtCC,gBArC+B,SAqCfyT,GACd,IAAI9Z,EAAY8Z,EAAEE,OAAOpV,MACzBxB,EAASyiB,EAAexf,gBAAgBrG,KAE1CsG,aAzC+B,SAyClBwT,GACX,IAAI7Z,EAAU6Z,EAAEE,OAAOpV,MACvBxB,EAASyiB,EAAevf,aAAarG,KAEvC0E,kBA7C+B,SA6CblE,EAAKmE,GACrBxB,EAASyiB,EAAelhB,kBAAkBlE,EAAKmE,OAIpCghB,CAA+BvB,cChLtCrC,GAAmBD,KAAnBC,MAAOF,GAAYC,KAAZD,QACPiC,GAAWC,KAAXD,OAiUO+B,8MA7TbC,QAAU,CACR,CACEtlB,IAAK,YACLulB,UAAW,YACX5gB,MAAO,2BACP6gB,MAAO,SACPtE,MAAO,KACN,CACDlhB,IAAK,QACLulB,UAAW,QACX5gB,MAAO,eACP6gB,MAAO,UACN,CACDxlB,IAAK,SACL2E,MAAO,eACP6gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC5lB,EAAMoK,EAAQ5F,GAAf,OAAyB0U,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQ1jB,KAAK,UAAUwZ,KAAK,QAAQY,QAAS,kBAAMpC,EAAKqC,SAAS,CAAC5a,cAAc,EAAMsmB,WAAYzb,EAAOtJ,IAAKglB,cAAethB,MAA7H,iCAIrCsH,MAAQ,CACNlN,eAAgB,GAChBW,cAAc,EACdwmB,uBAAuB,EACvB/mB,MAAO,GACPD,YAAa,GACbinB,SAAU,GACVC,aAAc,EACdJ,WAAY,GACZC,eAAgB,EAChBI,YAAa,GACbC,gBAAiB,MAQnBC,kBAAoB,WAClB/lB,IAAM0C,IAAI,eACPC,KAAK,SAAAC,GACJ,GAAqB,IAAlBA,EAAIzB,KAAK0B,KAAY,KACRtE,EAAmBqE,EAAIzB,KAA7BA,KACRsW,EAAKqC,SAAS,CAACvb,yBAKvB2P,gBAAkB,SAAAvP,GAChBqB,IAAM0C,IAAI,cAAe,CAAEoB,OAAQ,CAACnF,WACjCgE,KAAK,SAAAC,GAAO,IACClE,EAAgBkE,EAAIzB,KAA1BA,KACNsW,EAAKqC,SAAS,CAACpb,gBACQ,IAAvBA,EAAYqE,QAAgBtB,IAAQkJ,QAAQ,uFAIlDqb,mBAAqB,WACnBvO,EAAKqC,SAAS,CAAC4L,uBAAuB,OAGxCO,oBAAsB,WACpBxO,EAAKqC,SAAS,CAAC4L,uBAAuB,EAAO/mB,MAAO,QAGtDunB,iBAAmB,WAAM,IAAAtL,EACwBnD,EAAKhM,MAArChG,EADQmV,EACfjc,MAAagnB,EADE/K,EACF+K,SAAUC,EADRhL,EACQgL,YAC3BD,EAGFlO,EAAK0O,YAAY1gB,EAAMkgB,EAAUC,GAFjCnO,EAAK2O,SAAS3gB,MAMlB2gB,SAAW,SAAA3gB,GACTrB,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACDe,EACDzF,IAAMgG,KAAK,cAAe,CAACP,SACxB9C,KAAK,SAAAC,GACJ,GAAqB,IAAlBA,EAAIzB,KAAK0B,MAAiC,IAAnBD,EAAIzB,KAAK8E,MAAa,KAAAyI,EACxB9L,EAAIzB,KAAlBA,EADsCuN,EACtCvN,KAAMoE,EADgCmJ,EAChCnJ,IACdkS,EAAKqC,SAAS,SAAArO,GACZ,IAAIlN,EAAc8G,OAAAwG,EAAA,EAAAxG,CAAOoG,EAAMlN,gBAE/B,OADAA,EAAe0N,KAAK9K,GACb,CAAC5C,oBAEVkD,IAAQsC,QAAQwB,GAChBkS,EAAKwO,2BACsB,IAAlBrjB,EAAIzB,KAAK0B,MAAiC,IAAnBD,EAAIzB,KAAK8E,MACzCxE,IAAQkJ,QAAQ,kFAEhBlJ,IAAQyJ,MAAMtI,EAAIzB,KAAKoE,OAI7B9D,IAAQyJ,MAAM,0DAMtBib,YAAc,SAAC1gB,EAAMrG,EAAI+E,GACvBC,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACDe,EACDzF,IAAMoF,IAAI,cAAe,CAACK,OAAMrG,OAC7BuD,KAAK,SAAAC,GACJ,GAAqB,IAAlBA,EAAIzB,KAAK0B,KAAY,KAAA4Q,EACA7Q,EAAIzB,KAAlBA,EADcsS,EACdtS,KAAMoE,EADQkO,EACRlO,IACdkS,EAAKqC,SAAS,SAAArO,GACZ,IAAIlN,EAAiBkN,EAAMlN,eAE3B,OADA8G,OAAOiH,OAAO/N,EAAe4F,GAAQhD,GAC9B,CAAC5C,oBAEVkD,IAAQsC,QAAQwB,GAChBkS,EAAKwO,2BAELxkB,IAAQyJ,MAAMtI,EAAIzB,KAAKoE,OAI7B9D,IAAQyJ,MAAM,0DAMtBmb,YAAc,SAACjnB,EAAI+E,GACjBC,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,IAAMqG,OAAO,eAAiBjH,GAC3BuD,KAAK,SAAAC,GAAO,IAAA+Q,EACU/Q,EAAIzB,KAAlB0B,EADI8Q,EACJ9Q,KAAO0C,EADHoO,EACGpO,IACF,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChBkS,EAAKvJ,kBACLuJ,EAAKqC,SAAS,SAAArO,GACZ,IAAIlN,EAAiBkN,EAAMlN,eAE3B,OADAA,EAAeyN,OAAO7H,EAAO,GACtB,CAAC5F,qBAGVkD,IAAQyJ,MAAM3F,WAO1B+gB,iBAAmB,SAAAnN,GACjB,IAAIxa,EAAQwa,EAAEE,OAAOpV,MACrBwT,EAAKqC,SAAS,CAACnb,aAGjB4nB,mBAAqB,SAAA1iB,GAChBA,EACD7D,IAAM0C,IAAI,iBAAkB,CAACoB,OAAQ,CAACD,eACnClB,KAAK,SAAAC,GAAO,IAAA2R,EAC4B3R,EAAIzB,KAA9BzC,EADF6V,EACJpT,KAAmB0B,EADf0R,EACe1R,KAAM0C,EADrBgP,EACqBhP,IACpB,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChBkS,EAAKqC,SAAS,CAACpb,iBAEf+C,IAAQyJ,MAAM,wHAIpBzJ,IAAQyJ,MAAM,uDAKlBlG,kBAAoB,WAClByS,EAAKqC,SAAS,CACZ5a,cAAc,EACdsmB,WAAY,GACZC,eAAgB,EAChBI,YAAa,QAIjBW,mBAAqB,WAAM,IAAAC,EAC2DhP,EAAKhM,MAArErM,EADKqnB,EACjBjB,WAAgBC,EADCgB,EACDhB,cAA4B9mB,EAD3B8nB,EACcZ,YAAqCa,EADnDD,EACkCX,gBACxD1mB,EACDqY,EAAKkP,UAAUvnB,EAAIqmB,EAAe9mB,GAElC8Y,EAAKmP,WAAWF,EAAK/nB,MAIzBkoB,oBAAsB,WAEU,IADJpP,EAAKhM,MAAxBqa,gBACY/iB,OACjBtB,IAAQkJ,QAAQ,wCAEhB8M,EAAKqC,SAAS,CACZ5a,cAAc,OAKpBynB,UAAY,SAACvnB,EAAIqmB,EAAe9mB,GAC9ByF,IAAMC,QAAQ,CACZI,MAAO,mDACPC,KAAM,WACJ1E,IAAMoF,IAAI,QAAS,CAAChG,KAAIT,UACrBgE,KAAK,SAAAC,GAAO,IAAAkkB,EACUlkB,EAAIzB,KAAjB0B,EADGikB,EACHjkB,KAAM0C,EADHuhB,EACGvhB,IACF,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChBkS,EAAKqC,SAAS,SAAArO,GACZ,IAAI/M,EAAW2G,OAAAwG,EAAA,EAAAxG,CAAOoG,EAAM/M,aAE5B,OADAA,EAAYsN,OAAOyZ,EAAe,GAC3B,CAAC/mB,iBAEV+Y,EAAKzS,qBAELvD,IAAQyJ,MAAM3F,WAO1BqhB,WAAa,SAACF,EAAK/nB,GACjByF,IAAMC,QAAQ,CACZI,MAAO,oDACPC,KAAM,WACJ1E,IAAMoF,IAAI,qBAAsB,CAACshB,MAAK/nB,UACnCgE,KAAK,SAAAC,GAAO,IAAAmkB,EACWnkB,EAAIzB,KAAlB0B,EADGkkB,EACHlkB,KAAM0C,EADHwhB,EACGxhB,IACF,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChBkS,EAAKvJ,kBACLuJ,EAAKzS,oBACLyS,EAAKqC,SAAS,CAACgM,gBAAiB,MAEhCrkB,IAAQyJ,MAAM3F,WAO1ByhB,kBAAoB,SAAA7N,GAClB,IAAI0M,EAAc1M,EAAEE,OAAOpV,MAC3BwT,EAAKqC,SAAS,CAAC+L,oGAxNflO,KAAKoO,oBACLpO,KAAKzJ,mDA0NE,IAAAmK,EAAAV,KAAAsP,EAC0FtP,KAAKlM,MAA9FlN,EADD0oB,EACC1oB,eAAgBW,EADjB+nB,EACiB/nB,aAAcwmB,EAD/BuB,EAC+BvB,sBAAuBhnB,EADtDuoB,EACsDvoB,YAAaC,EADnEsoB,EACmEtoB,MAAOknB,EAD1EoB,EAC0EpB,YAQ3EqB,EAAe,CACnBpB,gBAAiBnO,KAAKlM,MAAMqa,gBAC5B5M,SAAU,SAAA4M,GACRzN,EAAKyB,SAAS,CAACgM,sBAGnB,OACCjN,EAAAzV,EAAA0V,cAAA,WACGD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAAC2I,GAAA,EAAD,KACE5I,EAAAzV,EAAA0V,cAACqO,GAAD,CAAOvJ,MAAM,SACX/E,EAAAzV,EAAA0V,cAACmL,GAAA,EAAD,CACEmD,OAAQvO,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,oBAAoBc,QAAS,kBAAMxB,EAAKnK,gBAAgB,wBAAvE,sBACRmZ,UAAQ,EACR/C,WAAY/lB,EACZya,MAAO,CAACQ,YAAa,IACrB+K,WAAY,SAACpa,EAAMhG,GAAP,OACV0U,EAAAzV,EAAA0V,cAACmL,GAAA,EAAKjI,KAAN,CAAWjD,UAAU,cACnBF,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAACsO,QAAS,OAAQC,cAAe,MAAOC,eAAgB,gBAAiBxG,MAAO,OAAQyG,WAAY,IAC9G5O,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,SAASc,QAAS,kBAAMxB,EAAKnK,gBAAgB/D,EAAK1E,QAAQ0E,EAAK1E,MAC5EoT,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMR,UAAU,SAASC,MAAO,CAACQ,YAAa,IAAK/Z,KAAK,OAAOoa,QAAS,kBAAMxB,EAAKyB,SAAS,CAAC4L,uBAAuB,EAAMC,SAAUxb,EAAK1J,IAAKmlB,YAAazhB,OAC3J0U,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMR,UAAU,SAAStZ,KAAK,eAAeoa,QAAS,kBAAMxB,EAAKgO,YAAYlc,EAAK1J,IAAK0D,YAMjG0U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,uBAAuBC,MAnC1B,CACpBgI,MAAO,MACP0G,OAAQ,cACRC,QAAS,SACTC,aAAc,EACdC,OAAQ,mBA8B4DhO,QAASlC,KAAKqO,oBAA1E,+BAEFnN,EAAAzV,EAAA0V,cAACgP,GAAD,KACEjP,EAAAzV,EAAA0V,cAAC+I,GAAA,EAAD,CAAM7I,MAAO,CAAC2O,QAAS,KACrB9O,EAAAzV,EAAA0V,cAACiP,GAAD,CAAQrO,YAAY,mDAAWV,MAAO,CAACgI,MAAO,IAAKvH,aAAc,GAAIoL,WAAY,IAAKf,SAAUnM,KAAK4O,qBACrG1N,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQ1jB,KAAK,UAAUuZ,MAAO,CAACsO,QAAS,QAAS7N,aAAc,IAAKI,QAASlC,KAAKkP,qBAAlF,4BACAhO,EAAAzV,EAAA0V,cAACkP,GAAA,EAAD,CAAOd,aAAcA,EAAcG,UAAQ,EAACpO,KAAK,QAAQgP,OAAQ,SAAAle,GAAM,OAAIA,EAAOtJ,KAAK2kB,QAASzN,KAAKyN,QAASd,WAAY5lB,QAKlIma,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOC,QAASxc,EAAcyc,SAAUhE,KAAK3S,kBAAmBN,KAAMiT,KAAK6O,oBACzE3N,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAO4hB,EAAa3M,SAAUvB,KAAKqP,mBAC9CnO,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAM,sBAAb,sBACC1F,EAAegY,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAOjlB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAK1E,MAAO0E,EAAK1E,UAG9EoT,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOC,QAASgK,EAAuBjhB,MAAM,uCAASkX,SAAUhE,KAAKsO,oBAAqBvhB,KAAMiT,KAAKuO,kBAArG,iCACOrN,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAUvB,KAAK2O,iBAAkBriB,MAAOtF,EAAOqa,MAAO,CAACgI,MAAO,KAAMtH,YAAY,wDAvT3EU,aCArBoC,oLACK,IAAA6F,EAC0B1K,KAAK5R,MAA9BwB,EADD8a,EACC9a,SAAUe,EADX+Z,EACW/Z,WACZ4f,EAAc,CAClB,CACEzjB,MAAO,2BACP3E,IAAK,aACLulB,UAAW,aACXC,MAAO,SACPC,OAAQ,SAAC5lB,EAAMoK,GAAP,OAAkBA,EAAOpC,WAAa,iCAAU,6BAE1D,CACElD,MAAO,2BACP3E,IAAK,MACLulB,UAAW,MACXC,MAAO,SACPC,OAAQ,SAAC5lB,EAAMoK,GAAP,OAAmBA,EAAOpC,WAA6B,MAAfoC,EAAOrK,IAAc,eACjD,MAAfqK,EAAOrK,IAAc,SAAM,SAAQ,iBAE1C,CACEI,IAAK,QACLulB,UAAW,QACX5gB,MAAO,eACP6gB,MAAO,UAET,CACE7gB,MAAO,SACP3E,IAAK,SACLwlB,MAAO,SACPC,OAAQ,SAAC5lB,EAAMoK,EAAQ5F,GAAf,OACN0U,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQlK,KAAK,QAAQxZ,KAAK,UAAUuZ,MAAO,CAACQ,YAAa,SACvDX,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAI,CAACsC,SAAU,6BAA8B9T,MAAOQ,IAA1D,iBAEF8O,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQlK,KAAK,QAAQxZ,KAAK,SAASoa,QAAS,kBAAMvR,EAAWyB,EAAOtJ,IAAK0D,KAAzE,oBAMR,OACC0U,EAAAzV,EAAA0V,cAAA,WACCD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACXF,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQ1jB,KAAK,UAAUuZ,MAAO,CAACS,aAAc,SAC3CZ,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAG,8BAAT,yCAEFlC,EAAAzV,EAAA0V,cAACkP,GAAA,EAAD,CAAO/O,KAAK,QAAQgP,OAAQ,SAAAle,GAAM,OAAIA,EAAOtJ,KAAK2kB,QAAS8C,EAAY5D,WAAY/c,EAAUoc,WAAY,CAACzK,SAAU,kBAAMtX,sDAMhI+V,KAAK5R,MAAMqC,qBApDIgS,aAqEJ6K,eAbE,SAAAxZ,GAAK,MAAK,CACzBlE,SAAUkE,EAAMqL,QAAQ5K,KAAK3E,WAGX,SAAA9E,GAAQ,MAAK,CAC/B2F,YAD+B,WAE7B3F,EAASyiB,EAAe9c,gBAE1BE,WAJ+B,SAIpBlJ,EAAI+E,GACb1B,EAASyiB,EAAe5c,WAAWlJ,EAAI+E,OAI5B8gB,CAA+BzI,qDCzC/B2L,WAhCQ,SAAApiB,GAAS,IACvB4G,EAAkC5G,EAAlC4G,YAAazC,EAAqBnE,EAArBmE,kBACpB,OACE2O,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gCACbF,EAAAzV,EAAA0V,cAAC+I,GAAA,EAAD,CAAM9I,UAAU,oBAAoBtU,MAClCkI,EAAY5J,OAAS,EACrB8V,EAAAzV,EAAA0V,cAACmL,GAAA,EAAD,CAAMlL,UAAU,gBACZF,EAAAzV,EAAA0V,cAACmL,GAAA,EAAKjI,KAAN,CAAWjD,UAAU,SAASc,QAAS,kBAAM3P,EAAkByC,EAAY,GAAI,KAC7EkM,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACbF,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,eAAepM,EAAY,GAAGlI,OAC3CoU,EAAAzV,EAAA0V,cAAA,OAAKkC,IAAKrO,EAAY,GAAGP,OAAQ6O,IAAI,OAG1CtO,EAAYZ,MAAM,GAAGwK,IAAI,SAAC9U,EAAS0C,GAAV,OACxB0U,EAAAzV,EAAA0V,cAACmL,GAAA,EAAKjI,KAAN,CAAWjD,UAAU,oBAAoBc,QAAS,kBAAM3P,EAAkBzI,EAAS0C,EAAQ,IAAIrE,IAAKqE,GAClG0U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACbF,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,eAAetX,EAAQgD,OACpCoU,EAAAzV,EAAA0V,cAAA,OAAKkC,IAAKvZ,EAAQ2K,OAAQ6O,IAAI,UAG5BpC,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,SAASc,QAAS,kBAAM3P,EAAkByC,EAAY,GAAI,KACjFkM,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,cACbF,EAAAzV,EAAA0V,cAAA,OAAKkC,IAAKrO,EAAY,GAAGP,OAAQ6O,IAAI,KACrCpC,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,sBAAsBpM,EAAY,GAAGlI,OACnDoU,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,eAAepM,EAAY,GAAGN,oBC8BxC+b,oLArDJ,IAEHC,EAMEC,EARCjG,EACoI1K,KAAK5R,MAAzIsB,EADAgb,EACAhb,YAAa2C,EADbqY,EACarY,kBAAmBue,EADhClG,EACgCkG,UAAWne,EAD3CiY,EAC2CjY,qBAAsBC,EADjEgY,EACiEhY,qBAAsBJ,EADvFoY,EACuFpY,UAAW/B,EADlGma,EACkGna,YAAagC,EAD/GmY,EAC+GnY,kBAExF,IAA1B7C,EAAYzH,UACdyoB,EAAiBxP,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWjD,UAAU,WAAWkD,MAAM,4BACrDpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM+R,SAAP,CAAgBtP,SAAU,SAAAC,GAAC,OAAInP,EAAkB,UAAWmP,EAAEE,OAAOpV,QAAQA,MAAOoD,EAAY7C,QAASikB,SAAU,CAACC,QAAS,EAAGC,QAAS,GAAIjP,YAAY,6DAKzJ4O,EADEjhB,EAAY+E,OACFyM,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAACgI,MAAO,SAAUhG,IAAK3T,EAAY+E,OAAQ6O,IAAI,oCAE3DpC,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,KAAQtK,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,WAAnB,8BAEd4oB,EAAiBxP,EAAAzV,EAAA0V,cAAC8P,EAAA,SAAD,KACf/P,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU,SAAAC,GAAC,OAAInP,EAAkB,QAASmP,EAAEE,OAAOpV,QAAQA,MAAOoD,EAAY5C,MAAOiV,YAAY,gDAE1Gb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU,SAAAC,GAAC,OAAInP,EAAkB,MAAOmP,EAAEE,OAAOpV,QAAQA,MAAOoD,EAAYtG,IAAK2Y,YAAY,uGAEtGb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM+R,SAAP,CAAgBtP,SAAU,SAAAC,GAAC,OAAInP,EAAkB,cAAemP,EAAEE,OAAOpV,QAAQA,MAAOoD,EAAYgF,YAAaoc,SAAU,CAACC,QAAS,EAAGC,QAAS,GAAIjP,YAAY,gDAEnKb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAC+P,GAAA,EAAD,CAAQpjB,KAAK,YAAYvC,OAAO,gBAAgB4lB,gBAAgB,EAAO5P,SAAUqP,GAC9ED,IAGLzP,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,IAAI8M,OAAO,GACzB7gB,GAAe,EAAI2Q,EAAAzV,EAAA0V,cAAA,WAClBD,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQtJ,QAASzP,EAAsB3K,KAAK,UAAUuZ,MAAO,CAACQ,YAAa,KAA3E,gBACAX,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQtJ,QAASxP,GAAjB,yCACOwO,EAAAzV,EAAA0V,cAAA,WAAKD,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQtJ,QAAS5P,GAAjB,8CAA4C4O,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,QAAb,sUAE5DF,EAAAzV,EAAA0V,cAACkQ,GAAA,EAAD,CAASC,QAAM,IACfpQ,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAACgI,MAAO,MAAO0G,OAAQ,SAAUrgB,EAAYC,SAASvE,OAAS,GAAK8V,EAAAzV,EAAA0V,cAACoQ,GAAD,CAAgBvc,YAAatF,EAAYC,SAAU4C,kBAAmBA,OAG1J,OACC2O,EAAAzV,EAAA0V,cAAA,WACGD,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWD,WAAY,CAACoN,OAAQ,IAC9BtQ,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAOoD,EAAYzH,UAAWsZ,SAAU,SAAAC,GAAC,OAAInP,EAAkB,YAAamP,EAAEE,OAAOpV,SAChG4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMf,OAAP,CAAc/f,MAAO,GAArB,4BACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMf,OAAP,CAAc/f,MAAO,GAArB,8BAGHokB,UAhDsBjO,aCEzBgP,+LAGE,IAAI7f,EAAQoO,KAAK5R,MAAMQ,QAAQ+C,SAASC,MACxCA,GAASoO,KAAK5R,MAAM+D,aAAaP,oCAG5B,IAwBD8f,EAAUC,EAoBVC,EAAcC,EAmEdC,EAEIC,EAjHHjS,EAAAE,KAAA0K,EACob1K,KAAK5R,MAAvb2B,EADF2a,EACE3a,SAAUF,EADZ6a,EACY7a,SAAUJ,EADtBib,EACsBjb,WAAYW,EADlCsa,EACkCta,UAAWU,EAD7C4Z,EAC6C5Z,kBAAmBE,EADhE0Z,EACgE1Z,qBAAsBE,EADtFwZ,EACsFxZ,aAAcC,EADpGuZ,EACoGvZ,SAAUM,EAD9GiZ,EAC8GjZ,WAAYL,EAD1HsZ,EAC0HtZ,cAAeC,EADzIqZ,EACyIrZ,YAAaC,EADtJoZ,EACsJpZ,cAAeC,EADrKmZ,EACqKnZ,cAAeS,EADpL0Y,EACoL1Y,SAAUE,EAD9LwY,EAC8LxY,WAAYD,EAD1MyY,EAC0MzY,cAAe3B,EADzNoa,EACyNpa,SAAUwB,EADnO4Y,EACmO5Y,WAAYlB,EAD/O8Z,EAC+O9Z,iBAAkBC,EADjQ6Z,EACiQ7Z,uBAAwBW,EADzRkZ,EACyRlZ,UAAWK,EADpS6Y,EACoS7Y,WAAYnC,EADhTgb,EACgThb,YAAa2C,EAD7TqY,EAC6TrY,kBAAmBue,EADhVlG,EACgVkG,UAAWte,EAD3VoY,EAC2VpY,UAAWC,EADtWmY,EACsWnY,kBAAmBE,EADzXiY,EACyXjY,qBAAsBC,EAD/YgY,EAC+YhY,qBAAsBnC,EADrama,EACqana,YACpayhB,EAAiB,CACnB9N,SAAU,CACNuI,GAAI,CAACtI,KAAM,IAEfC,WAAY,CACRqI,GAAI,CAACtI,KAAM,GAAIqN,OAAQ,IAE3BJ,OAAO,GAELxhB,EAAWG,EAAQ,OAAW6O,IAAI,SAACpM,EAAMhG,GAAP,OACpC0U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,OAAOC,MAAO,CAACgI,MAAqC,IAA9BtZ,EAAQ,OAAW3E,OAAe,OAAQ2E,EAAQ,OAAW3E,OAAe,WAAsBjD,IAAKqE,EAAO0V,QAAS,kBAAM/Q,EAASqB,EAAMhG,KAC7K0U,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,oBAAoB5O,EAAK1E,MAAQ,4BACjDoT,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,gBAAgBC,MAAO,CAAC4Q,IAAMzf,EAAK/C,YAAc+C,EAAK/C,WAAWrE,OAAsC,IAA3BoH,EAAK/C,WAAWrE,QAAgB,IAA2C,IAAzBoH,EAAK/C,WAAWrE,OAAc,IAAO,GAAIukB,QAASvf,IAAc5D,EAAQ,QAAU,SACzNgG,EAAK/C,YAAc+C,EAAK/C,WAAWmP,IAAI,SAAC/L,EAAGqf,GAAJ,OACpChR,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAejZ,IAAK+pB,EAAKhQ,QAAS,SAAAV,GAAC,OAAGnQ,EAAYmQ,EAAG3O,EAAGqf,KAAOrf,EAAE/E,MAAQ,oCAE3FoT,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,MAAMC,MAAO,CAACsO,QAASnd,EAAK/C,YAAc+C,EAAK/C,WAAWrE,OAAS,EAAI,QAAU,QAAS8W,QAAS9Q,GAAjH,KACA8P,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,wBACfF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,4BAKH,SAApB3R,EAAW3H,KACX6pB,EAAczQ,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBAC3BpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOmD,EAAWrG,IAAK2Y,YAAY,gHAAgCR,SAAU,SAACC,GAAD,OAAOxQ,EAAqBwQ,EAAG,WAE5F,UAApB/R,EAAW3H,OAClB6pB,EAAczQ,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,mBACxB1R,GAAewR,EAAAzV,EAAA0V,cAACgR,GAAD,CAAkBziB,YAAaA,EAAa2C,kBAAmBA,EAAmBue,UAAWA,EAAWte,UAAWA,EAAWC,kBAAmBA,EAAmBE,qBAAsBA,EAAsBC,qBAAsBA,EAAsBnC,YAAaA,MAG3Q,SAAlBV,EAAS/H,KACT4pB,EAAWxQ,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBACxBpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOuD,EAASzG,IAAK2Y,YAAY,gHAAgCR,SAAU,SAACC,GAAD,OAAO1Q,EAAkB0Q,EAAG,WAEzF,UAAlB3R,EAAS/H,OAChB4pB,EACIxQ,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,mBACXF,EAAAzV,EAAA0V,cAACgR,GAAD,CAAkBziB,YAAaA,EAAa2C,kBAAmBA,EAAmBue,UAAWA,EAAWte,UAAWA,EAAWC,kBAAmBA,EAAmBE,qBAAsBA,EAAsBC,qBAAsBA,EAAsBnC,YAAaA,MAItP,IAA3BR,EAASE,OAAO7E,SAEZwmB,EADA/hB,EAASJ,YAA6C,IAA/BI,EAASJ,WAAWrE,OAEvC8V,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,eACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,cACXF,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,MAAd,4BACAF,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQpK,UAAU,KAAKtZ,KAAK,OAAOoa,QAAS5Q,GAA5C,6BAEJ4P,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAS+N,EACN9Q,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOuD,EAAS/B,KAAMiU,YAAY,uCAASqQ,UAAW,EAAGC,YAAU,EACnE9Q,SAAU,SAACC,GAAD,OAAO1Q,EAAkB0Q,EAAG,WAC7CN,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,kBAAhB,4LAGRF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,cACXF,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,MAAd,kCACAF,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQpK,UAAU,KAAKtZ,KAAK,OAAOoa,QAAS3Q,GAA5C,mCAEJ2P,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAS+N,EACN9Q,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,kCACbpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOmD,EAAW3B,KAAMiU,YAAY,8IAA2BqQ,UAAW,GAC1E7Q,SAAU,SAACC,GAAD,OAAOxQ,EAAqBwQ,EAAG,YAEpDN,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,kCACbpD,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAOmD,EAAW3H,KAAMyZ,SAAU,SAACC,GAAD,OAAOxQ,EAAqBwQ,EAAG,UAC1EN,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAM,QAAb,4BACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAM,SAAb,8BAGPqlB,MAOjBzQ,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,eACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,cACXF,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,MAAd,4BACAF,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQpK,UAAU,KAAKtZ,KAAK,OAAOoa,QAAS5Q,GAA5C,6BAEJ4P,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAS+N,EACN9Q,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOuD,EAAS/B,KAAMskB,UAAW,EAAGC,YAAU,EAACtQ,YAAY,uCAASR,SAAU,SAACC,GAAD,OAAO1Q,EAAkB0Q,EAAG,WACjHN,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,kBAAhB,2LAEJF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAOuD,EAAS/H,KAAMyZ,SAAU,SAACC,GAAD,OAAO1Q,EAAkB0Q,EAAG,UACrEN,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAM,QAAb,4BACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAM,SAAb,8BAGPolB,KAKrBG,EAAe3Q,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,qBAC1BF,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQ1jB,KAAK,UAAUoa,QAAS,WAAO1Q,IAAYsO,EAAK1R,MAAM2D,gBAA9D,kBAKJzB,KAEIP,EAASC,aACT+hB,EAAgB7Q,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBAC7BpD,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAOyD,EAAShI,IAAKwZ,SAAU,SAAAC,GAAC,OAAI5Q,EAAiB4Q,EAAG,SACjEN,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAM,KAAb,gBACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAM,KAAb,UACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAM,KAAb,aAIZwlB,EAAY5Q,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,sBACvBF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,cACXF,EAAAzV,EAAA0V,cAACmR,GAAA,EAAD,CACI3F,WAAY3a,EACZugB,YAAU,EACVrgB,WAAYA,EACZqP,SAAUtP,EACV2b,OAAQ,SAAApb,GAAI,OAAIA,EAAKtG,WACrBokB,OAAQ,SAAAle,GAAM,OAAIA,EAAOlH,MACzBkW,UAAU,qBAEdF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAD,CAAM7C,UAAU,KAAKgQ,OAAO,EAAOlN,SAAU,CAACuI,GAAI,CAACtI,KAAM,KAAMC,WAAY,CAACqI,GAAI,CAACtI,KAAM,GAAIqN,OAAQ,IAC7FgB,WAAW,QACbtR,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBACbpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOyD,EAASjD,MAAOiV,YAAY,iCAAQR,SAAU,SAACC,GAAD,OAAO5Q,EAAiB4Q,EAAG,aAE3FN,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,kCACbpD,EAAAzV,EAAA0V,cAACsR,GAAA,EAAD,CAAQlR,SAAU1Q,EAAwB6hB,QAAS3iB,EAASC,cAE/D+hB,EACD7Q,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,KACbpD,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQnK,MAAO,CAACQ,YAAa,QAAS/Z,KAAK,UAAUoa,QAAS,kBAAMzQ,EAAWqO,EAAK1R,SAApF,gBACA8S,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQtJ,QAASpQ,GAAjB,qBAMpB,OACIoP,EAAAzV,EAAA0V,cAAA,WACID,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,uBACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACXF,EAAAzV,EAAA0V,cAAA,sCACAD,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQpK,UAAU,KAAKc,QAAS,kBAAMrQ,EAAWiO,EAAK1R,SAAtD,mCAEJ8S,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACXF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACVxR,EACDsR,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,WACVC,MAA2B,IAApBzR,EAASxE,OAAe,CAACie,MAAO,OAA8B,IAApBzZ,EAASxE,OAAe,CAACie,MAAO,OAA8B,IAApBzZ,EAASxE,OAAe,CAACukB,QAAS,QAAU,CAACtG,MAAO,QAC/InH,QAAShR,GACVgQ,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,oBAAhB,mCAMnBwQ,EACAC,GAEJC,kDAKT9R,KAAK5R,MAAMukB,eACX3S,KAAK5R,MAAMwkB,0BA5LQnQ,aAiSZ6K,eAhGE,SAAAxZ,GAAK,MAAK,CACvB/D,SAAU+D,EAAMqL,QAAQ5K,KAAKxE,SAC7BF,SAAUiE,EAAMqL,QAAQ5K,KAAK1E,SAC7BJ,WAAYqE,EAAMqL,QAAQ5K,KAAK9E,WAC/BW,UAAW0D,EAAMqL,QAAQ5K,KAAKnE,UAC9B4B,SAAU8B,EAAMqL,QAAQ5K,KAAKvC,SAC7B1B,SAAUwD,EAAMqL,QAAQ5K,KAAKjE,SAC7B4B,WAAY4B,EAAMqL,QAAQ5K,KAAKrC,WAC/BxC,YAAaoE,EAAMqL,QAAQ5K,KAAK7E,YAChCa,YAAauD,EAAMqL,QAAQ5K,KAAKhE,cAGhB,SAAAzF,GAAQ,MAAK,CAC7BqH,aAD6B,SAChBC,GACTtH,EAASyiB,GAA4Bnb,KAEzCxB,iBAJ6B,SAIZ4Q,EAAG1T,GAChBhD,EAASyiB,GAAgC/L,EAAEE,OAAOpV,MAAOwB,KAE7D+C,uBAP6B,SAONvE,GACnBxB,EAASyiB,GAAsCjhB,KAEnDwE,kBAV6B,SAUX0Q,EAAG1T,GACjBhD,EAASyiB,GAAiCzf,EAAM0T,EAAEE,OAAOpV,SAE7D0E,qBAb6B,SAaRwQ,EAAG1T,GACpBhD,EAASyiB,GAAoCzf,EAAM0T,EAAEE,OAAOpV,SAEhE4E,aAhB6B,WAiBzBpG,EAASyiB,OAEbpc,SAnB6B,SAmBpBqB,EAAMhG,GACX1B,EAASyiB,GAAwB/a,EAAMhG,KAE3C4E,cAtB6B,SAsBfoQ,GACVA,EAAEqR,kBACF/nB,EAASyiB,OAEb9b,WA1B6B,SA0BlBrD,GACPtD,EAASyiB,GAA0Bnf,KAEvCoD,UA7B6B,WA8BzB1G,EAASyiB,OAEblc,YAhC6B,SAgCjBmQ,EAAGhY,EAAM0oB,GACjB1Q,EAAEqR,kBACF/nB,EAASyiB,GAA2B/jB,EAAM0oB,KAE9C5gB,cApC6B,WAqCzBxG,EAASyiB,OAEbhc,cAvC6B,WAwCzBzG,EAASyiB,OAEbtb,cA1C6B,SA0CfC,GACVpH,EAASyiB,GAA6Brb,KAE1CH,YA7C6B,WA8CzBjH,EAASyiB,OAEbzb,WAhD6B,WAiDzBhH,EAASyiB,OAEb1b,WAnD6B,SAmDlBzD,GACPA,EAAMQ,QAAQC,SACd/D,EAASyiB,OAEboF,aAvD6B,WAwDzB7nB,EAASyiB,OAEbqD,UA1D6B,SA0DnBrZ,GACN,GAAyB,SAArBA,EAAKub,KAAK7rB,OAAmB,CAC7B,IAAIwN,EAAM,8BAAA1K,OAAiCwN,EAAKub,KAAKjpB,SAASkpB,UAC9DjoB,EAASyiB,GAAiC,SAAU9Y,MAG5DpC,kBAhE6B,SAgEXlK,EAAKmE,GACnBxB,EAASyiB,GAAiCplB,EAAKmE,KAEnDgG,UAnE6B,WAoEzBxH,EAASyiB,OAEbhb,kBAtE6B,SAsEXC,EAAMhG,GACpB1B,EAASyiB,GAAiC/a,EAAMhG,KAEpDiG,qBAzE6B,WA0EzB3H,EAASyiB,OAEb7a,qBA5E6B,WA6EzB5H,EAASyiB,OAEbqF,iBA/E6B,WAgFzB9nB,EAASyiB,SAIFD,CAA+B5I,KAAKC,OAAO,CAAC7W,KAAM,gBAAnB4W,CAAoC+M,KChS5EuB,4LAEK,IAAAtI,EACkD1K,KAAK5R,MAAvD6E,EADAyX,EACAzX,iBAAkBjB,EADlB0Y,EACkB1Y,SAAUqB,EAD5BqX,EAC4BrX,mBAC7B4f,EAAe,CACnB,CACE9qB,IAAK,YACL2E,MAAO,2BACP4gB,UAAW,YACXC,MAAO,SACPC,OAAQ,SAAA5lB,GAAI,OAAa,IAATA,EAAa,2BAAS,6BACrC,CACDG,IAAK,OACL2E,MAAO,2BACP4gB,UAAW,OACXC,MAAO,SACPC,OAAQ,SAAA5lB,GAAI,OAAa,IAATA,EAAa,2BAAmB,IAATA,EAAa,2BAAmB,IAATA,EAAa,2BAAS,OACnF,CACDG,IAAK,OACLulB,UAAW,OACX5gB,MAAO,2BACP6gB,MAAO,UACP,CACAxlB,IAAK,MACL2E,MAAO,eACP4gB,UAAW,MACXC,MAAO,SACPC,OAAQ,SAAC5lB,EAAMoK,EAAQ5F,GACrB,OACE0U,EAAAzV,EAAA0V,cAAA,YACkB,IAAf/O,EAAOrK,IAAY,SAAsB,IAAfqK,EAAOrK,IAC9B,SAAsB,IAAfqK,EAAOrK,IAAY,eAAO,kBAI1C,CACDI,IAAK,OACL2E,MAAO,uCACP4gB,UAAW,OACXC,MAAO,SACPC,OAAQ,SAAA5lB,GAAI,OAAIA,GAAc,iBAC7B,CACDG,IAAK,QACL2E,MAAO,2BACP4gB,UAAW,QACXC,MAAO,SACPC,OAAQ,SAAA5lB,GAAI,OAAIA,EAAKoD,OAAS,EAAIpD,EAAKoM,MAAM,EAAG,GAAGwK,IAAI,SAAApM,GACrD,IAAI/G,EAAIuG,EAASmC,OAAO,SAAAtB,GAAC,OAAIA,EAAE3H,OAASsH,IAAM,GAC9C,OAAO/G,GAAKA,EAAES,YACX,WACJ,CACD/D,IAAK,SACL2E,MAAO,SACP6gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC5lB,EAAMoK,EAAQ5F,GACrB,OACE0U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,eACbF,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQlK,KAAK,QAAQxZ,KAAK,WACxBoZ,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAI,CAACsC,SAAU,WAAY5R,MAAO,CAAC1B,SAAQ5F,WAAjD,iBAEF0U,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQlK,KAAK,QAAQD,MAAO,CAACoJ,WAAY,MAAOnB,WAAY,OACpDpH,QAAS,kBAAM7O,EAAmBjB,EAAOtJ,IAAK0D,KADtD,oBAOV,OACE0U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,eACbF,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQ1jB,KAAK,UAAUsZ,UAAU,YAC/BF,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAG,YAAT,yCAEFlC,EAAAzV,EAAA0V,cAACkP,GAAA,EAAD,CAAOjP,UAAU,eAAeE,KAAK,QAAQgP,OAAS,SAAAle,GAAM,OAAIA,EAAOtJ,KAAM2kB,QAASwF,EAActG,WAAY1Z,EAAkByc,UAAQ,EAAC1D,YAAY,kDAO7JhM,KAAK5R,MAAMgF,sBACX4M,KAAK5R,MAAM2D,qBAlFM0Q,cAuGN6K,eAjBE,SAAAxZ,GAAK,MAAK,CACzB9B,SAAU8B,EAAMqL,QAAQrK,MAAM9C,SAC9BiB,iBAAkBa,EAAMqL,QAAQrK,MAAM7B,mBAGpB,SAAAnI,GAAQ,MAAK,CAC/BiH,YAD+B,WAE7BjH,EAASyiB,EAAexb,gBAE1BqB,oBAJ+B,WAK7BtI,EAASyiB,EAAena,wBAE1BC,mBAP+B,SAOZ5L,EAAI+E,GACrB1B,EAASyiB,EAAela,mBAAmB5L,EAAI+E,OAIpC8gB,CAA+B0F,uBCzGvCtJ,kBAAkBD,KAAlBC,OAAOF,GAAWC,KAAXD,QACPmC,GAAUC,KAAVD,OAqHQuH,8MAjHXpf,MAAQ,CACJlN,eAAgB,GAChBG,YAAa,GACbmF,UAAW,GACXlF,MAAO,eACPkJ,MAAO,GACPijB,eAAgB,MAOpBC,OAAS,SAAAlnB,GACL,GAAkB,KAAdA,EACA7D,IAAM0C,IAAI,iBAAkB,CAACoB,OAAQ,CAACD,eACjClB,KAAK,SAAAC,GACF,GAA6B,IAAzBA,EAAIzB,KAAKA,KAAK4B,OAAc,KACfrE,EAAekE,EAAIzB,KAAzBA,KACPsW,EAAKqC,SAAS,CAACpb,qBAEf+C,IAAQyN,KAAK,8IAGtB,KACkBxQ,EAAe+Y,EAAKhM,MAApCqf,eACLrT,EAAKqC,SAAS,CAACpb,oBAIvBiF,kBAAoB,SAAAwV,GAChB,IAAItV,EAAYsV,EAAEE,OAAOpV,MACzBwT,EAAKqC,SAAS,CAACjW,YAAWlF,MAAO,oBAGrCsM,cAAgB,SAAA6L,GAAW,IAClBjP,EAAS4P,EAAKhM,MAAd5D,MACEhF,EAAQiU,EAARjU,KACD8Z,EAAW9U,EAAM7G,QAAQ6B,GAC5B8Z,GAAY,EACX9U,EAAMmE,OAAO2Q,EAAU,GAEvB9U,EAAMoE,KAAKpJ,GAEf4U,EAAKqC,SAAS,CAACjS,UACf4P,EAAK1R,MAAMkF,cAAcpD,MAG7BmjB,kBAAoB,SAAArsB,GAAS,IACFD,EAAe+Y,EAAKhM,MAApCqf,eACPrT,EAAKqC,SAAS,CAACnb,QAAOkF,UAAW,GAAInF,mBAqCzCqnB,kBAAoB,WAChB/lB,IAAM0C,IAAI,eACLC,KAAK,SAAAC,GACF,GAAsB,IAAlBA,EAAIzB,KAAK0B,KAAY,KACRtE,EAAkBqE,EAAIzB,KAA5BA,KACPsW,EAAKqC,SAAS,CAACvb,yBAK/B0sB,eAAiB,WACbjrB,IAAM0C,IAAI,SACLC,KAAK,SAAAC,GAAO,IAAA8L,EACY9L,EAAIzB,KAAlBA,EADEuN,EACFvN,KACM,IAFJuN,EACI7L,MAET4U,EAAKqC,SAAS,CAACpb,YAAayC,EAAM2pB,eAAgB3pB,uGA7FhC+pB,GAC9BvT,KAAKmC,SAAS,CAACjS,MAAOqjB,EAAUrjB,yCA2C3B,IAAAwQ,EAAAV,KAAAiD,EAC0DjD,KAAKlM,MAA7DlN,EADFqc,EACErc,eAAgBG,EADlBkc,EACkBlc,YAAamF,EAD/B+W,EAC+B/W,UAAWlF,EAD1Cic,EAC0Cjc,MAAOkJ,EADjD+S,EACiD/S,MACtD,OACIgR,EAAAzV,EAAA0V,cAAC2I,GAAA,EAAD,CAAQzI,MAAO,CAACoJ,WAAY,QAASrJ,UAAU,yBAC3CF,EAAAzV,EAAA0V,cAACqS,GAAD,CAAOpS,UAAU,wBAAwB6E,MAAM,QAAQoD,MAAM,OACzDnI,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CAAQrK,YAAY,iCAAQzV,MAAOtF,EAAOoa,UAAU,eAAeG,SAAUvB,KAAKqT,mBAC9EnS,EAAAzV,EAAA0V,cAACsS,GAAD,CAAQnnB,MAAM,gBAAd,4BACC1F,EAAegY,IAAI,SAAApM,GAAI,OACpB0O,EAAAzV,EAAA0V,cAACsS,GAAD,CAAQtrB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAK1E,MAAO0E,EAAK1E,SAGvDoT,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM2M,OAAP,CACIrK,UAAU,eACVW,YAAY,6CACZoK,SAAUnM,KAAKoT,OACf9mB,MAAOJ,EACPmmB,YAAU,EACV9Q,SAAUvB,KAAKhU,oBAEnBkV,EAAAzV,EAAA0V,cAACmL,GAAA,EAAD,CAAMlL,UAAU,eACVuL,WAAsB,iBAAV3lB,EAAiBD,EAAYoN,OAAO,SAAAtB,GAAC,OAAIA,EAAE7L,QAAUA,IAASD,EAC1E2sB,OAAQ,CAACC,UAAWzS,EAAAzV,EAAA0V,cAAA,QAAME,MAAO,CAACsO,QAAS,SAAvB,QACpB/C,WAAY,SAAAzN,GAAO,OACf+B,EAAAzV,EAAA0V,cAACmL,GAAA,EAAKjI,KAAN,CAAWjD,UAAWlR,EAAM7G,QAAQ8V,EAAQjU,OAAS,EAAI,kBAAoB,SAClEgX,QAAS,kBAAMxB,EAAKpN,cAAc6L,IAAUhX,IAAKgX,EAAQrW,KAChEoY,EAAAzV,EAAA0V,cAACqC,GAAA,EAAD,CAAQyJ,MAAM,SAAS3L,KAAM,GAAI+B,IAAKlE,EAAQ6N,WAAa7N,EAAQjT,eAIrFgV,EAAAzV,EAAA0V,cAACyS,GAAD,KAAU5T,KAAK5R,MAAMvB,sDA0B7BmT,KAAKoO,oBACLpO,KAAKsT,wBA/GoB7Q,aCA3BuP,GAAiB,CACnB9N,SAAU,CACNuI,GAAI,CAACtI,KAAM,IAEfC,WAAY,CACRqI,GAAI,CAACtI,KAAM,GAAIqN,OAAQ,KAIzBqC,uMAE0B,IAAAnJ,EAC4B1K,KAAK5R,MAAvC0F,EADM4W,EACjB/Y,SAAWmC,MAAQ/B,EADF2Y,EACE3Y,YAAayB,EADfkX,EACelX,UACvCzB,IACA+B,GAASN,EAAUM,EAAM1B,OAAQ0B,EAAMtH,wCAGlC,IAEDsnB,EAAWpD,EAoBPC,EAtBH7Q,EAAAE,KAAAmL,EACmMnL,KAAK5R,MAAtM4D,EADFmZ,EACEnZ,SAAUsB,EADZ6X,EACY7X,cAAe/G,EAD3B4e,EAC2B5e,cAAewnB,EAD1C5I,EAC0C4I,WAAYrkB,EADtDyb,EACsDzb,YAAa6C,EADnE4Y,EACmE5Y,kBAAmBD,EADtF6Y,EACsF7Y,UAAWD,EADjG8Y,EACiG9Y,kBAAmBue,EADpHzF,EACoHyF,UAAWhiB,EAD/Huc,EAC+Hvc,QAAS2B,EADxI4a,EACwI5a,YAAakC,EADrJ0Y,EACqJ1Y,qBAAsBC,EAD3KyY,EAC2KzY,sBAEvJ,IAArBhD,EAAY5H,KACZgsB,EAAY5S,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,wCACzBpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU,SAAAC,GAAC,OAAInP,EAAkB,OAAQmP,EAAEE,OAAOpV,QAAQA,MAAOoD,EAAY1H,KAC7E+Z,YAAY,4DAEK,IAArBrS,EAAY5H,OACnBgsB,EAAY5S,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,kCACzBpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU,SAAAC,GAAC,OAAInP,EAAkB,MAAOmP,EAAEE,OAAOpV,QAAQA,MAAOoD,EAAYvH,IAC5E4Z,YAAY,yEAIG,IAA1BrS,EAAYzH,WACZyoB,EAAgBxP,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWjD,UAAU,WAAWkD,MAAM,4BAClDpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM+R,SAAP,CAAgBtP,SAAU,SAAAC,GAAC,OAAInP,EAAkB,UAAWmP,EAAEE,OAAOpV,QACrDA,MAAOoD,EAAY7C,QAASikB,SAAU,CAACC,QAAS,EAAGC,QAAS,GAC5DjP,YAAY,6DAK5B4O,EADAjhB,EAAY+E,OACAyM,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAACgI,MAAO,SAAUhG,IAAK3T,EAAY+E,OAAQ6O,IAAI,oCAE3DpC,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,KAAQtK,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,WAAnB,8BAEhB4oB,EAAiBxP,EAAAzV,EAAA0V,cAAC8P,EAAA,SAAD,KACb/P,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU,SAAAC,GAAC,OAAInP,EAAkB,QAASmP,EAAEE,OAAOpV,QAAQA,MAAOoD,EAAY5C,MAC9EiV,YAAY,gDAEvBb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU,SAAAC,GAAC,OAAInP,EAAkB,MAAOmP,EAAEE,OAAOpV,QAAQA,MAAOoD,EAAYtG,IAC5E2Y,YAAY,gDAEvBb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM+R,SAAP,CAAgBtP,SAAU,SAAAC,GAAC,OAAInP,EAAkB,cAAemP,EAAEE,OAAOpV,QACzDA,MAAOoD,EAAYgF,YAAaoc,SAAU,CAACC,QAAS,EAAGC,QAAS,GAChEjP,YAAY,gDAEhCb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAAC+P,GAAA,EAAD,CAAQpjB,KAAK,YAAYvC,OAAO,gBAAgB4lB,gBAAgB,EAAO5P,SAAUqP,GAC5ED,IAGTzP,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,IAAI8M,OAAO,GACvB7gB,GAAe,EAAI2Q,EAAAzV,EAAA0V,cAAA,WAChBD,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQtJ,QAASzP,EAAsB3K,KAAK,UAAUuZ,MAAO,CAACQ,YAAa,KAA3E,gBACAX,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQtJ,QAASxP,GAAjB,yCACKwO,EAAAzV,EAAA0V,cAAA,WAAKD,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQtJ,QAAS5P,GAAjB,8CAA4C4O,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,QAAb,wUAKtE,OACIF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACXF,EAAAzV,EAAA0V,cAAC6S,GAAD,CAAkB1gB,cAAeA,EAAepD,MAAOR,EAAYQ,MAAOrD,QACtEqU,EAAAzV,EAAA0V,cAAC8C,GAAA,EAADvW,OAAAiH,OAAA,CAAMyM,UAAU,aAAaoR,WAAW,SAAYR,IAChD9Q,EAAAzV,EAAA0V,cAAC8S,GAAA,EAAD,CAAK9P,KAAM,IACPjD,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAACgI,MAAO,SACfrX,EAAS4M,IAAI,SAAApM,GAAI,OAAI9C,EAAYQ,MAAM7G,QAAQmJ,EAAKtH,OAAS,GAC1DgW,EAAAzV,EAAA0V,cAACgM,GAAA,EAAD,CAAKhlB,IAAKqK,EAAK1J,IAAKsY,UAAU,qBAAqB8S,UAAQ,EACtDC,QAAS,kBAAM5nB,EAAcmD,EAAYQ,MAAOsC,EAAKtH,QAAQsH,EAAKtG,eAGnFgV,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU,SAAAC,GAAC,OAAInP,EAAkB,OAAQmP,EAAEE,OAAOpV,QAClDA,MAAOoD,EAAY5B,KAAMiU,YAAY,4HAGpDb,EAAAzV,EAAA0V,cAACkQ,GAAA,EAAD,CAAShQ,MAAO,CAACgI,MAAO,OAAQC,YAAa,MAC7CpI,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,wCACAF,EAAAzV,EAAA0V,cAACiT,GAAA,EAAD,KACIlT,EAAAzV,EAAA0V,cAAC8S,GAAA,EAAD,CAAK9P,KAAM,IACPjD,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWD,WAAY,CAACoN,OAAQ,IAC5BtQ,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAOoD,EAAYzH,UACnBsZ,SAAU,SAAAC,GAAC,OAAInP,EAAkB,YAAamP,EAAEE,OAAOpV,SAChE4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMf,OAAP,CAAc/f,MAAO,GAArB,4BACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMf,OAAP,CAAc/f,MAAO,GAArB,8BAGR4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAACsR,GAAA,EAAD,CAAQC,QAAShjB,EAAYwD,YAAaqO,SAAU,SAAAjV,GAAK,OAAI+F,EAAkB,cAAe/F,MAC9F4U,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,QAC3B1R,EAAYwD,aAAe,mIAGnBwd,GAELxP,EAAAzV,EAAA0V,cAAC8S,GAAA,EAAD,CAAK9P,KAAM,GACNzU,EAAYC,SAASvE,OAAS,GAAK8V,EAAAzV,EAAA0V,cAACoQ,GAAD,CAAgBvc,YAAatF,EAAYC,SACzB4C,kBAAmBA,MAG/E2O,EAAAzV,EAAA0V,cAACkQ,GAAA,EAAD,CAAShQ,MAAO,CAACgI,MAAO,OAAQC,YAAa,MAC7CpI,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,wCACAF,EAAAzV,EAAA0V,cAAC8S,GAAA,EAAD,CAAK9P,KAAM,IACPjD,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWD,WAAY,CAACoN,OAAQ,IAC5BtQ,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAOoD,EAAY5H,KACnByZ,SAAU,SAAAC,GAAC,OAAInP,EAAkB,OAAQmP,EAAEE,OAAOpV,SAC3D4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMf,OAAP,CAAc/f,MAAO,GAArB,4BACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMf,OAAP,CAAc/f,MAAO,GAArB,4BACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMf,OAAP,CAAc/f,MAAO,GAArB,8BAGR4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACbpD,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAOoD,EAAY3H,IACnBwZ,SAAU,SAAAC,GAAC,OAAInP,EAAkB,MAAOmP,EAAEE,OAAOpV,SAC1D4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAO,GAAd,gBACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAO,GAAd,UACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAO,GAAd,UACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAO,GAAd,kBAGR4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAOpD,EAAAzV,EAAA0V,cAAA,uCAAUD,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,sFAAoBoU,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMR,UAAU,SACVtZ,KAAK,kBACLme,MAAM,YAFzD,MAGd/E,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAOoD,EAAYhI,UACnB6Z,SAAU,SAAAC,GAAC,OAAInP,EAAkB,YAAamP,EAAEE,OAAOpV,SAChE4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAO,GAAd,UACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAO,GAAd,YAGPwnB,GAEL5S,EAAAzV,EAAA0V,cAACkQ,GAAA,EAAD,CAAShQ,MAAO,CAACgI,MAAO,OAAQC,YAAa,MAC7CpI,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWD,WAAY,CAACoN,OAAQ,IAC5BtQ,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQ1jB,KAAK,UAAUuZ,MAAO,CAACQ,YAAa,IACpCK,QAAS,kBAAM6R,EAAWrkB,EAAaoQ,EAAK1R,SADpD,gBAEA8S,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQtJ,QAAS,kBAAMtT,EAAQC,WAA/B,oEAWpBmR,KAAK5R,MAAMyD,oBAvJU4Q,aAsNd6K,eA3DE,SAAAxZ,GAAK,MAAK,CACvBpE,YAAaoE,EAAMqL,QAAQrK,MAAMpF,YACjCsC,SAAU8B,EAAMqL,QAAQrK,MAAM9C,SAC9BgL,mBAAoBlJ,EAAMqL,QAAQrK,MAAMkI,mBACxCzM,YAAauD,EAAMqL,QAAQrK,MAAMvE,cAGjB,SAAAzF,GAAQ,MAAK,CAC7BiH,YAD6B,WAEzBjH,EAASyiB,OAEbja,cAJ6B,SAIfpD,GACVpF,EAASyiB,GAA6Brd,KAE1C3D,cAP6B,SAOf2D,EAAOhF,GACjBgF,EAAMmE,OAAOnE,EAAM7G,QAAQ6B,GAAO,GAClCJ,EAASyiB,GAA6Brd,KAE1CmC,kBAX6B,SAWXlK,EAAKmE,GACnBxB,EAASyiB,GAAiCplB,EAAKmE,KAEnDskB,UAd6B,SAcnBrZ,GACN,GAAyB,SAArBA,EAAKub,KAAK7rB,OAAmB,CAC7B,IAAIwN,EAAM,8BAAA1K,OAAiCwN,EAAKub,KAAKjpB,SAASkpB,UAC9DjoB,EAASyiB,GAAiC,SAAU9Y,MAG5DnC,UApB6B,WAqBzBxH,EAASyiB,OAEbhb,kBAvB6B,SAuBXC,EAAMhG,GACpB1B,EAASyiB,GAAiC/a,EAAMhG,KAEpDiG,qBA1B6B,WA2BzB3H,EAASyiB,OAEb7a,qBA7B6B,WA8BzB5H,EAASyiB,OAEbwG,WAhC6B,SAgClBrkB,EAAatB,GAAO,IACpBtB,EAAmC4C,EAAnC5C,MAAO2H,EAA4B/E,EAA5B+E,OAAQrL,EAAoBsG,EAApBtG,IAAKsL,EAAehF,EAAfgF,YACpBZ,EAAS1F,EAAMuD,SAAfmC,MACyB,IAAhCpE,EAAYC,SAASvE,QAAiBsE,EAAYC,SAAS2E,KAAK,CAACxH,QAAO2H,SAAQrL,MAAKsL,gBACrFhF,EAAY5C,MAAQ4C,EAAY+E,OAAS/E,EAAYtG,IAAMsG,EAAYgF,YAAc,GACjFZ,GACApE,EAAY5G,IAAMgL,EAAM1B,OAAOtJ,IAC/BgC,EAASyiB,GAAgC7d,EAAatB,EAAMQ,WAE5D9D,EAASyiB,GAAgC7d,EAAatB,EAAMQ,WAGpEiD,WA5C6B,WA6CzB/G,EAASyiB,OAEb/Z,UA/C6B,SA+CnBpB,EAAQ5F,GACd1B,EAASyiB,GAAyBnb,EAAQ5F,OAInC8gB,CAA+B5I,KAAKC,OAAO,CAAC7W,KAAM,kBAAnB4W,CAAsCmP,KCtLrEQ,oLApCX,OACInT,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,iBAAiByI,OAAQ,kBACnC1M,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,KAEEpT,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,2BACVjE,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,KACEpT,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,+BAA+BoP,UAAWxI,KACtD7K,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,+BAA+BoP,UAAW/G,KACtDtM,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAUE,KAAK,yBAAyBC,OAAK,EAACrR,GAAG,mCAIrDlC,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,wBACVjE,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,KACEpT,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,4BAA4BoP,UAAW1P,KACnD3D,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,6BAA6BoP,UAAWpjB,KACpD+P,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,6BAA6BoP,UAAWpjB,KACpD+P,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAUE,KAAK,sBAAsBC,OAAK,EAACrR,GAAG,gCAIlDlC,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,wBACVjE,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,KACEpT,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,6BAA6BoP,UAAWG,KACpDxT,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,8BAA8BoP,UAAWI,KACrDzT,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,8BAA8BoP,UAAWI,KACrDzT,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAUE,KAAK,uBAAuBC,OAAK,EAACrR,GAAG,iCAGnDlC,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAUE,KAAK,iBAAiBC,OAAK,EAACrR,GAAG,sCA/BxBX,8GCqCd+N,kBA3CQ,SAAApiB,GAAS,IACvB4G,EAAyG5G,EAAzG4G,YAAa4f,EAA4FxmB,EAA5FwmB,cAAepjB,EAA6EpD,EAA7EoD,UAAWgG,EAAkEpJ,EAAlEoJ,gBAAiBK,EAAiDzJ,EAAjDyJ,KAAME,EAA2C3J,EAA3C2J,eAAgBnB,EAA2BxI,EAA3BwI,wBACrF,OACEsK,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,wBACbF,EAAAzV,EAAA0V,cAACmL,GAAA,EAAD,CAAMC,KAAM,CAACC,OAAQ,GAAIC,GAAI,EAAGC,IAAK,GAAIC,WAAY3X,EAC/C4X,WAAY,SAACpa,EAAMhG,GAAP,OAAiB0U,EAAAzV,EAAA0V,cAACmL,GAAA,EAAKjI,KAAN,CAAWlc,IAAKqK,EAAK1J,KAChDoY,EAAAzV,EAAA0V,cAAC+I,GAAA,EAAD,CAAM9I,UAAU,oBAAoBtU,MAClCoU,EAAAzV,EAAA0V,cAACmL,GAAA,EAAD,CAAMlL,UAAU,gBACdF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,eACbF,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,gBAAgB0K,EAAKmD,SAAL,UAAA5L,OAAqB8qB,KAAOriB,EAAKoD,QAAQkf,OAAO,uBAAhD,iBAA8E,kFAC3G5T,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,GAAG3E,IAAKqK,EAAK3F,QAAQkoB,UAAU,GAAGC,eAAiB,KAChE9T,EAAAzV,EAAA0V,cAACmL,GAAA,EAAKjI,KAAN,CAAWjD,UAAU,SAASc,QAAS,kBAAMtL,EAAwBpE,EAAKsD,SAAU,EAAGtD,EAAK3F,QAAQkoB,UAAU,GAAIviB,EAAK1J,OACrHoY,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACbF,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,eAAe5O,EAAK3F,QAAQkoB,UAAU,GAAGjoB,OACtDoU,EAAAzV,EAAA0V,cAAA,OAAKkC,IAAK7Q,EAAK3F,QAAQkoB,UAAU,GAAGE,eAAgB3R,IAAI,0EAI7D9Q,EAAK3F,QAAQkoB,UAAU3gB,MAAM,GAAGwK,IAAI,SAAC9U,EAAS+I,GAAV,OAAgBqO,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,mDAAW3E,IAAK2B,EAAQkrB,eAAiBniB,EAAI,EAAGqiB,UAAU,YAC5HhU,EAAAzV,EAAA0V,cAACmL,GAAA,EAAKjI,KAAN,CAAWjD,UAAU,oBAAoBc,QAAS,kBAAMtL,EAAwBpE,EAAKsD,SAAUjD,EAAI,EAAGL,EAAK3F,QAAQkoB,UAAUliB,EAAI,GAAIL,EAAK1J,OACxIoY,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACbF,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,eAAetX,EAAQgD,OACpCoU,EAAAzV,EAAA0V,cAAA,OAAKkC,IAAKvZ,EAAQmrB,eAAgB3R,IAAI,eAK1CuJ,QAAS,CACP3L,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,gBAAKoU,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMM,QAAS,kBAAM0S,EAAcpiB,IAAO1K,KAAK,eACzCK,IAAI,UAC9B+Y,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,gBAAKoU,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMM,QAAS,kBAAM1Q,EAAUgB,IAAO1K,KAAK,UAAUK,IAAI,UAC7E+Y,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,4BAAOoU,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMM,QAAS,kBAAM1K,EAAgBhF,IAAO1K,KAAK,UAAUK,IAAI,YACrF+Y,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,gBAAKoU,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMM,QAAS,kBAAMrK,EAAKrF,EAAK1J,MAAMhB,KAAK,OAAOK,IAAI,UACzE+Y,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAASzW,MAAM,gBAAKoU,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMM,QAAS,kBAAMnK,EAAevF,EAAK1J,IAAK0D,IAAQ1E,KAAK,SACrDK,IAAI,mBC5B9CgtB,eAEJ,SAAAA,EAAY/mB,GAAO,IAAA0R,EAAA,OAAApS,OAAAqS,EAAA,EAAArS,CAAAsS,KAAAmV,IACjBrV,EAAApS,OAAAuS,EAAA,EAAAvS,CAAAsS,KAAAtS,OAAAwS,EAAA,EAAAxS,CAAAynB,GAAAhV,KAAAH,KAAM5R,KA2BRklB,eAAiB,WACfjrB,IAAM0C,IAAI,SACPC,KAAK,SAAAC,GAAO,IAAA8L,EACY9L,EAAIzB,KAAnBA,EADGuN,EACHvN,KACK,IAFFuN,EACG7L,MAEZ4U,EAAKqC,SAAS,CAACpb,YAAayC,OAjCjBsW,EAqHnBsV,aAAe,WAAM,IAAAnS,EACyBnD,EAAKhM,MAAzCpE,EADWuT,EACXvT,YAA0BQ,EADf+S,EACEoS,YACrB5oB,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,IAAMgG,KAAK,yBAA0B,CAAC6B,QAAOolB,KAAM,CAAC5lB,KACjD1E,KAAK,SAAAC,GAAO,IAAA6Q,EACU7Q,EAAIzB,KAAlB0B,EADI4Q,EACJ5Q,KAAM0C,EADFkO,EACElO,IACD,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChBkS,EAAKyV,kBAELzrB,IAAQyJ,MAAM3F,SAjIPkS,EAwInByV,eAAiB,WACfzV,EAAKqC,SAAS,CACZqT,WAAW,EACXH,YAAa,GACbI,eAAe,EACfC,UAAU,EACVhmB,YAAa,MA9IEoQ,EAkJnB6V,iBAAmB,SAAAnU,GAAK,IAAAsN,EACQhP,EAAKhM,MAA3B5I,EADc4jB,EACd5jB,KAEFgF,EAHgB4e,EACR/nB,YACmBoN,OAAO,SAAA3B,GAAI,OAAIA,EAAKtH,OAASA,IACnC0T,IAAI,SAAApM,GAAI,OAAIA,EAAKtH,OAC5C4U,EAAKqC,SAAS,CACZkT,YAAa7T,EAAEE,OAAOgR,QAAUxiB,EAAQ,GACxCulB,eAAe,EACfC,SAAUlU,EAAEE,OAAOgR,WAzJJ5S,EA6JnByB,SAAW,SAAA8T,GAAe,IAAA/F,EACMxP,EAAKhM,MAA3B5I,EADgBokB,EAChBpkB,KAEFgF,EAHkBof,EACVvoB,YACmBoN,OAAO,SAAA3B,GAAI,OAAIA,EAAKtH,OAASA,IACnC0T,IAAI,SAAApM,GAAI,OAAIA,EAAKtH,OAC5C4U,EAAKqC,SAAS,CACZkT,cACAI,gBAAiBJ,EAAYjqB,QAAUiqB,EAAYjqB,OAAS8E,EAAM9E,OAClEsqB,SAAUL,EAAYjqB,SAAW8E,EAAM9E,UAlKzC0U,EAAKhM,MAAQ,CACX0hB,WAAW,EACXH,YAAa,GACbI,eAAe,EACfC,UAAU,EACVhmB,YAAa,GACbxE,KAAMkD,EAAMlD,KACZnE,YAAa,IATE+Y,mFAaC,IACV5U,EAAS8U,KAAKlM,MAAd5I,KACR8U,KAAK5R,MAAMuI,eAAezL,GAC1B8U,KAAK5R,MAAM+I,WAAWjM,GACtB8U,KAAK5R,MAAMmI,kBACXyJ,KAAKsT,0EAG0BC,EAAWqC,GAC1C,GAAG5V,KAAK5R,MAAMlD,OAASqoB,EAAUroB,KAAM,KAC7BA,EAASqoB,EAATroB,KACR8U,KAAK5R,MAAMuI,eAAezL,qCAcrB,IAAAwV,EAAAV,KAAA0K,EACmW1K,KAAK5R,MAAvW4G,EADD0V,EACC1V,YAAaxD,EADdkZ,EACclZ,UAAW2D,EADzBuV,EACyBvV,UAAWmC,EADpCoT,EACoCpT,YAAa/B,EADjDmV,EACiDnV,SAAUL,EAD3DwV,EAC2DxV,QAASmC,EADpEqT,EACoErT,WAAYD,EADhFsT,EACgFtT,YAAahC,EAD7FsV,EAC6FtV,gBAAiBqC,EAD9GiT,EAC8GjT,kBAAmB/B,EADjIgV,EACiIhV,eAAgB8B,EADjJkT,EACiJlT,gBAAiBE,EADlKgT,EACkKhT,kBAAmBG,EADrL6S,EACqL7S,KAAMF,EAD3L+S,EAC2L/S,WAAYI,EADvM2S,EACuM3S,eAAgB9C,EADvNyV,EACuNzV,WAAY2B,EADnO8T,EACmO9T,wBAAyBC,EAD5P6T,EAC4P7T,yBAA0Bb,EADtR0U,EACsR1U,oBAAqBc,EAD3S4T,EAC2S5T,eAAgBjB,EAD3T6U,EAC2T7U,WAAYoB,EADvUyT,EACuUzT,uBADvU4e,EAEuB7V,KAAKlM,MAA3B5I,EAFD2qB,EAEC3qB,KACJ4qB,EAHGD,EAEO9uB,YACsBoN,OAAO,SAAA3B,GAAI,OAAIA,EAAKtH,OAASA,IACjE,OACEgW,EAAAzV,EAAA0V,cAAC4U,GAAA,EAAD,CAAgBrC,OAAQsC,MACtB9U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,YAAYC,MAAO,CAAC2O,QAAS,IAC1C9O,EAAAzV,EAAA0V,cAAC8U,GAAD,CAAgBjhB,YAAaA,EAAa4f,cAAe,SAAA9qB,GAAO,OAAI4W,EAAKyB,SAAS,CAACqT,WAAW,EAAM9lB,YAAa5F,KAAW0H,UAAWA,EAAWgG,gBAAiBA,EAAiBK,KAAMA,EAAME,eAAgBA,EAAgB9C,WAAYA,EAAY2B,wBAAyBA,KAEnRsK,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CACEhX,MAAM,yDACNiX,QAAS5O,EACTpI,KAAM,kBAAMuK,EAAY/B,IACxByO,SAAU3M,GAEV6J,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAOiJ,EAASC,MAAO+L,SAAU,SAAAC,GAAC,OAAIpK,EAAYoK,GAAG,KAChEN,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,OAAQ,GAAf,gBACC4I,EAAQ0J,IAAI,SAAApM,GAAI,OACb0O,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAOjlB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAK/K,IAAK+K,EAAK1E,UAIpDoT,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CACEhX,MAAM,yDACNiX,QAAS3O,EACTrI,KAAM,kBAAM0K,EAAkB/B,EAAgBxK,IAC9C8Y,SAAU3M,GAEV6J,EAAAzV,EAAA0V,cAAA,SAAO+U,QAAQ,SAAf,qBAEEhV,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa5lB,GAAG,QAAQ6E,MAAOoJ,EAAeF,MAAO+L,SAAU,SAAAC,GAAC,OAAIpK,EAAYoK,GAAG,KACjFN,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,OAAQ,GAAf,gBACC4I,EAAQ0J,IAAI,SAAApM,GAAI,OACb0O,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAOjlB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAK/K,IAAK+K,EAAK1E,UAIpDoT,EAAAzV,EAAA0V,cAAA,SAAOE,MAAO,CAACsO,QAAS,QAASI,OAAQ,UAAWmG,QAAQ,YAA5D,iCAEEhV,EAAAzV,EAAA0V,cAACsR,GAAA,EAAD,CAAQC,QAAShd,EAAeC,SAAU4L,SAAU7J,KAEtDwJ,EAAAzV,EAAA0V,cAAA,SAAO+U,QAAQ,SAAS7U,MAAO,CAACsO,QAASja,EAAeC,SAAW,QAAU,SAA7E,iCAEEuL,EAAAzV,EAAA0V,cAACgV,GAAA,EAAD,CACE7pB,MAAOuoB,KAAO,IAAIvrB,KAAKoM,EAAeE,QAAS,cAC/C2L,SAAU,SAACjM,EAAM8gB,GAAP,OAAsBze,EAAWye,EAAY,WAEzDlV,EAAAzV,EAAA0V,cAACkV,GAAA,EAAD,CACE/pB,MAAOuoB,KAAO,IAAIvrB,KAAKoM,EAAeE,QAAS,YAC/C2L,SAAU,SAACjM,EAAM8gB,GAAP,OAAsBze,EAAWye,EAAY,aAI7DlV,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOuF,MAAO,IAAKvc,MAAM,iFAAgBiX,QAAS/D,KAAKlM,MAAM0hB,UAAWzoB,KAAMiT,KAAKoV,aAAcpR,SAAUhE,KAAKuV,gBAC9GrU,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAAEiV,aAAc,oBAAqBC,cAAe,GAAIzU,aAAc,KAChFZ,EAAAzV,EAAA0V,cAACqV,GAAA,EAAD,CACEf,cAAezV,KAAKlM,MAAM2hB,cAC1BlU,SAAUvB,KAAK2V,iBACfjD,QAAS1S,KAAKlM,MAAM4hB,UAHtB,iBAMFxU,EAAAzV,EAAA0V,cAACqV,GAAA,EAASnJ,MAAV,CAAgBhM,MAAO,CAACgI,MAAO,QAAS9H,SAAUvB,KAAKuB,SAAUjV,MAAO0T,KAAKlM,MAAMuhB,aACjFnU,EAAAzV,EAAA0V,cAACiT,GAAA,EAAD,KACG0B,EAAkBlX,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAAC8S,GAAA,EAAD,CAAK9P,KAAM,EAAGhc,IAAKqK,EAAK1J,KACrDoY,EAAAzV,EAAA0V,cAACqV,GAAA,EAAD,CAAUlqB,MAAOkG,EAAKtH,MAAOsH,EAAKtG,iBAK1CgV,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOC,QAAS/N,EAAqBgO,SAAUnN,EAA0B9J,KAAM,kBAAM+J,EAAejB,EAAY3K,IAAO4B,MAAM,wCAC3HoU,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOuJ,EAAWlG,SAASoG,mBAAoBgM,YAAY,yDAAYR,SAAUtK,qDAM9F+I,KAAK5R,MAAMyD,oBApHY4kB,iBAmPZnJ,eAvEE,SAAAxZ,GAAK,MAAK,CACzBoB,QAASpB,EAAMhK,QAAQ9C,MAAMkO,QAC7BF,YAAalB,EAAMhK,QAAQ9C,MAAMgO,YACjCO,SAAUzB,EAAMhK,QAAQ9C,MAAMuO,SAC9BG,eAAgB5B,EAAMhK,QAAQ9C,MAAM0O,eACpCP,UAAWrB,EAAMhK,QAAQ9C,MAAMmO,UAC/BC,gBAAiBtB,EAAMhK,QAAQ9C,MAAMoO,gBACrCrO,YAAa+M,EAAMhK,QAAQ9C,MAAMD,YACjCkO,WAAYnB,EAAMhK,QAAQ9C,MAAMiO,WAChCe,oBAAqBlC,EAAMhK,QAAQ9C,MAAMgP,oBACzCH,WAAY/B,EAAMhK,QAAQ9C,MAAM6O,aAGd,SAAA/K,GAAQ,MAAK,CAC/BqM,WAD+B,SACpBjM,GACTJ,EAASyiB,EAAepW,WAAWjM,KAErCyL,eAJ+B,SAIhBzL,GACbJ,EAASyiB,EAAe5W,eAAezL,KAEzCsG,UAP+B,SAOrBY,GACRtH,EAASyiB,EAAe/b,UAAUY,KAEpCkF,YAV+B,SAUnB/B,GACVzK,EAASyiB,EAAejW,YAAY/B,KAEtC6B,YAb+B,SAanBoK,EAAG7L,GACb7K,EAASyiB,EAAenW,YAAYoK,EAAEE,OAAOpV,MAAOqJ,KAEtD6B,gBAhB+B,SAgBfpF,GACdtH,EAASyiB,EAAe/V,gBAAgBpF,KAE1CiF,WAnB+B,WAoB7BvM,EAASyiB,EAAelW,eAE1BI,kBAtB+B,SAsBb/B,EAAgBxK,GAChCJ,EAASyiB,EAAe9V,kBAAkB/B,EAAgBxK,KAE5DwM,kBAzB+B,SAyBbpL,GAChBxB,EAASyiB,EAAe7V,kBAAkBpL,KAE5CqL,WA5B+B,SA4BpBrC,EAAMxN,GACfgD,EAASyiB,EAAe5V,WAAWrC,EAAMxN,KAE3C+P,KA/B+B,SA+B1BpQ,GACHqD,EAASyiB,EAAe1V,KAAKpQ,KAE/BsQ,eAlC+B,SAkChBtQ,EAAI+E,GACjB1B,EAASyiB,EAAexV,eAAetQ,EAAI+E,KAE7CqF,WArC+B,WAsC7B/G,EAASyiB,EAAe1b,eAE1B0E,gBAxC+B,WAyC7BzL,EAASyiB,EAAehX,oBAE1BK,wBA3C+B,SA2CPd,EAAUtJ,EAAOmD,EAAUlI,GACjDqD,EAASyiB,EAAe3W,wBAAwB,CAACd,WAAUtJ,QAAOmD,WAAUlI,SAE9EoP,yBA9C+B,WA+C7B/L,EAASyiB,EAAe1W,6BAE1BC,eAjD+B,SAiDhBjB,EAAY3K,GACzBJ,EAASyiB,EAAezW,eAAejB,EAAY3K,KAErD+L,uBApD+B,SAoDRuK,GACrB,IAAIzL,EAAqByL,EAAEE,OAAOpV,MAClCxB,EAASyiB,EAAetW,uBAAuBlB,OAIpCuX,CAA+B6H,ICxPxCuB,eAEJ,SAAAA,EAAYtoB,GAAO,IAAA0R,EAAA,OAAApS,OAAAqS,EAAA,EAAArS,CAAAsS,KAAA0W,IACjB5W,EAAApS,OAAAuS,EAAA,EAAAvS,CAAAsS,KAAAtS,OAAAwS,EAAA,EAAAxS,CAAAgpB,GAAAvW,KAAAH,KAAM5R,KASR0F,MAAQ,CACN6iB,oBAAoB,EACpBzhB,QAAS,IAVT3H,QAAQC,IAAIY,EAAMwoB,cAClB9W,EAAK+W,gBAAkB/W,EAAK+W,gBAAgBxW,KAArB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IACvBA,EAAKgX,iBAAmBhX,EAAKgX,iBAAiBzW,KAAtB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IACxBA,EAAKiX,WAAajX,EAAKiX,WAAW1W,KAAhB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAClBA,EAAKiU,WAAajU,EAAKiU,WAAW1T,KAAhB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAClBA,EAAKzI,WAAayI,EAAKzI,WAAWgJ,KAAhB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAPDA,iFAgBjBE,KAAKmC,SAAS,CAACwU,oBAAoB,+CAGlB,IAAAjM,EACwB1K,KAAK5R,MAA/BuU,EADE+H,EACTnc,KAAOoU,eAAiBzX,EADfwf,EACexf,KADf0X,EAEOD,IAAnB3I,EAFY4I,EAEZ5I,OAAQnN,EAFI+V,EAEJ/V,QACbxE,IAAMgG,KAAK,wBAAyB,CAACnD,OAAM8O,SAAQnN,YAChD7B,KAAK,SAAAC,GAAO,IAAA8L,EACS9L,EAAIzB,KAAjB0B,EADI6L,EACJ7L,KAAM0C,EADFmJ,EACEnJ,IACJ,IAAT1C,GAAcpB,IAAQsC,QAAQwB,KAElCoS,KAAK+W,mDAKLvoB,EADmCwR,KAAK5R,MAAhCG,KAAOC,gBACA,CAACwL,OAAQ,KACxBgG,KAAKmC,SAAS,CAACwU,oBAAoB,yCAGxB,IACIhU,EAAoB3C,KAAK5R,MAAhCG,KAAOoU,eACf3C,KAAK5R,MAAM4oB,mBAAmBrU,2CAK9BsU,EADgCjX,KAAK5R,MAA7BG,KAAO0oB,eAEfjX,KAAK5R,MAAM8oB,iEAGO,IAAAxW,EAAAV,KACV9U,EAAS8U,KAAK5R,MAAdlD,KACR7C,IAAM0C,IAAI,gBAAiB,CAACoB,OAAQ,CAACjB,UAClCF,KAAK,SAAAC,GACJyV,EAAKyB,SAAS,CAACjN,QAASjK,EAAIzB,KAAKA,0CAI9B,IAAA2hB,EAC2FnL,KAAK5R,MADhG+oB,EAAAhM,EACC5c,KAAO2U,EADRiU,EACQjU,kBAAmBkU,EAD3BD,EAC2BC,cAAgBC,EAD3ClM,EAC2CkM,yBAD3CC,EAAAnM,EACqEyL,oBADrE,IAAAU,EACoF,GADpFA,EAAArU,EAEiCjD,KAAKlM,MAArC6iB,EAFD1T,EAEC0T,mBAAoBzhB,EAFrB+N,EAEqB/N,QAC5B,OACEgM,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CACEC,QAASsT,EACTvqB,MAAM,uCACNyqB,OACErW,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQtJ,QAASlC,KAAK6W,iBAAtB,4BACA3V,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQtJ,QAASlC,KAAK+T,YAAtB,iBAGJ/P,SAAUhE,KAAK3I,YAEf6J,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAD,CAAMC,SAAU,CAACC,KAAM,GAAIC,WAAY,CAACD,KAAM,GAAIqN,OAAQ,IACxDtQ,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACdpB,EAAkB,UAAW,CAC5BqB,aAAcqS,EAAa/pB,SAAW,GACtC2X,MAAO,CAAC,CAAEC,UAAU,EAAM3a,QAAS,gCAFpCoZ,CAGEhC,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM+R,SAAP,CAAgB2G,KAAM,EAAGzV,YAAY,6DAE1Cb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACdpB,EAAkB,QAAS,CAC1BqB,aAAcqS,EAAaphB,OAAS,KACpCgP,MAAO,CAAC,CAACC,UAAU,KAFpBvB,CAGEhC,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,KACDnM,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,OAAQ,GAAf,4BACC4I,EAAQ0J,IAAI,SAAApM,GAAI,OACf0O,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAOjlB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAK/K,IAAK+K,EAAK1E,WAIlDoT,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACdpB,EAAkB,YAAa,CAC9BuU,cAAe,UACflT,aAAcqS,EAAaxa,YAAa,GAFzC8G,CAGEhC,EAAAzV,EAAA0V,cAACsR,GAAA,EAAD,QAEJ2E,EAAc,aAAelW,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BAC5CpB,EAAkB,cAAe,CAACqB,aAAcqS,EAAaxa,UAAYyY,KAAO+B,EAAatd,aAAe,MAA5G4J,CAAmHhC,EAAAzV,EAAA0V,cAACgV,GAAA,EAAD,CAAYuB,SAAU,CAAC5C,OAAQ,SAAUA,OAAO,mBAAmB/S,YAAY,6DACtL,IAEjBb,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOC,QAAS4S,EAAoB7pB,MAAM,uCAASC,KAAMiT,KAAK8W,iBAAkB9S,SAAUhE,KAAK+W,YAC5F7T,EAAkB,SAAU,CAC3BsB,MAAO,CAAC,CAAEC,UAAU,EAAM3a,QAAS,8BACnCya,aAAc,IAFfrB,CAGEhC,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOiD,YAAY,uCAxGIU,aA+GrBiC,QAAKC,QAALD,CAAcgS,IC2DdiB,uBAlKb,SAAAA,EAAYvpB,GAAO,IAAA0R,EAAA,OAAApS,OAAAqS,EAAA,EAAArS,CAAAsS,KAAA2X,IACjB7X,EAAApS,OAAAuS,EAAA,EAAAvS,CAAAsS,KAAAtS,OAAAwS,EAAA,EAAAxS,CAAAiqB,GAAAxX,KAAAH,KAAM5R,KAOR0F,MAAQ,CACNujB,0BAA0B,EAC1BO,iBAAkB,GAClBhB,aAAc,GACdpqB,OAAQ,GAVRsT,EAAK+X,sBAAwB/X,EAAK+X,sBAAsBxX,KAA3B3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAC7BA,EAAKkX,mBAAqBlX,EAAKkX,mBAAmB3W,KAAxB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAC1BA,EAAKoX,mBAAqBpX,EAAKoX,mBAAmB7W,KAAxB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAC1BA,EAAKgY,mBAAqBhY,EAAKgY,mBAAmBzX,KAAxB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IALTA,uFAgBjBE,KAAKmC,SAAS,CAACkV,0BAA0B,+CAGxBU,GAAc,IAAArX,EAAAV,KAAAiD,EAC6BjD,KAAKlM,MADlCkkB,EAAA/U,EACxB2T,aAAe9tB,WADS,IAAAkvB,EACH,GADGA,EACExrB,EADFyW,EACEzW,MAAOorB,EADT3U,EACS2U,iBACxCG,EAAaze,aAAeye,EAAaze,YACzCye,EAAa7sB,KAAO8U,KAAK5R,MAAMlD,KAC/B6sB,EAAaviB,MAAQyiB,SAASF,EAAaviB,OAC3C1M,IAAQivB,EAAajvB,IAAMA,GAC3B2D,IAAMC,QAAQ,CACZI,MAAO,2EACPC,KAAM,WACCjE,EAaHT,EAAMoF,IAAI,gBAAVC,OAAAC,EAAA,EAAAD,CAAA,GAA+BqqB,IAC5B/sB,KAAK,SAAAC,GAAO,IAAA6Q,EACe7Q,EAAIzB,KAAvB0B,EADI4Q,EACJ5Q,KAAM0C,EADFkO,EACElO,IAAKpE,EADPsS,EACOtS,KACL,IAAT0B,GACF0sB,EAAiBvjB,OAAO7H,EAAO,EAAGhD,GAClCkX,EAAKyB,SAAS,CAACyV,qBACf9tB,IAAQsC,QAAQwB,GAChB8S,EAAKwW,sBAELptB,IAAQkJ,QAAQpF,KArBtBvF,EAAMgG,KAAK,gBAAXX,OAAAC,EAAA,EAAAD,CAAA,GAAgCqqB,IAC7B/sB,KAAK,SAAAC,GAAO,IAAA8L,EACe9L,EAAIzB,KAAvB0B,EADI6L,EACJ7L,KAAM0C,EADFmJ,EACEnJ,IAAKpE,EADPuN,EACOvN,KACL,IAAT0B,GACFwV,EAAKyB,SAAS,SAAA+V,GAAS,MAAK,CAACN,iBAAgB,CAAGpuB,GAAHO,OAAA2D,OAAAwG,EAAA,EAAAxG,CAAYwqB,EAAUN,sBACnE9tB,IAAQsC,QAAQwB,GAChB8S,EAAKwW,sBAELptB,IAAQkJ,QAAQpF,qDAsB5BoS,KAAKmC,SAAS,CAACkV,0BAA0B,EAAOT,aAAc,gDAG7CpkB,EAAMhG,GACvBwT,KAAK6X,wBACL7X,KAAKmC,SAAS,CACZyU,aAAalpB,OAAAC,EAAA,EAAAD,CAAA,GAAK8E,GAAOhG,+CAIhBgG,EAAMhG,GAAO,IAAA4V,EAAApC,KACnB4X,EAAoB5X,KAAKlM,MAAzB8jB,iBACLnrB,IAAMC,QAAQ,CACZI,MAAO,mDACPC,KAAM,WACJ1E,EAAMgG,KAAK,qBAAXX,OAAAC,EAAA,EAAAD,CAAA,GAAqC8E,IAClCxH,KAAK,SAAAC,GAAO,IAAA+Q,EACS/Q,EAAIzB,KAAjB0B,EADI8Q,EACJ9Q,KAAM0C,EADFoO,EACEpO,IACA,IAAT1C,GACFpB,IAAQsC,QAAQwB,GAChBF,OAAOiH,OAAOijB,EAAiBprB,GAAQ,CAAC2rB,OAAQ,IAChD/V,EAAKD,SAAS,CAACyV,sBAEf9tB,IAAQkJ,QAAQpF,+CAOb9E,EAAK0D,GAAO,IAAA4rB,EAAApY,KACzBvT,IAAMC,QAAQ,CACZI,MAAO,yDACPC,KAAM,WACJ1E,EAAMqG,OAAO,gBAAiB,CAACvC,OAAQ,CAACrD,SACrCkC,KAAK,SAAAC,GAAO,IAAA2R,EACS3R,EAAIzB,KAAjB0B,EADI0R,EACJ1R,KAAM0C,EADFgP,EACEhP,IACA,IAAT1C,GACFpB,IAAQsC,QAAQwB,GAChBwqB,EAAKjW,SAAS,SAAA+V,GACZ,IAAIN,EAAmBM,EAAUN,iBAEjC,OADAA,EAAiBvjB,OAAO7H,EAAO,GACxB,CAACorB,uBAGV9tB,IAAQkJ,QAAQpF,oDAOR,IAAAyqB,EAAArY,KAClB3X,EAAM0C,IAAI,gBAAiB,CAACoB,OAAQ,CAACjB,KAAM8U,KAAK5R,MAAMlD,QACnDF,KAAK,SAAAC,GAAO,IAAAkkB,EACUlkB,EAAIzB,KAAlB0B,EADIikB,EACJjkB,KAAM1B,EADF2lB,EACE3lB,KACJ,IAAT0B,GAAcmtB,EAAKlW,SAAS,CAACyV,iBAAkBpuB,EAAKkH,+CAIjD,IAAA4nB,EAAAtY,KAAA8O,EAC4D9O,KAAKlM,MAAjEujB,EADAvI,EACAuI,yBAA0BO,EAD1B9I,EAC0B8I,iBAAkBhB,EAD5C9H,EAC4C8H,aAC5C1rB,EAAQ8U,KAAK5R,MAAblD,KAED8gB,EAAa,CACjBC,SAFe/e,OAAOgf,WAAa,KAEZ,GAAK,GAE9B,OACEhL,EAAAzV,EAAA0V,cAAC4U,GAAA,EAAD,CAAgBrC,OAAQsC,MACtB9U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACbF,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQpK,UAAU,OAAOc,QAASlC,KAAK6X,uBAAvC,wCACA3W,EAAAzV,EAAA0V,cAACmL,GAAA,EAAD,CAAMC,KAAM,CAACC,OAAQ,GAAI+L,GAAI,EAAG7L,IAAK,GAC/BC,WAAYiL,EACZhL,WAAY,SAACpa,EAAMhG,GAAP,OACV0U,EAAAzV,EAAA0V,cAACmL,GAAA,EAAKjI,KAAN,CAAWlc,IAAKqK,EAAK1J,KACnBoY,EAAAzV,EAAA0V,cAAC+I,GAAA,EAAD,CAAMpd,MAAO0F,EAAK4J,UAChB8E,EAAAzV,EAAA0V,cAAA,mBAAKD,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,QAAQyT,KAAOriB,EAAK8G,aAAawb,OAAO,qBAA7D,iBACO,6CAAWjI,QAASra,EAAK2lB,OAAS,CAACjX,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,aACxDc,QAAS,kBAAMzV,IAAMuG,QAAQ,CAC3BlG,MAAO,SACPD,QAASqU,EAAAzV,EAAA0V,cAAA,KAAGE,MAAO,CAACmX,WAAY,SAAUhmB,EAAK4D,YAC7C8K,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,MAAMK,IAAI,QAAO+Y,EAAAzV,EAAA0V,cAAA,oCAAgC,CAClED,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,UAAUK,IAAI,UAAU+Z,QAAS,kBAAMoW,EAAKR,mBAAmBtlB,EAAMhG,MAChF0U,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM2J,UAAU,EAAMzjB,KAAK,YAAYK,IAAI,OACrC+Z,QAAS,kBAAM1P,EAAK4J,UAAYtS,IAAQkJ,QAAQ,sHAAyBslB,EAAKG,aAAajmB,EAAMhG,MACvG0U,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,SAASK,IAAI,SAAS+Z,QAAS,kBAAMoW,EAAKvgB,eAAevF,EAAK1J,IAAK0D,QAE9E0U,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,iBAAiB5O,EAAK3F,YAIzCmf,WAAYA,IAEjBqL,GACDnW,EAAAzV,EAAA0V,cAACuX,GAAD,CAAuB9B,aAAcA,EAAcS,yBAA0BA,EACtDH,mBAAoBlX,KAAKkX,mBAAoBhsB,KAAMA,EACnD8rB,mBAAoBhX,KAAKgX,8BA7J/BvU,wBCPpBiH,WAAkBD,KAAlBC,OAAOF,GAAWC,KAAXD,QACPmP,GAASC,KAATD,MAgHQE,8MA5Gb/kB,MAAQ,CACNlN,eAAgB,GAChBG,YAAa,GACbmF,UAAW,GACXpD,IAAK,GACLgwB,UAAW,MAGb1F,OAAS,SAAAlnB,GAAa,IACbtF,EAAkBkZ,EAAKhM,MAAvBlN,eACW,KAAdsF,EACF7D,IAAM0C,IAAI,iBAAkB,CAACoB,OAAQ,CAACD,eACnClB,KAAK,SAAAC,GACJ,GAA6B,IAAzBA,EAAIzB,KAAKA,KAAK4B,OAAc,KACvB5B,EAAQyB,EAAIzB,KAAZA,KACPsW,EAAK1R,MAAM2qB,QAAQvvB,EAAK,GAAG0B,MAC3B,IAAIoI,EAAgB1M,EAAeuN,OAAO,SAAA3B,GAAI,OAAIhJ,EAAK,GAAGxC,QAAUwL,EAAK1E,OACzEgS,EAAKqC,SAAS,CAACjW,UAAW,GAAIpD,IAAKU,EAAK,GAAGV,IAAKgwB,UAAWxlB,EAAc,GAAGxF,YAE5EhE,IAAQyN,KAAK,0IAInBzN,IAAQyN,KAAK,iDAIjBvL,kBAAoB,SAAAwV,GAClB,IAAItV,EAAYsV,EAAEE,OAAOpV,MACzBwT,EAAKqC,SAAS,CAACjW,iBAGjBoH,cAAgB,SAAA6L,GAAW,IAClBjU,EAAaiU,EAAbjU,KAAMpC,EAAOqW,EAAPrW,IACbgX,EAAK1R,MAAM2qB,QAAQ7tB,GACnB4U,EAAKqC,SAAS,CAACrZ,WAGjBuqB,kBAAoB,SAAA/mB,GAClBwT,EAAKqC,SAAS,CAAC2W,UAAWxsB,GAAS,QA2CrC8hB,kBAAoB,WAClB/lB,IAAM0C,IAAI,eACPC,KAAK,SAAAC,GACJ,GAAsB,IAAlBA,EAAIzB,KAAK0B,KAAY,KACVtE,EAAkBqE,EAAIzB,KAA5BA,KACPsW,EAAKqC,SAAS,CAACvb,yBAKvB0sB,eAAiB,WACfjrB,IAAM0C,IAAI,SACPC,KAAK,SAAAC,GAAO,IAAA8L,EACU9L,EAAIzB,KAAlBA,EADIuN,EACJvN,KACM,IAFFuN,EACE7L,MAEX4U,EAAKqC,SAAS,CAACpb,YAAayC,+EAvD3B,IAAAkX,EAAAV,KAAAiD,EAC0DjD,KAAKlM,MAA/DlN,EADAqc,EACArc,eAAgBG,EADhBkc,EACgBlc,YAAamF,EAD7B+W,EAC6B/W,UAAWpD,EADxCma,EACwCna,IAAKgwB,EAD7C7V,EAC6C6V,UAC9CE,EAAY,SAAAlrB,GAAI,OACpBoT,EAAAzV,EAAA0V,cAACmL,GAAA,EAAD,CAAMlL,UAAU,eAAeuL,WAAY5lB,EAAYqE,OAAS,EAAIrE,EAAYoN,OAAO,SAAAtB,GAAC,OAAIA,EAAE7L,QAAU8G,IAAQ,KAAM4lB,OAAQ,CAACC,UAAWzS,EAAAzV,EAAA0V,cAAA,QAAME,MAAO,CAACsO,QAAS,SAAvB,QACxI/C,WAAY,SAAAzN,GAAO,OACjB+B,EAAAzV,EAAA0V,cAACmL,GAAA,EAAKjI,KAAN,CAAWjD,UAAWjC,EAAQrW,MAAQA,EAAM,kBAAoB,SAAUoZ,QAAS,kBAAMxB,EAAKpN,cAAc6L,IAAUhX,IAAKgX,EAAQrW,KACjIoY,EAAAzV,EAAA0V,cAACqC,GAAA,EAAD,CAAQyJ,MAAM,SAAS3L,KAAM,GAAIM,KAAK,SAASzC,EAAQjT,eAI/D,OACEgV,EAAAzV,EAAA0V,cAAC2I,GAAA,EAAD,CAAQzI,MAAO,CAACoJ,WAAY,QAASrJ,UAAU,yBAC7CF,EAAAzV,EAAA0V,cAAC8X,GAAD,CAAO7X,UAAU,wBAAwB6E,MAAM,QAAQoD,MAAM,OAC3DnI,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM2M,OAAP,CACErK,UAAU,eACVW,YAAY,6CACZoK,SAAUnM,KAAKoT,OACf9mB,MAAOJ,EACPqV,SAAUvB,KAAKhU,oBAEjBkV,EAAAzV,EAAA0V,cAACmL,GAAA,EAAD,KACEpL,EAAAzV,EAAA0V,cAACmL,GAAA,EAAKjI,KAAN,KACEnD,EAAAzV,EAAA0V,cAAC+X,GAAA,EAAD,CAAUxJ,UAAU,EAAOyJ,WAAS,EAACL,UAAWA,EAAWvX,SAAUvB,KAAKqT,mBACxEnS,EAAAzV,EAAA0V,cAACwX,GAAD,CAAOlJ,OAAO,qBAAMtnB,IAAI,sBACrB6wB,EAAU,uBAEZpyB,EAAegY,IAAI,SAAApM,GAAI,OACtB0O,EAAAzV,EAAA0V,cAACwX,GAAD,CAAOlJ,OAAQjd,EAAK1E,KAAM3F,IAAKqK,EAAK1E,MACjCkrB,EAAUxmB,EAAK1E,aAO5BoT,EAAAzV,EAAA0V,cAACiY,GAAD,KAAUpZ,KAAK5R,MAAMvB,sDA0BzBmT,KAAKoO,oBACLpO,KAAKsT,wBA1GyB7Q,aCA5B4W,gMAEiB,IACXnuB,EAAS8U,KAAK5R,MAAdlD,KACR8U,KAAK5R,MAAM+I,WAAWjM,GACtB8U,KAAK5R,MAAM6J,eAAe/M,4DAGKqoB,EAAWqC,GAC1C,GAAG5V,KAAK5R,MAAMlD,OAASqoB,EAAUroB,KAAM,KAC7BA,EAASqoB,EAATroB,KACR8U,KAAK5R,MAAM+I,WAAWjM,GACtB8U,KAAK5R,MAAM6J,eAAe/M,qCAIrB,IAAAwf,EACuI1K,KAAK5R,MAA3I6H,EADDyU,EACCzU,YAAaf,EADdwV,EACcxV,QAASgD,EADvBwS,EACuBxS,eAAgBE,EADvCsS,EACuCtS,aAAcC,EADrDqS,EACqDrS,cAAeE,EADpEmS,EACoEnS,UAAWD,EAD/EoS,EAC+EpS,iBAAkBnC,EADjGuU,EACiGvU,WAAYD,EAD7GwU,EAC6GxU,gBAAiBhL,EAD9Hwf,EAC8Hxf,KAC/HouB,EAAgB,CACpB,CACEnxB,IAAK,cACL2E,MAAO,uCACP6gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC5lB,EAAMoK,GACb,IAAIkD,EAAOuf,KAA4B,IAArBziB,EAAOmnB,aAAoBzE,OAAO,wBACpD,OACE5T,EAAAzV,EAAA0V,cAAA,YAAO7L,KAIb,CACExI,MAAO,2BACP6gB,MAAO,SACPC,OAAQ,SAAC5lB,EAAMoK,GACb,IAAI+a,EAAM,SAIV,OAHG/a,EAAOoD,QACR2X,EAAMjY,EAAQ0J,IAAI,SAAApM,GAAI,OAAIJ,EAAOoD,QAAUhD,EAAK/K,GAAK+K,EAAK1E,KAAO,kBAE5D,CAACqf,SAGZ,CACErgB,MAAO,2BACP6gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC5lB,EAAMoK,GACb,IACIhG,EAMJ,OAJEA,EADY,KAFDgG,EAAOgE,OAGR,8CAEA,8CAEL8K,EAAAzV,EAAA0V,cAAA,YAAO/U,KAGlB,CACEU,MAAO,2BACP6gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC5lB,EAAMoK,GAMb,IALA,IAAIonB,EACkC,IAApCpnB,EAAOvF,QAAQkoB,UAAU3pB,OACrBgH,EAAOvF,QAAQkoB,UACf,GACF0E,EAAS,GACJ5mB,EAAI,EAAGA,EAAI2mB,EAAIpuB,OAAQyH,IAC9B4mB,EAAOnlB,KAAKzB,EAAI,EAAI,IAAM2mB,EAAI3mB,GAAG/F,OAEnC,OACEoU,EAAAzV,EAAA0V,cAACoC,GAAA,EAAD,CAAS2R,UAAU,MAAMpoB,MAAO2sB,GAC9BvY,EAAAzV,EAAA0V,cAAA,KAAGC,UAAU,eAAeC,MAAO,CAACgI,MAAO,MAAOoQ,MAK1D,CACEtxB,IAAK,WACL2E,MAAO,2BACP6gB,MAAO,SACPC,OAAQ,SAAC5lB,EAAMoK,GACb,IAAIkD,EAAOlD,EAAOuD,SAAW,SAAM,SACnC,OACEuL,EAAAzV,EAAA0V,cAAA,YAAO7L,KAIb,CACEnN,IAAK,SACL2E,MAAO,2BACP6gB,MAAO,SACPC,OAAQ,SAAC5lB,EAAMoK,GACb,IAAIkD,EAAO,KAIX,OAHIlD,EAAOwD,SACTN,EAAOuf,KAAOziB,EAAOwD,QAAQkf,OAAO,yBAGpC5T,EAAAzV,EAAA0V,cAAA,YAAO7L,KAIb,CACExI,MAAO,SACP6gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC5lB,EAAMoK,GAAP,OACN8O,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQnB,GAAI,GAAIhJ,QAAS,kBAAMhK,EAAehN,EAAMkH,EAAOgE,SAASiV,cAAc,6BAClFnK,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ5B,WAAW,SAASvI,QAAS,kBAAM9J,EAAahG,EAAOlH,KAAMkH,EAAOgE,SAASiV,cAAc,iCAK3G,OACCnK,EAAAzV,EAAA0V,cAAA,WACGD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aAMbF,EAAAzV,EAAA0V,cAACkP,GAAA,EAAD,CAAO/O,KAAK,QAAQoO,UAAQ,EAACY,OAAQ,SAAAle,GAAM,OAAIA,EAAOtJ,KAAK2kB,QAAS6L,EAAe3M,WAAY1W,KAEjGiL,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CACEhX,MAAM,2EACNiX,QAAS7N,EACTnJ,KAAM,kBAAMwL,EAAUpC,IACtB6N,SAAU3L,GAEV6I,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOuC,MAAO,CAACgI,MAAO,KAAM/c,MAAO6J,EAAWE,YAAakL,SAAUjJ,IACrE4I,EAAAzV,EAAA0V,cAAA,KAAGE,MAAO,CAAC9D,MAAO,MAAO2P,UAAW,KAApC,4GAnIYzK,aAsLP6K,eA1CE,SAAAxZ,GAAK,MAAK,CACzBoB,QAASpB,EAAMhK,QAAQ9C,MAAMkO,QAC7Be,YAAanC,EAAMhK,QAAQ9C,MAAMiP,YACjCC,gBAAiBpC,EAAMhK,QAAQ9C,MAAMkP,gBACrCC,WAAYrC,EAAMhK,QAAQ9C,MAAMmP,WAChCG,QAASxC,EAAMhK,QAAQ9C,MAAMsP,UAGX,SAAAxL,GAAQ,MAAK,CAC/BmN,eAD+B,SAChB/M,GACbJ,EAASyiB,EAAetV,eAAe/M,KAEzCiM,WAJ+B,SAIpBjM,GACTJ,EAASyiB,EAAepW,WAAWjM,KAErCgN,eAP+B,SAOhBhN,EAAMkL,GACnBtL,EAASyiB,EAAerV,eAAehN,EAAMkL,KAE/CgC,aAV+B,SAUlBlN,EAAMkL,GACjBtL,EAASyiB,EAAenV,aAAalN,EAAMkL,KAE7CiC,cAb+B,WAc7BvN,EAASyiB,EAAelV,kBAE1BE,UAhB+B,SAgBrBpC,GACRrL,EAASyiB,EAAehV,UAAUpC,KAEpCmC,iBAnB+B,SAmBdkJ,GACf1W,EAASyiB,EAAejV,iBAAiBkJ,EAAEE,OAAOpV,SAEpDkM,aAtB+B,SAsBlBtN,GACXJ,EAASyiB,EAAe/U,aAAatN,KAEvCuN,WAzB+B,SAyBpBpD,EAAMqkB,GACf5uB,EAASyiB,EAAe9U,WAAWihB,KAErChhB,WA5B+B,SA4BpBxN,EAAMoL,GACf,IAAIhB,EAAO,IAAIhM,KAAKgN,GAAS/M,UAAU,IACvCuB,EAASyiB,EAAe7U,WAAWxN,EAAMoK,OAI9BgY,CAA+B+L,cC3LxCM,GAAiB,CACrBtQ,MAAO,OACPuQ,UAAW,SACXnP,WAAY,0BACZoP,SAAU,WACV7J,QAAS,UACTiC,IAAK,EACL6H,KAAM,EACNC,OAAQ,GAKKC,GAFC,SAAA5rB,GAAK,OAAI8S,EAAAzV,EAAA0V,cAAA,OAAKE,MAAOsY,IAAgBzY,EAAAzV,EAAA0V,cAAC8Y,GAAA,EAAD,CAAMC,SAAU9rB,EAAM8rB,aCFnEC,GAAYC,KAAZD,QAEFhF,8MAEJrhB,MAAQ,CACN5I,KAAM,KACNmvB,qBAAqB,EACrBH,UAAU,KAGZhwB,MAAQ,kBAAMwM,WAAW,WACvBoJ,EAAKqC,SAAS,CAAC+X,UAAU,KACxB,QAEHnB,QAAU,SAAA7tB,GACRovB,aAAaxa,EAAK5V,OAClB4V,EAAKqC,SAAS,CAAC+X,UAAU,IACzBpa,EAAKqC,SAAS,CAACjX,SACf4U,EAAK5V,4FAILJ,IAAQkJ,QAAQ,2FAGT,IAAA0N,EAAAV,KAAA0K,EAC8B1K,KAAK5R,MAAnCqI,EADAiU,EACAjU,YAAauB,EADb0S,EACa1S,cADbiL,EAEuCjD,KAAKlM,MAA5C5I,EAFA+X,EAEA/X,KAAMmvB,EAFNpX,EAEMoX,oBAAqBH,EAF3BjX,EAE2BiX,SAC5BK,EAAa,CACjBC,OAAQ,OACRzK,OAAQ,UAEV,OACE7O,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAACsZ,GAAD,CAAqB1B,QAAS/Y,KAAK+Y,QAASlsB,QAC1C3B,EACIgvB,EACEhZ,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAACuZ,GAAD,CAASR,SAAUA,IAAWhZ,EAAAzV,EAAA0V,cAACwZ,GAAA,EAAD,CAAOjmB,YAAY,GAAGkmB,MAAM,yDAAyDL,WAAYA,KAEjIrZ,EAAAzV,EAAA0V,cAAA,WACFD,EAAAzV,EAAA0V,cAAC0Z,GAAA,EAAD,CAAMC,YAAY,QAChB5Z,EAAAzV,EAAA0V,cAACgZ,GAAD,CAASY,IAAI,eAAK5yB,IAAI,KACpB+Y,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ/K,KAAK,UAAUmJ,WAAW,UAAUY,cAAc,2BAAOnJ,QAAS,kBAAMzL,EAAYvL,MAC5FgW,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ/K,KAAK,UAAU+J,cAAc,2BAAOnJ,QAAS,kBAAMxB,EAAKyB,SAAS,CAACkY,qBAAqB,OAC/FnZ,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ/K,KAAK,UAAU4J,GAAI,GAAIT,WAAW,SAASvI,QAAS,kBAAMlK,EAAc9M,IAAOmgB,cAAc,6BACrGnK,EAAAzV,EAAA0V,cAAC6Z,GAAD,CAAe9vB,KAAMA,KAEvBgW,EAAAzV,EAAA0V,cAACgZ,GAAD,CAASY,IAAI,eAAK5yB,IAAI,KACpB+Y,EAAAzV,EAAA0V,cAAC8Z,GAAD,CAAc/vB,KAAMA,OAIxBgW,EAAAzV,EAAA0V,cAACwZ,GAAA,EAAD,CAAOjmB,YAAY,GAAGkmB,MAAM,yDAAyDL,WAAYA,OAExGrvB,GAAQgW,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOhX,MAAM,2BAAOiX,QAASsW,EAAqBhR,MAAO,KAAMkO,OAAO,GAAGvT,SAAU,kBAAMtD,EAAKyB,SAAS,CAACkY,qBAAqB,MAASnZ,EAAAzV,EAAA0V,cAAC+Z,GAAD,CAAShwB,KAAMA,aAtD3IuX,aAsEZ6K,eAAQ,KATH,SAAAxiB,GAAQ,MAAK,CAC/B2L,YAD+B,SACnBvL,GACVJ,EAASyiB,EAAe9W,YAAYvL,KAEtC8M,cAJ+B,SAIjB9M,GACZJ,EAASyiB,EAAevV,cAAc9M,OAI3BoiB,CAA2B6H,IC5ElCxJ,GAAWC,KAAXD,OAEFwP,8MAEJrnB,MAAQ,CACNgF,YAAa,yIAIbkH,KAAK5R,MAAM+L,qBACX6F,KAAK5R,MAAMqN,cACXuE,KAAK5R,MAAM2D,cACXiO,KAAK5R,MAAM/C,WAAW2U,KAAK5R,MAAMlH,8CAG1B,IAAAwjB,EAC0X1K,KAAK5R,MAA9X4D,EADD0Y,EACC1Y,SAAU6G,EADX6R,EACW7R,gBAAiBuiB,EAD5B1Q,EAC4B0Q,YAAa7gB,EADzCmQ,EACyCnQ,cAAeC,EADxDkQ,EACwDlQ,gBAAiB1B,EADzE4R,EACyE5R,YAAa4B,EADtFgQ,EACsFhQ,mBAAoBZ,EAD1G4Q,EAC0G5Q,SAAUf,EADpH2R,EACoH3R,aAAcC,EADlI0R,EACkI1R,iBAAkB2B,EADpJ+P,EACoJ/P,uBAAwBG,EAD5K4P,EAC4K5P,gBAAiB7B,EAD7LyR,EAC6LzR,iBAAkB2B,EAD/M8P,EAC+M9P,qBAAsB/M,EADrO6c,EACqO7c,YAAagN,EADlP6P,EACkP7P,kBAAmB7T,EADrQ0jB,EACqQ1jB,MAAOqE,EAD5Qqf,EAC4Qrf,WAAYnE,EADxRwjB,EACwRxjB,YAAaC,EADrSujB,EACqSvjB,WAAY4T,EADjT2P,EACiT3P,iBAAkBC,EADnU0P,EACmU1P,kBAAmBC,EADtVyP,EACsVzP,eAAgBC,EADtWwP,EACsWxP,eACvWmgB,EAAoB,CACxB,CACElzB,IAAK,UACL2E,MAAO,2BACP4gB,UAAW,UACXC,MAAO,SACPC,OAAQ,SAAA5lB,GAAI,OAAKA,GAAO,6EAE1B,CACEG,IAAK,QACL2E,MAAO,eACP4gB,UAAW,QACXC,MAAO,SACPtE,MAAO,IAET,CACElhB,IAAK,QACL2E,MAAO,2BACP6gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC5lB,EAAMoK,GAAP,OAAkBA,EAAO+J,KAAQ/J,EAAOwH,OAASxH,EAAOoH,MAAQ,GAAK,eAAOpH,EAAOoH,MAAQ,eAAQ,iBAE7G,CACErR,IAAK,cACL2E,MAAO,2BACP6gB,MAAO,SACP2N,OAAQ,SAAC7vB,EAAG8vB,GAAJ,OAAW,IAAIjyB,KAAKmC,EAAE6N,aAAc/P,UAAa,IAAID,KAAKiyB,EAAEjiB,aAAc/P,WAClFqkB,OAAQ,SAAC5lB,EAAMoK,GAAP,OAAkBA,EAAOgK,UAAYyY,KAAOziB,EAAOkH,aAAawb,OAAO,uBAAyB,iBAE1G,CACE3sB,IAAK,kBACLulB,UAAW,kBACX5gB,MAAO,2BACP6gB,MAAO,SACP2N,OAAQ,SAAC7vB,EAAG8vB,GAAJ,OAAUA,EAAEhiB,gBAAkB9N,EAAE8N,iBACxCqU,OAAQ,SAAC5lB,EAAMoK,GAAP,OAAkBA,EAAOiK,SAAWwY,KAAO7sB,GAAM8sB,OAAO,YAAc,iBAEhF,CACE3sB,IAAK,cACLulB,UAAW,cACX5gB,MAAO,6DACP6gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAA5lB,GAAI,OAAIA,EAAKoM,MAAM,EAAG,GAAGwK,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAAA,KAAGhZ,IAAKqK,EAAK1J,KAAM0J,EAAKtG,eAEvE,CACE/D,IAAK,MACL2E,MAAO,2BACP6gB,MAAO,SACPD,UAAW,MACXrE,MAAO,GACPuE,OAAQ,SAAA5lB,GAAI,MAAa,MAATA,EAAe,2BAAkB,MAATA,EAAgB,2BAAkB,MAATA,EAAe,2BAAS,6BAE3F,CACEG,IAAK,cACL2E,MAAO,2BACP6gB,MAAO,SACPD,UAAW,cACXrE,MAAO,GACPuE,OAAQ,SAAC5lB,EAAMoK,GAAP,OAAkBA,EAAO+J,KAAiB,IAATnU,EAAa,2BAAS,2BAAU,OAE3E,CACEG,IAAK,QACL2E,MAAO,2BACP6gB,MAAO,SACPD,UAAW,QACXrE,MAAO,GACPuE,OAAQ,SAAC5lB,EAAMoK,GAAP,OAAkBA,EAAO+J,KAAO,2BAAUnU,GAAc,IAElE,CACE8E,MAAO,SACP6gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC5lB,EAAMoK,EAAQ5F,GAAf,OACN0U,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ5B,WAAW,UAAUvI,QAAS,kBAAMkZ,EAAY1tB,OAAAC,EAAA,EAAAD,CAAA,GAAI0E,KAAUiZ,cAAc,iBACpFnK,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQhB,cAAenK,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAI,CAACsC,SAAU,WAAY9T,MAAMlE,OAAAC,EAAA,EAAAD,CAAA,GAAK0E,KAA5C,kBACvB8O,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQd,SAAUnZ,EAAOgK,WAAahK,EAAOoH,OAASpH,EAAOiK,SAAUoO,WAAarY,EAAOgK,WAAahK,EAAOoH,OAASpH,EAAOiK,SAAY,OAAS,UAAW6F,QAAS,kBAAM1H,EAAgBpI,EAAOtJ,IAAKsJ,EAAOoD,QAAQ6V,cAAc,6BACvOnK,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ5B,WAAW,SAASvI,QAAS,kBAAM3H,EAAcnI,EAAOtJ,IAAK0D,IAAQ6e,cAAc,qBAK7FkE,EAAe,CACnBpB,gBAAiBnV,EACjBuI,SAAU5G,GAENqR,EAAa,CACjBwP,iBAAiB,EACjBC,kBAAkB,EAClBla,SAAUlW,EACVqwB,QAASx0B,GAEX,OACCga,EAAAzV,EAAA0V,cAAA,WACGD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CACImG,YAAU,EACVF,YAAU,EACV/lB,MAAOnF,EACPoa,SAAUxG,EACVoR,SAAUnR,EACVqG,MAAO,CAAEgI,MAAO,IAAKxH,YAAa,GAClCE,YAAY,8CAEb/P,EAAS4M,IAAI,SAAApM,GAAI,OACd0O,EAAAzV,EAAA0V,cAACwa,GAAD,CAAQxzB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAKtG,WAAYsG,EAAKtG,cAG1DgV,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CAAQ9f,MAAOwM,EAAayI,SAAU,SAAAjV,GAAK,OAAIoO,EAAmBpO,EAAO,gBAAgB+U,MAAO,CAACQ,YAAa,IAC5GX,EAAAzV,EAAA0V,cAACwa,GAAD,CAAQrvB,MAAO,GAAf,gBACA4U,EAAAzV,EAAA0V,cAACwa,GAAD,CAAQrvB,MAAO,GAAf,gBACA4U,EAAAzV,EAAA0V,cAACwa,GAAD,CAAQrvB,MAAO,GAAf,gBACA4U,EAAAzV,EAAA0V,cAACwa,GAAD,CAAQrvB,MAAO,GAAf,gBACA4U,EAAAzV,EAAA0V,cAACwa,GAAD,CAAQrvB,MAAO,GAAf,iBAEF4U,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CAAQ/K,MAAO,CAACgI,MAAO,KAAM/c,MAAOyM,EAAcwI,SAAU,SAAAjV,GAAK,OAAIoO,EAAmBpO,EAAO,kBAC7F4U,EAAAzV,EAAA0V,cAACwa,GAAD,CAAQrvB,MAAM,4BAAd,4BACA4U,EAAAzV,EAAA0V,cAACwa,GAAD,CAAQrvB,MAAM,sBAAd,sBACCwN,EAAS8E,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAACwa,GAAD,CAAQxzB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAKxL,OAAQwL,EAAKxL,UAExEka,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ/K,KAAK,UAAUmJ,WAAW,UAAUY,cAAc,uCAASL,GAAI,EAAG9I,QAASjH,IACnFiG,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ/K,KAAK,UAAU0J,GAAI,EAAGP,WAAW,UAAUY,cAAc,uCAASnJ,QAAStH,IACnFsG,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ/K,KAAK,UAAU0J,GAAI,EAAGP,WAAW,SAASY,cAAc,2BAAOnJ,QAAS,kBAAMhH,EAAelC,MACrGkI,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ/K,KAAK,UAAU4J,GAAI,GAAIG,cAAenK,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAG,YAAT,0CAC9ClC,EAAAzV,EAAA0V,cAACkP,GAAA,EAAD,CAAO/O,KAAK,SAASgP,OAAQ,SAAAle,GAAM,OAAIA,EAAOtJ,KAAK2kB,QAAS4N,EAAmB1O,WAAY9T,EAAiB0W,aAAcA,EAAcvD,WAAYA,KAEtJ9K,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOhX,MAAM,iCAAQiX,QAAS9K,EAAkB+K,SAAUnJ,EAAmB9N,KAAM,kBAAM+N,EAAgB9B,EAAkBhS,KACzHka,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa9L,SAAU1T,EAAavB,MAAOtF,GACxC8S,EAAS8E,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAOjlB,IAAKqK,EAAK1J,IAAKwD,MAAOkG,EAAKxL,OAAQwL,EAAKxL,mBAhJ9Dyb,aA2NJ6K,eAnEE,SAAAxZ,GAAK,MAAK,CACzB9B,SAAU8B,EAAMhK,QAAQ4U,KAAK1M,SAC7B6G,gBAAiB/E,EAAMhK,QAAQ4U,KAAK7F,gBACpCC,YAAahF,EAAMhK,QAAQ4U,KAAK5F,YAChCgB,SAAUhG,EAAMhK,QAAQ4U,KAAK5E,SAC7Bf,aAAcjF,EAAMhK,QAAQ4U,KAAK3F,aACjCC,iBAAkBlF,EAAMhK,QAAQ4U,KAAK1F,iBACrCC,iBAAkBnF,EAAMhK,QAAQ4U,KAAKzF,iBACrCjS,MAAO8M,EAAMhK,QAAQ4U,KAAK1X,MAC1BE,YAAa4M,EAAMhK,QAAQ4U,KAAKxX,YAChCC,WAAY2M,EAAMhK,QAAQ4U,KAAKvX,aAGb,SAAA2D,GAAQ,MAAK,CAC/BiH,YAD+B,WAE7BjH,EAASyiB,EAAexb,gBAE1BoI,mBAJ+B,WAK7BrP,EAASyiB,EAAepT,uBAE1BsB,YAP+B,WAQ7B3Q,EAASyiB,EAAe9R,gBAE1B2f,YAV+B,SAUnBhpB,GACVtH,EAASyiB,EAAejT,kBAAkBlI,KAE5CmI,cAb+B,SAajB9S,EAAI+E,GAChB1B,EAASyiB,EAAehT,cAAc9S,EAAI+E,KAE5CgO,gBAhB+B,SAgBf/S,EAAI+N,GAClB1K,EAASyiB,EAAe/S,gBAAgB/S,EAAI+N,KAE9CkF,mBAnB+B,SAmBZpO,EAAOwB,GACxBhD,EAASyiB,EAAe7S,mBAAmBpO,EAAOwB,KAEpD6M,uBAtB+B,SAsBR3B,GACrBlO,EAASyiB,EAAe5S,uBAAuB3B,KAEjD8B,gBAzB+B,SAyBf9B,EAAkBhS,GAChC8D,EAASyiB,EAAezS,gBAAgB9B,EAAkBhS,KAE5D4T,qBA5B+B,WA6B7B9P,EAASyiB,EAAe3S,yBAE1B/M,YA/B+B,SA+BnB2T,GACV1W,EAASyiB,EAAe1f,YAAY2T,EAAEE,OAAOpV,SAE/CuO,kBAlC+B,WAmC7B/P,EAASyiB,EAAe1S,sBAE1BxP,WArC+B,SAqCpBC,GACTR,EAASyiB,EAAeliB,WAAWC,KAErCyP,iBAxC+B,SAwCdzO,GACfxB,EAASyiB,EAAexS,iBAAiBzO,KAE3C0O,kBA3C+B,SA2Cb1O,GAChBxB,EAASyiB,EAAevS,kBAAkB1O,KAE5C2O,eA9C+B,WA+C7BnQ,EAASyiB,EAAetS,mBAE1BC,eAjD+B,SAiDhBlC,GACblO,EAASyiB,EAAerS,eAAelC,OAI5BsU,CAA+B6N,cC5MvCxP,WAAUC,KAAVD,QAEDiQ,uMAGF5b,KAAK5R,MAAM2D,cACXiO,KAAK5R,MAAMqN,cACX,IAAI7J,EAAQoO,KAAK5R,MAAMQ,QAAQ+C,SAASC,MACxCA,GAASoO,KAAK5R,MAAMmO,oBAAoB3K,oCAGjC,IAEHiqB,EAAaC,EAAiBC,EAF3Bjc,EAAAE,KAAA0K,EAC2W1K,KAAK5R,MAAhX8K,EADAwR,EACAxR,gBAAiBrM,EADjB6d,EACiB7d,QAASsO,EAD1BuP,EAC0BvP,mBAAoBC,EAD9CsP,EAC8CtP,mBAAoBwV,EADlElG,EACkEkG,UAAW1U,EAD7EwO,EAC6ExO,cAAelK,EAD5F0Y,EAC4F1Y,SAAUsB,EADtGoX,EACsGpX,cAAe/G,EADrHme,EACqHne,cAAeqC,EADpI8b,EACoI9b,QAAS4N,EAD7IkO,EAC6IlO,iBAAkBC,EAD/JiO,EAC+JjO,kBAAmBzC,EADlL0Q,EACkL1Q,OAAQ6C,EAD1L6N,EAC0L7N,aAAc9C,EADxM2Q,EACwM3Q,aAAc2C,EADtNgO,EACsNhO,QAAS5C,EAD/N4Q,EAC+N5Q,SAAUG,EADzOyQ,EACyOzQ,kBAAmBC,EAD5PwQ,EAC4PxQ,WAAYwB,EADxQgP,EACwQhP,eAAgBE,EADxR8O,EACwR9O,uBAAwBC,EADhT6O,EACgT7O,wBAAyBE,EADzU2O,EACyU3O,YAAaE,EADtVyO,EACsVzO,kBAG3V6f,EADEjvB,EAAQ4H,OACQyM,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAACgI,MAAO,SAAUhG,IAAKxW,EAAQ4H,OAAQ6O,IAAI,KAEvDpC,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,KAAQtK,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,WAAnB,8BAGlB+zB,EADE3iB,EAAgBC,IACJ+H,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAACgI,MAAO,SAAUhG,IAAKnK,EAAgBC,IAAKmK,IAAI,KAE5DpC,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,KAAQtK,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,WAAnB,8BAEa,IAAzBoR,EAAgBpR,KAClBi0B,EAAkB7a,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,2BAAOlD,UAAU,gBAClDF,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM+R,SAAP,CAAgBC,SAAU,CAACC,QAAS,GAAIzkB,MAAOO,EAAQ6H,YAAaqN,YAAY,6CAChER,SAAU,SAAAC,GAAC,OAAIrG,EAAmBqG,EAAG,mBAErB,IAAzBtI,EAAgBpR,KACzBi0B,EAAkB7a,EAAAzV,EAAA0V,cAAA,WAChBD,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAC+P,GAAA,EAAD,CAAQpjB,KAAK,YAAYvC,OAAO,gBAAgBgW,SAAU,SAAChK,GACzDqZ,EAAU1X,EAAiB3B,IAC1B4Z,gBAAgB,GAChB2K,IAGL5a,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOiD,YAAY,6CAAUzV,MAAOO,EAAQC,MAAOyU,SAAU,SAAAC,GAAC,OAAIrG,EAAmBqG,EAAG,aAE1FN,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,2BAAOlD,UAAU,gBAChCF,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM+R,SAAP,CAAgBC,SAAU,CAACC,QAAS,GAAIzkB,MAAOO,EAAQ6H,YAAaqN,YAAY,6CAChER,SAAU,SAAAC,GAAC,OAAIrG,EAAmBqG,EAAG,mBAEvDN,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOiD,YAAY,6CAAUzV,MAAOO,EAAQzD,IAAKmY,SAAU,SAAAC,GAAC,OAAIrG,EAAmBqG,EAAG,YAGxD,IAAzBtI,EAAgBpR,OACzBi0B,EACE7a,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAC+P,GAAA,EAAD,CAAQpjB,KAAK,YAAYvC,OAAO,gBAAgBgW,SAAU,SAAChK,GACzDqZ,EAAU1X,EAAiB3B,IAC1B4Z,gBAAgB,GAChB0K,KAIT,IAQIG,EA+BJ,OA9BgC,IAA5B9iB,EAAgBG,QAClB2iB,EAAU9a,EAAAzV,EAAA0V,cAAAD,EAAAzV,EAAAkY,SAAA,KAAEzC,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BAC3BpD,EAAAzV,EAAA0V,cAAC8a,GAAA,EAAD,CAAa3vB,MAAO4M,EAAgBM,MAAO0iB,IAAK,EAAG3a,SAAU,SAAAjV,GAAK,OAAI8O,EAAmB9O,EAAO,YAChG4U,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CAAQ9f,MAAO4M,EAAgBU,OAAQ2H,SAAU,SAAAjV,GAAK,OAAI8O,EAAmB9O,EAAO,WAC5E+U,MAAO,CAACgI,MAAO,KACrBnI,EAAAzV,EAAA0V,cAACgb,GAAD,CAAQ7vB,MAAO,GAAf,gBACA4U,EAAAzV,EAAA0V,cAACgb,GAAD,CAAQ7vB,MAAO,GAAf,kBAGF4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAO4M,EAAgBS,YACvB4H,SAAU,SAAAC,GAAC,OAAIpG,EAAmBoG,EAAEE,OAAOpV,MAAO,iBAC7D4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAO,GAAd,4BACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAO,GAAd,+BAI+B,IAA5B4M,EAAgBG,QACzB2iB,EACE9a,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACgV,GAAA,EAAD,CAAYuB,UAAQ,EAAC3V,YAAY,2BAAOzV,MAAOuoB,KAAO3b,EAAgBI,aAC1DiI,SAAU,SAACjV,EAAO8vB,GAAR,OAAuBhhB,EAAmBghB,EAAY,mBAE3C,IAA5BljB,EAAgBG,UACzB2iB,EACE9a,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACkV,GAAA,EAAD,CAAYtU,YAAY,2BAAOzV,MAAOuoB,KAAO3b,EAAgBK,iBACjDgI,SAAU,SAACjV,EAAO8vB,GAAR,OAAuBhhB,EAAmB9O,EAAO,wBAI3E4U,EAAAzV,EAAA0V,cAAC4U,GAAA,EAAD,CAAgBrC,OAAQsC,MAEtB9U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAAC6S,GAAD,CAAoB1gB,cAAeA,EAAgBpD,MAAOgJ,EAAgBhJ,MAAOrD,QAASqU,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,0BACvGF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,gBACbF,EAAAzV,EAAA0V,cAAC8C,GAAA,EA7CY,CACrBC,SAAU,CACRuI,GAAI,CAACtI,KAAM,IAEbC,WAAY,CACVqI,GAAI,CAACtI,KAAM,GAAIqN,OAAQ,KAyCftQ,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAACgI,MAAO,SAClBrX,EAAS4M,IAAI,SAAApM,GAAI,OAAI0G,EAAgBhJ,MAAM7G,QAAQmJ,EAAKtH,OAAS,GAAKgW,EAAAzV,EAAA0V,cAACgM,GAAA,EAAD,CAAKhlB,IAAKqK,EAAK1J,IAAKsY,UAAU,qBAAqB8S,UAAQ,EAACC,QAAS,kBAAM5nB,EAAc2M,EAAgBhJ,MAAOsC,EAAKtH,QAAQsH,EAAKtG,eAG5MgV,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAO4M,EAAgBQ,QAASqI,YAAY,wHAC5CR,SAAU,SAAAC,GAAC,OAAIpG,EAAmBoG,EAAEE,OAAOpV,MAAO,eAE3D4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACgM,GAAA,EAAD,CAAK5P,MAAiC,uBAA1BrE,EAAgBlS,MAAkB,UAAY,GAAIktB,SAAoC,uBAA1Bhb,EAAgBlS,MACnFmtB,QAASlY,EACToF,MAAiC,uBAA1BnI,EAAgBlS,MAAkB,GAAK,CAACyjB,WAAY,OAAQ4R,YAAa,WAClFnjB,EAAgBlS,QAGrBka,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACdrK,GACGiH,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CACIwd,IAAK,SAAAxd,GAAK,OAAIgB,EAAKhB,MAAQA,GAC3BhX,KAAK,OACLwZ,KAAK,QACLD,MAAO,CAACgI,MAAO,GAAIxH,YAAa,IAChCvV,MAAO4N,EACPqH,SAAU3F,EACV2gB,OAAQ1gB,EACR2gB,aAAc3gB,KAGpB5B,GACEiH,EAAAzV,EAAA0V,cAACgM,GAAA,EAAD,CAAK/L,UAAU,SAASc,QAAS,kBAAMxG,EAAeoE,IACjDuB,MAAO,CAACoJ,WAAY,OAAQ4R,YAAa,WAC5Cnb,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAM9Z,KAAK,SAFb,YAKHgS,EAAS8E,IAAI,SAACpM,EAAMhG,GAAP,OAAiB0U,EAAAzV,EAAA0V,cAACgM,GAAA,EAAD,CAAK5P,MAAM,UAAUpV,IAAKqK,EAAK1J,IAAKsY,UAAU,SAAS8S,UAAQ,EAACC,QAAS,SAAA3S,GAAC,OAAIzF,EAAYyF,EAAGhP,EAAK1J,IAAK0D,IAAQ0V,QAAS,SAAAV,GAAC,OAAIpG,EAAmB5I,EAAKxL,MAAO,WACxLwL,EAAKxL,UAGVka,EAAAzV,EAAA0V,cAACkQ,GAAA,EAAD,CAAShQ,MAAO,CAACgI,MAAO,OAAQC,YAAa,MAC7CpI,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,wCACAF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,KACEnD,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa7C,YAAY,QAAQle,MAAO4M,EAAgBpR,KAAMyZ,SAAU,SAAAC,GAAC,OAAIpG,EAAmBoG,EAAEE,OAAOpV,MAAO,UAC9G4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMf,OAAP,CAAc/f,MAAO,GAArB,4BACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMf,OAAP,CAAc/f,MAAO,GAArB,8BAGHyvB,EACD7a,EAAAzV,EAAA0V,cAACkQ,GAAA,EAAD,CAAShQ,MAAO,CAACgI,MAAO,OAAQC,YAAa,MAC7CpI,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,wCACAF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAO4M,EAAgBnR,IAAKwZ,SAAU,SAAAC,GAAC,OAAIpG,EAAmBoG,EAAEE,OAAOpV,MAAO,SACzF4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAM,OAAb,4BACA4U,EAAAzV,EAAA0V,cAAA,WACAD,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAM,KAAb,kCACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAM,KAAb,kCACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAM,KAAb,oCAGJ4U,EAAAzV,EAAA0V,cAACkQ,GAAA,EAAD,CAAShQ,MAAO,CAACgI,MAAO,OAAQC,YAAa,MAC7CpI,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,wCACAF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAO4M,EAAgBG,QACvBkI,SAAU,SAAAC,GAAC,OAAIpG,EAAmBoG,EAAEE,OAAOpV,MAAO,aAC7D4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMf,OAAP,CAAc/f,MAAO,GAArB,gBACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMf,OAAP,CAAc/f,MAAO,GAArB,gBACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMf,OAAP,CAAc/f,MAAO,GAArB,gBACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMf,OAAP,CAAc/f,MAAO,GAArB,8BAGH0vB,EACD9a,EAAAzV,EAAA0V,cAACkQ,GAAA,EAAD,CAAShQ,MAAO,CAACgI,MAAO,OAAQC,YAAa,MAC7CpI,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,KACEnD,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQlK,KAAK,QAAQxZ,KAAK,UAClBoa,QAAS,kBAAMhG,EAAchD,EAAiBtK,EAASoD,KAD/D,eAC8EkH,EAAgBpQ,IAAgB,iCAAV,kCACnGoQ,EAAgBpQ,KAAOoY,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQnK,MAAO,CAACiI,WAAY,IAAKxhB,KAAK,OAAOwZ,KAAK,QAC1CY,QAAS,kBAAMtT,EAAQC,WAD/B,4BAExBqS,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQlK,KAAK,QAAQD,MAAO,CAACiI,WAAY,GAAImB,WAAY,cAAegS,YAAa,eAC7E30B,KAAK,UAAUoa,QAAS1F,GADhC,mCAOV0E,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOhX,MAAM,2BAAOiX,QAAShK,EAAciK,SAAUvH,EAC9C1P,KAAM,kBAAM2P,EAAQxD,EAAiBc,KAC1CkH,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU1E,EAAcvQ,MAAO0N,EAAQ+H,YAAY,2DAC1Db,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,QAAhB,mDAAoCF,EAAAzV,EAAA0V,cAAA,wBAApC,kFAAuED,EAAAzV,EAAA0V,cAAA,WAAvE,iHAONnB,KAAK5R,MAAMyD,oBArMW4Q,aAgSX6K,eAvFE,SAAAxZ,GAAK,MAAK,CACzBoF,gBAAiBpF,EAAMhK,QAAQ4U,KAAKxF,gBACpCrM,QAASiH,EAAMhK,QAAQ4U,KAAK7R,QAC5BmF,SAAU8B,EAAMhK,QAAQ4U,KAAK1M,SAC7B+H,aAAcjG,EAAMhK,QAAQ4U,KAAK3E,aACjCC,OAAQlG,EAAMhK,QAAQ4U,KAAK1E,OAC3BF,SAAUhG,EAAMhK,QAAQ4U,KAAK5E,SAC7BG,kBAAmBnG,EAAMhK,QAAQ4U,KAAKzE,kBACtCC,WAAYpG,EAAMhK,QAAQ4U,KAAKxE,aAGb,SAAApP,GAAQ,MAAK,CAC/ByR,oBAD+B,SACX3K,GAClB9G,EAASyiB,EAAehR,oBAAoB3K,KAE9CuJ,mBAJ+B,SAIZqG,EAAG1T,GACpBhD,EAASyiB,EAAepS,mBAAmBqG,EAAEE,OAAOpV,MAAOwB,KAE7D8iB,UAP+B,SAOrB1X,EAAiB3B,GACzB,GAAyB,SAArBA,EAAKub,KAAK7rB,OAAmB,CAC/B,IAAIkS,EAAG,8BAAApP,OAAiCwN,EAAKub,KAAKjpB,SAASkpB,UACzD3Z,EAAQ,oBAAArP,OAAuBwN,EAAKub,KAAKjpB,SAASkpB,UACvB,IAAzB7Z,EAAgBpR,KAClBgD,EAASyiB,EAAepS,mBAAmBhC,EAAK,YAEhDrO,EAASyiB,EAAenS,mBAAmBjC,EAAK,QAChDrO,EAASyiB,EAAenS,mBAAmBhC,EAAU,gBAI3DgC,mBAnB+B,SAmBZ9O,EAAOwB,GACxBhD,EAASyiB,EAAenS,mBAAmB9O,EAAOwB,KAEpD+D,WAtB+B,WAuB7B/G,EAASyiB,EAAe1b,eAE1B0J,aAzB+B,WA0B7BzQ,EAASyiB,EAAehS,iBAE1BW,cA5B+B,SA4BjB3E,EAAM3I,EAASoD,GAC3BlH,EAASyiB,EAAerR,cAAc3E,EAAM3I,EAASoD,KAEvDsB,cA/B+B,SA+BjBpD,GACZpF,EAASyiB,EAAeja,cAAcpD,KAExC3D,cAlC+B,SAkCjB2D,EAAOhF,GACnBgF,EAAMmE,OAAOnE,EAAM7G,QAAQ6B,GAAO,GAClCJ,EAASyiB,EAAeja,cAAcpD,KAExC6B,YAtC+B,WAuC7BjH,EAASyiB,EAAexb,gBAE1B8K,aAzC+B,SAyClB2E,GACX1W,EAASyiB,EAAe1Q,aAAa2E,EAAEE,OAAOpV,SAEhDkQ,iBA5C+B,WA6C7B1R,EAASyiB,EAAe/Q,qBAE1BC,kBA/C+B,WAgD7B3R,EAASyiB,EAAe9Q,sBAE1BC,QAlD+B,SAkDvBnF,EAAMyC,GACZlP,EAASyiB,EAAe7Q,QAAQnF,EAAMyC,KAExCyB,YArD+B,WAsD7B3Q,EAASyiB,EAAe9R,gBAE1BC,eAxD+B,SAwDhBC,GACb7Q,EAASyiB,EAAe7R,eAAeC,KAEzCC,uBA3D+B,SA2DR4F,GACrB1W,EAASyiB,EAAe3R,uBAAuB4F,EAAEE,OAAOpV,SAE1DuP,wBA9D+B,SA8DP2F,GACtB1W,EAASyiB,EAAe1R,wBAAwB2F,EAAEE,OAAOpV,SAE3DyP,YAjE+B,SAiEnByF,EAAG1Y,EAAK0D,GAClBgV,EAAEkb,iBACFlb,EAAEqR,kBACF/nB,EAASyiB,EAAexR,YAAYjT,EAAK0D,KAE3CyP,kBAtE+B,SAsEbuF,GAChBA,EAAEkb,iBACF5xB,EAASyiB,EAAetR,wBAIbqR,CAA+BsO,ICnTvCnQ,GAAUC,KAAVD,OAEDkR,oLACK,IAAAjS,EACmG1K,KAAK5R,MAAxG2O,EADA2N,EACA3N,SAAUD,EADV4N,EACU5N,oBAAqBW,EAD/BiN,EAC+BjN,eAAgBC,EAD/CgN,EAC+ChN,aAAcC,EAD7D+M,EAC6D/M,mBAAoBC,EADjF8M,EACiF9M,eAClFgf,EAAkB,CACtB,CACEz0B,IAAK,WACLulB,UAAW,WACX5gB,MAAO,qBACP6gB,MAAO,UACN,CACDxlB,IAAK,OACLulB,UAAW,OACX5gB,MAAO,2BACP6gB,MAAO,UACN,CACDxlB,IAAK,MACLulB,UAAW,MACX5gB,MAAO,2BACP6gB,MAAO,SACPC,OAAQ,SAAA5lB,GAAI,MAAa,QAATA,EAAiB,eAAiB,MAATA,EAAe,SAAgB,MAATA,EAAe,SAAM,iBACnF,CACDG,IAAK,eACLulB,UAAW,eACX5gB,MAAO,2BACP6gB,MAAO,UACN,CACDxlB,IAAK,cACLulB,UAAW,cACX5gB,MAAO,eACP6gB,MAAO,SACPC,OAAQ,SAAC5lB,EAAMoK,GAAP,OAAkBA,EAAOgK,UAAYyY,KAAO7sB,GAAM8sB,OAAO,uBAAyB,OACzF,CACD3sB,IAAK,SACLulB,UAAW,SACX5gB,MAAO,2BACP6gB,MAAO,SACPtE,MAAO,GACPuE,OAAQ,SAAA5lB,GAAI,OAAa,IAATA,EAAa,qBAAkB,IAATA,EAAa,2BAAmB,IAATA,EAAa,mDAAa,6BACtF,CACDG,IAAK,QACLulB,UAAW,QACX5gB,MAAO,uCACP6gB,MAAO,SACPtE,MAAO,IACN,CACDlhB,IAAK,SACL2E,MAAO,eACP6gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC5lB,EAAMoK,EAAQ5F,GAAf,OAAyB0U,EAAAzV,EAAA0V,cAAA,YAC5B/O,EAAOgK,WAA+B,IAAlBhK,EAAOnL,QAAiBia,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQhB,cAAc,eAAKnJ,QAAS,kBAAMxE,EAAatL,EAAOtJ,IAAK0D,IAAQie,WAAW,YAClH,IAAlBrY,EAAOnL,QAAgBia,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQhB,cAAenK,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAI,CAACsC,SAAU,WAAY9T,MAAMlE,OAAAC,EAAA,EAAAD,CAAA,GAAK0E,KAA5C,kBAC/C8O,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQhB,cAAc,eAAKnJ,QAAS,kBAAMzE,EAAerL,EAAOtJ,IAAK0D,IAAQie,WAAW,eAI9F,OACEvJ,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAAC0b,GAAD,CAAQxb,MAAO,CAACgI,MAAO,KAAMtH,YAAY,iCAAQzV,MAAOyQ,EAAUwE,SAAU5D,EAAoBwO,SAAUvO,IAC1GsD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,MAAKF,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ/K,KAAK,UAAUF,UAAU,KAAK8J,GAAI,GAAIG,cAAenK,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAG,YAAT,6CACjFlC,EAAAzV,EAAA0V,cAACkP,GAAA,EAAD,CAAOC,OAAQ,SAAAle,GAAM,OAAIA,EAAOtJ,KAAKwY,KAAK,SAASqL,WAAY7P,EAAqB2Q,QAASmP,iDAMjG5c,KAAK5R,MAAMoP,yBAlEQiF,aA6FR6K,eAvBE,SAAAxZ,GAAK,MAAK,CACzBgJ,oBAAqBhJ,EAAMhK,QAAQoV,SAASpC,oBAC5CC,SAAUjJ,EAAMhK,QAAQoV,SAASnC,WAGf,SAAAjS,GAAQ,MAAK,CAC/B0S,gBAD+B,WAE7B1S,EAASyiB,EAAe/P,oBAE1BC,eAJ+B,SAIhBhW,EAAI+E,GACjB1B,EAASyiB,EAAe9P,eAAehW,EAAI+E,KAE7CkR,aAP+B,SAOlBjW,EAAI+E,GACf1B,EAASyiB,EAAe7P,aAAajW,EAAI+E,KAE3CmR,mBAV+B,SAUZ6D,GACjB1W,EAASyiB,EAAe5P,mBAAmB6D,EAAEE,OAAOpV,SAEtDsR,eAb+B,SAahBtR,GACbxB,EAASyiB,EAAe3P,eAAetR,OAI5BghB,CAA+BqP,ICrF/BG,GAfW,SAAA1uB,GAAS,IAC1B4O,EAAuE5O,EAAvE4O,mBAAoBhL,EAAmD5D,EAAnD4D,SAAU9G,EAAyCkD,EAAzClD,KAAMkT,EAAmChQ,EAAnCgQ,cAAeC,EAAoBjQ,EAApBiQ,iBAC1D,OACE6C,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOuF,MAAO,IAAMtF,QAAS/G,EAAoB+f,cAAc,EAAO7I,UAAU,EAAO8I,MAAM,EAAQzF,OAAQrW,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQ1jB,KAAK,UAAUyjB,UAAWrgB,EAAMgX,QAAS7D,GAAjD,iBAC3G6C,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAOpB,EAAMmW,MAAO,CAAEgI,MAAO,QAAU9H,SAAU,SAAAC,GAAC,OAAIpD,EAAcoD,EAAEE,OAAOpV,MAAOpB,KAC/FgW,EAAAzV,EAAA0V,cAACiT,GAAA,EAAD,KACGpiB,EAAS4M,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAAC8S,GAAA,EAAD,CAAK9P,KAAM,EAAGhc,IAAKqK,EAAK1J,KAC5CoY,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAOkG,EAAKtH,MAAOsH,EAAKtG,kBCepCyf,WAAUC,KAAVD,QACDsR,GAAS,CAAC,OAAQ,UAAW,UAAW,UAAW,UAAW,QAC9DC,GAAoB,CACxB7T,MAAO,GACPmR,OAAQ,GACRlR,WAAY,GACZqG,QAAS,eACTzC,UAAW,GAGPiQ,0QAGFnd,KAAK5R,MAAM2D,cACJH,EAASoO,KAAK5R,MAAMuD,SAApBC,WACPA,kDAAeoO,KAAK5R,MAAMkQ,gBAAgB1M,mFAI1C,IAiCIwrB,EAlCG1S,EAU6S1K,KAAK5R,MAAlT0P,EAVA4M,EAUA5M,gBAAiBpO,EAVjBgb,EAUiBhb,YAAa2C,EAV9BqY,EAU8BrY,kBAAmB2K,EAVjD0N,EAUiD1N,mBAAoBhL,EAVrE0Y,EAUqE1Y,SAAU+L,EAV/E2M,EAU+E3M,cAAeZ,EAV9FuN,EAU8FvN,aAAcC,EAV5GsN,EAU4GtN,aAAcE,EAV1HoN,EAU0HpN,qBAAsBW,EAVhJyM,EAUgJzM,eAAgBrP,EAVhK8b,EAUgK9b,QAASsN,EAVzKwO,EAUyKxO,cAAekC,EAVxLsM,EAUwLtM,cAAeC,EAVvMqM,EAUuMrM,iBAAkB7B,EAVzNkO,EAUyNlO,iBAAkBC,EAV3OiO,EAU2OjO,kBAAmBzC,EAV9P0Q,EAU8P1Q,OAAQ6C,EAVtQ6N,EAUsQ7N,aAAc9C,EAVpR2Q,EAUoR3Q,aAAc2C,EAVlSgO,EAUkShO,QAVlSyO,EAWwEnL,KAAK5R,MAAtEvB,GAXPse,EAWCkS,KAXDlS,EAWOte,SAASmR,EAXhBmN,EAWgBnN,mBAAoBE,EAXpCiN,EAWoCjN,kBAAmBC,EAXvDgN,EAWuDhN,aACxDoZ,EACFrW,EAAAzV,EAAA0V,cAAA,OAAKE,MAAO,CAACic,SAAU,SAAUxN,WAAY,MAC3C5O,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,MACZ6b,GAAOre,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,SAASC,MAAK3T,OAAAC,EAAA,EAAAD,CAAA,GAAMwvB,GAAN,CAAyBzS,WAAYjY,IAAOrK,IAAKqK,EAAM0P,QAAS,kBAAM/D,EAAa,QAAS3L,SAEhJ0O,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQ1jB,KAAK,UAAUsZ,UAAU,KAAKc,QAAShE,GAA/C,iBAEFgB,EAAW,GAnBRqe,EAAA,SAoBEp1B,GACP,IAAI0E,EAAU6C,EAAY7C,QAAQ1E,GACtB,UAARA,EACF+W,EAAST,QAAQyC,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAOlH,EAAa5T,KAAb,MAA2Bg0B,KAAO,GAAIr1B,IAAI,SAC3E+Y,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,OAAOvU,EAAQP,OAC/B4U,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMR,UAAU,SAASc,QAAS,kBAAMnE,EAAc5V,EAAK0E,IAAU/E,KAAK,WAG5EoX,EAAS5K,KAAK4M,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAOlH,EAAa5T,KAAKrB,GAAKq1B,KAAO,GAAIr1B,IAAKA,GACrE+Y,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,OAAOvU,EAAQP,OAC/B4U,EAAAzV,EAAA0V,cAACS,GAAA,EAAD,CAAMR,UAAU,SAASc,QAAS,kBAAMnE,EAAc5V,EAAK0E,IAAU/E,KAAK,YAVhF,IAAK,IAAIK,KAAOiV,EAAa5T,KAAM+zB,EAA1Bp1B,GAkBT,OAHA6U,IAAuBogB,EACrBlc,EAAAzV,EAAA0V,cAACsc,GAAD,CAAmBvyB,KAAMwE,EAAYxE,KAAMkT,cAAeA,EAAeC,iBAAkBA,EACxErM,SAAUA,EAAUgL,mBAAoBA,KAE3DkE,EAAAzV,EAAA0V,cAAC4U,GAAA,EAAD,CAAgBrC,OAAQsC,MACtB9U,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,0BACbF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAADvW,OAAAiH,OAAA,CAAMyM,UAAU,aAxCC,CACrB8C,SAAU,CACRuI,GAAI,CAACtI,KAAM,IAEbC,WAAY,CACVqI,GAAI,CAACtI,KAAM,GAAIqN,OAAQ,KAmCrB,CAAgDnQ,MAAO,CAACgI,MAAO,OAC7DnI,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACqC,GAAA,EAAD,CAAQtB,QAASpE,EAAiBsD,UAAU,SAAS6L,MAAM,SAASrL,KAAK,UAE3EV,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOoD,EAAY5B,KAAMyT,SAAU,SAAAC,GAAC,OAAInP,EAAkB,OAAQmP,EAAEE,OAAOpV,QAC3EyV,YAAY,2HAErBb,EAAAzV,EAAA0V,cAACkQ,GAAA,EAAD,CAAShQ,MAAO,CAACgI,MAAO,OAAQC,YAAa,MAC7CpI,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,wCACAF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,CAAQ9f,MAAOoD,EAAYuN,WAAYsE,SAAUtD,GAC9Cd,EAAayB,IAAI,SAAApM,GAAI,OAAI0O,EAAAzV,EAAA0V,cAACuc,GAAD,CAAQpxB,MAAOkG,EAAK6K,YACZlV,IAAKqK,EAAK6K,aAAc7K,EAAK1F,WAGnEoU,EAAAzV,EAAA0V,cAACiT,GAAA,EAAD,CAAKhT,UAAU,oBACbF,EAAAzV,EAAA0V,cAAC8S,GAAA,EAAD,CAAK9P,KAAM,IACXjD,EAAAzV,EAAA0V,cAAC8S,GAAA,EAAD,CAAK9P,KAAM,IACTjD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACZlC,KAIPgC,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOoD,EAAYtG,IAAK2Y,YAAY,sGACpCR,SAAU,SAAAC,GAAC,OAAInP,EAAkB,MAAOmP,EAAEE,OAAOpV,WAE1D4U,EAAAzV,EAAA0V,cAACkQ,GAAA,EAAD,CAAShQ,MAAO,CAACgI,MAAO,OAAQC,YAAa,MAC7CpI,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,wCACAF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACiM,GAAA,EAAMC,MAAP,CAAa/gB,MAAOoD,EAAY3H,IAAKwZ,SAAU,SAAAC,GAAC,OAAInP,EAAkB,MAAOmP,EAAEE,OAAOpV,SACpF4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAM,OAAb,4BACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAM,KAAb,4BACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAM,KAAb,sBACA4U,EAAAzV,EAAA0V,cAACiM,GAAA,EAAD,CAAO9gB,MAAM,KAAb,wBAGJ4U,EAAAzV,EAAA0V,cAACkQ,GAAA,EAAD,CAAShQ,MAAO,CAACgI,MAAO,OAAQC,YAAa,MAC7CpI,EAAAzV,EAAA0V,cAAA,MAAIC,UAAU,eAAd,wCACAF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACsR,GAAA,EAAD,CAAQC,QAAShjB,EAAY0M,UAAWmF,SAAU,SAAAjV,GAAK,OAAI+F,EAAkB,YAAa/F,OAE3FoD,EAAY0M,WAAa8E,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACzCpD,EAAAzV,EAAA0V,cAACgV,GAAA,EAAD,CAAYuB,UAAQ,EAAC3V,YAAY,2BAAOzV,MAAOuoB,KAAOnlB,EAAY4J,aACtDiI,SAAU,SAACjV,EAAO8vB,GAAR,OAAuB/pB,EAAkB,cAAe+pB,OAEhFlb,EAAAzV,EAAA0V,cAACkQ,GAAA,EAAD,CAAShQ,MAAO,CAACgI,MAAO,OAAQC,YAAa,MAC7CpI,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,KACEnD,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQlK,KAAK,QAAQxZ,KAAK,UAClBoa,QAAS,kBAAMhG,EAAcxM,EAAad,EAASuO,KAD3D,eAC8EzN,EAAY5G,IAAgB,iCAAV,kCAC/F4G,EAAY5G,KACboY,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQnK,MAAO,CAACiI,WAAY,IAAKxhB,KAAK,OAAOwZ,KAAK,QAAQY,QAAS,kBAAMtT,EAAQC,WAAjF,4BACAqS,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQlK,KAAK,QAAQD,MAAO,CAACiI,WAAY,GAAImB,WAAY,cAAegS,YAAa,eAC7E30B,KAAK,UAAUoa,QAAS1F,GADhC,8BAIH4gB,EACDlc,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CACIC,QAASzG,EACT0G,SAAUhG,EACVkW,UAAU,EACVqD,OAAQA,EACRyF,MAAM,GAER9b,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM+R,SAAP,CAAgBxP,MAAO,CAAC9D,MAAO1Q,EAAO,OAAYP,MAAOO,EAAO,MAAWikB,SAAU,CAAEC,QAAS,EAAGC,QAAS,GAAKzP,SAAU,SAAAC,GAAC,OAAIrD,EAAa,QAASqD,EAAEE,OAAOpV,WAEjK4U,EAAAzV,EAAA0V,cAAC2C,EAAA,EAAD,CAAOhX,MAAM,2BAAOiX,QAAShK,EAAciK,SAAUvH,EAC9C1P,KAAM,kBAAM2P,EAAQhN,EAAasK,KACtCkH,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOyC,SAAU1E,EAAcvQ,MAAO0N,EAAQ+H,YAAY,2DAC1Db,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,QAAhB,mDAAoCF,EAAAzV,EAAA0V,cAAA,wBAApC,kFAAuED,EAAAzV,EAAA0V,cAAA,WAAvE,kHAQRnB,KAAK5R,MAAMyD,oBA/HY4Q,aAsMZ6K,eAnEE,SAAAxZ,GAAK,MAAK,CACzBpE,YAAaoE,EAAMhK,QAAQoV,SAASxP,YACpCyN,aAAcrJ,EAAMhK,QAAQoV,SAAS/B,aACrCC,aAActJ,EAAMhK,QAAQoV,SAAS9B,aACrCE,qBAAsBxJ,EAAMhK,QAAQoV,SAAS5B,qBAC7CN,mBAAoBlJ,EAAMhK,QAAQoV,SAASlC,mBAC3ChL,SAAU8B,EAAMhK,QAAQoV,SAASlN,SACjC+H,aAAcjG,EAAMhK,QAAQoV,SAASnF,aACrCC,OAAQlG,EAAMhK,QAAQoV,SAASlF,OAC/BnN,QAASiH,EAAMhK,QAAQoV,SAASrS,UAGd,SAAA/B,GAAQ,MAAK,CAC/BiH,YAD+B,WAE7BjH,EAASyiB,EAAexb,gBAE1BgM,cAJ+B,SAIjB5V,EAAK0E,IAChBA,EAAQ0Q,QAAU1Q,EAAQ0Q,MAAQ,QACnCzS,EAASyiB,EAAexP,cAAc5V,EAAK0E,KAE7CoR,eAR+B,SAQhB3R,GACbxB,EAASyiB,EAAetP,eAAe3R,KAEzC4P,cAX+B,SAWjB3E,EAAM3I,EAASuO,GAC3BrS,EAASyiB,EAAerR,cAAc3E,EAAM3I,EAASuO,KAEvDW,gBAd+B,WAe7BhT,EAASyiB,EAAezP,oBAE1BzL,kBAjB+B,SAiBblK,EAAKmE,GACrBxB,EAASyiB,EAAelb,kBAAkBlK,EAAKmE,KAEjDgS,gBApB+B,SAoBflM,GACdtH,EAASyiB,EAAejP,gBAAgBlM,KAE1CgM,cAvB+B,SAuBjBlT,GACZJ,EAASyiB,EAAenP,cAAclT,KAExC2G,WA1B+B,WA2B7B/G,EAASyiB,EAAe1b,eAE1BwM,iBA7B+B,WA8B7BvT,EAASyiB,EAAelP,qBAE1BxB,aAhC+B,SAgClB2E,GACX1W,EAASyiB,EAAe1Q,aAAa2E,EAAEE,OAAOpV,SAEhDkQ,iBAnC+B,WAoC7B1R,EAASyiB,EAAe/Q,qBAE1BC,kBAtC+B,WAuC7B3R,EAASyiB,EAAe9Q,sBAE1BC,QAzC+B,SAyCvBnF,EAAMyC,GACZlP,EAASyiB,EAAe7Q,QAAQnF,EAAMyC,KAExCgE,mBA5C+B,WA6C7BlT,EAASyiB,EAAevP,uBAE1BE,kBA/C+B,WAgD7BpT,EAASyiB,EAAerP,sBAE1BC,aAlD+B,SAkDlBhW,EAAKmE,GAChBxB,EAASyiB,EAAepP,aAAahW,EAAKmE,OAI/BghB,CAA+B6P,ICrM/BQ,oLAxBX,OACCzc,EAAAzV,EAAA0V,cAAA,WACGD,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,kBACVjE,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,KACEpT,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,6BAA6BoP,UAAWlH,KACpDnM,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,gCAAgCoP,UAAWqJ,KACvD1c,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,+BAA+BoP,UAAW8E,KACtDnY,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,4BAA4BoP,UAAW4G,KACnDja,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,6BAA6BoP,UAAWsJ,KACpD3c,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,6BAA6BoP,UAAWsJ,KACpD3c,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,gCAAgCoP,UAAWoI,KACvDzb,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,iCAAiCoP,UAAW4I,KACxDjc,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,iCAAiCoP,UAAW4I,KACxDjc,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAUE,KAAK,iBAAiBC,OAAK,EAACrR,GAAG,yBACzClC,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAUE,KAAK,uBAAuBC,OAAK,EAACrR,GAAG,+BAC/ClC,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAUE,KAAK,sBAAsBC,OAAK,EAACrR,GAAG,8BAC9ClC,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAUE,KAAK,0BAA0BC,OAAK,EAACrR,GAAG,4CAlBpCX,aCJnB0X,GAAWC,KAAXD,QAkLQ2D,eA/Kb,SAAAA,EAAY1vB,GAAO,IAAA0R,EAAA,OAAApS,OAAAqS,EAAA,EAAArS,CAAAsS,KAAA8d,IACjBhe,EAAApS,OAAAuS,EAAA,EAAAvS,CAAAsS,KAAAtS,OAAAwS,EAAA,EAAAxS,CAAAowB,GAAA3d,KAAAH,KAAM5R,KAIR0F,MAAQ,CACNiqB,WAAY,GACZC,aAAc,GACd9oB,QAAS,GACT+oB,SAAU,IAPVne,EAAKoe,UAAYpe,EAAKoe,UAAU7d,KAAf3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAFAA,wEAYV,IAAAY,EAAAV,KAAAiD,EACuBjD,KAAKlM,MAA5BiqB,EADA9a,EACA8a,WACDI,EAFClb,EACY/N,QACQ0J,IAAI,SAAApM,GAAI,OACjC0O,EAAAzV,EAAA0V,cAACid,GAAD,CAASrD,IAAKvoB,EAAK1E,KAAM3F,IAAKqK,EAAK1E,SAE/BuwB,EAAe,CACnB,CACEl2B,IAAK,QACL2E,MAAO,eACP6gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC5lB,EAAMoK,GAAP,OAAkB8O,EAAAzV,EAAA0V,cAAA,KACxBE,MAAO,CAACgI,MAAO,IAAKiV,SAAU,aAAc9F,WAAY,QAAS,6BAA+BpmB,EAAO3K,MAE3G,CACEU,IAAK,QACLulB,UAAW,QACX5gB,MAAO,eACP6gB,MAAO,SACPtE,MAAO,KAET,CACElhB,IAAK,QACLulB,UAAW,QACX5gB,MAAO,eACP6gB,MAAO,UAET,CACExlB,IAAK,UACLulB,UAAW,UACX5gB,MAAO,eACP6gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAA5lB,GAAI,OAAIA,GAAc,WAEhC,CACE8E,MAAO,eACP6gB,MAAO,SACPtE,MAAO,GACPuE,OAAQ,SAAC5lB,EAAMoK,GAAP,OAAkB8O,EAAAzV,EAAA0V,cAAA,KAAGqB,KAAM,iCAAmCpQ,EAAO3K,GAAIia,OAAQ,UAA/D,8BAE5B,CACE5U,MAAO,eACP6gB,MAAO,SACPtE,MAAO,GACPuE,OAAQ,SAAC5lB,EAAMoK,GAAP,OAAkB8O,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ5B,WAAW,UAAUvI,QAAS,kBAAMxB,EAAK6d,MAAMnsB,EAAOtJ,MAAMuiB,cAAc,mBAE9G,CACEve,MAAO,SACP6gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC5lB,EAAMoK,EAAQ5F,GAAf,OAAyB0U,EAAAzV,EAAA0V,cAAA,WAC/BD,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQhB,cAAenK,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAI,CAACsC,SAAU,WAAY9T,MAAMlE,OAAAC,EAAA,EAAAD,CAAA,GAAK0E,KAA5C,kBACvB8O,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ5B,WAAW,SAASY,cAAc,eAAKnJ,QAAS,kBAAMxB,EAAK8d,WAAWpsB,EAAOtJ,IAAK0D,MAC1F0U,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ5B,WAAW,UAAUK,GAAI,EAAGO,cAAc,eAAKnJ,QAAS,kBAAMxB,EAAK+d,SAAL/wB,OAAAC,EAAA,EAAAD,CAAA,GAAkB0E,WAI9F,OACE8O,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ/K,KAAK,UAAUmJ,WAAW,UAAUS,GAAI,GAAIG,cAAenK,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,CAAMC,GAAG,YAAT,oCACnElC,EAAAzV,EAAA0V,cAAC0Z,GAAA,EAAD,CAAM6D,UAAU,EAAOC,iBAAiB,MAAMC,aAAc,EAAGrd,SAAUvB,KAAKke,UACxE5c,KAAK,SACTJ,EAAAzV,EAAA0V,cAACid,GAAD,CAASrD,IAAI,MAAM5yB,IAAI,QACtBg2B,GAEHjd,EAAAzV,EAAA0V,cAACkP,GAAA,EAAD,CAAOC,OAAQ,SAAAle,GAAM,OAAIA,EAAOtJ,KAAKwY,KAAK,QAAQoO,UAAQ,EAACjC,QAAS4Q,EAAc1R,WAAYoR,kDAOpG/d,KAAK6e,gBACL7e,KAAK7I,qDAGS,IAAAiL,EAAApC,KACd3X,EAAM0C,IAAI,aAAaC,KAAK,SAAAC,GAC1B,IAAI8yB,EAAa9yB,EAAIzB,KAAK6Q,SACtB2jB,EAAe/yB,EAAIzB,KAAKw0B,aAC5B5b,EAAKD,SAAS,CACZ4b,aACAE,SAAUF,EACVC,wDAKO,IAAA5F,EAAApY,KACX3X,EAAM0C,IAAI,gBAAgBC,KAAK,SAAAC,GAAO,IACvBiK,EAAWjK,EAAIzB,KAArBA,KACP4uB,EAAKjW,SAAS,CAACjN,gDAIT/M,GAAK,IACN81B,EAAYje,KAAKlM,MAAjBmqB,SACP,GAAY,QAAR91B,EACF6X,KAAKmC,SAAS,CACZ4b,WAAYE,QAET,CAEL,IADA,IAAIz0B,EAAO,GACFqJ,EAAI,EAAGA,EAAIorB,EAAS7yB,OAAQyH,IAC/B1K,IAAQ81B,EAASprB,GAAG7L,OACtBwC,EAAK8K,KAAK2pB,EAASprB,IAGvBmN,KAAKmC,SAAS,CAAC4b,WAAU,GAAAh0B,OAAMP,oCAI7B/B,GAAI,IAAA4wB,EAAArY,KACRvT,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,EAAMgG,KAAK,kBAAmB,CAAC5G,OAC5BuD,KAAK,SAAAC,GACJnB,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SACtBisB,EAAKwG,wDAMJp3B,EAAI+E,GAAO,IAAA8rB,EAAAtY,KACb+d,EAAc/d,KAAKlM,MAAnBiqB,WACPtxB,IAAMC,QAAQ,CACZI,MAAO,gEACPC,KAAM,WACJ1E,EAAM0C,IAAI,mBAAoB,CAACoB,OAAQ,CAAC1E,QACrCuD,KAAK,SAAAC,GACJnB,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SACtB2xB,EAAW1pB,OAAO7H,EAAO,GACzB8rB,EAAKnW,SAAS,CAAC4b,qDAMhB3rB,GAAQ,IAAA0sB,EAAA9e,KACf5N,EAAO3K,IAAM,QADE,IAERs2B,EAAc/d,KAAKlM,MAAnBiqB,WACPtxB,IAAMC,QAAQ,CACZI,MAAO,2EACPC,KAAM,WACJ1E,EAAMgG,KAAK,mBAAXX,OAAAC,EAAA,EAAAD,CAAA,GAAmC0E,IAChCpH,KAAK,SAAAC,GACAA,EAAIzB,KAAK4C,SACXtC,IAAQyN,KAAK,4BACbwmB,EAAWtf,QAAQxT,EAAIzB,KAAKA,MAC5Bs1B,EAAK3c,SAAS,CAAC4b,gBAEfj0B,IAAQyN,KAAKtM,EAAIzB,KAAKE,iBAxKZ+Y,aCJlBjP,GAAY,CAChBurB,eAAgB,CACdt3B,GAAI,GACJqF,MAAO,GACPkyB,MAAO,GACPC,QAAS,GACTC,UAAW,GACXC,KAAM,GACNC,SAAU,GACVC,OAAQ,GACRv3B,MAAM,EACNb,QAAQ,EACRq4B,YAAa,EACbt4B,MAAO,GACP0S,QAAS,IAEXxE,QAAS,GACT1I,OAAQ,GAwQK+yB,eApQb,SAAAA,EAAYnxB,GAAO,IAAA0R,EAAA,OAAApS,OAAAqS,EAAA,EAAArS,CAAAsS,KAAAuf,IACjBzf,EAAApS,OAAAuS,EAAA,EAAAvS,CAAAsS,KAAAtS,OAAAwS,EAAA,EAAAxS,CAAA6xB,GAAApf,KAAAH,KAAM5R,KAQR0F,MATmBpG,OAAAC,EAAA,EAAAD,CAAA,GASP8F,IAPVsM,EAAK0f,OAAS1f,EAAK0f,OAAOnf,KAAZ3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IACdA,EAAK2f,gBAAkB3f,EAAK2f,gBAAgBpf,KAArB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IACvBA,EAAK4f,WAAa5f,EAAK4f,WAAWrf,KAAhB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAClBA,EAAK6f,iBAAmB7f,EAAK6f,iBAAiBtf,KAAtB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IACxBA,EAAKiD,aAAcjD,EAAKiD,aAAa1C,KAAlB3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IANFA,oFAYjB,IAAIlO,EAAQoO,KAAK5R,MAAMQ,QAAQ+C,SAASC,MACxCA,GAASoO,KAAK4f,SAAShuB,GACvBoO,KAAK7I,8CAGE,IAGH0oB,EAAaC,EAASC,EAAYC,EAAW34B,EAH1CqZ,EAAAV,KAAAiD,EACkCjD,KAAKlM,MAAvCirB,EADA9b,EACA8b,eAAgB7pB,EADhB+N,EACgB/N,QAAS1I,EADzByW,EACyBzW,MACzBM,EAAuGiyB,EAAvGjyB,MAAOkyB,EAAgGD,EAAhGC,MAAOC,EAAyFF,EAAzFE,QAASC,EAAgFH,EAAhFG,UAAWC,EAAqEJ,EAArEI,KAAMC,EAA+DL,EAA/DK,SAAUC,EAAqDN,EAArDM,OAAQv3B,EAA6Ci3B,EAA7Cj3B,KAAMb,EAAuC83B,EAAvC93B,OAAQq4B,EAA+BP,EAA/BO,YAAat4B,EAAkB+3B,EAAlB/3B,MAAO0S,EAAWqlB,EAAXrlB,QAkEnG,OAhEAslB,EAAM5zB,OAAS,IAAM00B,EAAU5e,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,sBAC9CpD,EAAAzV,EAAA0V,cAACmL,GAAA,EAAD,CACEhL,KAAK,QACLoO,UAAQ,EACR/C,WAAYqS,EACZpS,WAAY,SAACpa,EAAMhG,GAAP,OACV0U,EAAAzV,EAAA0V,cAACmL,GAAA,EAAKjI,KAAN,CAAWwI,QAAS,CAAC3L,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,SAASC,MAAO,CAAC9D,MAAO,QAAS2E,QAAS,kBAAMxB,EAAKuf,QAAQzzB,EAAO,WAApF,SAClBgG,QAKT0sB,EAAU9zB,OAAS,IAAM20B,EAAa7e,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,kCACrDpD,EAAAzV,EAAA0V,cAACmL,GAAA,EAAD,CACEhL,KAAK,QACLoO,UAAQ,EACR/C,WAAYuS,EACZtS,WAAY,SAACpa,EAAMhG,GAAP,OACV0U,EAAAzV,EAAA0V,cAACmL,GAAA,EAAKjI,KAAN,CAAWwI,QAAS,CAAC3L,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,SAASC,MAAO,CAAC9D,MAAO,QAAS2E,QAAS,kBAAMxB,EAAKuf,QAAQzzB,EAAO,eAApF,SAClBgG,QAKTysB,EAAQ7zB,OAAS,IAAM40B,EAAY9e,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,sBAClDpD,EAAAzV,EAAA0V,cAACmL,GAAA,EAAD,CACEhL,KAAK,QACLoO,UAAQ,EACR/C,WAAYsS,EACZrS,WAAY,SAACpa,EAAMK,GACjB,IAAIqtB,EAMJ,OAJEA,EADC1zB,IAAUqG,EACA,CAACqO,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,SAASC,MAAO,CAAC9D,MAAO,QAAS2E,QAASxB,EAAKqC,cAA/D,iBAED,CAAC7B,EAAAzV,EAAA0V,cAAA,QAAMC,UAAU,SAASC,MAAO,CAAC9D,MAAO,QAAS2E,QAAS,SAAAV,GAAC,OAAId,EAAKuf,QAAQptB,EAAG,UAAW2O,KAA1F,iBAGdN,EAAAzV,EAAA0V,cAACmL,GAAA,EAAKjI,KAAN,CAAWnC,QAAS,kBAAMxB,EAAKyf,aAAattB,IAAIga,QAASqT,GACtD1zB,IAAUqG,EAAIqO,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM2M,OAAP,CAAcnK,KAAK,QAAQ8e,YAAY,eAAKjU,SAAU,SAAC7f,EAAOkV,GAAR,OAAcd,EAAK2f,WAAW/zB,EAAOkV,MAAShP,QAKvH1K,IACF+3B,EAAc3e,EAAAzV,EAAA0V,cAAC8P,EAAA,SAAD,KACZ/P,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM2M,OAAP,CAAcnf,MAAO+yB,EAAQe,YAAY,eAAKre,YAAY,iCAC5CR,SAAU,SAAAC,GAAC,OAAId,EAAKe,iBAAiBD,EAAEE,OAAOpV,MAAO,WAAW6f,SAAU,SAAA7f,GAAK,OAAIoU,EAAK4f,QAAQh0B,EAAO,UAAW,cAEjI0zB,EACD9e,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACsR,GAAA,EAAD,CAAQC,QAASzrB,EAAQsa,SAAU,SAAAjV,GAAK,OAAIoU,EAAKe,iBAAiBnV,EAAO,cAE3E4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,kCACfpD,EAAAzV,EAAA0V,cAAC8a,GAAA,EAAD,CAAaC,IAAK,EAAG5vB,MAAOgzB,EAAavd,YAAY,iCACxCR,SAAU,SAAAjV,GAAK,OAAIoU,EAAKe,iBAAiBnV,EAAO,qBAKjEjF,EADCL,EACaka,EAAAzV,EAAA0V,cAACgM,GAAA,EAAD,CAAK+G,UAAQ,EAACC,QAASnU,KAAKyf,iBAAkBz4B,GAE/Cka,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM2M,OAAP,CAAc2U,YAAY,eAAKre,YAAY,iCAAQoK,SAAUnM,KAAKwf,SAG/Ete,EAAAzV,EAAA0V,cAAA,WACED,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,iBACbF,EAAAzV,EAAA0V,cAAA,kDACAD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,MACbF,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQ1jB,KAAK,UAAUuZ,MAAO,CAACQ,YAAa,IAAKK,QAASlC,KAAK2f,kBAA/D,gBACAze,EAAAzV,EAAA0V,cAACqK,GAAA,EAAD,CAAQtJ,QAASlC,KAAK0f,YAAtB,kBAGJxe,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAD,CAAM7C,UAAU,KAAKC,MAAO,CAACgI,MAAO,MAAOkX,YAAa,kBAAmBrc,SAAU,CAACuI,GAAI,GAAIrI,WAAY,CAACqI,GAAI,GAAI+E,OAAQ,GAAIJ,OAAO,GACpIlQ,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOQ,EAAOiV,YAAY,iCAC1BR,SAAU,SAAAC,GAAC,OAAId,EAAKe,iBAAiBD,EAAEE,OAAOpV,MAAO,aAE9D4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM2M,OAAP,CAAcnf,MAAO6yB,EAAMiB,YAAY,eAAKre,YAAY,iCAAQR,SAAU,SAAAC,GAAC,OAAId,EAAKe,iBAAiBD,EAAEE,OAAOpV,MAAO,SAAS6f,SAAU,SAAA7f,GAAK,OAAIoU,EAAK4f,QAAQh0B,EAAO,QAAS,YAE/KwzB,EACD5e,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM2M,OAAP,CAAcnf,MAAO8yB,EAAUgB,YAAY,eAAKre,YAAY,6CAAUR,SAAU,SAAAC,GAAC,OAAId,EAAKe,iBAAiBD,EAAEE,OAAOpV,MAAO,aAAa6f,SAAU,SAAA7f,GAAK,OAAIoU,EAAK4f,QAAQh0B,EAAO,YAAa,gBAE7LyzB,EACD7e,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACdjd,GAEH6Z,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACdpP,EAAQ0J,IAAI,SAACpM,EAAMhG,GAAP,OAAiB0U,EAAAzV,EAAA0V,cAACgM,GAAA,EAAD,CAAK/L,UAAU,SAAS8S,UAAQ,EAACC,QAAS,SAAC3S,GAAD,OAAOd,EAAK8f,UAAUhf,EAAGhP,EAAK1J,IAAK0D,IAAQrE,IAAKqK,EAAK1J,IAAKoZ,QAAS,kBAAMxB,EAAKzS,UAAUuE,EAAK1E,QAAQ0E,EAAK1E,UAGtLoT,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAD,CAAM7C,UAAU,KAAKC,MAAO,CAACgI,MAAO,MAAOoX,YAAa,MAAOvc,SAAU,CAACuI,GAAI,GAAIrI,WAAY,CAACqI,GAAI,GAAI+E,OAAQ,GAAIJ,OAAO,GACxHlQ,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,wCACfpD,EAAAzV,EAAA0V,cAACsR,GAAA,EAAD,CAAQC,QAAS5qB,EAAMyZ,SAAU,SAAAjV,GAAK,OAAIoU,EAAKe,iBAAiBnV,EAAO,YAExEuzB,EACD3e,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,4BACfpD,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOxS,MAAOoN,EAASqI,YAAY,iCAAQR,SAAU,SAAAC,GAAC,OAAId,EAAKe,iBAAiBD,EAAEE,OAAOpV,MAAO,mDAQnGsF,GACPA,EAAM9J,KAAsB,IAAf8J,EAAM9J,KACnB8J,EAAM3K,OAA0B,IAAjB2K,EAAM3K,OACrB+Y,KAAKmC,SAAS,SAAArO,GAAK,MAAK,CAACirB,eAAerxB,OAAAC,EAAA,EAAAD,CAAA,GAAKoG,EAAMirB,eAAZ,GAA+BntB,+CAGvDtF,EAAOwB,GAAM,IACvBixB,EAAkB/e,KAAKlM,MAAvBirB,eACLA,EAAejxB,GAAQxB,EACvB0T,KAAKmC,SAAS,CAAC4c,mDAGTzyB,EAAOo0B,EAAMluB,GAAM,IAClBusB,EAAkB/e,KAAKlM,MAAvBirB,eACHzyB,EAAMuW,QAGRkc,EAAe2B,GAAMpsB,KAAKhI,EAAMuW,QAChCkc,EAAevsB,GAAQ,GACvBwN,KAAKmC,SAAS,SAAArO,GAAK,MAAK,CAACirB,eAAerxB,OAAAC,EAAA,EAAAD,CAAA,GAAKoG,EAAMirB,eAAZ,GAA+BA,OAJtEj1B,IAAQyJ,MAAM,wEAQV/G,EAAOk0B,EAAMlf,GACnBA,GAAKA,EAAEqR,kBADe,IAEfkM,EAAkB/e,KAAKlM,MAAvBirB,eACPA,EAAe2B,GAAMrsB,OAAO7H,EAAO,GACnCwT,KAAKmC,SAAS,SAAArO,GAAK,MAAK,CAACirB,eAAerxB,OAAAC,EAAA,EAAAD,CAAA,GAAKoG,EAAMirB,eAAZ,GAA+BA,2CAG3DvyB,GACXwT,KAAKmC,SAAS,CAAC3V,6CAGNF,EAAOkV,GAChBA,EAAEqR,kBADiB,IAAA/D,EAEa9O,KAAKlM,MAA9BirB,EAFYjQ,EAEZiQ,eAAgBvyB,EAFJsiB,EAEItiB,MACvBuyB,EAAc,QAAY1qB,OAAO7H,EAAO,EAAGF,GAC3C0T,KAAKmC,SAAS,SAAArO,GAAK,MAAK,CAACirB,eAAerxB,OAAAC,EAAA,EAAAD,CAAA,GAAKoG,EAAMirB,eAAZ,GAA+BA,GAAiBvyB,OAAQ,0CAGpFgV,GACXA,EAAEqR,kBACF7S,KAAKmC,SAAS,CAAC3V,OAAQ,yCAGZ,IAAA4V,EAAApC,KACX3X,EAAM0C,IAAI,gBAAgBC,KAAK,SAAAC,GAC7B,IAAIiK,EAAUjK,EAAIzB,KAAKA,KACvB4Y,EAAKD,SAAS,CAACjN,6CAIZ5I,GAAO,IAAA8rB,EAAApY,KACJ+e,EAAmB/e,KAAKlM,MAAxBirB,eACJzyB,EAAMuW,OAGRxa,EAAMgG,KAAK,eAAgB,CAACP,KAAMxB,EAAMuW,SACrC7X,KAAK,SAAAC,GACJ,GAAuB,IAAnBA,EAAIzB,KAAK8E,MAAa,KAChB9E,EAASyB,EAAIzB,KAAbA,KACR4uB,EAAKjW,SAAS,SAAArO,GAAK,MAAK,CAACoB,QAAO,GAAAnL,OAAA2D,OAAAwG,EAAA,EAAAxG,CAAMoG,EAAMoB,SAAZ,CAAqB1L,OAEvDu1B,EAAe/3B,MAAQsF,EACvB8rB,EAAKjW,SAAS,SAAArO,GAAK,MAAK,CAACirB,eAAerxB,OAAAC,EAAA,EAAAD,CAAA,GAAKoG,EAAMirB,eAAZ,GAA+BA,QAT1Ej1B,IAAQyJ,MAAM,gFAcRvM,GAAO,IACR+3B,EAAkB/e,KAAKlM,MAAvBirB,eACPA,EAAe/3B,MAAQA,EACvBgZ,KAAKmC,SAAS,SAAArO,GAAK,MAAK,CAACirB,eAAerxB,OAAAC,EAAA,EAAAD,CAAA,GAAKoG,EAAMirB,eAAZ,GAA+BA,gDAGtD,IACTA,EAAkB/e,KAAKlM,MAAvBirB,eACPA,EAAe/3B,MAAQ,GACvBgZ,KAAKmC,SAAS,SAAArO,GAAK,MAAK,CAACirB,eAAerxB,OAAAC,EAAA,EAAAD,CAAA,GAAKoG,EAAMirB,eAAZ,GAA+BA,wCAG9Dvd,EAAG/Z,EAAI+E,GAAO,IAAA6rB,EAAArY,KACtBwB,EAAEqR,kBADoB,IAEf3d,EAAW8K,KAAKlM,MAAhBoB,QACP7M,EAAMqG,OAAO,eAAgB,CAACvC,OAAQ,CAAC1E,QACpCuD,KAAK,SAAAC,GACJiK,EAAQb,OAAO7H,EAAO,GACtB6rB,EAAKlW,SAAS,CAACjN,yDAIF,IAAAojB,EAAAtY,KACTpO,EAAUoO,KAAK5R,MAAMQ,QAAQ+C,SAA7BC,MACDmtB,EAAkB/e,KAAKlM,MAAvBirB,eACPA,EAAej3B,KAAOi3B,EAAej3B,KAAO,EAAI,EAChDi3B,EAAe93B,OAAS83B,EAAe93B,OAAS,EAAI,EACpD,IAAImC,EAAM,mBACPwI,IACDxI,EAAM,oBAERqD,IAAMC,QAAQ,CACZI,MAAO,uCACPC,KAAM,WACJ1E,EAAMgG,KAAKjF,EAAXsE,OAAAC,EAAA,EAAAD,CAAA,GAAoBqxB,IACjB/zB,KAAK,SAAAC,GACAA,EAAIzB,KAAK4C,SACXtC,IAAQyN,KAAKtM,EAAIzB,KAAK4C,SACtBksB,EAAKoH,cAEL51B,IAAQyN,KAAKtM,EAAIzB,KAAKE,+CAQhCsW,KAAK5R,MAAMQ,QAAQC,SACnBmR,KAAKnO,kDAILmO,KAAKmC,SAALzU,OAAAC,EAAA,EAAAD,CAAA,GAAkB8F,oDAIlBwM,KAAKnO,oBAjQmB4Q,aCDbke,oLAhBX,OACIzf,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,iBAAiByI,OAC3B,kBACE1M,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,KACEpT,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,8BAA8BoP,UAAWqM,KACrD1f,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,+BAA+BoP,UAAWsM,KACtD3f,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,+BAA+BoP,UAAWsM,KACtD3f,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAUE,KAAK,iBAAiBC,OAAK,EAACrR,GAAG,0BACzClC,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAUE,KAAK,wBAAwBC,OAAK,EAACrR,GAAG,2CAVjCX,uBCCvBgJ,GAASC,KAAMD,OAoINqV,8MAhIbhtB,MAAQ,CACNitB,YAAa,GACbC,YAAa,GACbC,oBAAqB,KAKvBC,cAAgB,WAAM,IACZF,EAAgBlhB,EAAKhM,MAArBktB,YACR34B,IAAM0C,IAAI,WAAY,CAACoB,OAAQ,CAACqU,SAAUwgB,KACvCh2B,KAAK,SAAAC,GACJ,GAAqB,IAAlBA,EAAIzB,KAAK0B,KAAY,KAAA6L,EACW9L,EAAIzB,KAAxBu3B,EADShqB,EACfvN,KAAmBoE,EADJmJ,EACInJ,IAC1BkS,EAAKqC,SAAS,CAAC4e,cAAaC,YAAa,KACzCl3B,IAAQsC,QAAQwB,QAEhB9D,IAAQyJ,MAAMtI,EAAIzB,KAAKoE,KACvBkS,EAAKqhB,sBA2CbA,eAAiB,WACf94B,IAAM0C,IAAI,YACPC,KAAK,SAAAC,GACJ,GAAqB,IAAlBA,EAAIzB,KAAK0B,KAAY,KAElB61B,EADW91B,EAAIzB,KAAbA,KACiBkH,UACvBoP,EAAKqC,SAAS,CAAC4e,sBASvBK,wBAA0B,SAAA5f,GACxB1B,EAAKqC,SAAS,CAAC6e,YAAaxf,EAAEE,OAAOpV,mFAtD5B7E,EAAIiS,GAAS,IAAAgH,EAAAV,KACtBvT,IAAMC,QAAQ,CACZI,MAAO,mDACPC,KAAM,WACJ1E,IAAMoF,IAAI,mBAAoB,CAAChG,KAAIiS,YAChC1O,KAAK,SAAAC,GAAO,IAAA6Q,EACS7Q,EAAIzB,KAAjB0B,EADI4Q,EACJ5Q,KAAM0C,EADFkO,EACElO,IACD,IAAT1C,GACDpB,IAAQsC,QAAQwB,GAChB8S,EAAKyB,SAAS,CACZ8e,oBAAqB,IAEvBvgB,EAAKygB,kBAELr3B,IAAQyJ,MAAM3F,8CAOZ9E,GAAK,IAAAsZ,EAAApC,KACjBvT,IAAMC,QAAQ,CACZI,MAAO,+DACPC,KAAM,WACJ1E,IAAMqG,OAAO,WAAY,CAACvC,OAAQ,CAACrD,SAChCkC,KAAK,SAAAC,GACiB,IAAlBA,EAAIzB,KAAK0B,MACVpB,IAAQsC,QAAQnB,EAAIzB,KAAKoE,KACzBwU,EAAK+e,kBAELr3B,IAAQyJ,MAAMtI,EAAIzB,KAAKoE,sDAmBjCoS,KAAKmhB,kDAOE,IAAA/I,EAAApY,KAAAiD,EACgDjD,KAAKlM,MAArDitB,EADA9d,EACA8d,YAAaC,EADb/d,EACa+d,YAAaC,EAD1Bhe,EAC0Bge,mBAC3BxT,EAAU,CACd,CACEtlB,IAAK,WACLulB,UAAW,WACX5gB,MAAO,qBACP6gB,MAAO,UACN,CACDxlB,IAAK,UACLulB,UAAW,UACX5gB,MAAO,wCACP6gB,MAAO,SACPtE,MAAO,IACPuE,OAAQ,SAAC5lB,EAAMoK,EAAQ5F,GAAf,OAAyBy0B,IAAuBz0B,EAAQxE,EAAOkZ,EAAAzV,EAAA0V,cAACrC,GAAA,EAAM2M,OAAP,CAAc2U,YAAY,eAAK9e,KAAK,QAAQ6K,SAAU,SAAA7f,GAAK,OAAI8rB,EAAKiI,WAAWjuB,EAAOtJ,IAAIwD,QAChK,CACDnE,IAAK,WACLulB,UAAW,WACX5gB,MAAO,yGACP6gB,MAAO,SACPC,OAAQ,SAAA5lB,GAAI,OAAIkZ,EAAAzV,EAAA0V,cAACkgB,GAAA,gBAAD,CAAiBr5B,KAAMA,EAAMs5B,OAAQ,kBAAMx3B,IAAQsC,QAAQ,8BAAS8U,EAAAzV,EAAA0V,cAAA,KAAGqB,KAAK,yBAAyBd,OAAO,WAAW1Z,MACtI,CACDG,IAAK,OACLulB,UAAW,OACX5gB,MAAO,eACP6gB,MAAO,SACPC,OAAQ,SAAA5lB,GAAI,OAAa,IAATA,EAAa,iCAAoB,IAATA,EAAa,2BAAS,6BAC7D,CACD8E,MAAO,SACP3E,IAAK,SACLwlB,MAAO,SACPC,OAAQ,SAAC5lB,EAAMoK,EAAQ5F,GAAf,OAAyB0U,EAAAzV,EAAA0V,cAAAD,EAAAzV,EAAAkY,SAAA,KAC/BzC,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQhB,cAAc,2BAAOnJ,QAAS,kBAAMkW,EAAKjW,SAAS,CAAC8e,mBAAoBz0B,OAC/E0U,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQvB,GAAI,EAAGL,WAAW,SAASc,SAA0B,IAAhBnZ,EAAO6S,KAAYoG,cAAc,eAAKnJ,QAAS,kBAAMkW,EAAKmJ,cAAcnvB,EAAOtJ,YAIlI,OACCoY,EAAAzV,EAAA0V,cAAA,WACGD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAACqgB,GAAD,CAAQjgB,SAAUvB,KAAKohB,wBAAyB90B,MAAO00B,EAAa3f,MAAO,CAACgI,MAAO,IAAKvH,aAAc,IAAKC,YAAY,uCAASqe,YAAY,eAAKjU,SAAUnM,KAAKkhB,gBAChKhgB,EAAAzV,EAAA0V,cAACkP,GAAA,EAAD,CAAOC,OAAQ,SAAAle,GAAM,OAAIA,EAAOtJ,KAAKwY,KAAK,QAAQqL,WAAYoU,EAAatT,QAASA,aA3HxEhL,aCHdkJ,GAAYC,KAAZD,OAEF8V,8MAEJC,WAAa,YAEXC,EADmC7hB,EAAK1R,MAAhCG,KAAOozB,gBACA,SAACC,EAAQ3xB,GACnB2xB,EACD93B,IAAQyJ,MAAM,2DAGhBtD,EAAOwQ,SAAWX,EAAKuC,KAAKpS,EAAOwQ,UAAU6B,WAC7C7V,IAAMC,QAAQ,CACZI,MAAO,qEACPC,KAAM,WACJ1E,EAAMgG,KAAK,WAAXX,OAAAC,EAAA,EAAAD,CAAA,GAA2BuC,IACxBjF,KAAK,SAAAC,GACiB,IAAlBA,EAAIzB,KAAK0B,MACV4U,EAAK+hB,YACL/3B,IAAQsC,QAAQnB,EAAIzB,KAAKoE,MAEzB9D,IAAQyJ,MAAMtI,EAAIzB,KAAKoE,gBASrCi0B,UAAY,YAEVrzB,EADmCsR,EAAK1R,MAAhCG,KAAOC,gBACA,CAACgS,SAAU,GAAIC,SAAU,GAAIwE,KAAM,6EAG3C,IACQ/B,EAAuBlD,KAAK5R,MAAnCG,KAAO2U,kBAYf,OAEChC,EAAAzV,EAAA0V,cAAA,WACGD,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACbF,EAAAzV,EAAA0V,cAAC8C,GAAA,EAfgB,CACrBC,SAAU,CACR4d,GAAI,CAAE3d,KAAM,IACZsI,GAAI,CAAEtI,KAAM,IAEdC,WAAY,CACV0d,GAAI,CAAE3d,KAAM,IACZsI,GAAI,CAAEtI,KAAM,IAEdiN,OAAO,GAODlQ,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,sBACdpB,EAAkB,WAAY,CAC7BsB,MAAO,CAAC,CAAEC,UAAU,EAAM3a,QAAS,gDADpCoZ,CAGChC,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOiD,YAAY,2CAGvBb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBACdpB,EAAkB,WAAY,CAC7BsB,MAAO,CAAC,CAAEC,UAAU,EAAM3a,QAAS,0CADpCoZ,CAGChC,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOiD,YAAY,qCAGvBb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,gBACdpB,EAAkB,UAAW,CAC5BsB,MAAO,CAAC,CAAEC,UAAU,EAAM3a,QAAS,0CADpCoZ,CAGChC,EAAAzV,EAAA0V,cAACrC,GAAA,EAAD,CAAOiD,YAAY,qCAGvBb,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,kCACdpB,EAAkB,OAAQ,CACzBsB,MAAO,CAAC,CAAEC,UAAU,IACpBF,aAAc,GAFfrB,CAIChC,EAAAzV,EAAA0V,cAACiL,GAAA,EAAD,KACElL,EAAAzV,EAAA0V,cAAC4gB,GAAD,CAAQz1B,MAAO,GAAf,kCACA4U,EAAAzV,EAAA0V,cAAC4gB,GAAD,CAAQz1B,MAAO,GAAf,4BACA4U,EAAAzV,EAAA0V,cAAC4gB,GAAD,CAAQz1B,MAAO,GAAf,+BAIN4U,EAAAzV,EAAA0V,cAAC8C,GAAA,EAAKI,KAAN,CAAWC,MAAM,KACfpD,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQ/K,KAAK,UAAU+J,cAAc,eAAKnJ,QAASlC,KAAK0hB,aACxDxgB,EAAAzV,EAAA0V,cAACkL,GAAD,CAAQrB,GAAI,GAAIP,WAAW,OAAOnJ,KAAK,UAAU+J,cAAc,eAAKnJ,QAASlC,KAAK6hB,uBAtFvEpf,aA+FViC,QAAKC,QAALD,CAAc+c,ICtFdO,oLAVX,OACC9gB,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,KACGpT,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,sBAAsBoP,UAAWuM,KAC7C5f,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,qBAAqBoP,UAAWkN,KAC5CvgB,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAUE,KAAK,iBAAiBC,OAAK,EAACrR,GAAG,gCANrBX,aCGtBgJ,WAASC,KAAMD,QAoDNwW,eAhDd,SAAAA,EAAY7zB,GAAO,IAAA0R,EAAA,OAAApS,OAAAqS,EAAA,EAAArS,CAAAsS,KAAAiiB,IAClBniB,EAAApS,OAAAuS,EAAA,EAAAvS,CAAAsS,KAAAtS,OAAAwS,EAAA,EAAAxS,CAAAu0B,GAAA9hB,KAAAH,KAAM5R,KAKP0F,MAAQ,CACP1K,IAAK,GACL84B,OAAQ,IANRpiB,EAAKqiB,UAAYriB,EAAKqiB,UAAU9hB,KAAf3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IACjBA,EAAKsiB,MAAQtiB,EAAKsiB,MAAM/hB,KAAX3S,OAAA4S,GAAA,EAAA5S,CAAAoS,IAHKA,yEAWT0B,GACT,IAAIpY,EAAMoY,EAAEE,OAAOpV,MACnB0T,KAAKmC,SAAS,CAAC/Y,sCAGVA,GAAK,IAAAsX,EAAAV,KACP5W,EACFf,IAAM,CACLc,OAAQ,MACRC,IAAK,oBACL+C,OAAQ,CAAC/C,OACTb,QAAS,MACPyC,KAAK,SAAAC,GACPyV,EAAKyB,SAAS,CAAC+f,OAAQ,WAAaj3B,EAAIzB,SAGzCM,IAAQkJ,QAAQ,yEAKR,IAAAiQ,EACcjD,KAAKlM,MAApB1K,EADC6Z,EACD7Z,IAAK84B,EADJjf,EACIif,OACX,OACChhB,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,aACdF,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,WACTF,EAAAzV,EAAA0V,cAACkhB,GAAD,CAAQ/1B,MAAOlD,EAAK2Y,YAAY,qEAAcT,KAAK,QAAQ8e,YAAY,eAAK7e,SAAUvB,KAAKmiB,UAAWhW,SAAUnM,KAAKoiB,QACrHlhB,EAAAzV,EAAA0V,cAAA,OAAKC,UAAU,kBAAkBC,MAAO,CAACsO,QAASuS,EAAS,QAAU,SACpEhhB,EAAAzV,EAAA0V,cAAA,SAAOmhB,aAAa,aAAaC,SAAS,WAAWC,OAAK,EAACnf,IAAK6e,EAAQO,UAAQ,EAACjI,OAAO,OAAOnR,MAAM,SACrGnI,EAAAzV,EAAA0V,cAAA,KAAGqB,KAAM0f,EAAQQ,SAAUR,EAAQxgB,OAAO,WAA1C,0BA1CQe,aCKNkgB,oLATX,OACCzhB,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,KACIpT,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,sBAAsBoP,UAAW0N,KAC7C/gB,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAUE,KAAK,eAAeC,OAAK,EAACrR,GAAG,gCALtBX,aCwDXmgB,8MAzCb9uB,MAAQ,CACNtL,SAAU,uFAIV,IAAIA,EAAWC,aAAaC,QAAQ,YACjCF,GAAac,KAAKiV,OAAW,IAAIjV,KAAKV,KAAKC,MAAML,GAAUq6B,SAAY,OACxE7iB,KAAKmC,SAAS,CAAC3Z,SAAUI,KAAKC,MAAML,sCAI/B,IACCA,EAAawX,KAAKlM,MAAlBtL,SACFs6B,EAAYp1B,OAAOsR,KAAKxW,GAAU4C,OAAS,EACjD,OACE8V,EAAAzV,EAAA0V,cAAC4hB,EAAA,EAAD,CAAUtjB,MAAOA,IACfyB,EAAAzV,EAAA0V,cAACgC,EAAA,EAAD,KACEjC,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,KACEpT,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,eAAeyI,OAAQ,kBAAMkV,EAAY5hB,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAUlR,GAAIlW,OAAOyE,SAASyhB,OAAS4P,mBAAmB91B,OAAOyE,SAASyhB,OAAOzN,MAAM,KAAK,IAAM,WAAezE,EAAAzV,EAAA0V,cAAC8hB,GAAD,SACtK/hB,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,SAASyI,OAAQ,kBAC3BkV,EACE5hB,EAAAzV,EAAA0V,cAAC+hB,GAAD,CAAar2B,QACTqU,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,KACEpT,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,iBAAiBoP,UAAW4O,KACxCjiB,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,iBAAiBoP,UAAW6O,KACxCliB,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,iBAAiBoP,UAAW8O,KACxCniB,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,iBAAiBoP,UAAWyN,KACxC9gB,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAOnP,KAAK,eAAeoP,UAAWoO,KACtCzhB,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAUE,KAAK,SAASC,OAAK,EAACrR,GAAsB,IAAlB5a,EAASyc,KAAa,iBAAmB,sBAG/E/D,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAUlR,GAAI,yBAA2BkgB,mBAAmBp2B,OAAOyE,SAAS+T,eAElFxE,EAAAzV,EAAA0V,cAACmT,EAAA,EAAD,CAAUE,KAAK,IAAIC,OAAK,EAACrR,GAAG,qBAnCtBX,4CCFbvV,OAAOvD,UACVuD,OAAOvD,QAAUA,MAGnB45B,IAAM9gB,UAAU+gB,UAAUnhB,KAAOohB,KAEjCC,IAAS9V,OAAO1M,EAAAzV,EAAA0V,cAACwiB,GAAD,MAASt5B,SAASu5B,eAAe","file":"static/js/main.81c2c7de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login_bg.e3347162.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ad641e9f.png\";","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  // 公号接管\r\n  gonghaoTagList: [],\r\n  allGonghaoList: [],\r\n  originalGonghaoList: [],\r\n  gonghaoList: [],\r\n  group: \"全部\",\r\n  status: \"全部\",\r\n  currentPage: 1,\r\n  searchName: \"\",\r\n  isSelectTag: false,\r\n  selectedTag: \"\",\r\n  isCreate: true,\r\n  gonghaoModal: false,\r\n  gonghaoInfo: {\r\n    group: \"\",\r\n    id: \"\",\r\n    attribute: 0,\r\n    ab_test: 0\r\n  },\r\n  // 公号配置\r\n  configList: [],\r\n  configForm: {type: 0, sex: 3, attribute: 1, text: \"\", replyType: 0, msgId: null, key: \"\", urlList: []},\r\n\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state)), _start, _end;\r\n  switch (action.type) {\r\n    case constants.GET_GONGHAO_TAG_LIST:\r\n      newState.gonghaoTagList = action.gonghaoTagList;\r\n      return newState;\r\n    case constants.GET_ALL_GONGHAO_LIST:\r\n      newState.allGonghaoList = newState.originalGonghaoList = action.allGonghaoList;\r\n      newState.gonghaoList = action.gonghaoList;\r\n      return newState;\r\n    case constants.CHANGE_SELECT_VALUE:\r\n      newState.group = newState.status = \"全部\";\r\n      newState[action.key] = action.value;\r\n      if(newState[action.key] === \"全部\") {\r\n        newState.gonghaoList = [...newState.allGonghaoList]\r\n      } else{\r\n        newState.gonghaoList = [...newState.allGonghaoList.filter(item => item[action.key] === action.value)]\r\n      }\r\n      return newState;\r\n    case constants.CHANGE_PAGE:\r\n      _start = (action.page - 1) * 10;\r\n      _end = action.page * 10;\r\n      newState.gonghaoList = newState.allGonghaoList.slice(_start, _end);\r\n      newState.currentPage = action.page;\r\n      return newState;\r\n    case constants.CHANGE_SEARCH_INPUT:\r\n      newState.searchName = action.searchName;\r\n      return newState;\r\n    case constants.SEARCH_BY_NAME:\r\n      newState.allGonghaoList = action.allGonghaoList;\r\n      newState.gonghaoList = action.gonghaoList;\r\n      newState.searchName = \"\";\r\n      return newState;\r\n    case constants.OPEN_GONGHAO_MODAL:\r\n      newState.gonghaoModal = true;\r\n      newState.gonghaoInfo = {id: action.id, group: action.group, attribute: action.attribute, ab_test: action.ab_test};\r\n      return newState;\r\n    case constants.CLOSE_GONGHAO_MODAL:\r\n      newState.gonghaoModal = false;\r\n      newState.gonghaoInfo = {attribute: 0};\r\n      return newState;\r\n    case constants.CHANGE_GROUP:\r\n      newState.gonghaoInfo.group = action.name;\r\n      return newState;\r\n    case  constants.CHANGE_ATTRIBUTE:\r\n      newState.gonghaoInfo.attribute = action.attribute;\r\n      return newState;\r\n    case  constants.CHANGE_AB_TEST:\r\n      newState.gonghaoInfo.ab_test = action.ab_test;\r\n      return newState;\r\n    case constants.DELETE_GONGHAO:\r\n      newState.gonghaoList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.SESECT_TAG:\r\n      newState.isSelectTag = true;\r\n      newState.selectedTag = action.selectedTag;\r\n      return newState;\r\n    case constants.REMOVE_TAG:\r\n      newState.isSelectTag = false;\r\n      newState.selectedTag = \"\";\r\n      return newState;\r\n    case constants.TAG_CONFIRM:\r\n      newState.isSelectTag = true;\r\n      newState.selectedTag = action.group;\r\n      action.name && newState.gonghaoTagList.push(action.name);\r\n      return newState;\r\n    case constants.DELETE_TAG_ITEM:\r\n      newState.isSelectTag = false;\r\n      newState.selectedTag = \"\";\r\n      newState.gonghaoTagList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CHECK_PAGE_ATTR:\r\n      newState.isCreate = false;\r\n      return newState;\r\n    case constants.JIEGUAN_GONGHAO:\r\n      newState.gonghaoList[action.index].status = 0;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from \"axios\";\r\n\r\naxios.defaults.timeout = 10000;\r\n//\r\n// axios.defaults.headers = {\r\n//   'X-Requested-With': 'XMLHttpRequest',\r\n//   \"Content-Type\": \"application/json;charset=utf-8\"\r\n// };\r\nlet userInfo = localStorage.getItem(\"userInfo\")\r\n\r\nlet account_id = userInfo ? JSON.parse(userInfo)._id  : \"\";\r\n\r\naxios.interceptors.request.use(\r\n  config => {\r\n    if(config.method === \"get\" || config.method === \"delete\") {\r\n      if (config.url.indexOf('?') >= 0) {\r\n        config.url += ('&account_id=' + account_id + \"&_t=\" + new Date().getTime());\r\n      } else {\r\n        config.url += ('?account_id=' + account_id + \"&_t=\" + new Date().getTime());\r\n      }\r\n    } else if(config.method === \"post\" || config.method === \"put\") {\r\n      config.data.account_id = account_id;\r\n      config.data._t = new Date().getTime();\r\n    }\r\n    return config;\r\n  },\r\n  err => {\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\n//响应拦截器即异常处理\r\naxios.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  err => {\r\n    if (err && err.response) {\r\n      switch (err.response.status) {\r\n        case 400:\r\n          err.message = \"错误请求\";\r\n          break;\r\n        case 401:\r\n          err.message = \"登录信息失效\";\r\n          break;\r\n        case 403:\r\n          err.message = \"拒绝访问\";\r\n          break;\r\n        case 404:\r\n          err.message = \"请求错误,未找到该资源\";\r\n          break;\r\n        case 405:\r\n          err.message = \"请求方法未允许\";\r\n          break;\r\n        case 408:\r\n          err.message = \"请求超时\";\r\n          break;\r\n        case 500:\r\n          err.message = \"服务器端出错\";\r\n          break;\r\n        case 501:\r\n          err.message = \"网络未实现\";\r\n          break;\r\n        case 502:\r\n          err.message = \"网络错误\";\r\n          break;\r\n        case 503:\r\n          err.message = \"服务不可用\";\r\n          break;\r\n        case 504:\r\n          err.message = \"网络超时\";\r\n          break;\r\n        case 505:\r\n          err.message = \"http版本不支持该请求\";\r\n          break;\r\n        default:\r\n          err.message = `连接错误${err.response.status}`;\r\n      }\r\n    } else {\r\n      err.message = \"连接到服务器失败\";\r\n    }\r\n    return Promise.resolve(err.response);\r\n  }\r\n);\r\n\r\nexport default axios;","const backTop = () => {\r\n  return new Promise((resolve, reject) => {\r\n    let timer;\r\n    timer = setInterval(function () {\r\n      let osTop =\r\n        document.documentElement.scrollTop || document.body.scrollTop;\r\n      let ispeed = Math.floor(-osTop / 1.2);\r\n      document.documentElement.scrollTop = document.body.scrollTop =\r\n        osTop + ispeed;\r\n      if (osTop === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 30);\r\n    resolve(null)\r\n  })\r\n};\r\n\r\nexport default backTop;","import axios from '../../../../utils/http';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\nimport backTop from '../../../../utils';\r\n\r\nexport const getGroupList = () => {\r\n  return (dispatch) => {\r\n    axios.get('/gonghaoTag')\r\n      .then(res => {\r\n        if (res.data.code === 1) {\r\n          let gonghaoTagList = res.data.data;\r\n          const action = {\r\n            type: constants.GET_GONGHAO_TAG_LIST,\r\n            gonghaoTagList\r\n          };\r\n          dispatch(action)\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const getAllGonghaoList = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let allGonghaoList = res.data.data;\r\n          const action = {\r\n            type: constants.GET_ALL_GONGHAO_LIST,\r\n            allGonghaoList,\r\n            gonghaoList: allGonghaoList\r\n          };\r\n          dispatch(action);\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changePage = (page) => {\r\n  return async dispatch => {\r\n    const action = {\r\n      type: constants.CHANGE_PAGE,\r\n      page\r\n    };\r\n    await backTop();\r\n    await dispatch(action);\r\n  }\r\n};\r\n\r\n\r\nexport const changeSearchInput = searchName => ({\r\n  type: constants.CHANGE_SEARCH_INPUT,\r\n  searchName\r\n});\r\n\r\nexport const searchByName = nick_name => {\r\n  return dispatch => {\r\n    axios.get('/conf/find_one', {params: {nick_name}})\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let allGonghaoList = res.data.data,\r\n            gonghaoList = allGonghaoList;\r\n          const action = {\r\n            type: constants.SEARCH_BY_NAME,\r\n            allGonghaoList, gonghaoList\r\n          };\r\n          dispatch(action);\r\n          message.success(\"查询成功\")\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeSelectValue = (key, value) => ({\r\n  type: constants.CHANGE_SELECT_VALUE,\r\n  key, value\r\n});\r\n\r\nexport const deleteGonghao = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认删除吗？\",\r\ntitle: \"提示\",\r\n      onOk: () => {\r\n        axios.get(\"/conf/del\", {\r\n          params: {id}\r\n        }).then(res => {\r\n          const action = {\r\n            type: constants.DELETE_GONGHAO,\r\n            index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"删除成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const jieguan = (code, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认接管吗？\",\r\ntitle: \"提示\",\r\n      onOk: () => {\r\n        axios.get(\"/conf/jieguan\", {\r\n          params: {code}\r\n        }).then(res => {\r\n          const action = {\r\n            type: constants.JIEGUAN_GONGHAO,\r\n            index\r\n          };\r\n          dispatch(action);\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const addNewGonghao = () => {\r\n  return dispatch => {\r\n    axios.get('/component/componentAuthorize')\r\n      .then(res => {\r\n        window.open(res.data)\r\n      })\r\n  }\r\n};\r\n\r\nexport const openGonghaoModal = (id, group, attribute, ab_test) => ({\r\n  type: constants.OPEN_GONGHAO_MODAL,\r\n  id, group, attribute, ab_test\r\n});\r\n\r\nexport const closeGonghaoModal = () => ({\r\n  type: constants.CLOSE_GONGHAO_MODAL\r\n});\r\n\r\nexport const updateGonghaoInfo = gonghaoInfo => {\r\n  return dispatch => {\r\n    console.log(gonghaoInfo)\r\n    axios.put('/conf', {...gonghaoInfo})\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          message.success(res.data.msg);\r\n          dispatch(closeGonghaoModal());\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeGroup = name => ({\r\n  type: constants.CHANGE_GROUP,\r\n  name\r\n});\r\n\r\nexport const changeAttribute = attribute => ({\r\n  type: constants.CHANGE_ATTRIBUTE,\r\n  attribute\r\n});\r\n\r\nexport const changeAbTest = ab_test => ({\r\n  type: constants.CHANGE_AB_TEST,\r\n  ab_test\r\n});\r\n\r\nexport const selectTag = (selectedTag) => ({\r\n  type: constants.SESECT_TAG,\r\n  selectedTag\r\n});\r\n\r\nexport const removeTag = () => ({\r\n  type: constants.REMOVE_TAG\r\n});\r\n\r\nexport const tagConfirm = (group, props) => {\r\n  return (dispatch) => {\r\n    let name;\r\n    axios.post(\"/gonghaoTag\", {name: group})\r\n      .then(res => {\r\n        if (res.data.exist === 0) {\r\n          name = res.data.data\r\n        }\r\n        props.form.setFieldsValue({group})\r\n        const action = {\r\n          type: constants.TAG_CONFIRM,\r\n          name, group\r\n        };\r\n        dispatch(action)\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteTagItem = (id, index) => {\r\n  return (dispatch) => {\r\n    axios.delete('/gonghaoTag/' + id)\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.DELETE_TAG_ITEM,\r\n          index\r\n        };\r\n        dispatch(action)\r\n      });\r\n  }\r\n};\r\n\r\nexport const createForm = (gonghaoInfo, history) => {\r\n  return (dispatch) => {\r\n    axios.post(\"/conf/create\", gonghaoInfo).then(res => {\r\n      history.goBack();\r\n      const action = {\r\n        type: constants.CREATE_FORM,\r\n        gonghaoInfo\r\n      };\r\n      dispatch(action);\r\n      message.success(\"添加成功\")\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateForm = (gonghaoInfo, history) => {\r\n  return (dispatch) => {\r\n    axios.post(\"/conf/update\", gonghaoInfo).then(res => {\r\n      history.goBack();\r\n      getAllGonghaoList();\r\n      const action = {\r\n        type: constants.UPDATE_FORM,\r\n        gonghaoInfo\r\n      };\r\n      dispatch(action);\r\n      message.success(\"修改成功\")\r\n    });\r\n  }\r\n};\r\n\r\nexport const checkPageAttr = () => ({\r\n  type: constants.CHECK_PAGE_ATTR\r\n});\r\n\r\n// 公号配置\r\n\r\nexport const getConfigList = (code) => {\r\n  return (dispatch) => {\r\n    axios.get('/reply', {params: {code}})\r\n      .then(res => {\r\n        let configList = res.data.data;\r\n        const action = {\r\n          type: constants.GET_CONFIG_LIST,\r\n          configList\r\n        };\r\n        dispatch(action)\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteConfig = (id, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认删除吗？\",\r\n      title: \"提示\",\r\n      onOk: () => {\r\n        axios.get('/reply/del', {params: {id}})\r\n          .then(res => {\r\n          const action = {\r\n            type: constants.DELETE_CONFIG,\r\n            index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"删除成功\")\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n};\r\n\r\nexport const changeConfigForm = (formInfo) => ({\r\n  type: constants.CHANGE_CONFIG_FORM,\r\n  formInfo\r\n});\r\n\r\nexport const createConfigForm = (configInfo, history) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      title: \"确定新建一条规则吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/create\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.CREATE_CONFIG_FORM,\r\n            configInfo\r\n          };\r\n          dispatch(action);\r\n          message.success(\"创建成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const updateConfigForm = (configInfo, history, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      title: \"确定修改吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/update\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.UPDATE_CONFIG_FORM,\r\n            configInfo, index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"修改成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\n","export const GET_GONGHAO_TAG_LIST = \"gonghao/tuoguan/getGonghaoTagList\";\r\nexport const GET_ALL_GONGHAO_LIST = \"gonghao/tuoguan/getAllGonghaoList\";\r\nexport const CHANGE_PAGE = \"gonghao/tuoguan/changePage\";\r\nexport const SEARCH_BY_NAME = \"gonghao/tuoguan/searchByName\";\r\nexport const DELETE_GONGHAO = \"gonghao/tuoguan/deleteGonghao\";\r\nexport const JIEGUAN_GONGHAO = \"gonghao/tuoguan/jieguan\";\r\nexport const CHANGE_SEARCH_INPUT = \"gonghao/tuoguan/changeSearchInput\";\r\nexport const SESECT_TAG = \"gonghao/tuoguan/selectTag\";\r\nexport const REMOVE_TAG = \"gonghao/tuoguan/removeTag\";\r\nexport const TAG_CONFIRM = \"gonghao/tuoguan/tagConfirm\";\r\nexport const DELETE_TAG_ITEM = \"gonghao/tuoguan/deleteTagItem\";\r\nexport const CREATE_FORM = \"gonghao/tuoguan/createForm\";\r\nexport const UPDATE_FORM = \"gonghao/tuoguan/updateForm\";\r\nexport const CHECK_PAGE_ATTR = \"gonghao/tuoguan/checkPageAttr\";\r\nexport const OPEN_GONGHAO_MODAL = \"gonghao/tuoguan/openGonghaoModal\";\r\nexport const CLOSE_GONGHAO_MODAL = \"gonghao/tuoguan/closeGonghaoModal\";\r\nexport const CHANGE_GROUP = \"gonghao/tuoguan/changeGroup\";\r\nexport const CHANGE_ATTRIBUTE = \"gonghao/tuoguan/changeAttribute\";\r\nexport const CHANGE_AB_TEST = \"gonghao/tuoguan/changeAbTest\";\r\nexport const CHANGE_SELECT_VALUE = \"gonghao/tuoguan/changeSelectValue\";\r\n\r\n// 公号配置\r\nexport const GET_CONFIG_LIST = \"gonghao/tuoguan/getConfigList\";\r\nexport const DELETE_CONFIG = \"gonghao/tuoguan/deleteConfig\";\r\nexport const CREATE_CONFIG_FORM = \"gonghao/tuoguan/createConfigForm\";\r\nexport const UPDATE_CONFIG_FORM = \"gonghao/tuoguan/updateConfigForm\";\r\nexport const CHANGE_CONFIG_FORM = \"gonghao/tuoguan/changeConfigForm\";\r\n","export const GET_MENU_LIST = \"gonghao/menu/getMenuList\";\r\nexport const DELETE_MENU = \"gonghao/menu/deleteMenu\";\r\nexport const HANDLE_INFO_CHANGE = \"gonghao/menu/handleInfoChange\";\r\nexport const HANDLE_INDIVIDUAL_CHANGE = \"gonghao/menu/handleIndividualChange\";\r\nexport const HANDLE_INPUT_CHANGE = \"gonghao/menu/handleInputChange\";\r\nexport const HANDLE_SUB_INPUT_CHANGE = \"gonghao/menu/handleSubInputChange\";\r\nexport const ADD_FIRST_MENU = \"gonghao/menu/addFirstMenu\";\r\nexport const ADD_SECOND_MENU = \"gonghao/menu/addSecondMenu\";\r\nexport const EDIT_MENU = \"gonghao/menu/editMenu\";\r\nexport const EDIT_SEC_MENU = \"gonghao/menu/editSecMenu\";\r\nexport const SUBMIT_MENU = \"gonghao/menu/submitMenu\";\r\nexport const OPEN_MADAL = \"gonghao/menu/openModal\";\r\nexport const CANCEL_MENU = \"gonghao/menu/cancelMenu\";\r\nexport const DELETE_FIR_MENU = \"gonghao/menu/deleteFirMenu\";\r\nexport const DELETE_SUB_MENU = \"gonghao/menu/deleteSubMenu\";\r\nexport const GET_ALL_CODES = \"gonghao/menu/getAllCodes\";\r\nexport const CHANGE_GONGHAO = \"gonghao/menu/changeGonghao\";\r\nexport const INIT_MENU_INFO = \"gonghao/menu/initMenuInfo\";\r\nexport const RESET_STATE = \"gonghao/menu/resetState\";\r\nexport const CHANGE_MESSAGE_INFO = \"gonghao/menu/changeMessageInfo\";\r\nexport const ADD_TO_LIST = \"gonghao/menu/addToList\";\r\nexport const UPDATE_MESSAGE_ITEM = \"gonghao/menu/updateMessageItem\";\r\nexport const UPDATE_CURRENT_MESSAGE = \"gonghao/menu/updateCurrentMessage\";\r\nexport const DELETE_CURRENT_MESSAGE = \"gonghao/menu/deleteCurrentMessage\";\r\nexport const CLEAR_MESSAGE_INFO_INPUT = \"gonghao/menu/clearMessageInfoInput\";\r\nexport const SAVE_TO_CONTENTS = \"gonghao/menu/saveToContents\";\r\nexport const RANDOM_STRING = \"gonghao/menu/randomString\";","import * as constants from './constants';\r\n\r\nconst firstMenuForm = {\r\n  name: \"\",\r\n  type: \"view\",\r\n  key: \"\",\r\n  url: \"\",\r\n  sub_button: []\r\n};\r\n\r\nconst sub_button = {\r\n  name: \"\",\r\n  type: \"view\",\r\n  key: \"\",\r\n  url: \"\"\r\n};\r\n\r\nconst defaultMenuInfo = {\r\n  title: \"\",\r\n  individual: false,\r\n  sex: \"0\",\r\n  values: [],\r\n  codes: [],\r\n  contents: {}\r\n};\r\n\r\nconst messageInfo = {\r\n  replyType: 0,\r\n  articles: [],\r\n  content: \"\"\r\n};\r\n\r\nconst defaultState = {\r\n  menuList: [],\r\n  menuForm: JSON.parse(JSON.stringify(firstMenuForm)),\r\n  menuInfo: JSON.parse(JSON.stringify(defaultMenuInfo)),\r\n  menuIndex: -1,\r\n  sub_button: JSON.parse(JSON.stringify(sub_button)),\r\n  secMenuIndex: -1,\r\n  isSubmit: false,\r\n  updateIndex: -1,\r\n  messageInfo: JSON.parse(JSON.stringify(messageInfo)),\r\n  currentKey: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    // 菜单配置列表页\r\n    case constants.GET_MENU_LIST:    // 获取菜单列表\r\n      newState.menuList = action.menuList;\r\n      return newState;\r\n    case constants.DELETE_MENU:      // 删除菜单\r\n      newState.menuList.splice(action.index, 1);\r\n      return newState;\r\n\r\n    // 编辑菜单栏\r\n    case constants.GET_ALL_CODES:    // 获取所有公号\r\n      newState.allCodes = [...action.allCodes];\r\n      return newState;\r\n    case constants.CHANGE_GONGHAO:   // 选择公号\r\n      newState.menuInfo.codes = newState.targetKeys = [...action.targetKeys];\r\n      return newState;\r\n    case constants.ADD_FIRST_MENU:    // 添加一级菜单\r\n      newState.menuForm = JSON.parse(JSON.stringify(firstMenuForm));\r\n      newState.menuInfo.values.push({...newState.menuForm});\r\n      newState.menuIndex = newState.menuInfo.values.length - 1;\r\n      return newState;\r\n    case constants.EDIT_MENU:         // 编辑一级菜单\r\n      newState.secMenuIndex = -1;\r\n      newState.menuIndex = action.index;\r\n      newState.menuForm = {...action.data};\r\n      if(newState.menuForm.sub_button && newState.menuForm.sub_button.length) {\r\n        newState.sub_button = {...newState.menuForm.sub_button[0]};\r\n        newState.secMenuIndex = 0;\r\n      }\r\n      newState.currentKey = \"\";\r\n      if(newState.menuIndex > -1) {\r\n        if(newState.sub_button.key && newState.secMenuIndex > -1){\r\n          newState.menuInfo.values[newState.menuIndex].key = newState.menuForm.key = \"\";\r\n          newState.currentKey = newState.sub_button.key;\r\n          newState.messageInfo = newState.menuInfo.contents[newState.currentKey]\r\n        } else if(action.data.key) {\r\n          newState.currentKey = newState.menuForm.key = newState.menuInfo.values[newState.menuIndex].key;\r\n          newState.messageInfo = newState.menuInfo.contents[newState.currentKey]\r\n        }\r\n      }\r\n      return newState;\r\n    case constants.DELETE_FIR_MENU:   // 删除一级菜单\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1);\r\n      newState.menuIndex = 0;\r\n      newState.menuForm = newState.menuInfo.values[0] || JSON.parse(JSON.stringify(firstMenuForm));\r\n      delete newState.menuInfo.contents[newState.currentKey];\r\n      newState.menuForm.key &&( newState.messageInfo = newState.menuInfo.contents[newState.menuForm.key]);\r\n      return newState;\r\n    case constants.HANDLE_INPUT_CHANGE:    // 一级菜单input修改\r\n      if(action.name === \"type\") {\r\n        newState.menuForm.url = \"\";\r\n        newState.messageInfo = JSON.parse(JSON.stringify(messageInfo));\r\n        if(action.value === \"click\") {\r\n          // newState.menuForm.key = newState.currentKey = newState.menuInfo.values[newState.menuIndex].key = \"wxb_mn_\" + (newState.menuIndex + 1) + \"_0\";\r\n          newState.menuForm.key = newState.menuInfo.values[newState.menuIndex].key  = newState.currentKey;\r\n        } else {\r\n          newState.menuForm.key = newState.menuInfo.values[newState.menuIndex].key = newState.currentKey = \"\"\r\n        }\r\n      }\r\n      newState.menuForm[action.name] = action.value;\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm});\r\n      return newState;\r\n    case constants.ADD_SECOND_MENU:   // 添加二级菜单\r\n      newState.sub_button = JSON.parse(JSON.stringify(sub_button));\r\n      newState.menuForm.sub_button.push({...newState.sub_button});\r\n      newState.messageInfo = JSON.parse(JSON.stringify(messageInfo));\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm});\r\n      newState.secMenuIndex = newState.menuForm.sub_button.length - 1;\r\n      return newState;\r\n    case constants.EDIT_SEC_MENU:     // 编辑二级菜单\r\n      newState.currentKey && (newState.menuInfo.contents[newState.currentKey] = newState.messageInfo);\r\n      newState.secMenuIndex = action.index;\r\n      newState.sub_button = {...action.data};\r\n      newState.currentKey = \"\";\r\n      if(action.data.key && newState.secMenuIndex > -1) {\r\n        newState.menuInfo.values[newState.menuIndex].key = newState.menuForm.key = \"\";\r\n        newState.currentKey = newState.sub_button.key;\r\n        newState.messageInfo = newState.menuInfo.contents[newState.currentKey]\r\n      }\r\n      return newState;\r\n    case constants.DELETE_SUB_MENU:   // 删除二级菜单\r\n      newState.menuForm.sub_button.splice(newState.secMenuIndex, 1);\r\n      newState.menuInfo.values[newState.menuIndex].sub_button.splice(newState.secMenuIndex, 1);\r\n      newState.secMenuIndex = 0;\r\n      newState.sub_button = newState.menuForm.sub_button[0] ||JSON.parse(JSON.stringify(sub_button));\r\n      delete newState.menuInfo.contents[newState.currentKey];\r\n      newState.sub_button.key && (newState.messageInfo = newState.menuInfo.contents[newState.sub_button.key]);\r\n      return newState;\r\n    case constants.HANDLE_SUB_INPUT_CHANGE:    // 二级菜单input修改\r\n      if(action.name === \"type\") {\r\n        newState.sub_button.url = \"\";\r\n        newState.messageInfo = JSON.parse(JSON.stringify(messageInfo));\r\n        if(action.value === \"click\") {\r\n          newState.menuInfo.values[newState.menuIndex].key = newState.menuForm.key = \"\";\r\n          newState.sub_button.key = newState.currentKey;\r\n        } else {\r\n          newState.sub_button.key = newState.currentKey = \"\"\r\n        }\r\n      }\r\n      newState.sub_button[action.name] = action.value;\r\n      newState.menuForm.sub_button.splice(newState.secMenuIndex, 1, {...newState.sub_button});\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm})\r\n      return newState;\r\n    case constants.CHANGE_MESSAGE_INFO:  // 修改图文消息Input\r\n      if(action.key === \"replyType\") {\r\n        newState.messageInfo = JSON.parse(JSON.stringify(messageInfo));\r\n        newState.messageInfo.replyType = action.value\r\n      } else {\r\n        newState.messageInfo[action.key] = action.value;\r\n      }\r\n      return newState;\r\n    case constants.ADD_TO_LIST:          // 添加到图文消息列表\r\n      const { title, picurl, url, description } = newState.messageInfo;\r\n      newState.messageInfo.articles.push({...{ title, picurl, url, description }});\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      return newState;\r\n    case constants.UPDATE_MESSAGE_ITEM:  // 选择修改的消息\r\n      const { item, index } = action;\r\n      Object.assign(newState.messageInfo, {...item});\r\n      newState.updateIndex = index;\r\n      return newState;\r\n    case constants.UPDATE_CURRENT_MESSAGE:    // 修改当前的消息\r\n      let currentMessage = {\r\n        title: newState.messageInfo.title,\r\n        picurl: newState.messageInfo.picurl,\r\n        url: newState.messageInfo.url,\r\n        description: newState.messageInfo.description};\r\n      newState.messageInfo.articles.splice(newState.updateIndex, 1, {...currentMessage});\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n    case constants.DELETE_CURRENT_MESSAGE:     // 删除当前的消息\r\n      newState.messageInfo.articles.splice(newState.updateIndex, 1);\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n    case constants.CLEAR_MESSAGE_INFO_INPUT:   // 清空messageInfo的input\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n    case constants.SAVE_TO_CONTENTS:           // 保存到contents\r\n      let {articles, content, replyType} = newState.messageInfo;\r\n      let message = {articles, content, replyType};\r\n      newState.currentKey && (newState.menuInfo.contents[newState.currentKey] = {...message});\r\n      return newState;\r\n    case constants.RANDOM_STRING:              // 随机8位字符串\r\n      newState.currentKey = action.result;\r\n      return newState;\r\n\r\n    case constants.OPEN_MADAL:        // 打开选择公号Modal\r\n      newState.isSubmit = true;\r\n      return newState;\r\n    case constants.SUBMIT_MENU:       // 提交菜单栏\r\n      newState.isSubmit = false;\r\n      return newState;\r\n    case constants.CANCEL_MENU:       // 取消提交、关闭Modal\r\n      newState.isSubmit = false;\r\n      return newState;\r\n    case constants.HANDLE_INFO_CHANGE:         // 修改menuInfo\r\n      newState.menuInfo[action.name] = action.value;\r\n      return newState;\r\n    case constants.HANDLE_INDIVIDUAL_CHANGE:   // 是否开启个性化菜单\r\n      newState.menuInfo.individual = action.value;\r\n      Object.assign(newState.menuForm, {\r\n        sex: 0\r\n      });\r\n      return newState;\r\n\r\n    case constants.INIT_MENU_INFO:    // 修改菜单栏时，初始化菜单栏信息\r\n      newState.menuInfo = {...action.record, contents: {}};\r\n      newState.menuInfo.id = action.record._id;\r\n      newState.targetKeys = [...newState.menuInfo.codes];\r\n      newState.menuForm = {...newState.menuInfo.values[0]};\r\n      newState.menuIndex = 0;\r\n      if(newState.menuForm.sub_button && newState.menuForm.sub_button.length) {\r\n        newState.sub_button = {...newState.menuForm.sub_button[0]};\r\n        newState.secMenuIndex = 0;\r\n        if(newState.sub_button.key) {\r\n          newState.currentKey = newState.sub_button.key;\r\n          newState.messageInfo = newState.menuInfo.contents[newState.currentKey];\r\n        }\r\n      } else {\r\n        newState.menuForm.key && (newState.currentKey = newState.menuForm.key);\r\n        newState.currentKey && (newState.messageInfo = newState.menuInfo.contents[newState.currentKey]);\r\n      }\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:       // 重置state\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from '../../../../utils/http';\r\nimport * as constants from './constants';\r\nimport {Modal, message} from 'antd';\r\n\r\n\r\nexport const getMenuList = () => {\r\n  return dispatch => {\r\n    axios.get('/menu')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let menuList = res.data.data.reverse();\r\n          const action = {\r\n            type: constants.GET_MENU_LIST,\r\n            menuList\r\n          };\r\n          dispatch(action);\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteMenu = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/menu/del\", {params: {id: id}})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              const action = {\r\n                type: constants.DELETE_MENU,\r\n                index\r\n              };\r\n              dispatch(action);\r\n              message.success(res.data.success)\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const handleInfoChange = (value, name) => ({\r\n  type: constants.HANDLE_INFO_CHANGE,\r\n  value, name\r\n});\r\n\r\nexport const handleIndividualChange = value => ({\r\n  type: constants.HANDLE_INDIVIDUAL_CHANGE,\r\n  value\r\n});\r\n\r\nexport const handleInputChange = (name, value) => {\r\n  return dispatch => {\r\n    if (value === \"click\") {\r\n      dispatch(randomString());\r\n    }\r\n    dispatch({\r\n      type: constants.HANDLE_INPUT_CHANGE,\r\n      name, value\r\n    })\r\n  }\r\n};\r\n\r\nexport const handleSubInputChange = (name, value) => {\r\n  return dispatch => {\r\n    if (value === \"click\") {\r\n      dispatch(randomString());\r\n      dispatch({type: constants.SAVE_TO_CONTENTS})\r\n    }\r\n    dispatch({\r\n      type: constants.HANDLE_SUB_INPUT_CHANGE,\r\n      name, value\r\n    })\r\n  }\r\n};\r\n\r\nexport const addFirstMenu = () => {\r\n  return dispatch => {\r\n    dispatch({type: constants.SAVE_TO_CONTENTS});\r\n    dispatch({type: constants.ADD_FIRST_MENU});\r\n  }\r\n};\r\n\r\nexport const editMenu = (data, index) => {\r\n  return dispatch => {\r\n    dispatch({type: constants.SAVE_TO_CONTENTS});\r\n    dispatch({\r\n      type: constants.EDIT_MENU,\r\n      index, data\r\n    });\r\n  }\r\n};\r\n\r\nexport const addSecondMenu = () => {\r\n  return dispatch => {\r\n    dispatch({type: constants.SAVE_TO_CONTENTS});\r\n    dispatch({type: constants.ADD_SECOND_MENU});\r\n  }\r\n};\r\n\r\nexport const editSecMenu = (data, index) => {\r\n  return dispatch => {\r\n    if (data.key) {\r\n      dispatch({type: constants.SAVE_TO_CONTENTS})\r\n    }\r\n    dispatch({\r\n      type: constants.EDIT_SEC_MENU,\r\n      index, data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteFirMenu = () => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        dispatch({type: constants.DELETE_FIR_MENU})\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteSubMenu = () => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        dispatch({type: constants.DELETE_SUB_MENU})\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const openModal = () => {\r\n  return dispatch => {\r\n    dispatch({type: constants.OPEN_MADAL});\r\n    dispatch({type: constants.SAVE_TO_CONTENTS});\r\n  }\r\n};\r\n\r\nexport const submitMenu = props => {\r\n  return dispatch => {\r\n    let {menuInfo} = props, {values} = menuInfo;\r\n    let validateResult = validateArray(values);\r\n    validateResult && Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定提交吗？\",\r\n      onOk: () => {\r\n        axios.post(props.history.location.query ? \"/menu/update\" : \"/menu/create\", {...menuInfo})\r\n          .then(res => {\r\n            const action = {\r\n              type: constants.SUBMIT_MENU\r\n            };\r\n            dispatch(action);\r\n            props.history.goBack();\r\n            dispatch(resetState())\r\n          })\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n\r\nexport const cancelMenu = () => ({\r\n  type: constants.CANCEL_MENU\r\n});\r\n\r\n\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        let allCodes = res.data.data;\r\n        const action = {\r\n          type: constants.GET_ALL_CODES,\r\n          allCodes\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeGonghao = targetKeys => ({\r\n  type: constants.CHANGE_GONGHAO,\r\n  targetKeys\r\n});\r\n\r\nexport const initMenuInfo = record => ({\r\n  type: constants.INIT_MENU_INFO,\r\n  record\r\n});\r\n\r\nexport const changeMessageInfo = (key, value) => ({\r\n  type: constants.CHANGE_MESSAGE_INFO,\r\n  key, value\r\n});\r\n\r\nexport const addToList = () => ({\r\n  type: constants.ADD_TO_LIST\r\n});\r\n\r\nexport const updateMessageItem = (item, index) => ({\r\n  type: constants.UPDATE_MESSAGE_ITEM,\r\n  item, index\r\n});\r\n\r\n\r\nexport const updateCurrentMessage = () => ({\r\n  type: constants.UPDATE_CURRENT_MESSAGE\r\n});\r\n\r\nexport const deleteCurrentMessage = () => ({\r\n  type: constants.DELETE_CURRENT_MESSAGE\r\n});\r\n\r\nexport const randomString = () => {\r\n  return dispatch => {\r\n    var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    var result = '';\r\n    for (var i = 8; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];\r\n    dispatch({type: constants.RANDOM_STRING, result})\r\n  }\r\n};\r\n\r\nconst validateArray = values => {\r\n  for(let j = 0; j < values.length; j ++) {\r\n    let item = values[j];\r\n    if(item.sub_button) {\r\n      for (let i = 0; i < item.sub_button.length; i ++) {\r\n        if(item.sub_button[i].type === \"view\") {\r\n          if(!item.sub_button[i].url) {\r\n            message.warning(\"请检查跳转链接输入是否有误\");\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if(item.type === \"view\") {\r\n        if(!item.url) {\r\n          message.warning(\"请检查跳转链接输入是否有误\");\r\n          return false\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return true\r\n};","import * as constants from './constants';\r\n\r\nconst resetFields = {\r\n  type: 0,\r\n  sex: 3,\r\n  attribute: 1,\r\n  replyType: 0,\r\n  codes: [],\r\n  articles: [],\r\n  is_nickname: false,\r\n  content: \"\"\r\n};\r\n\r\nconst defaultState = {\r\n  // 公号配置\r\n  replyMessageList: [],\r\n  messageInfo: JSON.parse(JSON.stringify(resetFields)),\r\n  allCodes: [],\r\n  updateIndex: -1,\r\n  messageIndex: -1\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    // 公号配置\r\n    case constants.GET_REPLY_MESSAGE_LIST:\r\n      newState.replyMessageList = action.replyMessageList.filter(item => item.type !== 1);\r\n      return newState;\r\n    case constants.DELETE_REPLY_MESSAGE:\r\n      newState.replyMessageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = action.allCodes;\r\n      return newState;\r\n    case constants.SELECT_GONGHAO:\r\n      newState.messageInfo.codes = [...action.codes];\r\n      return newState;\r\n    case constants.CHANGE_MESSAGE_INFO:\r\n      newState.messageInfo[action.key] = action.value;\r\n      return newState;\r\n    case constants.ADD_TO_LIST:\r\n      const { title, picurl, url, description } = newState.messageInfo;\r\n      newState.messageInfo.articles.push({...{ title, picurl, url, description }});\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      return newState;\r\n    case constants.UPDATE_MESSAGE_ITEM:\r\n      const { item, index} = action;\r\n      Object.assign(newState.messageInfo, {...item});\r\n      newState.updateIndex = index;\r\n      return newState;\r\n    case constants.UPDATE_CURRENT_MESSAGE:\r\n      let message = {\r\n        title: newState.messageInfo.title,\r\n        picurl: newState.messageInfo.picurl,\r\n        url: newState.messageInfo.url,\r\n        description: newState.messageInfo.description\r\n      };\r\n      newState.messageInfo.articles.splice(newState.updateIndex, 1, {...message});\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n    case constants.DELETE_CURRENT_MESSAGE:\r\n      newState.messageInfo.articles.splice(newState.updateIndex, 1);\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n\r\n    case constants.INIT_STATE:\r\n      newState.messageInfo = JSON.parse(JSON.stringify(action.record));\r\n      newState.messageIndex = action.index;\r\n      if(newState.messageInfo.replyType === 1) {\r\n        Object.assign(newState.messageInfo, newState.messageInfo.articles[0]);\r\n        newState.updateIndex = 0;\r\n      }\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = JSON.parse(JSON.stringify(defaultState));\r\n      return newState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from '../../../../utils/http';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n\r\n// 公号配置\r\n\r\nexport const getReplyMessageList = () => {\r\n  return dispatch => {\r\n    axios.get('/reply')\r\n      .then(res => {\r\n        let replyMessageList = res.data.data;\r\n        const action = {\r\n          type: constants.GET_REPLY_MESSAGE_LIST,\r\n          replyMessageList\r\n        };\r\n        dispatch(action)\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteReplyMessage = (_id, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认删除吗？\",\r\n      title: \"提示\",\r\n      onOk: () => {\r\n        axios.get('/reply/del', {params: {_id}})\r\n          .then(res => {\r\n          const action = {\r\n            type: constants.DELETE_REPLY_MESSAGE,\r\n            index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"删除成功\")\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          const {data: allCodes} = res.data;\r\n          dispatch({ type: constants.GET_ALL_CODES, allCodes });\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const selectGonghao = codes => ({\r\n  type: constants.SELECT_GONGHAO,\r\n  codes\r\n});\r\n\r\nexport const changeMessageInfo = (key, value) => ({\r\n  type: constants.CHANGE_MESSAGE_INFO,\r\n  key, value\r\n});\r\n\r\nexport const addToList = () => ({\r\n  type: constants.ADD_TO_LIST\r\n});\r\n\r\nexport const updateMessageItem = (item, index) => ({\r\n  type: constants.UPDATE_MESSAGE_ITEM,\r\n  item, index\r\n});\r\n\r\nexport const updateCurrentMessage = () => ({\r\n  type: constants.UPDATE_CURRENT_MESSAGE\r\n});\r\n\r\nexport const deleteCurrentMessage = () => ({\r\n  type: constants.DELETE_CURRENT_MESSAGE\r\n});\r\n\r\nexport const createConfigForm = (configInfo, history) => {\r\n  return (dispatch) => {\r\n    if(!configInfo.codes.length) {\r\n      message.error(\"请选择公号后再试\");\r\n      return\r\n    }\r\n    Modal.confirm({\r\n      title: \"确定新建一条规则吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/create\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.CREATE_CONFIG_FORM,\r\n            configInfo\r\n          };\r\n          dispatch(action);\r\n          message.success(\"创建成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const updateConfigForm = (configInfo, history, index) => {\r\n  return (dispatch) => {\r\n    if(!configInfo.codes.length) {\r\n      message.error(\"请选择公号后再试\");\r\n      return\r\n    }\r\n    Modal.confirm({\r\n      title: \"确定修改吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/update\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.UPDATE_CONFIG_FORM,\r\n            configInfo, index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"修改成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n\r\nexport const initState = (record, index) => ({\r\n  type: constants.INIT_STATE,\r\n  record, index\r\n});","export const GET_REPLY_MESSAGE_LIST = \"gonghao/reply/getReplyMessageList\";\r\nexport const DELETE_REPLY_MESSAGE = \"gonghao/reply/deleteReplyMessage\";\r\n\r\nexport const INIT_STATE = \"gonghao/reply/initState\";\r\n// 获取所有公号\r\nexport const GET_ALL_CODES = \"gonghao/reply/getAllCodes\";\r\nexport const SELECT_GONGHAO = \"gonghao/reply/selectGonghao\";\r\nexport const ADD_TO_LIST = \"gonghao/reply/addToList\";\r\nexport const CHANGE_MESSAGE_INFO = \"gonghao/reply/changeMessageInfo\";\r\nexport const UPDATE_MESSAGE_ITEM = \"gonghao/reply/updateMessageItem\";\r\nexport const UPDATE_CURRENT_MESSAGE = \"gonghao/reply/updateCurrentMessage\";\r\nexport const DELETE_CURRENT_MESSAGE = \"gonghao/reply/deleteCurrentMessage\";\r\n\r\n\r\nexport const CREATE_CONFIG_FORM = \"gonghao/reply/createConfigForm\";\r\nexport const UPDATE_CONFIG_FORM = \"gonghao/reply/updateConfigForm\";\r\n\r\n\r\nexport const RESET_STATE = \"gonghao/reply/resetState\";","import { combineReducers } from 'redux';\r\nimport { reducer as tuoguanReducer } from './tuoguan/store';\r\nimport { reducer as menuReducer } from './menu/store';\r\nimport { reducer as replyReducer } from './reply/store';\r\n\r\nconst reducer = combineReducers({\r\n  tuoguan: tuoguanReducer,\r\n  menu: menuReducer,\r\n  reply: replyReducer,\r\n});\r\n\r\nexport default reducer;","export const GET_GROUP_GONGHAO = \"gonghao/group/getGroupGonghao\";\r\nexport const CHANGE_SEARCH_INPUT = \"gonghao/group/changeSearchInput\";\r\nexport const SEARCH_BY_NAME = \"gonghao/group/search\";\r\n\r\n// 群发素材\r\nexport const GET_GROUP_MATERIAL = \"gonghao/group/getMessageList\";\r\nexport const OPEN_MODAL = \"gonghao/group/openModal\";\r\nexport const OPEN_TIMING_MODAL = \"gonghao/group/openTimingModal\";\r\nexport const CHANGE_TAG_ID = \"gonghao/group/changeTagId\";\r\nexport const GET_TAG_LIST = \"gonghao/group/getTagList\";\r\nexport const CLOSE_MODAL = \"gonghao/group/closeModal\";\r\nexport const CHANGE_TIMING_STATE = \"gonghao/group/changeTimingState\";\r\nexport const CHANGE_TIME = \"gonghao/group/changeTime\";\r\nexport const COPY = \"gonghao/group/copy\";\r\nexport const DELETE_MATERIAL = \"gonghao/group/deleteMaterial\";\r\nexport const CLEAR_MATERIAL = \"gonghao/group/clearMaterial\";\r\nexport const OPEN_UPDATE_MATERIAL_MODAL = \"gonghao/group/openUpdateMaterialModal\";\r\nexport const CLOSE_UPDATE_MATERIAL_MODAL = \"gonghao/group/closeUpdateMaterialModal\";\r\nexport const CHANGE_CONTENT_SOURCE_URL = \"gonghao/group/changeContentSourceUrl\";\r\n\r\n// 群发历史\r\nexport const GET_HISTORY_LIST = \"gonghao/group/getHistoryList\";\r\nexport const OPEN_MSG_MODAL = \"gonghao/group/openMsgModal\";\r\nexport const CLOSE_MSG_MODAL = \"gonghao/group/closeMsgModal\";\r\nexport const CHANGE_ARTICLE_IDX = \"gonghao/group/changeArticleIdx\";\r\nexport const CLEAR_HISTORY = \"gonghao/group/clearHistory\";\r\nexport const CHANGE_DATE = \"gonghao/group/changeDate\";\r\n\r\n\r\n\r\n\r\nexport const RESET_STATE = \"gonghao/group/resetState\";\r\n","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  messageList: [],\r\n  isComplete: true,\r\n  tagList: [],\r\n  sendModal: false,\r\n  sendTimingModal: false,\r\n  date: \"\",\r\n  time: \"\",\r\n  sendInfo: {\r\n    id: \"\",\r\n    tagId: null,\r\n    mediaId: \"\"\r\n  },\r\n  sendTimingInfo: {\r\n    id: \"\",\r\n    tagId: null,\r\n    isTiming: false,\r\n    timing: null\r\n  },\r\n  updateInfo: {\r\n    \"media_id\": \"\",\r\n    \"index\": null,\r\n    \"articles\": {\r\n      \"content_source_url\": \"\"\r\n    },\r\n    id: \"\"\r\n  },\r\n  updateMaterialModal: false,\r\n\r\n  historyList: [],\r\n  historyMsgModal: false,\r\n  delMsgInfo: {\r\n    code: null,\r\n    msg_id: \"\",\r\n    article_idx: \"\"\r\n  },\r\n  delDate: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n\r\n    // 群发素材\r\n\r\n    case constants.GET_GROUP_MATERIAL:\r\n      newState.messageList = [...action.data];\r\n      return newState;\r\n    case constants.GET_TAG_LIST:\r\n      newState.tagList = [...action.data];\r\n      return newState;\r\n    case constants.CHANGE_TAG_ID:\r\n      !action.isTiming && (newState.sendInfo.tagId = action.value)\r\n      action.isTiming && (newState.sendTimingInfo.tagId = action.value)\r\n      return newState;\r\n    case constants.CLOSE_MODAL:\r\n      newState.sendInfo = newState.sendTimingInfo = {};\r\n      newState.sendTimingInfo.timing = Date.now();\r\n      newState.sendTimingInfo.isTiming = newState.sendTimingModal = newState.sendModal = false;\r\n      return newState;\r\n    case constants.OPEN_MODAL:\r\n      newState.sendInfo.id = action.record._id;\r\n      newState.sendInfo.tagId = action.record.tagId;\r\n      newState.sendInfo.mediaId = action.record.media_id;\r\n      newState.sendModal = true;\r\n      return newState;\r\n    case constants.OPEN_TIMING_MODAL:\r\n      newState.sendTimingInfo.id = action.record._id;\r\n      newState.sendTimingInfo.tagId = action.record.tagId;\r\n      newState.sendTimingInfo.isTiming = action.record.isTiming;\r\n      newState.sendTimingInfo.timing = action.record.timing;\r\n      newState.sendTimingModal = true;\r\n      return newState;\r\n    case constants.CHANGE_TIMING_STATE:\r\n      newState.sendTimingInfo.isTiming = action.value;\r\n      return newState;\r\n    case constants.CHANGE_TIME:\r\n      if (action.timeType === \"date\") {\r\n        newState.date = action.time\r\n      } else {\r\n        newState.time = action.time\r\n      }\r\n      let dateTime = new Date(newState.date + \" \" + newState.time);\r\n      newState.sendTimingInfo.timing = dateTime.getTime();\r\n      return newState;\r\n    case constants.COPY:\r\n      newState.messageList.unshift({...action.data});\r\n      return newState;\r\n    case constants.DELETE_MATERIAL:\r\n      newState.messageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CLEAR_MATERIAL:\r\n      newState.messageList = [];\r\n      return newState;\r\n    case constants.OPEN_UPDATE_MATERIAL_MODAL:\r\n      newState.updateMaterialModal = true;\r\n      newState.updateInfo = action.updateInfo;\r\n      return newState;\r\n    case constants.CLOSE_UPDATE_MATERIAL_MODAL:\r\n      newState.updateMaterialModal = false;\r\n      newState.updateInfo.articles.content_source_url = \"\";\r\n      return newState;\r\n    case constants.CHANGE_CONTENT_SOURCE_URL:\r\n      newState.updateInfo.articles.content_source_url = action.content_source_url;\r\n      return newState;\r\n\r\n    // 群发历史\r\n    case constants.GET_HISTORY_LIST:\r\n      newState.historyList = [...action.data];\r\n      return newState;\r\n    case constants.OPEN_MSG_MODAL:\r\n      newState.historyMsgModal = true;\r\n      newState.delMsgInfo.code = action.code;\r\n      newState.delMsgInfo.msg_id = action.msg_id;\r\n      return newState;\r\n    case constants.CLOSE_MSG_MODAL:\r\n      newState.historyMsgModal = false;\r\n      newState.delMsgInfo.article_idx = \"\";\r\n      return newState;\r\n    case constants.CHANGE_ARTICLE_IDX:\r\n      newState.delMsgInfo.article_idx = action.value;\r\n      return newState;\r\n    case constants.CLEAR_HISTORY:\r\n      newState.historyList = [];\r\n      return newState;\r\n    case constants.CHANGE_DATE:\r\n      newState.delDate = action.delDate;\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from '../../../../utils/http';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n// 群发公号\r\nconst getGonghaoList = () => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let gonghaoList = res.data.data;\r\n          const action = {\r\n            type: constants.GET_GROUP_GONGHAO,\r\n            gonghaoList\r\n          };\r\n          resolve(action)\r\n        } else {\r\n          reject('error message: 没有数据')\r\n        }\r\n      })\r\n  });\r\n};\r\n\r\nexport const getGroupGonghao = () => {\r\n  return async dispatch => {\r\n    let action = await getGonghaoList();\r\n    dispatch(action);\r\n  }\r\n};\r\n\r\nexport const getMaterial = code => {\r\n  return dispatch => {\r\n    if(code) {\r\n      axios.get('/material', {params: {code}})\r\n        .then(res => {\r\n          message.success(res.data.success);\r\n          setTimeout(function () {\r\n            dispatch(getMessageList(code))\r\n          }, 3000)\r\n        })\r\n    } else {\r\n      message.warning(\"请选择公号后再试\")\r\n    }\r\n  }\r\n};\r\n\r\nexport const openUpdateMaterialModal = updateInfo => ({\r\n  type: constants.OPEN_UPDATE_MATERIAL_MODAL,\r\n  updateInfo\r\n});\r\n\r\nexport const closeUpdateMaterialModal = () => ({\r\n  type: constants.CLOSE_UPDATE_MATERIAL_MODAL\r\n});\r\n\r\nexport const updateMaterial = (updateInfo, code) => {\r\n  return dispatch => {\r\n    axios.put(\"/material/contentSourceUrl\", {...updateInfo, code})\r\n      .then(res => {\r\n        const { code, msg } = res.data;\r\n        if(code === 1) {\r\n          message.success(msg);\r\n          dispatch(closeUpdateMaterialModal())\r\n        } else {\r\n          message.error(msg)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeContentSourceUrl = content_source_url => ({\r\n  type: constants.CHANGE_CONTENT_SOURCE_URL,\r\n  content_source_url\r\n});\r\n\r\n// 群发素材\r\n\r\nexport const getMessageList = code => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"/material/show\", { params: { code: Number(code) } })\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        const action = {\r\n          type: constants.GET_GROUP_MATERIAL,\r\n          data\r\n        };\r\n        dispatch(action)\r\n      });\r\n  }\r\n};\r\n\r\nexport const getTagList = code => {\r\n  return dispatch => {\r\n    axios.get(\"/material/tag\", {params: {code}})\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        const action = {\r\n          type: constants.GET_TAG_LIST,\r\n          data\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeTagId = (value, isTiming) => ({\r\n  type: constants.CHANGE_TAG_ID,\r\n  value, isTiming\r\n});\r\n\r\nexport const closeModal = () => ({\r\n  type: constants.CLOSE_MODAL\r\n});\r\n\r\nexport const openModal = record => ({\r\n  type: constants.OPEN_MODAL,\r\n  record\r\n});\r\n\r\nexport const sendMessage = sendInfo => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定发送消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/material/sendMsg\", {params: {...sendInfo}})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            dispatch(closeModal());\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const openTimingModal = record => ({\r\n  type: constants.OPEN_TIMING_MODAL,\r\n  record\r\n});\r\n\r\nexport const sendTimingMessage = (sendTimingInfo, code) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定定时发送消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/material/send_timing\", {params: {...sendTimingInfo}})\r\n          .then(res => {\r\n            message.info(\"设置成功\");\r\n            dispatch(getMessageList(code));\r\n            dispatch(closeModal());\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeTimingState = value => ({\r\n  type: constants.CHANGE_TIMING_STATE,\r\n  value\r\n});\r\n\r\nexport const changeTime = (time, timeType) => ({\r\n  type: constants.CHANGE_TIME,\r\n  time, timeType\r\n});\r\n\r\nexport const copy = id => {\r\n  return dipatch => {\r\n    Modal.confirm({\r\n      title: \"确定复制这条素材吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/material/copy\", {id})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              const { data } = res.data;\r\n              message.success(res.data.success);\r\n              const action = {\r\n                type: constants.COPY,\r\n                data\r\n              };\r\n              dipatch(action)\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const deleteMaterial = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条素材吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/material/del\", {params: {id}})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.success(res.data.success);\r\n              const action = {\r\n                type: constants.DELETE_MATERIAL,\r\n                 index\r\n              };\r\n              dispatch(action);\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const clearMaterial = code => {\r\n  return dispatch => {\r\n    if(code) {\r\n      Modal.confirm({\r\n        title: \"确定清空列表吗？\",\r\n        onOk: () => {\r\n          axios.get(\"/material/clear\", { params: { code } })\r\n            .then(res => {\r\n              message.info(res.data.success);\r\n              const action = {\r\n                type: constants.CLEAR_MATERIAL\r\n              };\r\n              dispatch(action);\r\n            });\r\n        }\r\n      })\r\n    } else {\r\n      message.warning(\"请选择公号后再试\")\r\n    }\r\n  }\r\n};\r\n\r\n// 群发历史\r\n\r\nexport const getHistoryList = code => {\r\n  return dispatch => {\r\n    axios.get(\"/history\", {params: {code}})\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        const action = {\r\n          type: constants.GET_HISTORY_LIST,\r\n          data\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const checkSendState = (code, msg_id) => {\r\n  return dispatch => {\r\n    axios.get(\"/history/state\", { params: { code, msg_id }})\r\n      .then(res => {\r\n        message.info(res.data.data.msg_status)\r\n      })\r\n  }\r\n};\r\n\r\nexport const openMsgModal = (code, msg_id) => ({\r\n  type: constants.OPEN_MSG_MODAL,\r\n  code, msg_id\r\n});\r\n\r\nexport const closeMsgModal = () => ({\r\n  type: constants.CLOSE_MSG_MODAL\r\n});\r\n\r\nexport const changeArticleIdx = value => ({\r\n  type: constants.CHANGE_ARTICLE_IDX,\r\n  value\r\n});\r\n\r\nexport const deleteMsg = (delMsgInfo) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除吗？\",\r\n      onOk: () => {\r\n        axios.get('/history/del_msg', {\r\n          params: {...delMsgInfo}\r\n        }).then(res => {\r\n          message.info(res.data.success);\r\n          dispatch(closeMsgModal());\r\n        })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const clearHistory = code => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定清空列表？\",\r\n      onOk: () => {\r\n        axios.get(\"/history/clear\", {params: {code}})\r\n          .then(res => {\r\n            message.success(res.data.success);\r\n            const action = {\r\n              type: constants.CLEAR_HISTORY\r\n            };\r\n            dispatch(action);\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeDate = delDate => ({\r\n  type: constants.CHANGE_DATE,\r\n  delDate\r\n});\r\n\r\nexport const deleteMany = (code, date) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: '确认删除吗?:',\r\n      onOk: () => {\r\n        axios.get('/history/delByDate', {params: {date, code}})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            dispatch(getHistoryList())\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n","import * as constants from './constants';\r\n\r\nconst initContent = {\r\n  description: \"\",\r\n  title: \"\",\r\n  url: \"\",\r\n  picurl: \"\"\r\n};\r\n\r\nconst defaultState = {\r\n  allMessageList: [],\r\n  kefuMessageList: [],\r\n  messageType: 4,\r\n  messageGroup: \"全部分组\",\r\n  selectedMessages: [],\r\n  updateGroupModal: false,\r\n  group: \"\",\r\n  currentPage: 1,\r\n  searchName: undefined,\r\n  kefuMessageInfo: {\r\n    contents: [],\r\n    type: 0,\r\n    img: \"\",\r\n    img_path: \"\",\r\n    channel: 1,\r\n    sex: \"all\",\r\n    timing_time: new Date(),\r\n    daily_time_show: new Date(),\r\n    delay: 5,\r\n    tagId: \"\",\r\n    tagName: \"\",\r\n    codes: [],\r\n    remarks: \"\",\r\n    action_type: 2,\r\n    isHour: 0,\r\n    group: \"未分组\"\r\n  },\r\n  content: initContent,\r\n  messageIndex: -1,\r\n  paramsModal: false,\r\n  allCodes: [],\r\n  allGroup: [],\r\n  previewModal: false,\r\n  openid: \"\",\r\n  groupInputVisible: false,\r\n  groupValue: \"\",\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case constants.GET_KEFU_MESSAGE_LIST:\r\n      newState.allMessageList = [...action.kefuMessageList];\r\n      if(newState.messageGroup !== \"全部分组\") {\r\n        newState.kefuMessageList = newState.allMessageList.filter(item => item.group === newState.messageGroup)\r\n      } else if (newState.searchName) {\r\n        newState.kefuMessageList = newState.allMessageList.filter(item => {\r\n          let gonghaoList1 = [];\r\n          item.gonghaoList.map(i => {\r\n            i.nick_name === newState.searchName && gonghaoList1.push(i)\r\n          });\r\n          return gonghaoList1.length > 0\r\n        })\r\n      } else {\r\n        newState.kefuMessageList = newState.allMessageList\r\n      }\r\n      return newState;\r\n    case constants.CREATE_KEFU_MESSAGE:\r\n      newState.kefuMessageList.unshift({...action.data});\r\n      return newState;\r\n    case constants.DELETE_LAST_MESSAGE:\r\n      newState.kefuMessageList = [];\r\n      return newState;\r\n    case constants.DELETE_MESSAGE:\r\n      newState.kefuMessageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.HANDLE_CHANGE_SELECT:\r\n      newState.messageType = 4;\r\n      newState.messageGroup = \"全部分组\";\r\n      if(action.name === \"messageType\") {\r\n        const { value: type } = action;\r\n        newState.messageType = type;\r\n        type === 0 && (newState.kefuMessageList = newState.allMessageList.filter(item => !(item.delay || item.is_timing || item.is_daily)));\r\n        type === 1 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item.delay));\r\n        type === 2 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item.is_timing));\r\n        type === 3 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item.is_daily));\r\n        type === 4 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item));\r\n      } else {\r\n        const { value: group } = action;\r\n        newState.messageGroup = group;\r\n        if( group === \"全部分组\") {\r\n          newState.kefuMessageList = newState.allMessageList.filter(item => item.group !== \"全部消息\")\r\n        } else {\r\n          newState.kefuMessageList = newState.allMessageList.filter(item => item.group === group)\r\n        }\r\n      }\r\n      if(newState.searchName) {\r\n        newState.kefuMessageList = newState.kefuMessageList.filter(item => {\r\n          let gonghaoList2 = [];\r\n          item.gonghaoList.map(i => {\r\n            i.nick_name === newState.searchName && gonghaoList2.push(i)\r\n          });\r\n          return gonghaoList2.length > 0\r\n        })\r\n      }\r\n      return newState;\r\n    case constants.CHANGE_SELECTED_MESSAGES:\r\n      newState.selectedMessages = action.selectedMessages;\r\n      return newState;\r\n    case constants.OPEN_UPDATE_GROUP_MODAL:\r\n      newState.updateGroupModal = true;\r\n      return newState;\r\n    case constants.CHANGE_GROUP:\r\n      newState.group = action.value;\r\n      return newState;\r\n    case constants.CANCEL_UPDATE_GROUP:\r\n      newState.updateGroupModal = false;\r\n      newState.group = \"\";\r\n      return newState;\r\n    case constants.UPDATE_MORE_GROUP:\r\n      newState.selectedMessages = [];\r\n      return newState;\r\n    case constants.CHANGE_SEARCH_NAME:\r\n      let { allMessageList } = newState;\r\n      newState.searchName = action.value;\r\n      newState.messageType = 4;\r\n      newState.messageGroup = \"全部分组\";\r\n      newState.kefuMessageList = allMessageList.filter(item => {\r\n        let gonghaoList = [];\r\n        item.gonghaoList.map(i => {\r\n          i.nick_name === action.value && gonghaoList.push(i)\r\n        });\r\n        return gonghaoList.length > 0\r\n      });\r\n      if(newState.kefuMessageList.length > 0) {\r\n        action.message.success(\"查询成功\");\r\n      } else {\r\n        newState.kefuMessageList = allMessageList;\r\n        action.value && action.message.warning(\"没有查询到相关数据\");\r\n      }\r\n      return newState;\r\n    case constants.SEARCH_INPUT_VALUE:\r\n      newState.searchName = action.value;\r\n      !newState.searchName && (newState.kefuMessageList = newState.allMessageList);\r\n      return newState;\r\n    case constants.CLEAR_CONDITION:\r\n      newState.group = newState.searchName = \"\";\r\n      newState.messageGroup = \"全部分组\";\r\n      newState.currentPage = 1;\r\n      newState.kefuMessageList = newState.allMessageList;\r\n      return newState;\r\n\r\n    // 编辑客服消息\r\n    case constants.CHANGE_CONTENT_VALUE:\r\n      newState.content[action.name] = action.value;\r\n      newState.kefuMessageInfo.contents.splice(newState.messageIndex, 1, newState.content);\r\n      return newState;\r\n    case constants.CHANGE_MESSAGE_VALUE:\r\n      newState.kefuMessageInfo[action.name] = action.value;\r\n      if(action.name === \"type\") {\r\n        newState.content = initContent;\r\n        newState.kefuMessageInfo.contents = [];\r\n        newState.kefuMessageInfo.img = newState.kefuMessageInfo.img_path =  \"\";\r\n        newState.messageIndex = -1;\r\n        if(action.value === 0) {\r\n          newState.kefuMessageInfo.contents.push(newState.content);\r\n          newState.messageIndex = 0;\r\n        }\r\n      }\r\n      if(action.name === \"channel\") {\r\n        Object.assign(newState.kefuMessageInfo, {timing_time: new Date(), delay: 5, daily_time_show: new Date()})\r\n      }\r\n      return newState;\r\n    case constants.ADD_MESSAGE:\r\n      newState.content = initContent;\r\n      newState.kefuMessageInfo.contents.push(newState.content);\r\n      newState.messageIndex = newState.kefuMessageInfo.contents.length - 1;\r\n      return newState;\r\n    case constants.SELECT_MESSAGE:\r\n      newState.content = {...action.info};\r\n      newState.messageIndex = action.index;\r\n      return newState;\r\n    case constants.SELECT_PARAMS:\r\n      newState.paramsModal = true;\r\n      return newState;\r\n    case constants.HIDE_PARAMS_MODAL:\r\n      newState.paramsModal = false;\r\n      return newState;\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = [...action.allCodes];\r\n      return newState;\r\n    case constants.SELECT_GONGHAO:\r\n      newState.kefuMessageInfo.codes = [...action.codes];\r\n      return newState;\r\n    case constants.INIT_KEFU_MESSAGE_INFO:\r\n      newState.kefuMessageInfo = {...action.query};\r\n      newState.kefuMessageInfo.contents.length > 0 && (newState.content = {...newState.kefuMessageInfo.contents[0]});\r\n      if(newState.kefuMessageInfo.type === 0) newState.messageIndex = 0;\r\n      if(action.query.task) {\r\n        newState.kefuMessageInfo.channel = 1\r\n      } else if(action.query.is_timing) {\r\n        newState.kefuMessageInfo.channel = 2\r\n      } else if(action.query.is_daily) {\r\n        newState.kefuMessageInfo.channel = 3;\r\n      } else {\r\n        newState.kefuMessageInfo.channel = 0\r\n      }\r\n      newState.kefuMessageInfo.isHour && (newState.kefuMessageInfo.delay = newState.kefuMessageInfo.delay/60);\r\n      !newState.kefuMessageInfo.isHour && (newState.kefuMessageInfo.isHour = 0);\r\n      return newState;\r\n    case constants.OPEN_PREVIEW_MODAL:\r\n      newState.previewModal = true;\r\n      return newState;\r\n    case constants.CLOSE_PREVIEW_MODAL:\r\n      newState.previewModal = false;\r\n      newState.openid = \"\";\r\n      return newState;\r\n    case constants.CHANGE_OPENID:\r\n      newState.openid = action.value;\r\n      return newState;\r\n\r\n    case constants.GET_ALL_GROUP:\r\n      newState.allGroup = [...action.allGroup];\r\n      return newState;\r\n    case constants.SHOW_GROUP_INPUT:\r\n      newState.groupInputVisible = true;\r\n      setTimeout(function () {\r\n        action.that.input.focus();\r\n      }, 500);\r\n      return newState;\r\n    case constants.HANDLE_GROUP_INPUT_CHANGE:\r\n      newState.groupValue = action.value;\r\n      return newState;\r\n    case constants.HANDLE_GROUP_INPUT_CONFIRM:\r\n      Object.keys(action.data).length > 0 && newState.allGroup.push(action.data);\r\n      newState.groupInputVisible = false;\r\n      newState.groupValue = \"\";\r\n      return newState;\r\n    case constants.DELETE_GROUP:\r\n      newState.allGroup.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CANCEL_SELECT_GROUP:\r\n      newState.kefuMessageInfo.group = \"未分组\";\r\n      return newState;\r\n\r\n    case constants.CHANGE_PAGE:\r\n      newState.currentPage = action.page;\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      let {currentPage, messageGroup, searchName} = newState;\r\n      newState = defaultState;\r\n      newState.currentPage = currentPage;\r\n      newState.messageGroup = messageGroup;\r\n      newState.searchName = searchName;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from '../../../../utils/http';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n// 群发公号\r\nconst getData = () => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(\"/message\", {params: {sort: \"_id\"}})\r\n      .then(res => {\r\n        if (res.data.messages.length > 0) {\r\n          let kefuMessageList = res.data.messages;\r\n          const action = {\r\n            type: constants.GET_KEFU_MESSAGE_LIST,\r\n            kefuMessageList\r\n          };\r\n          resolve(action)\r\n        } else {\r\n          reject('error message: 没有数据')\r\n        }\r\n      })\r\n  });\r\n};\r\n\r\nexport const getKefuMessageList = () => {\r\n  return async dispatch => {\r\n    let action = await getData();\r\n    dispatch(action);\r\n  }\r\n};\r\n\r\nexport const createKefuMessage = record => {\r\n  return dispatch => {\r\n    record.delay && record.isHour && (record.delay /= 60);\r\n    Modal.confirm({\r\n      title: \"确定新增一条客服消息吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/message/create\", {...record})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              let data = res.data.data\r\n              message.info(record._id ? \"复制成功\" : res.data.success);\r\n              const action = {\r\n                type: constants.CREATE_KEFU_MESSAGE,\r\n                data\r\n              };\r\n              dispatch(action);\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const deleteMessage = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条客服消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/message/delete\", { params: { id } })\r\n          .then(res => {\r\n            dispatch(getKefuMessageList());\r\n            if (res.data.data.length === 0) {\r\n              message.info(\"已删除最后一条数据\");\r\n              const action = {\r\n                type: constants.DELETE_LAST_MESSAGE\r\n              };\r\n              dispatch(action);\r\n            } else {\r\n              message.info(res.data.success);\r\n              const action = {\r\n                type: constants.DELETE_MESSAGE,\r\n                index\r\n              };\r\n              dispatch(action);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const sendKefuMessage = (id, tagId) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定发送消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/message/send\", { params: { id, tagId, take_over: true } })\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const handleChangeSelect = (value, name) => ({\r\n  type: constants.HANDLE_CHANGE_SELECT,\r\n  value, name\r\n});\r\n\r\nexport const changeSelectedMessages = selectedMessages => ({\r\n  type: constants.CHANGE_SELECTED_MESSAGES,\r\n  selectedMessages\r\n});\r\n\r\nexport const openUpdateGroupModal = () => ({\r\n  type: constants.OPEN_UPDATE_GROUP_MODAL\r\n});\r\n\r\nexport const changeGroup = value => ({\r\n  type: constants.CHANGE_GROUP,\r\n  value\r\n});\r\n\r\nexport const cancelUpdateGroup = () => ({\r\n  type: constants.CANCEL_UPDATE_GROUP\r\n});\r\n\r\nexport const updateMoreGroup = (selectedMessages, group) => {\r\n  return dispatch => {\r\n    axios.put('/message/updateGroup', {selectedMessages, group})\r\n      .then(res => {\r\n        const { code, msg } = res.data;\r\n        if(code === 1) {\r\n          message.success(msg);\r\n          dispatch(getKefuMessageList());\r\n          dispatch({type: constants.UPDATE_MORE_GROUP});\r\n          dispatch(cancelUpdateGroup());\r\n        } else {\r\n          message.error(msg)\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeSearchName = value => ({\r\n  type: constants.CHANGE_SEARCH_NAME,\r\n  value, message\r\n});\r\n\r\nexport const searchInputChange = value => ({\r\n  type: constants.SEARCH_INPUT_VALUE,\r\n  value\r\n});\r\n\r\nexport const clearCondition = () => ({\r\n  type: constants.CLEAR_CONDITION\r\n});\r\n\r\nexport const deleteMultiMsg = selectedMessages => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除选中的客服消息吗？\",\r\n      onOk: () => {\r\n        axios.delete(\"/message/delSelect\", {params: {selectedMessages}})\r\n          .then(res => {\r\n            message.success(res.data.msg);\r\n            dispatch(getKefuMessageList())\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\n// 编辑客服消息\r\nexport const changeContentValue = (value, name) => ({\r\n  type: constants.CHANGE_CONTENT_VALUE,\r\n  value, name\r\n});\r\n\r\nexport const changeMessageValue = (value, name) => ({\r\n  type: constants.CHANGE_MESSAGE_VALUE,\r\n  value, name\r\n});\r\n\r\n\r\nexport const addMessage = () => ({\r\n  type: constants.ADD_MESSAGE\r\n});\r\n\r\nexport const selectMessage = (info, index) => ({\r\n  type: constants.SELECT_MESSAGE,\r\n  info, index\r\n});\r\n\r\nexport const selectParams = () => ({\r\n  type: constants.SELECT_PARAMS\r\n});\r\n\r\nexport const hideParamsModal = () => ({\r\n  type: constants.HIDE_PARAMS_MODAL\r\n});\r\n\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        let allCodes = res.data.data;\r\n        const action = {\r\n          type: constants.GET_ALL_CODES,\r\n          allCodes\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const getAllGroup = () => {\r\n  return dispatch => {\r\n    axios.get('/messageGroup')\r\n      .then(res => {\r\n        let {data: allGroup} = res.data;\r\n        const action = {\r\n          type: constants.GET_ALL_GROUP,\r\n          allGroup\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const showGroupInput = that => ({\r\n  type: constants.SHOW_GROUP_INPUT,\r\n  that\r\n});\r\n\r\nexport const handleGroupInputChange = value => ({\r\n  type: constants.HANDLE_GROUP_INPUT_CHANGE,\r\n  value\r\n});\r\n\r\nexport const handleGroupInputConfirm = group => {\r\n  return dispatch => {\r\n    if(group) {\r\n      axios.post('/messageGroup', {group})\r\n        .then(res => {\r\n          const {code, msg, data} = res.data;\r\n          if (code === 1) {\r\n            message.success(msg);\r\n            dispatch({type: constants.HANDLE_GROUP_INPUT_CONFIRM, data})\r\n          } else {\r\n            message.error(msg);\r\n          }\r\n        })\r\n    } else {\r\n      dispatch({type: constants.HANDLE_GROUP_INPUT_CONFIRM, data: {}})\r\n    }\r\n  }\r\n};\r\n\r\nexport const handleClose = (_id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这个分组吗？\",\r\n      onOk: () => {\r\n        axios.delete(\"/messageGroup\", {params: {_id}})\r\n          .then(res => {\r\n            const {code, msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              dispatch({type: constants.DELETE_GROUP, index})\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const cancelSelectGroup = () => ({\r\n  type: constants.CANCEL_SELECT_GROUP\r\n});\r\n\r\nexport const selectGonghao = codes => ({\r\n  type: constants.SELECT_GONGHAO,\r\n  codes\r\n});\r\n\r\nexport const submitMessage = (info, history, allCodes) => {\r\n  return dispatch => {\r\n    info.gonghaoList = allCodes.filter(item => info.codes.indexOf(item.code) > -1);\r\n    !info.img && info.contents.length > 0 && (info.img = info.contents[0].picurl);\r\n    info.channel === 1 ? info.task = true : info.task = false;\r\n    info.channel === 2 ? info.is_timing = true : info.is_timing = false;\r\n    if(info.channel !== 1) {\r\n      info.delay = null;\r\n    }\r\n    if(info.channel === 3) {\r\n      info.is_daily = true;\r\n      if(info.daily_time_show._d) {\r\n        info.daily_time_show = new Date(info.daily_time_show._d).getTime()\r\n      } else {\r\n        info.daily_time_show = new Date(info.daily_time_show).getTime()\r\n      }\r\n    } else {\r\n      info.is_daily = false;\r\n      info.daily_time_show = 0;\r\n    }\r\n    if(!info.codes.length) {\r\n      message.error(\"请选择公号后再试\");\r\n      return\r\n    }\r\n    Modal.confirm({\r\n      title: \"确定提交吗？\",\r\n      onOk: () => {\r\n        let url = \"/message/create\";\r\n        if(history.location.query) {\r\n          url = \"/message/update\";\r\n          info.id = info._id\r\n        }\r\n        axios.post(url, {...info})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.info(res.data.success);\r\n              history.goBack();\r\n              dispatch(resetState());\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const initKefuMessageInfo = query => {\r\n  return dispatch => {\r\n    if (query.tagId) {\r\n      axios.get(\"/tag/get_name\", { params: { tagId: query.tagId } })\r\n        .then(res => {\r\n          query.tagName = res.data.data.name;\r\n          const action = {\r\n            type: constants.INIT_KEFU_MESSAGE_INFO,\r\n            query\r\n          };\r\n          dispatch(action);\r\n        });\r\n    } else {\r\n      const action = {\r\n        type: constants.INIT_KEFU_MESSAGE_INFO,\r\n        query\r\n      };\r\n      dispatch(action);\r\n    }\r\n\r\n  }\r\n};\r\n\r\nexport const openPreviewModal = () => ({\r\n  type: constants.OPEN_PREVIEW_MODAL\r\n});\r\n\r\nexport const closePreviewModal = () => ({\r\n  type: constants.CLOSE_PREVIEW_MODAL\r\n});\r\n\r\nexport const preview = ({codes, type, contents, img_path}, openid) => {\r\n  return dispatch => {\r\n    axios.post('/message/preview', {codes, type, contents, img_path, openid})\r\n      .then(res => {\r\n        const { code, msg } = res.data;\r\n        if(code === 1) {\r\n          message.success(msg);\r\n        } else {\r\n          message.warning(msg);\r\n        }\r\n        dispatch(closePreviewModal());\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeOpenId = value => ({\r\n  type: constants.CHANGE_OPENID,\r\n  value\r\n});\r\n\r\nexport const changePage = page => ({\r\n  type: constants.CHANGE_PAGE,\r\n  page\r\n});\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n","export const GET_KEFU_MESSAGE_LIST = \"message/kefu/getKefuMessageList\";\r\nexport const CREATE_KEFU_MESSAGE = \"message/kefu/createKefuMessage\";\r\nexport const DELETE_LAST_MESSAGE = \"message/kefu/deleteLastMessage\";\r\nexport const DELETE_MESSAGE = \"message/kefu/deleteMessage\";\r\nexport const CHANGE_CONTENT_VALUE = \"message/kefu/changeContentValue\";\r\nexport const CHANGE_MESSAGE_VALUE = \"message/kefu/changeMessageValue\";\r\nexport const HANDLE_CHANGE_SELECT = \"message/kefu/handleChangeSelect\";\r\nexport const CHANGE_SELECTED_MESSAGES = \"message/kefu/changeSelectedMessages\";\r\nexport const OPEN_UPDATE_GROUP_MODAL = \"message/kefu/openUpdateGroupModal\";\r\nexport const CHANGE_GROUP = \"message/kefu/changeGroup\";\r\nexport const CANCEL_UPDATE_GROUP = \"message/kefu/cancelUpdateGroup\";\r\nexport const UPDATE_MORE_GROUP = \"message/kefu/updateMoreGroup\";\r\nexport const CHANGE_SEARCH_NAME = \"message/kefu/changeSearchName\";\r\nexport const SEARCH_INPUT_VALUE = \"message/kefu/searchInputChange\";\r\nexport const CLEAR_CONDITION = \"message/kefu/clearCondition\";\r\n\r\nexport const ADD_MESSAGE = \"message/kefu/addMessage\";\r\nexport const SELECT_MESSAGE = \"message/kefu/selectMessage\";\r\nexport const GET_ALL_CODES = \"message/kefu/getAllCodes\";\r\nexport const SELECT_GONGHAO = \"message/kefu/selectGonghao\";\r\nexport const SELECT_PARAMS = \"message/kefu/selectParams\";\r\nexport const HIDE_PARAMS_MODAL = \"message/kefu/hideParamsModal\";\r\nexport const INIT_KEFU_MESSAGE_INFO = \"message/kefu/initKefuMessageInfo\";\r\nexport const SUBMIT_MESSAGE = \"message/kefu/submitMessage\";\r\nexport const OPEN_PREVIEW_MODAL = \"message/kefu/openPreviewModal\";\r\nexport const CLOSE_PREVIEW_MODAL = \"message/kefu/closePreviewModal\";\r\nexport const CHANGE_OPENID = \"message/kefu/changeOpenId\";\r\n\r\nexport const GET_ALL_GROUP = \"message/kefu/getAllGroup\";\r\nexport const SHOW_GROUP_INPUT = \"message/kefu/showGroupInput\";\r\nexport const HANDLE_GROUP_INPUT_CHANGE = \"message/kefu/handleGroupInputChange\";\r\nexport const HANDLE_GROUP_INPUT_CONFIRM = \"message/kefu/handleGroupInputConfirm\";\r\nexport const DELETE_GROUP = \"message/kefu/handleClose\";\r\nexport const CANCEL_SELECT_GROUP = \"message/kefu/cancelSelectGroup\";\r\n\r\nexport const CHANGE_PAGE = \"message/kefu/changePage\";\r\n\r\n\r\nexport const RESET_STATE = \"message/kefu/resetState\";\r\n","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  templateMessageList: [],\r\n  confName: \"\",\r\n\r\n  selectGonghaoModal: true,\r\n  messageInfo: {\r\n    name: \"\",\r\n    code: null,\r\n    templateId: \"\",\r\n    templateName: \"\",\r\n    url: \"\",\r\n    sex: \"all\",\r\n    content: {},\r\n    is_timing: false,\r\n    timing_time: new Date()\r\n  },\r\n  allCodes: [],\r\n  templateList: [],\r\n  templateInfo: {\r\n    template_id: \"\",\r\n  },\r\n  name: \"\",\r\n  templateModalVisible: false,\r\n  content: {\r\n    value: \"\",\r\n    color: \"#000\"\r\n  },\r\n  previewModal: false,\r\n  openid: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n\r\n    case constants.GET_TEMPLATE_LIST:\r\n      newState.templateMessageList = action.data;\r\n      newState.confName = \"\";\r\n      return newState;\r\n    case constants.DELETE_TEMPLATE:\r\n      newState.templateMessageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CHANGE_CONF_NAME:\r\n      newState.confName = action.value;\r\n      return newState;\r\n    case constants.SEARCH_CONF_NAME:\r\n      newState.templateMessageList = action.data;\r\n      newState.confName = \"\";\r\n      return newState;\r\n    case constants.SEND_TEMPLATE_MSG:\r\n      let templateMessageList = newState.templateMessageList.map(item => {\r\n        item._id === action.id && (item.status = 1);\r\n        return item\r\n      });\r\n      newState.templateMessageList = templateMessageList;\r\n      return newState;\r\n\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = action.allCodes;\r\n      return newState;\r\n\r\n    case constants.OPEN_SELECT_MODAL:\r\n      newState.selectGonghaoModal = true;\r\n      return newState;\r\n    case constants.OPEN_EDIT_MODAL:\r\n      newState.name = action.key;\r\n      newState.content = action.content;\r\n      newState.templateModalVisible = true;\r\n      return newState;\r\n    case constants.CLOSE_TEMPLATE_MODAL:\r\n      newState.name = \"\";\r\n      newState.templateModalVisible = false;\r\n      newState.content = { value: \"\", color: \"#000\" };\r\n      return newState;\r\n    case constants.CHANGE_TEMPLATE:\r\n      newState.templateInfo = newState.templateList.filter(item => item.template_id === action.value)[0];\r\n      newState.messageInfo.templateId = newState.templateInfo.template_id;\r\n      newState.messageInfo.content = {};\r\n      for(let key in newState.templateInfo.data) {\r\n        newState.messageInfo.content[key] = {\r\n          value: \"\",\r\n          color: \"#000\"\r\n        }\r\n      }\r\n      return newState;\r\n    case constants.EDIT_TEMPLATE:\r\n      newState.content[action.key] = action.value;\r\n      return newState;\r\n    case constants.SAVE_TEMPLATE_MODAL:\r\n      newState.messageInfo.content[newState.name] = newState.content;\r\n      newState.name = \"\";\r\n      newState.templateModalVisible = false;\r\n      newState.content = { value: \"\", color: \"#000\" };\r\n      return newState;\r\n\r\n    case constants.CHANGE_MESSAGE_INFO:\r\n      newState.messageInfo[action.key] = action.value;\r\n      if(action.key === \"is_timing\") {\r\n        newState.messageInfo.timing_time = new Date()\r\n      }\r\n      return newState;\r\n    case constants.CONFIRM_SELECT:\r\n      newState.templateList = action.templateList;\r\n      newState.templateInfo = action.templateInfo;\r\n      newState.messageInfo.templateId = newState.templateInfo.template_id;\r\n      for(let key in newState.templateInfo.data) {\r\n        newState.messageInfo.content[key] = {\r\n          value: \"\",\r\n          color: \"#000\"\r\n        }\r\n      }\r\n      return newState;\r\n    case constants.CLOSE_SELECT_MODAL:\r\n      newState.selectGonghaoModal = false;\r\n      return newState;\r\n    case constants.OPEN_PREVIEW_MODAL:\r\n      newState.previewModal = true;\r\n      return newState;\r\n    case constants.CLOSE_PREVIEW_MODAL:\r\n      newState.previewModal = false;\r\n      newState.openid = \"\";\r\n      return newState;\r\n    case constants.CHANGE_OPENID:\r\n      newState.openid = action.value;\r\n      return newState;\r\n\r\n    case constants.INIT_MESSAGE_INFO:\r\n      newState.messageInfo = JSON.parse(JSON.stringify(action.record));\r\n      newState.templateList = action.templateList;\r\n      newState.templateInfo = newState.templateList.filter(item => item.template_id === action.record.templateId)[0];\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from '../../../../utils/http';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n// 列表页\r\n\r\nexport const getTemplateList = () => {\r\n  return dispatch => {\r\n    axios.get(\"/template\")\r\n      .then(res => {\r\n        const {data} = res.data;\r\n        dispatch({ type: constants.GET_TEMPLATE_LIST, data })\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteTemplate = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条模板消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/template/del\", {params: {id}})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              message.success(res.data.success);\r\n              dispatch({ type: constants.DELETE_TEMPLATE, index })\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const sendTemplate = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定发送这条模板消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/template/send\", {params: {id}})\r\n          .then(res => {\r\n            message.success(res.data);\r\n            dispatch({\r\n              type: constants.SEND_TEMPLATE_MSG,\r\n              id\r\n            });\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeConfNickName = value => ({\r\n  type: constants.CHANGE_CONF_NAME,\r\n  value\r\n});\r\n\r\nexport const searchConfName = confName => {\r\n  return dispatch => {\r\n    if(/^\\?.*/.test(confName) )\r\n    axios.get('/template/search', {params: {confName}})\r\n      .then(res => {\r\n        if(res.data.data.length > 0) {\r\n          dispatch({type: constants.SEARCH_CONF_NAME, data: res.data.data});\r\n          message.success(res.data.msg)\r\n        } else {\r\n          dispatch(getTemplateList());\r\n          message.error(\"没有查询到相关数据\")\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\n\r\n// 编辑模板消息\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.GET_ALL_CODES,\r\n          allCodes: res.data.data\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const openSelectModal = () => ({\r\n  type: constants.OPEN_SELECT_MODAL\r\n});\r\n\r\nexport const openEditModal = (key, content) => ({\r\n  type: constants.OPEN_EDIT_MODAL,\r\n  key, content\r\n});\r\n\r\nexport const closeTemplateModal = () => ({\r\n  type: constants.CLOSE_TEMPLATE_MODAL\r\n});\r\n\r\nexport const changeTemplate = value => ({\r\n  type: constants.CHANGE_TEMPLATE,\r\n  value\r\n});\r\n\r\nexport const saveTemplateModal = () => ({\r\n  type: constants.SAVE_TEMPLATE_MODAL\r\n});\r\n\r\n\r\nexport const editTemplate = (key, value) => ({\r\n  type: constants.EDIT_TEMPLATE,\r\n  key, value\r\n});\r\n\r\nexport const changeMessageInfo = (key, value) => ({\r\n  type: constants.CHANGE_MESSAGE_INFO,\r\n  key, value\r\n});\r\n\r\nexport const confirmSelect = code => {\r\n  return dispatch => {\r\n    dispatch(changeMessageInfo(\"code\", code));\r\n    axios.get('/template/list', {params: {code}})\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.CONFIRM_SELECT,\r\n          templateList: res.data, templateInfo: {...res.data[0]}, code\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const closeSelectModal = () => ({\r\n  type: constants.CLOSE_SELECT_MODAL\r\n});\r\n\r\n\r\nexport const openPreviewModal = () => ({\r\n  type: constants.OPEN_PREVIEW_MODAL\r\n});\r\n\r\nexport const closePreviewModal = () => ({\r\n  type: constants.CLOSE_PREVIEW_MODAL\r\n});\r\n\r\nexport const preview = ({code, templateId, url, content}, openid) => {\r\n  return dispatch => {\r\n    axios.post('/template/preview', {code, templateId, url, content, openid})\r\n      .then(res => {\r\n        message.success(res.data.msg);\r\n        dispatch(closePreviewModal());\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeOpenId = value => ({\r\n  type: constants.CHANGE_OPENID,\r\n  value\r\n});\r\n\r\nexport const submitMessage = (info, history, templateList) => {\r\n  return dispatch => {\r\n    let url = '/template/create';\r\n    info.templateName = templateList.filter(item => item.template_id === info.templateId)[0].title;\r\n    info._id && (url = '/template/update') && (info.id = info._id);\r\n    info.is_timing && (info.timing_time = new Date(info.timing_time));\r\n    Modal.confirm({\r\n      title: \"确定\" + (info._id ? \"保存这\" : \"创建一\") + \"条模板消息吗？\",\r\n      onOk: () => {\r\n        axios.post(url, {...info})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              message.success(res.data.success);\r\n              history.goBack()\r\n            } else {\r\n              message.error(res.data.err)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\n\r\nexport const initMessageInfo = record => {\r\n  return dispatch => {\r\n    dispatch(closeSelectModal());\r\n    axios.get('/template/list', {params: {code: record.code}})\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.INIT_MESSAGE_INFO,\r\n          templateList: res.data,\r\n          record\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n// ({\r\n//   type: constants.INIT_MESSAGE_INFO,\r\n//   record\r\n// });\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n","// 列表页\r\n// 获取模板消息列表\r\nexport const GET_TEMPLATE_LIST = \"message/template/getTemplateList\";\r\nexport const DELETE_TEMPLATE = \"message/template/deleteTemplate\";\r\nexport const CHANGE_CONF_NAME = \"message/template/changeConfNickName\";\r\nexport const SEARCH_CONF_NAME = \"message/template/searchConfName\";\r\nexport const SEND_TEMPLATE_MSG = \"message/template/sendTemplate\";\r\n\r\n\r\n// 编辑模板消息\r\n// 获取所有公号\r\nexport const GET_ALL_CODES = \"message/template/getAllCodes\";\r\n\r\n// 打开选择公号面板\r\nexport const OPEN_SELECT_MODAL = \"message/template/openSelectModal\";\r\n// 关闭选择公号面板\r\nexport const CLOSE_SELECT_MODAL = \"message/template/closeSelectModal\";\r\n\r\n// 打开列表编辑的modal\r\nexport const OPEN_EDIT_MODAL = \"message/template/openEditModal\";\r\n// 关闭列表编辑的modal\r\nexport const CLOSE_TEMPLATE_MODAL = \"message/template/closeTemplateModal\";\r\n// 更换模板\r\nexport const CHANGE_TEMPLATE = \"message/template/changeTemplate\";\r\n// 编辑模板\r\nexport const EDIT_TEMPLATE = \"message/template/editTemplate\";\r\n// 保存模板\r\nexport const SAVE_TEMPLATE_MODAL = \"message/template/saveTemplateModal\";\r\n\r\n// 修改messageInfo\r\nexport const CHANGE_MESSAGE_INFO = \"message/template/changeMessageInfo\";\r\n// 确认选择公号，关闭modal，获取模板列表\r\nexport const CONFIRM_SELECT = \"message/template/confirmSelect\";\r\n\r\nexport const OPEN_PREVIEW_MODAL = \"message/template/openPreviewModal\";\r\nexport const CLOSE_PREVIEW_MODAL = \"message/template/closePreviewModal\";\r\nexport const CHANGE_OPENID = \"message/template/changeOpenId\";\r\n\r\n// 初始化messageInfo\r\nexport const INIT_MESSAGE_INFO = \"message/template/initMessageInfo\";\r\n\r\n\r\n// 重置state\r\nexport const RESET_STATE = \"message/template/resetState\";\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as groupReducer } from './group/store';\r\nimport { reducer as kefuReducer } from './kefu/store';\r\nimport { reducer as templateReducer } from './template/store';\r\n\r\nconst reducer = combineReducers({\r\n  group: groupReducer,\r\n  kefu: kefuReducer,\r\n  template: templateReducer\r\n});\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport gonghaoReducer from '../pages/gonghao/reducer';\r\nimport messageReducer from '../pages/message/reducer';\r\n\r\nconst reducer = combineReducers({\r\n  gonghao: gonghaoReducer,\r\n  message: messageReducer,\r\n});\r\n\r\nexport default reducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from './reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport \"./index.scss\";\r\nimport {Input, Icon, message} from 'antd';\r\nimport axios from '../../utils/http';\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.login = this.login.bind(this);\r\n    this.state = {\r\n      loginInfo: {\r\n        username: \"\",\r\n        password: \"\"\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loginInfo } = this.state;\r\n    const bgStyle = {\r\n      minHeight: \"100vh\",\r\n      backgroundSize: \"100%\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundAttachment: \"fixed\",\r\n      backgroundImage: `url(${require(\"../../assets/images/login_bg.png\")})`\r\n    };\r\n    return (\r\n      <div className=\"login-bg\" style={bgStyle}>\r\n        <div className=\"bg-mask\"></div>\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"content\">\r\n            <p className=\"title\">明星说后台管理系统</p>\r\n            <p>运营与管控一体化的整合式服务平台</p>\r\n            <p>一起解构数字世界，碰撞科技创新思想</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"login-form-wrapper\">\r\n          <div className=\"login-form\">\r\n            <h4 className=\"login-title\">登录</h4>\r\n            <Input\r\n              value={loginInfo.username}\r\n              size=\"large\"\r\n              onChange={e => this.changeInputValue(e.target.value, \"username\")}\r\n              prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)', marginRight: 10}}/>}\r\n              style={{marginBottom: 30}}\r\n              placeholder=\"用户名\"\r\n              onKeyUp={e => e.keyCode === 13 && this.login()}\r\n            />\r\n            <Input\r\n              value={loginInfo.password}\r\n              size=\"large\"\r\n              type=\"password\"\r\n              onChange={e => this.changeInputValue(e.target.value, \"password\")}\r\n              prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)', marginRight: 10}}/>}\r\n              placeholder=\"密码\"\r\n              onKeyUp={e => e.keyCode === 13 && this.login()}\r\n            />\r\n            <button className=\"login-btn cursor\" onClick={this.login}>登录</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  changeInputValue(value, name) {\r\n    const { loginInfo } = this.state;\r\n    loginInfo[name] = value;\r\n    this.setState(state => ({loginInfo: {...state.loginInfo, ...loginInfo}}))\r\n  }\r\n\r\n  login() {\r\n    const { loginInfo } = this.state;\r\n    if(loginInfo.username && loginInfo.password) {\r\n      loginInfo.password = this.$MD5(loginInfo.password).toString();\r\n      axios.post('/account/login', {...loginInfo})\r\n        .then(res => {\r\n          const { code, msg, data } = res.data;\r\n          if(code === -1) {\r\n            message.error(msg);\r\n          } else {\r\n            const userInfo = JSON.stringify(data[0]);\r\n            localStorage.setItem(\"userInfo\", userInfo);\r\n            window.location.href = '/admin';\r\n            this.setState({loginInfo: {}});\r\n            message.success(msg)\r\n          }\r\n        })\r\n    } else {\r\n      message.warning(\"用户名或密码不能为空\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Avatar, Popover, Icon, message, Modal, Form, Input, Tooltip } from 'antd';\r\nimport axios from 'axios';\r\n\r\nimport './index.scss';\r\n\r\nclass HeaderWrapper extends Component {\r\n\r\n  state = {\r\n    userInfo: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userInfo = localStorage.getItem(\"userInfo\");\r\n    if(userInfo) {\r\n      userInfo = JSON.parse(userInfo);\r\n      this.setState({userInfo})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { userInfo, showUpdateModal } = this.state;\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div className='header-wrapper'>\r\n        <Link to=\"/\">\r\n          <img className=\"logo fl\" src={require(\"../../../assets/images/logo.png\")} alt=\"\"/>\r\n        </Link>\r\n        <div className=\"user-info fr\">\r\n          <Tooltip title=\"帮助文档\">\r\n            <a href=\"http://t.dmmup.com/平台接管及发文方式.pdf\" target=\"__blank\">\r\n              <Avatar size={25} icon=\"question\" style={{marginRight: 10, color: '#f56a00', backgroundColor: '#fde3cf' }} />\r\n            </a>\r\n          </Tooltip>\r\n          <Avatar size={25} icon=\"user\" />\r\n          <Popover content={\r\n            <>\r\n              <p style={{fontSize: 12, marginBottom: 10}} className=\"cursor\" onClick={() => this.setState({showUpdateModal: true})}><Icon style={{marginRight: 5}} type=\"edit\" />修改信息</p>\r\n              <p style={{fontSize: 12}} className=\"cursor\" onClick={logout}><Icon style={{marginRight: 5}} type=\"logout\" />退出</p>\r\n            </>\r\n          }>\r\n            <div className=\"user fr cursor\">\r\n              <p>{userInfo.username},</p>\r\n              <p>欢迎回来<Icon type=\"down\" /></p>\r\n            </div>\r\n          </Popover>\r\n          <Modal visible={showUpdateModal} title=\"修改用户信息\" onOk={this.updateInfo} onCancel={this.cancelUpdate}>\r\n            <Form labelCol={{span: 4}} wrapperCol={{span: 20}}>\r\n              <Form.Item label=\"用户名：\">\r\n                {getFieldDecorator('username', {\r\n                  initialValue: userInfo.username\r\n                })(\r\n                  <Input placeholder=\"请输入用户名\"/>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"新密码：\">\r\n                {getFieldDecorator('password', {\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"登录密码不能为空\"\r\n                  }]\r\n                })(\r\n                  <Input type=\"password\" placeholder=\"请输入新密码\"/>\r\n                )}\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  updateInfo = () => {\r\n    const { getFieldsValue } = this.props.form;\r\n    const { userInfo: {_id: id} } = this.state;\r\n    const { username, password } = getFieldsValue();\r\n    if(password.trim() && username.trim()) {\r\n      Modal.confirm({\r\n        title: \"确定修改用户信息吗？\",\r\n        onOk: () => {\r\n          let md5Password = this.$MD5(password).toString();\r\n          axios.put('/account', {id, username, password: md5Password })\r\n            .then(res => {\r\n              const {code, msg} = res.data;\r\n              if(code === 1) {\r\n                message.success(msg + \"请重新登录\");\r\n                this.cancelUpdate();\r\n                localStorage.setItem(\"userInfo\", \"\");\r\n                window.location.href = \"/admin/login\";\r\n              } else {\r\n                message.error(msg);\r\n              }\r\n            })\r\n        }\r\n      })\r\n    } else {\r\n      message.error(\"请检查输入是否有误，密码首尾不能为空格\")\r\n    }\r\n  };\r\n\r\n  cancelUpdate = () => {\r\n    const { setFieldsValue } = this.props.form;\r\n    this.setState({showUpdateModal: false});\r\n    setFieldsValue({password: \"\"});\r\n  }\r\n\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.setItem(\"userInfo\", \"\");\r\n  message.success(\"退出登录成功\");\r\n  setTimeout(() => {\r\n    window.location.href = \"/admin/login\";\r\n  }, 500)\r\n};\r\n\r\nexport default Form.create()(HeaderWrapper);\r\n","import React, {Component} from 'react';\r\nimport {Menu, Icon} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './index.scss';\r\n\r\nconst {SubMenu} = Menu;\r\nconst MenuItem = Menu.Item;\r\n\r\nclass SideWrapper extends Component {\r\n  menuList = [\r\n    {\r\n      keyIndex: 'gonghao',\r\n      title: '公号管理',\r\n      icon: 'appstore',\r\n      role: 2,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'tuoguan',\r\n          title: '公号托管',\r\n          path: '/admin/gonghao/tuoguan'\r\n        }, {\r\n          keyIndex: 'menu',\r\n          title: '菜单配置',\r\n          path: '/admin/gonghao/menu'\r\n        }, {\r\n          keyIndex: 'reply',\r\n          title: '自动回复',\r\n          path: '/admin/gonghao/reply'\r\n        // }, {\r\n        //   keyIndex: 'qrcode',\r\n        //   title: '参数二维码',\r\n        //   path: '/admin/gonghao/qrcode'\r\n        }\r\n      ]\r\n    }, {\r\n      keyIndex: 'message',\r\n      title: '消息管理',\r\n      icon: 'snippets',\r\n      role: 2,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'kefu',\r\n          title: '客服消息',\r\n          path: '/admin/message/kefu'\r\n        }, {\r\n          keyIndex: 'group',\r\n          title: '群发消息',\r\n          path: '/admin/message/group'\r\n        }, {\r\n          keyIndex: 'template',\r\n          title: '模板消息',\r\n          path: '/admin/message/template'\r\n        }\r\n      ]\r\n    }, {\r\n      keyIndex: 'channel',\r\n      title: '渠道推广',\r\n      icon: 'control',\r\n      role: 2,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'spread',\r\n          title: '推广链接',\r\n          path: '/admin/channel/spread'\r\n        }\r\n      ]\r\n    }, {\r\n      keyIndex: 'tools',\r\n      title: '便捷工具',\r\n      icon: 'setting',\r\n      role: 2,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'tikTok',\r\n          title: '抖音水印',\r\n          path: '/admin/tools/tikTok'\r\n        }\r\n      ]\r\n    }, {\r\n      keyIndex: 'account',\r\n      title: '账户管理',\r\n      icon: 'user',\r\n      role: 0,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'list',\r\n          title: '账户管理',\r\n          path: '/admin/account/list'\r\n        }, {\r\n          keyIndex: 'add',\r\n          title: '新增用户',\r\n          path: '/admin/account/add'\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  state = {\r\n    selectedKeys: [],\r\n    role: null\r\n  };\r\n\r\n  onSelect = async (selectItem) => {\r\n    const latestSelectedKey = selectItem.selectedKeys.find(key => this.state.selectedKeys.indexOf(key) === -1);\r\n    let selectList = [];\r\n    await this.menuList.map(item => (selectList = [...selectList, ...item.subMenuList]));\r\n    await selectList.find(item => (\r\n      item.keyIndex === latestSelectedKey\r\n      && this.setState({ selectedKeys: latestSelectedKey ? [latestSelectedKey] : [this.state.role === 2 ? 'tuoguan' : 'list'] })\r\n    ))\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    let userInfo = localStorage.getItem(\"userInfo\");\r\n    if(userInfo) {\r\n      userInfo = JSON.parse(userInfo);\r\n      this.setState({\r\n        role: userInfo.role,\r\n        selectedKeys: [window.location.pathname.split('/')[3] || (userInfo.role === 2 ? 'tuoguan' : 'list')]\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const pathName = window.location.pathname;\r\n    const MenuListRender = this.menuList.map((item, index) => {\r\n      if(item.role === this.state.role) {\r\n        const SubMenuList = item.subMenuList.map(subItem => (\r\n          <MenuItem key={subItem.keyIndex}><Link to={subItem.path}>{subItem.title}</Link></MenuItem>\r\n        ));\r\n        return (<SubMenu\r\n          key={item.keyIndex}\r\n          title={\r\n            <span className='side-item'>\r\n            <Icon className=\"side-icon\" type={item.icon}/>\r\n            <span>{item.title}</span>\r\n          </span>\r\n          }\r\n        >\r\n          {SubMenuList}\r\n        </SubMenu>)\r\n      }\r\n      return '';\r\n    });\r\n    return (\r\n      <div className='side-wrapper'>\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"light\"\r\n          selectedKeys={this.state.selectedKeys}\r\n          defaultOpenKeys={[window.location.pathname.split('/')[2] || (this.state.role === 2 ? 'gonghao' : 'account')]}\r\n          onSelect={this.onSelect}\r\n          defaultSelectedKeys={[pathName]}\r\n        >\r\n          {MenuListRender}\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SideWrapper;\r\n\r\n","import React, { Component } from 'react';\nimport { Breadcrumb, notification } from 'antd';\nimport { withRouter } from 'react-router'\nimport './index.scss';\n\nconst breadList = {\n  '/gonghao': '公号管理',\n\n  '/gonghao/tuoguan': '公号托管',\n  '/gonghao/tuoguan/group': '分组管理',\n\n  '/gonghao/tuoguan/error': '错误信息',\n\n  '/gonghao/tuoguan/config': '公号配置',\n  '/gonghao/tuoguan/config/create': '新建配置',\n  '/gonghao/tuoguan/config/update': '修改配置',\n\n  '/gonghao/menu': '配置菜单',\n  '/gonghao/menu/create': '新建菜单',\n  '/gonghao/menu/update': '修改菜单',\n\n  '/gonghao/reply': '自动回复',\n  '/gonghao/reply/create': '新建素材',\n  '/gonghao/reply/update': '修改素材',\n\n  '/message': '消息管理',\n\n  '/message/kefu': '客服消息',\n  '/message/kefu/create': '新建消息',\n  '/message/kefu/update': '修改消息',\n\n  '/message/group': '群发消息',\n  '/message/group/material': '群发素材',\n  '/message/group/history': '历史记录',\n\n  '/message/template': '模板消息',\n  '/message/template/create': '创建消息',\n  '/message/template/update': '修改消息',\n\n  '/channel': \"渠道推广\",\n  '/channel/spread': '推广链接',\n  '/channel/spread/create': '创建素材',\n  '/channel/spread/update': '修改素材',\n\n  '/source': '素材库',\n  '/source/group': '图文素材',\n  '/source/group/create': '新建素材',\n  '/source/group/update': '修改素材',\n\n  '/wechat/qrcode': '参数二维码',\n  '/wechat/qrcode/create': '新增二维码',\n  '/wechat/qrcode/update': '修改二维码',\n\n  '/tools': '便捷工具',\n  '/tools/tikTok': '抖音去水印',\n\n  '/account': '账户管理',\n  '/account/list': '账户列表',\n  '/account/add': '新增账户',\n};\n\nclass BreadWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pathSnippets: null,\n      extraBreadcrumbItems: null,\n    }\n  }\n\n  getPath = () => {\n    this.setState({\n      pathSnippets: window.location.pathname.split('/').slice(2)\n    });\n    this.setState((prev) => {\n      return {\n        extraBreadcrumbItems: prev.pathSnippets.map((_, index) => {\n          let url = `/${prev.pathSnippets.slice(0, index + 1).join('/')}`;\n          return (\n            <Breadcrumb.Item key={url}>\n              {breadList[url]}\n            </Breadcrumb.Item>\n          );\n        })\n      }\n    })\n  };\n\n  seeDetail = () => {\n    notification.info({\n      message: \"系统服务异常公告\",\n      description: \"于2020年1月21日22：30分左右平台出现服务异常，部分功能故障，已于当日23:50排查修复，请各位小伙伴知悉。给大家带来不便，敬请谅解。如因担心再次故障影响使用，请自行在微信公众后台解除授权。\",\n      style: {\n        width: 600,\n        marginLeft: 335 - 600,\n      },\n    })\n  }\n\n  UNSAFE_componentWillReceiveProps () {\n    this.getPath();\n  }\n\n  componentDidMount() {\n    this.getPath();\n  }\n\n  render() {\n    const { extraBreadcrumbItems } = this.state;\n    return (\n    \t<div className='bread-wrapper'>\n    \t\t<div className='bread-nav'>\n          <Breadcrumb>\n            {extraBreadcrumbItems}\n          </Breadcrumb>\n        </div>\n        <div className=\"notice\">\n          <span className=\"notice-title\">【系统通知】</span>\n          <span onClick={this.seeDetail} className=\"notice-desc textEllipsis\">\n            于2020年1月21日22：30分左右平台出现服务异常，部分功能故障，已于当日23:50排查修复，请各位小伙伴知悉。给大家带来不便，敬请谅解。如因担心再次故障影响使用，请自行在微信公众后台解除授权。\n          </span>\n        </div>\n    \t</div>\n    )\n  }\n\n}\n\nexport default withRouter(BreadWrapper);","import React from 'react';\r\nimport {Layout, Card, Icon} from 'antd';\r\nimport HeaderWrapper from './header';\r\nimport SiderWrapper from './sider';\r\nimport BreadCrumb from './bread';\r\nimport \"./index.scss\";\r\n\r\nconst {Content, Sider, Header, Footer} = Layout;\r\n\r\nconst BasicLayout = props => <Layout className=\"basic-layout\">\r\n  <HeaderWrapper/>\r\n  <Layout>\r\n    <Sider collapsible className=\"basic-sider\" theme=\"light\" width=\"180\">\r\n      <SiderWrapper/>\r\n    </Sider>\r\n    <Layout>\r\n      <Content className=\"basic-content\">\r\n        <Card className=\"basic-card\">\r\n          <Layout>\r\n            <Header className=\"basic-header\"><BreadCrumb /></Header>\r\n            <Content>{props.content}</Content>\r\n            <div className=\"connect\">\r\n              <Icon type=\"customer-service\" theme=\"filled\" />\r\n              <p>客服</p>\r\n              <div className=\"connect-method\">\r\n                <img className=\"connect-qrcode\" src=\"http://t.dmmup.com/uploads/1861795c12c690ef4df709abcaf73fc2.jpg\" alt=\"\"/>\r\n                <p className=\"connect-title\">微信扫描二维码，咨询客服</p>\r\n              </div>\r\n            </div>\r\n          </Layout>\r\n        </Card>\r\n      </Content>\r\n      <Footer className=\"basic-footer\">Copyright&copy;2019  最终解释权归本公司所有</Footer>\r\n    </Layout>\r\n  </Layout>\r\n</Layout>;\r\n\r\nexport default BasicLayout;","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\n\r\nconst ButtonList = {\r\n  \"warning\": \"#F39C12\",\r\n  \"danger\": \"#E74C3C\",\r\n  \"success\": \"#2ECC71\",\r\n  \"info\": \"#7F8C8D\",\r\n  \"update\": \"#3498DB\"\r\n};\r\n\r\n\r\nclass ButtonWrapper extends Component {\r\n  state = {\r\n    buttonStyle: {\r\n      background: \"#3498DB\",\r\n      color: \"#fff\",\r\n      marginRight: 5,\r\n      marginLeft: 0,\r\n      marginBottom: 0\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    const { background = \"update\", color = \"#fff\", mr = 5, ml = 0, mb = 0 } = this.props;\r\n    this.setState({\r\n      buttonStyle: { background: ButtonList[background], color, marginRight: mr, marginLeft: ml, marginBottom: mb }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { size = \"small\", buttonContent, disabled = false, onClick } = this.props;\r\n    const { buttonStyle } = this.state;\r\n    return (\r\n    \t<Button size={size} disabled={disabled} style={buttonStyle} onClick={onClick}>{buttonContent}</Button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ButtonWrapper;","import React, {Component} from 'react';\r\nimport {Input, Card, List, Modal, Form, Select, Radio, Tag, Tooltip, Avatar, Icon} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport {actionCreators} from './store';\r\nimport './index.scss';\r\nimport Button from \"../../../common/components/Button\";\r\n\r\nconst {Search} = Input;\r\nconst {Option} = Select;\r\nconst { Grid } = Card;\r\n\r\nclass Tuoguan extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getGroupList();\r\n    this.props.getAllGonghaoList();\r\n  }\r\n\r\n  render() {\r\n    const {gonghaoTagList, gonghaoList, searchByName, searchName, changeSearchInput, jieguan, addNewGonghao, openGonghaoModal, gonghaoModal, closeGonghaoModal, gonghaoInfo, updateGonghaoInfo, changeGroup, changeAttribute, changeAbTest, deleteGonghao, group, changeSelectValue, status} = this.props;\r\n    let innerWidth = window.innerWidth > 1440;\r\n    const pagination = {\r\n      pageSize: innerWidth ? 24 : 12\r\n    };\r\n    return (\r\n      <div>\r\n        <div className='container'>\r\n          <Search\r\n            placeholder='请输入公号名称'\r\n            className='search-btn'\r\n            value={searchName}\r\n            onChange={changeSearchInput}\r\n            onSearch={searchName => searchByName(searchName)}\r\n          />\r\n          <Select value={group} onChange={value => changeSelectValue(\"group\", value)} style={{width: 150, marginLeft: 10}}>\r\n            <Option value=\"全部\">全部公号</Option>\r\n            <Option value=\"未分组\">未分组</Option>\r\n            {gonghaoTagList.map(item => <Option key={item._id} value={item.name}>{item.name}</Option>)}\r\n          </Select>\r\n          <Select value={status} onChange={value => changeSelectValue(\"status\", value)} style={{width: 100, marginLeft: 10}}>\r\n            <Option value=\"全部\">全部</Option>\r\n            <Option value={1}>已接管</Option>\r\n            <Option value={-1}>接管中</Option>\r\n            <Option value={0}>待接管</Option>\r\n            <Option value={-2}>未接管</Option>\r\n          </Select>\r\n          <div className=\"fr btn-wrapper\">\r\n            <Button background=\"success\" size=\"default\"\r\n                    buttonContent={<Link to='/admin/gonghao/tuoguan/group'>分组管理</Link>}/>\r\n            <Button size=\"default\" buttonContent=\"添加新公号\" onClick={addNewGonghao}/>\r\n          </div>\r\n          <div className='table-wrapper'>\r\n            <List\r\n              grid={{gutter: 16, sm: 4, xxl: 6}}\r\n              dataSource={gonghaoList}\r\n              pagination={pagination}\r\n              renderItem={(item, index) => (\r\n                <List.Item>\r\n                  <Grid className=\"card-grid\">\r\n\r\n                  <Card className=\"card-item\"\r\n                        actions={\r\n                          [\r\n                            <Tooltip title=\"修改分组和公号属性\"><span onClick={() => openGonghaoModal(item._id, item.group, item.attribute, item.ab_test)}>修改</span></Tooltip>,\r\n                            <Tooltip title={item.status === -2 ? \"接管粉丝，打标签\" : (item.status === -1 ? \"正在接管，请稍后\" : (item.status === 0 ? \"接管账号较多，排队中\" : (item.status === -3 ? \"接管失败，请联系客服\" : \"接管完成\")))}><span className={item.status === -2 ? \"\" : \"disabled-click\"} onClick={() => item.status === -2 ? jieguan(item.code, index) : console.log(\"已接管或接管中\")}>{item.status === -2 ? \"接管\" : (item.status === -1 ? \"接管中\" : (item.status === 0 ? \"待接管\" : (item.status === -3 ? \"接管失败\" : \"已接管\")))}</span></Tooltip>,\r\n                            <Tooltip title={<p>删除公号信息<br />解除授权请在公号后台操作</p>}><span onClick={() => deleteGonghao(item._id, index)}>删除</span></Tooltip>\r\n                          ]\r\n                        }>\r\n                    <div className=\"active-users-wrapper\">\r\n                      <div className=\"active-users\">\r\n                        昨日活跃<span> {item.yesterdayCount || 0}</span>\r\n                      </div>\r\n                      <div className=\"active-users\">\r\n                        今日活跃 <span>{item.todayCount || 0}</span>\r\n                      </div>\r\n                    </div>\r\n                    {item.head_img ? <img src={item.head_img} alt=\"\"/> : <Avatar shape=\"circle\" size={40} icon=\"user\" style={{marginRight: 5, marginTop: -20}}/>}\r\n                    <div className=\"gonghao-info\">\r\n                      <p>{item.nick_name}</p>\r\n                      <Tag>{item.group}</Tag>\r\n                    </div>\r\n                  </Card>\r\n                </Grid>\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Modal visible={gonghaoModal} title=\"修改公号信息\" onCancel={closeGonghaoModal} onOk={() => updateGonghaoInfo(gonghaoInfo)}>\r\n          <Form labelCol={{span: 8}} wrapperCol={{span: 10}}>\r\n            <Form.Item label=\"公号分组\" >\r\n              <Select value={gonghaoInfo.group || \"未分组\"} onChange={changeGroup}>\r\n                <Option value=\"未分组\">未分组</Option>\r\n                {gonghaoTagList.map(item => <Option key={item._id} value={item.name}>{item.name}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item label=\"公号属性\">\r\n              <Radio.Group value={gonghaoInfo.attribute} onChange={changeAttribute}>\r\n                <Radio value={0}>默认</Radio>\r\n                <Radio value={1}>男</Radio>\r\n                <Radio value={2}>女</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item label={<span>测试性别 <Tooltip title={<span>将公号男粉丝或女粉丝平均分开,一般默认即可<br />(如有需要，请在接管前选择)</span>}><Icon className=\"cursor\" type=\"question-circle\" theme=\"filled\" /></Tooltip></span>}>\r\n              <Radio.Group value={gonghaoInfo.ab_test} onChange={changeAbTest}>\r\n                <Radio value={0}>默认</Radio>\r\n                <Radio value={1}>男</Radio>\r\n                <Radio value={2}>女</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  gonghaoTagList: state.gonghao.tuoguan.gonghaoTagList,\r\n  allGonghaoList: state.gonghao.tuoguan.allGonghaoList,\r\n  gonghaoList: state.gonghao.tuoguan.gonghaoList,\r\n  currentPage: state.gonghao.tuoguan.currentPage,\r\n  searchName: state.gonghao.tuoguan.searchName,\r\n  gonghaoModal: state.gonghao.tuoguan.gonghaoModal,\r\n  gonghaoInfo: state.gonghao.tuoguan.gonghaoInfo,\r\n  group: state.gonghao.tuoguan.group,\r\n  status: state.gonghao.tuoguan.status,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getGroupList() {\r\n    dispatch(actionCreators.getGroupList())\r\n  },\r\n  getAllGonghaoList() {\r\n    dispatch(actionCreators.getAllGonghaoList())\r\n  },\r\n  changePage(page) {\r\n    dispatch(actionCreators.changePage(page))\r\n  },\r\n  changeSearchInput(e) {\r\n    dispatch(actionCreators.changeSearchInput(e.target.value))\r\n  },\r\n  searchByName(value) {\r\n    dispatch(actionCreators.searchByName(value));\r\n  },\r\n  deleteGonghao(id, index) {\r\n    dispatch(actionCreators.deleteGonghao(id, index));\r\n  },\r\n  jieguan(code, index) {\r\n    dispatch(actionCreators.jieguan(code, index));\r\n  },\r\n  addNewGonghao() {\r\n    dispatch(actionCreators.addNewGonghao());\r\n  },\r\n  openGonghaoModal(id, group, attribute, ab_test) {\r\n    dispatch(actionCreators.openGonghaoModal(id, group, attribute, ab_test));\r\n  },\r\n  closeGonghaoModal() {\r\n    dispatch(actionCreators.closeGonghaoModal());\r\n  },\r\n  updateGonghaoInfo(gonghaoInfo) {\r\n    dispatch(actionCreators.updateGonghaoInfo(gonghaoInfo));\r\n  },\r\n  changeGroup(name) {\r\n    dispatch(actionCreators.changeGroup(name));\r\n  },\r\n  changeAttribute(e) {\r\n    let attribute = e.target.value;\r\n    dispatch(actionCreators.changeAttribute(attribute));\r\n  },\r\n  changeAbTest(e) {\r\n    let ab_test = e.target.value;\r\n    dispatch(actionCreators.changeAbTest(ab_test));\r\n  },\r\n  changeSelectValue(key, value) {\r\n    dispatch(actionCreators.changeSelectValue(key, value));\r\n  },\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Tuoguan);","import React, { Component } from 'react';\r\nimport { Layout, List, Input, Card, Table, Button, Modal, Radio, message, Icon } from 'antd'\r\nimport axios from 'axios';\r\n\r\nconst { Sider, Content } = Layout;\r\nconst { Search } = Input;\r\n\r\n\r\nclass GonghaoGroup extends Component {\r\n  columns = [\r\n    {\r\n      key: \"nick_name\",\r\n      dataIndex: \"nick_name\",\r\n      title: \"公号名称\",\r\n      align: \"center\",\r\n      width: 200\r\n    }, {\r\n      key: \"group\",\r\n      dataIndex: \"group\",\r\n      title: \"分组\",\r\n      align: \"center\"\r\n    }, {\r\n      key: \"action\",\r\n      title: \"操作\",\r\n      align: \"center\",\r\n      width: 100,\r\n      render: (text, record, index) => <Button type=\"primary\" size=\"small\" onClick={() => this.setState({gonghaoModal: true, gonghao_id: record._id, gonghao_index: index})}>修改分组</Button>\r\n    }\r\n  ];\r\n\r\n  state = {\r\n    gonghaoTagList: [],\r\n    gonghaoModal: false,\r\n    editGroupModalVisible: false,\r\n    group: \"\",\r\n    gonghaoList: [],\r\n    group_id: \"\",\r\n    group_index: -1,\r\n    gonghao_id: \"\",\r\n    gonghao_index: -1,\r\n    selectGroup: \"\",\r\n    selectedRowKeys: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGonghaoTagList();\r\n    this.getGroupGonghao();\r\n  }\r\n\r\n  getGonghaoTagList = () => {\r\n    axios.get(\"/gonghaoTag\")\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          const { data: gonghaoTagList } = res.data;\r\n          this.setState({gonghaoTagList})\r\n        }\r\n      })\r\n  };\r\n\r\n  getGroupGonghao = group => {\r\n    axios.get('/conf/group', { params: {group} })\r\n      .then(res => {\r\n        let { data: gonghaoList } = res.data;\r\n        this.setState({gonghaoList})\r\n        gonghaoList.length === 0 && message.warning(\"该分组中还没有数据，请添加\")\r\n      })\r\n  };\r\n\r\n  openEditGroupModal = () => {\r\n    this.setState({editGroupModalVisible: true})\r\n  };\r\n\r\n  closeEditGroupModal = () => {\r\n    this.setState({editGroupModalVisible: false, group: \"\"})\r\n  };\r\n\r\n  confirmEditGroup = () => {\r\n    const { group: name, group_id, group_index } = this.state;\r\n    if(!group_id) {\r\n      this.addGroup(name)\r\n    } else {\r\n      this.updateGroup(name, group_id, group_index)\r\n    }\r\n  };\r\n\r\n  addGroup = name => {\r\n    Modal.confirm({\r\n      title: \"确定添加一个分组吗？\",\r\n      onOk: () => {\r\n        if(name) {\r\n          axios.post(\"/gonghaoTag\", {name})\r\n            .then(res => {\r\n              if(res.data.code === 1 && res.data.exist === 0) {\r\n                const { data, msg } = res.data;\r\n                this.setState(state => {\r\n                  let gonghaoTagList = [...state.gonghaoTagList];\r\n                  gonghaoTagList.push(data);\r\n                  return {gonghaoTagList};\r\n                });\r\n                message.success(msg);\r\n                this.closeEditGroupModal();\r\n              } else if (res.data.code === 1 && res.data.exist === 1) {\r\n                message.warning(\"分组已存在，请更换分组名称\");\r\n              } else {\r\n                message.error(res.data.msg)\r\n              }\r\n            });\r\n        } else {\r\n          message.error(\"分组名称不能为空\")\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  updateGroup = (name, id, index) => {\r\n    Modal.confirm({\r\n      title: \"确定修改分组名称吗？\",\r\n      onOk: () => {\r\n        if(name) {\r\n          axios.put(\"/gonghaoTag\", {name, id})\r\n            .then(res => {\r\n              if(res.data.code === 1) {\r\n                const { data, msg } = res.data;\r\n                this.setState(state => {\r\n                  let gonghaoTagList = state.gonghaoTagList;\r\n                  Object.assign(gonghaoTagList[index], data);\r\n                  return {gonghaoTagList};\r\n                });\r\n                message.success(msg);\r\n                this.closeEditGroupModal();\r\n              }else {\r\n                message.error(res.data.msg)\r\n              }\r\n            });\r\n        } else {\r\n          message.error(\"分组名称不能为空\")\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  deleteGroup = (id, index) => {\r\n    Modal.confirm({\r\n      title: \"确定删除这个分组吗？\",\r\n      onOk: () => {\r\n        axios.delete('/gonghaoTag/' + id)\r\n          .then(res => {\r\n            const {code , msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.getGroupGonghao();\r\n              this.setState(state => {\r\n                let gonghaoTagList = state.gonghaoTagList;\r\n                gonghaoTagList.splice(index, 1);\r\n                return {gonghaoTagList}\r\n              })\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  changeGroupValue = e => {\r\n    let group = e.target.value;\r\n    this.setState({group})\r\n  };\r\n\r\n  searchGroupGonghao = nick_name => {\r\n    if(nick_name) {\r\n      axios.get('/conf/find_one', {params: {nick_name}})\r\n        .then(res => {\r\n          const {data: gonghaoList, code, msg} = res.data;\r\n          if(code === 1) {\r\n            message.success(msg);\r\n            this.setState({gonghaoList})\r\n          } else {\r\n            message.error(\"没有查询到相关数据，请检查输入是否有误\")\r\n          }\r\n        })\r\n    } else {\r\n      message.error(\"公号名称不能为空\")\r\n    }\r\n\r\n  };\r\n\r\n  closeGonghaoModal = () => {\r\n    this.setState({\r\n      gonghaoModal: false,\r\n      gonghao_id: \"\",\r\n      gonghao_index: -1,\r\n      selectGroup: \"\"\r\n    })\r\n  };\r\n\r\n  submitGonghaoModal = () => {\r\n    const { gonghao_id: id, gonghao_index, selectGroup: group, selectedRowKeys: ids } = this.state;\r\n    if(id) {\r\n      this.updateOne(id, gonghao_index, group)\r\n    } else {\r\n      this.updateMore(ids, group)\r\n    }\r\n  };\r\n\r\n  openUpdateMoreModal = () => {\r\n    const {selectedRowKeys} = this.state;\r\n    if(selectedRowKeys.length === 0) {\r\n      message.warning(\"请先选择公号\")\r\n    } else {\r\n      this.setState({\r\n        gonghaoModal: true\r\n      })\r\n    }\r\n  };\r\n\r\n  updateOne = (id, gonghao_index, group) => {\r\n    Modal.confirm({\r\n      title: \"确定修改分组吗？\",\r\n      onOk: () => {\r\n        axios.put('/conf', {id, group})\r\n          .then(res => {\r\n            const { code, msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.setState(state => {\r\n                let gonghaoList = [...state.gonghaoList];\r\n                gonghaoList.splice(gonghao_index, 1);\r\n                return {gonghaoList}\r\n              });\r\n              this.closeGonghaoModal();\r\n            } else {\r\n              message.error(msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  updateMore = (ids, group) => {\r\n    Modal.confirm({\r\n      title: \"确定修改分组1吗？\",\r\n      onOk: () => {\r\n        axios.put('/conf/multi_select', {ids, group})\r\n          .then(res => {\r\n            const { code, msg } = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.getGroupGonghao();\r\n              this.closeGonghaoModal();\r\n              this.setState({selectedRowKeys: []})\r\n            } else {\r\n              message.error(msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  changeSelectGroup = e => {\r\n    let selectGroup = e.target.value;\r\n    this.setState({selectGroup});\r\n  };\r\n\r\n  render() {\r\n    const { gonghaoTagList, gonghaoModal, editGroupModalVisible, gonghaoList, group, selectGroup } = this.state;;\r\n    const addGroupStyle = {\r\n      width: \"90%\",\r\n      margin: \"15px auto 0\",\r\n      padding: \"10px 0\",\r\n      borderRadius: 5,\r\n      border: \"1px dashed #999\"\r\n    };\r\n    const rowSelection = {\r\n      selectedRowKeys: this.state.selectedRowKeys,\r\n      onChange: selectedRowKeys => {\r\n        this.setState({selectedRowKeys})\r\n      }\r\n    };\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Layout>\r\n            <Sider theme=\"light\">\r\n              <List\r\n                header={<div className=\"cursor userSelect\" onClick={() => this.getGroupGonghao(\"未分组\")}>未分组</div>}\r\n                bordered\r\n                dataSource={gonghaoTagList}\r\n                style={{marginRight: 10}}\r\n                renderItem={(item, index) => (\r\n                  <List.Item className=\"userSelect\">\r\n                    <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", width: \"100%\", lineHeight: 1}}>\r\n                      <p className=\"cursor\" onClick={() => this.getGroupGonghao(item.name)}>{item.name}</p>\r\n                      <div>\r\n                        <Icon className=\"cursor\" style={{marginRight: 10}} type=\"form\" onClick={() => this.setState({editGroupModalVisible: true, group_id: item._id, group_index: index})} />\r\n                        <Icon className=\"cursor\" type=\"close-square\" onClick={() => this.deleteGroup(item._id, index)} />\r\n                      </div>\r\n                    </div>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n              <div className=\"tc cursor userSelect\" style={addGroupStyle} onClick={this.openEditGroupModal}>+ 添加分组</div>\r\n            </Sider>\r\n            <Content>\r\n              <Card style={{padding: 20}}>\r\n                <Search placeholder=\"请输入公众号名称\" style={{width: 200, marginBottom: 20, marginTop: -10}} onSearch={this.searchGroupGonghao} />\r\n                <Button type=\"primary\" style={{display: 'block', marginBottom: 20}} onClick={this.openUpdateMoreModal}>批量修改</Button>\r\n                <Table rowSelection={rowSelection} bordered size=\"small\" rowKey={record => record._id} columns={this.columns} dataSource={gonghaoList} />\r\n              </Card>\r\n            </Content>\r\n          </Layout>\r\n        </div>\r\n        <Modal visible={gonghaoModal} onCancel={this.closeGonghaoModal} onOk={this.submitGonghaoModal}>\r\n          <Radio.Group value={selectGroup} onChange={this.changeSelectGroup}>\r\n            <Radio value=\"未分组\">未分组</Radio>\r\n            {gonghaoTagList.map(item => <Radio key={item._id} value={item.name}>{item.name}</Radio>)}\r\n          </Radio.Group>\r\n        </Modal>\r\n        <Modal visible={editGroupModalVisible} title=\"新建分组名称\" onCancel={this.closeEditGroupModal} onOk={this.confirmEditGroup}>\r\n          分组名称：<Input onChange={this.changeGroupValue} value={group} style={{width: 300}} placeholder=\"请输入分组名称\" />\r\n        </Modal>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GonghaoGroup;","import React, { Component } from 'react';\r\nimport { Table, Button } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport backTop from '../../../utils';\r\n\r\nimport {actionCreators} from \"./store\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    const { menuList, deleteMenu } = this.props;\r\n    const menuHeader =  [\r\n      {\r\n        title: \"菜单类型\",\r\n        key: \"individual\",\r\n        dataIndex: \"individual\",\r\n        align: \"center\",\r\n        render: (text, record) => record.individual ? \"个性化菜单\" : \"通用菜单\"\r\n      },\r\n      {\r\n        title: \"菜单性别\",\r\n        key: \"sex\",\r\n        dataIndex: \"sex\",\r\n        align: \"center\",\r\n        render: (text, record) => (record.individual ? (record.sex === '0' ? \"未知\"\r\n          : (record.sex === '1' ? '男' : '女')) : '——')\r\n      },\r\n      {\r\n        key: \"title\",\r\n        dataIndex: \"title\",\r\n        title: \"标题\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        key: \"Action\",\r\n        align: \"center\",\r\n        render: (text, record, index) => (\r\n          <div>\r\n            <Button size=\"small\" type=\"primary\" style={{marginRight: \"10px\"}}>\r\n              <Link to={{pathname: \"/admin/gonghao/menu/update\", query: record}}>编辑</Link>\r\n            </Button>\r\n            <Button size=\"small\" type=\"danger\" onClick={() => deleteMenu(record._id, index)}>删除</Button>\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n    \t<div>\r\n    \t\t<div className=\"container\">\r\n          <Button type=\"primary\" style={{marginBottom: \"20px\"}}>\r\n            <Link to=\"/admin/gonghao/menu/create\">配置新菜单栏</Link>\r\n          </Button>\r\n          <Table size=\"small\" rowKey={record => record._id} columns={menuHeader} dataSource={menuList} pagination={{onChange: () => backTop()}} />\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n  componentDidMount() {\r\n    this.props.getMenuList()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  menuList: state.gonghao.menu.menuList\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getMenuList() {\r\n    dispatch(actionCreators.getMenuList())\r\n  },\r\n  deleteMenu(id, index) {\r\n    dispatch(actionCreators.deleteMenu(id, index))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Menu);","import React from 'react';\r\nimport {Card, List} from 'antd';\r\nimport \"./index.scss\";\r\n\r\nconst GraphicMessage = props => {\r\n  const {messageList, updateMessageItem} = props;\r\n  return (\r\n    <div className=\"graphic-message-list-wrapper\">\r\n      <Card className=\"message-list-card\" title={\r\n        messageList.length > 1 ?\r\n        <List className=\"message-list\">\r\n            <List.Item className=\"cursor\" onClick={() => updateMessageItem(messageList[0], 0)}>\r\n              <div className=\"head-message\">\r\n                <p className=\"ellipse-two\">{messageList[0].title}</p>\r\n                <img src={messageList[0].picurl} alt=\"\"/>\r\n              </div>\r\n          </List.Item>\r\n          {messageList.slice(1).map((message, index) => \r\n            <List.Item className=\"border_btm cursor\" onClick={() => updateMessageItem(message, index + 1)} key={index}>\r\n              <div className=\"rest-message\">\r\n                <p className=\"ellipse-two\">{message.title}</p>\r\n                <img src={message.picurl} alt=\"\"/>\r\n              </div>\r\n            </List.Item>)}\r\n        </List> : <div className=\"cursor\" onClick={() => updateMessageItem(messageList[0], 0)}>\r\n          <div className=\"head-other\">\r\n            <img src={messageList[0].picurl} alt=\"\"/>\r\n            <h3 className=\"title textEllipsis\">{messageList[0].title}</h3>\r\n            <p className=\"ellipse-two\">{messageList[0].description}</p>\r\n          </div>\r\n        </div>}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default GraphicMessage;","import React, {Component, Fragment} from 'react';\r\nimport {Form, Input, Radio, Button, Icon, Upload, Divider} from 'antd';\r\nimport GraphicMessage from '../../../../common/components/GraphicMessage';\r\n\r\nclass MenuReplyMessage extends Component {\r\n  render() {\r\n    const {messageInfo, changeMessageInfo, uploadImg, updateCurrentMessage, deleteCurrentMessage, addToList, updateIndex, updateMessageItem} = this.props;\r\n    let MessageContent;\r\n    if (messageInfo.replyType === 0) {\r\n      MessageContent = <Form.Item className=\"inputtxt\" label=\"文本消息\">\r\n        <Input.TextArea onChange={e => changeMessageInfo(\"content\", e.target.value)} value={messageInfo.content} autoSize={{minRows: 3, maxRows: 6}} placeholder='请输入回复文本消息'/>\r\n      </Form.Item>\r\n    } else {\r\n      let UploadImg;\r\n      if (messageInfo.picurl) {\r\n        UploadImg = <img style={{width: \"100px\"}} src={messageInfo.picurl} alt=\"图片走丢啦~\"/>\r\n      } else {\r\n        UploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n      }\r\n      MessageContent = <Fragment>\r\n        <Form.Item label=\"图文标题\">\r\n          <Input onChange={e => changeMessageInfo(\"title\", e.target.value)} value={messageInfo.title} placeholder='请输入图文标题'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文链接\">\r\n          <Input onChange={e => changeMessageInfo(\"url\", e.target.value)} value={messageInfo.url} placeholder='请输入图文链接，必须以 http 或 https 开头'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文描述\">\r\n          <Input.TextArea onChange={e => changeMessageInfo(\"description\", e.target.value)} value={messageInfo.description} autoSize={{minRows: 3, maxRows: 6}} placeholder='请输入图文描述'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"上传图片\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" showUploadList={false} onChange={uploadImg}>\r\n            {UploadImg}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item label=\" \" colon={false}>\r\n          {updateIndex > -1 ? <div>\r\n            <Button onClick={updateCurrentMessage} type=\"primary\" style={{marginRight: 20}}>保存</Button>\r\n            <Button onClick={deleteCurrentMessage}>删除此条消息</Button>\r\n          </div> : <div><Button onClick={addToList}>添加到图文列表</Button><p className=\"tips\">Tips: 当用户发送文本、图片、视频、图文、地理位置这五种消息时，只能回复1条图文消息；其余场景最多可回复8条图文消息</p></div>}\r\n        </Form.Item>\r\n        <Divider dashed />\r\n        <div style={{width: \"50%\", margin: \"auto\"}}>{messageInfo.articles.length > 0 && <GraphicMessage messageList={messageInfo.articles} updateMessageItem={updateMessageItem} />}</div>\r\n      </Fragment>\r\n    }\r\n    return (\r\n    \t<div>\r\n        <Form.Item wrapperCol={{offset: 2}}>\r\n          <Radio.Group value={messageInfo.replyType} onChange={e => changeMessageInfo(\"replyType\", e.target.value)}>\r\n            <Radio.Button value={0}>文本消息</Radio.Button>\r\n            <Radio.Button value={1}>图文消息</Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        {MessageContent}\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MenuReplyMessage;","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Form, Button, Input, Radio, Transfer, Switch} from \"antd\";\r\nimport * as actionCreators from '../store/actionCreators';\r\nimport './index.scss';\r\nimport MenuReplyMessage from '../components/MenuReplyMessage';\r\nclass EditMenuInfo extends Component {\r\n\r\n    componentDidMount() {\r\n        let query = this.props.history.location.query;\r\n        query && this.props.initMenuInfo(query);\r\n    }\r\n\r\n    render() {\r\n        const {menuInfo, menuForm, sub_button, menuIndex, handleInputChange, handleSubInputChange, addFirstMenu, editMenu, submitMenu, addSecondMenu, editSecMenu, deleteFirMenu, deleteSubMenu, allCodes, targetKeys, changeGonghao, isSubmit, cancelMenu, handleInfoChange, handleIndividualChange, openModal, resetState, messageInfo, changeMessageInfo, uploadImg, addToList, updateMessageItem, updateCurrentMessage, deleteCurrentMessage, updateIndex} = this.props;\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                sm: {span: 4}\r\n            },\r\n            wrapperCol: {\r\n                sm: {span: 16, offset: 0}\r\n            },\r\n            colon: false\r\n        };\r\n        const menuList = menuInfo[\"values\"].map((item, index) => (\r\n            <div className=\"menu\" style={{width: menuInfo[\"values\"].length === 1 ? \"50%\" : menuInfo[\"values\"].length === 2 ? \"33.33%\" : \"33.33%\"}} key={index} onClick={() => editMenu(item, index)}>\r\n                <span className=\"nav-title cursor\">{item.name || \"菜单名称\"}</span>\r\n                <ul className=\"sub-menu-list\" style={{top: (item.sub_button && item.sub_button.length) ? (item.sub_button.length === 5 ?  - 4 * 46 - 55 : - item.sub_button.length * 46 - 55) : -55, display: menuIndex === index ? \"block\" : \"none\"}}>\r\n                    {item.sub_button && item.sub_button.map((i, idx) => (\r\n                        <li className=\"textEllipsis\" key={idx} onClick={e=> editSecMenu(e, i, idx)}>{i.name || \"子菜单名称\"}</li>\r\n                    ))}\r\n                    <li className=\"add\" style={{display: item.sub_button && item.sub_button.length < 5 ? \"blcok\" : \"none\"}} onClick={addSecondMenu}>+</li>\r\n                    <div className=\"sanjiao sanjiao-out\"/>\r\n                    <div className=\"sanjiao sanjiao-in\"/>\r\n                </ul>\r\n            </div>\r\n        ));\r\n        let keyOrUrl, subKeyOrUrl;\r\n        if (sub_button.type === 'view') {\r\n            subKeyOrUrl = <Form.Item label=\"链接\">\r\n                <Input value={sub_button.url} placeholder=\"请输入网页跳转链接，必须以 http 或 https 开头\" onChange={(e) => handleSubInputChange(e, \"url\")}/>\r\n            </Form.Item>\r\n        } else if (sub_button.type === 'click') {\r\n            subKeyOrUrl = <div className=\"content-wrapper\">\r\n                {messageInfo && <MenuReplyMessage messageInfo={messageInfo} changeMessageInfo={changeMessageInfo} uploadImg={uploadImg} addToList={addToList} updateMessageItem={updateMessageItem} updateCurrentMessage={updateCurrentMessage} deleteCurrentMessage={deleteCurrentMessage} updateIndex={updateIndex} />}\r\n            </div>\r\n        }\r\n        if (menuForm.type === 'view') {\r\n            keyOrUrl = <Form.Item label=\"链接\">\r\n                <Input value={menuForm.url} placeholder=\"请输入网页跳转链接，必须以 http 或 https 开头\" onChange={(e) => handleInputChange(e, \"url\")}/>\r\n            </Form.Item>\r\n        } else if (menuForm.type === 'click') {\r\n            keyOrUrl =\r\n                <div className=\"content-wrapper\">\r\n                    <MenuReplyMessage messageInfo={messageInfo} changeMessageInfo={changeMessageInfo} uploadImg={uploadImg} addToList={addToList} updateMessageItem={updateMessageItem} updateCurrentMessage={updateCurrentMessage} deleteCurrentMessage={deleteCurrentMessage} updateIndex={updateIndex} />\r\n                </div>\r\n        }\r\n        let menuInfoForm, submitButton;\r\n        if (menuInfo.values.length !== 0) {\r\n            if (menuForm.sub_button && menuForm.sub_button.length !== 0) {\r\n                menuInfoForm =\r\n                    <div className=\"menu-right fl\">\r\n                        <div className=\"menu-parent\">\r\n                            <div className=\"menu-title\">\r\n                                <h4 className=\"fl\">菜单编辑</h4>\r\n                                <Button className=\"fr\" type=\"link\" onClick={deleteFirMenu}>删除菜单</Button>\r\n                            </div>\r\n                            <Form {...formItemLayout}>\r\n                                <Form.Item label=\"菜单名称\">\r\n                                    <Input value={menuForm.name} placeholder=\"一级菜单名称\" maxLength={8} allowClear\r\n                                           onChange={(e) => handleInputChange(e, \"name\")}/>\r\n                                    <span className=\"menu-name-tips\">Tips: 菜单名称中汉字不可以超过4个，写四个汉字的同时可以添加2个表情</span>\r\n                                </Form.Item>\r\n                            </Form>\r\n                            <div className=\"menu-children\">\r\n                                <div className=\"menu-title\">\r\n                                    <h4 className=\"fl\">子菜单编辑</h4>\r\n                                    <Button className=\"fr\" type=\"link\" onClick={deleteSubMenu}>删除子菜单</Button>\r\n                                </div>\r\n                                <Form {...formItemLayout}>\r\n                                    <Form.Item label=\"子菜单名称\">\r\n                                        <Input value={sub_button.name} placeholder=\"二级菜单名称，仅支持中英文和数字，字数不超过8个\" maxLength={16}\r\n                                               onChange={(e) => handleSubInputChange(e, \"name\")}/>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"子菜单内容\">\r\n                                        <Radio.Group value={sub_button.type} onChange={(e) => handleSubInputChange(e, \"type\")}>\r\n                                            <Radio value=\"view\">跳转网页</Radio>\r\n                                            <Radio value=\"click\">发送消息</Radio>\r\n                                        </Radio.Group>\r\n                                    </Form.Item>\r\n                                    {subKeyOrUrl}\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            } else {\r\n                menuInfoForm =\r\n                    <div className=\"menu-right fl\">\r\n                        <div className=\"menu-parent\">\r\n                            <div className=\"menu-title\">\r\n                                <h4 className=\"fl\">菜单编辑</h4>\r\n                                <Button className=\"fr\" type=\"link\" onClick={deleteFirMenu}>删除菜单</Button>\r\n                            </div>\r\n                            <Form {...formItemLayout}>\r\n                                <Form.Item label=\"菜单名称\">\r\n                                    <Input value={menuForm.name} maxLength={8} allowClear placeholder=\"一级菜单名称\" onChange={(e) => handleInputChange(e, \"name\")}/>\r\n                                    <span className=\"menu-name-tips\">Tips: 菜单名称中汉字不可以超过4个，写四个汉字的同时可以添加2个表情</span>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"菜单内容\">\r\n                                    <Radio.Group value={menuForm.type} onChange={(e) => handleInputChange(e, \"type\")}>\r\n                                        <Radio value=\"view\">跳转网页</Radio>\r\n                                        <Radio value=\"click\">发送消息</Radio>\r\n                                    </Radio.Group>\r\n                                </Form.Item>\r\n                                {keyOrUrl}\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            submitButton = <div className=\"menu-right-btm fl\">\r\n                <Button type=\"primary\" onClick={() => {openModal();this.props.getAllCodes()}\r\n                }>提交</Button>\r\n            </div>\r\n        }\r\n        let menuModal;\r\n        if (isSubmit) {\r\n            let individualSex;\r\n            if (menuInfo.individual) {\r\n                individualSex = <Form.Item label=\"性别\">\r\n                    <Radio.Group value={menuInfo.sex} onChange={e => handleInfoChange(e, \"sex\")}>\r\n                        <Radio value=\"0\">未知</Radio>\r\n                        <Radio value=\"1\">男</Radio>\r\n                        <Radio value=\"2\">女</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n            }\r\n            menuModal = <div className=\"menu-modal-wrapper\">\r\n                <div className=\"menu-modal\">\r\n                    <Transfer\r\n                        dataSource={allCodes}\r\n                        showSearch\r\n                        targetKeys={targetKeys}\r\n                        onChange={changeGonghao}\r\n                        render={item => item.nick_name}\r\n                        rowKey={record => record.code}\r\n                        className=\"menu-transfer fl\"\r\n                    />\r\n                    <Form className=\"fl\" colon={false} labelCol={{sm: {span: 30}}} wrapperCol={{sm: {span: 30, offset: 0}}}\r\n                          labelAlign=\"left\">\r\n                        <Form.Item label=\"标题\">\r\n                            <Input value={menuInfo.title} placeholder=\"请输入标题\" onChange={(e) => handleInfoChange(e, \"title\")}/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"个性化菜单\">\r\n                            <Switch onChange={handleIndividualChange} checked={menuInfo.individual}/>\r\n                        </Form.Item>\r\n                        {individualSex}\r\n                        <Form.Item label=\" \">\r\n                            <Button style={{marginRight: \"10px\"}} type=\"primary\" onClick={() => submitMenu(this.props)}>提交</Button>\r\n                            <Button onClick={cancelMenu}>取消</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        }\r\n        return (\r\n            <div>\r\n                <div className='container edit-menu'>\r\n                    <div className=\"title-wrapper\">\r\n                        <h2>菜单配置</h2>\r\n                        <Button className=\"fr\" onClick={() => resetState(this.props)}>返回上一级</Button>\r\n                    </div>\r\n                    <div className=\"menu-left fl\">\r\n                        <div className=\"menu-wrapper\">\r\n                            <div className=\"menu-cont\">\r\n                                <div className=\"menu-list\">\r\n                                    {menuList}\r\n                                    <div className=\"menu add\"\r\n                                         style={menuList.length === 1 ? {width: \"50%\"} : (menuList.length === 2 ? {width: \"33%\"} : (menuList.length === 3 ? {display: \"none\"} : {width: \"100%\"}))}\r\n                                         onClick={addFirstMenu}>\r\n                                        <span className=\"nav-title cursor\">+ 添加菜单</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {menuInfoForm}\r\n                    {submitButton}\r\n                </div>\r\n                {menuModal}\r\n            </div>\r\n        )\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.unMountState();\r\n        this.props.resetMessageInfo();\r\n    }\r\n\r\n}\r\n\r\nconst mapState = state => ({\r\n    menuInfo: state.gonghao.menu.menuInfo,\r\n    menuForm: state.gonghao.menu.menuForm,\r\n    sub_button: state.gonghao.menu.sub_button,\r\n    menuIndex: state.gonghao.menu.menuIndex,\r\n    allCodes: state.gonghao.menu.allCodes,\r\n    isSubmit: state.gonghao.menu.isSubmit,\r\n    targetKeys: state.gonghao.menu.targetKeys,\r\n    messageInfo: state.gonghao.menu.messageInfo,\r\n    updateIndex: state.gonghao.menu.updateIndex,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n    initMenuInfo(record) {\r\n        dispatch(actionCreators.initMenuInfo(record));\r\n    },\r\n    handleInfoChange(e, name) {\r\n        dispatch(actionCreators.handleInfoChange(e.target.value, name));\r\n    },\r\n    handleIndividualChange(value) {\r\n        dispatch(actionCreators.handleIndividualChange(value));\r\n    },\r\n    handleInputChange(e, name) {\r\n        dispatch(actionCreators.handleInputChange(name, e.target.value))\r\n    },\r\n    handleSubInputChange(e, name) {\r\n        dispatch(actionCreators.handleSubInputChange(name, e.target.value))\r\n    },\r\n    addFirstMenu() {\r\n        dispatch(actionCreators.addFirstMenu())\r\n    },\r\n    editMenu(item, index) {\r\n        dispatch(actionCreators.editMenu(item, index))\r\n    },\r\n    addSecondMenu(e) {\r\n        e.stopPropagation();\r\n        dispatch(actionCreators.addSecondMenu())\r\n    },\r\n    submitMenu(props) {\r\n        dispatch(actionCreators.submitMenu(props))\r\n    },\r\n    openModal() {\r\n        dispatch(actionCreators.openModal())\r\n    },\r\n    editSecMenu(e, data, idx) {\r\n        e.stopPropagation();\r\n        dispatch(actionCreators.editSecMenu(data, idx))\r\n    },\r\n    deleteFirMenu() {\r\n        dispatch(actionCreators.deleteFirMenu())\r\n    },\r\n    deleteSubMenu() {\r\n        dispatch(actionCreators.deleteSubMenu())\r\n    },\r\n    changeGonghao(targetKeys) {\r\n        dispatch(actionCreators.changeGonghao(targetKeys))\r\n    },\r\n    getAllCodes() {\r\n        dispatch(actionCreators.getAllCodes())\r\n    },\r\n    cancelMenu() {\r\n        dispatch(actionCreators.cancelMenu())\r\n    },\r\n    resetState(props) {\r\n        props.history.goBack();\r\n        dispatch(actionCreators.resetState());\r\n    },\r\n    unMountState() {\r\n        dispatch(actionCreators.resetState());\r\n    },\r\n    uploadImg(info) {\r\n        if (info.file.status === 'done') {\r\n            let picurl = `http://t.dmmup.com/uploads/${info.file.response.filename}`;\r\n            dispatch(actionCreators.changeMessageInfo(\"picurl\", picurl))\r\n        }\r\n    },\r\n    changeMessageInfo(key, value) {\r\n        dispatch(actionCreators.changeMessageInfo(key, value))\r\n    },\r\n    addToList() {\r\n        dispatch(actionCreators.addToList())\r\n    },\r\n    updateMessageItem(item, index) {\r\n        dispatch(actionCreators.updateMessageItem(item, index))\r\n    },\r\n    updateCurrentMessage() {\r\n        dispatch(actionCreators.updateCurrentMessage())\r\n    },\r\n    deleteCurrentMessage() {\r\n        dispatch(actionCreators.deleteCurrentMessage())\r\n    },\r\n    resetMessageInfo() {\r\n        dispatch(actionCreators.resetState())\r\n    },\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Form.create({name: 'editMenuInfo'})(EditMenuInfo));","import React, {Component} from 'react';\r\nimport {Button, Table} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport {actionCreators} from './store';\r\nimport './index.scss';\r\n\r\nclass Config extends Component {\r\n\r\n  render() {\r\n    const {replyMessageList, allCodes, deleteReplyMessage} = this.props;\r\n    const configHeader = [\r\n      {\r\n        key: \"replyType\",\r\n        title: \"消息类型\",\r\n        dataIndex: \"replyType\",\r\n        align: \"center\",\r\n        render: text => text === 0 ? \"文本消息\" : \"图文消息\"\r\n      }, {\r\n        key: \"type\",\r\n        title: \"互动类型\",\r\n        dataIndex: \"type\",\r\n        align: \"center\",\r\n        render: text => text === 0 ? \"用户回复\" : (text === 2 ? \"用户关注\" : (text === 4 ? \"默认回复\" : \"~~\"))\r\n      }, {\r\n        key: \"name\",\r\n        dataIndex: \"name\",\r\n        title: \"消息名称\",\r\n        align: \"center\"\r\n      },{\r\n        key: \"sex\",\r\n        title: \"性别\",\r\n        dataIndex: \"sex\",\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return (\r\n            <span>\r\n              {record.sex === 1 ? \"男\" : (record.sex === 2\r\n                ? \"女\" : (record.sex === 0 ? \"未知\" : \"默认\"))}\r\n            </span>\r\n          )\r\n        }\r\n      }, {\r\n        key: \"text\",\r\n        title: \"用户回复文本\",\r\n        dataIndex: \"text\",\r\n        align: \"center\",\r\n        render: text => text ? text : \"——\"\r\n      }, {\r\n        key: \"codes\",\r\n        title: \"公号名称\",\r\n        dataIndex: \"codes\",\r\n        align: \"center\",\r\n        render: text => text.length > 0 ? text.slice(0, 4).map(item => {\r\n          let a = allCodes.filter(i => i.code === item)[0];\r\n          return a && a.nick_name\r\n        }) : \"无\"\r\n      }, {\r\n        key: \"Action\",\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 120,\r\n        render: (text, record, index) => {\r\n          return (\r\n            <div className=\"btn-wrapper\">\r\n              <Button size=\"small\" type=\"primary\">\r\n                <Link to={{pathname: './update', state: {record, index}}}>编辑</Link>\r\n              </Button>\r\n              <Button size=\"small\" style={{background: \"red\", marginLeft: \"5px\"}}\r\n                      onClick={() => deleteReplyMessage(record._id, index)}>删除</Button>\r\n            </div>\r\n          )\r\n        }\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"edit-config\">\r\n          <Button type=\"primary\" className=\"edit-btn\">\r\n            <Link to='./create'>新建回复规则</Link>\r\n          </Button>\r\n          <Table className='config-table' size=\"small\" rowKey={(record => record._id)} columns={configHeader} dataSource={replyMessageList} bordered pagination={false}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getReplyMessageList();\r\n    this.props.getAllCodes();\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  allCodes: state.gonghao.reply.allCodes,\r\n  replyMessageList: state.gonghao.reply.replyMessageList\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  getReplyMessageList() {\r\n    dispatch(actionCreators.getReplyMessageList())\r\n  },\r\n  deleteReplyMessage(id, index) {\r\n    dispatch(actionCreators.deleteReplyMessage(id, index))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Config);","import React, {Component} from 'react';\r\nimport {Avatar, Input, List, Layout, message, Select} from \"antd\";\r\nimport axios from 'axios';\r\nimport \"./index.scss\";\r\n\r\nconst {Sider, Content} = Layout;\r\nconst {Option} = Select;\r\n\r\nclass MultiSelectByGroup extends Component {\r\n\r\n    state = {\r\n        gonghaoTagList: [],\r\n        gonghaoList: [],\r\n        nick_name: \"\",\r\n        group: \"全部\",\r\n        codes: [],\r\n        AllGonghaoList: []\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps (nextProps) {\r\n        this.setState({codes: nextProps.codes})\r\n    }\r\n\r\n    search = nick_name => {\r\n        if (nick_name !== \"\") {\r\n            axios.get(\"/conf/find_one\", {params: {nick_name}})\r\n                .then(res => {\r\n                    if (res.data.data.length !== 0) {\r\n                        const {data: gonghaoList} = res.data;\r\n                        this.setState({gonghaoList})\r\n                    } else {\r\n                        message.info(\"没有查询到包含该字符的公号，请检查后重新输入\")\r\n                    }\r\n                })\r\n        } else {\r\n            let {AllGonghaoList: gonghaoList} = this.state;\r\n            this.setState({gonghaoList})\r\n        }\r\n    };\r\n\r\n    changeSearchInput = e => {\r\n        let nick_name = e.target.value;\r\n        this.setState({nick_name, group: \"全部\"})\r\n    };\r\n\r\n    selectGonghao = gonghao => {\r\n        let {codes} = this.state;\r\n        const {code} = gonghao;\r\n        const keyIndex = codes.indexOf(code);\r\n        if(keyIndex > -1) {\r\n            codes.splice(keyIndex, 1);\r\n        } else {\r\n            codes.push(code);\r\n        }\r\n        this.setState({codes});\r\n        this.props.selectGonghao(codes);\r\n    };\r\n\r\n    handleChangeGroup = group => {\r\n        const {AllGonghaoList: gonghaoList} = this.state;\r\n        this.setState({group, nick_name: \"\", gonghaoList})\r\n    };\r\n\r\n    render() {\r\n        const {gonghaoTagList, gonghaoList, nick_name, group, codes} = this.state;\r\n        return (\r\n            <Layout style={{background: \"#fff\"}} className=\"multi-gonghao-wrapper\">\r\n                <Sider className=\"message-sider-wrapper\" theme=\"light\" width=\"200\">\r\n                    <Select placeholder=\"按分组查询\" value={group} className=\"search-input\" onChange={this.handleChangeGroup}>\r\n                        <Option value=\"全部\">所有公号</Option>\r\n                        {gonghaoTagList.map(item =>\r\n                            <Option key={item._id} value={item.name}>{item.name}</Option>\r\n                        )}\r\n                    </Select>\r\n                    <Input.Search\r\n                        className=\"search-input\"\r\n                        placeholder=\"请输入公号名称\"\r\n                        onSearch={this.search}\r\n                        value={nick_name}\r\n                        allowClear\r\n                        onChange={this.changeSearchInput}\r\n                    />\r\n                    <List className=\"gonghao-list\"\r\n                          dataSource={group !== \"全部\" ? gonghaoList.filter(i => i.group === group) : gonghaoList}\r\n                          locale={{emptyText: <span style={{display: \"none\"}}>123</span>}}\r\n                          renderItem={gonghao =>\r\n                              <List.Item className={codes.indexOf(gonghao.code) > -1 ? \"cursor selected\" : \"cursor\"}\r\n                                         onClick={() => this.selectGonghao(gonghao)} key={gonghao._id}>\r\n                                  <Avatar shape=\"square\" size={22} src={gonghao.head_img} />{gonghao.nick_name}\r\n                              </List.Item>\r\n                          }/>\r\n                </Sider>\r\n                <Content>{this.props.content}</Content>\r\n            </Layout>\r\n        )\r\n    }\r\n\r\n    getGonghaoTagList = () => {\r\n        axios.get(\"/gonghaoTag\")\r\n            .then(res => {\r\n                if (res.data.code === 1) {\r\n                    const {data: gonghaoTagList} = res.data;\r\n                    this.setState({gonghaoTagList})\r\n                }\r\n            })\r\n    };\r\n\r\n    getGonghaoList = () => {\r\n        axios.get('/conf')\r\n            .then(res => {\r\n                const {data, code} = res.data;\r\n                if (code === 1) {\r\n                    this.setState({gonghaoList: data, AllGonghaoList: data})\r\n                }\r\n            })\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getGonghaoTagList();\r\n        this.getGonghaoList();\r\n    }\r\n}\r\n\r\nexport default MultiSelectByGroup;","import React, {Component, Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Form, Button, Input, Upload, Radio, Icon, Row, Col, Divider, Tooltip, Tag, Switch} from \"antd\";\r\nimport * as actionCreators from '../store/actionCreators';\r\nimport \"./index.scss\";\r\nimport GraphicMessage from '../../../../common/components/GraphicMessage';\r\nimport MultiSelectSider from '../../../../common/components/SelectGonghao/MultiSelectSider';\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        sm: {span: 4}\r\n    },\r\n    wrapperCol: {\r\n        sm: {span: 14, offset: 0}\r\n    },\r\n};\r\n\r\nclass EditConfigInfo extends Component {\r\n\r\n    UNSAFE_componentWillMount() {\r\n        const {location: {state}, getAllCodes, initState} = this.props;\r\n        getAllCodes();\r\n        state && initState(state.record, state.index);\r\n    }\r\n\r\n    render() {\r\n        const {allCodes, selectGonghao, deleteGonghao, submitForm, messageInfo, updateMessageItem, addToList, changeMessageInfo, uploadImg, history, updateIndex, updateCurrentMessage, deleteCurrentMessage} = this.props;\r\n        let TextOrKey, MessageContent;\r\n        if (messageInfo.type === 0) {\r\n            TextOrKey = <Form.Item label=\"用户回复内容\">\r\n                <Input onChange={e => changeMessageInfo(\"text\", e.target.value)} value={messageInfo.text}\r\n                       placeholder='请输入用户回复内容'/>\r\n            </Form.Item>\r\n        } else if (messageInfo.type === 1) {\r\n            TextOrKey = <Form.Item label=\"点击关键词\">\r\n                <Input onChange={e => changeMessageInfo(\"key\", e.target.value)} value={messageInfo.key}\r\n                       placeholder='请输入菜单栏点击关键词'/>\r\n            </Form.Item>\r\n        }\r\n\r\n        if (messageInfo.replyType === 0) {\r\n            MessageContent =<Form.Item className=\"inputtxt\" label=\"文本消息\">\r\n                <Input.TextArea onChange={e => changeMessageInfo(\"content\", e.target.value)}\r\n                                value={messageInfo.content} autoSize={{minRows: 3, maxRows: 6}}\r\n                                placeholder='请输入回复文本消息'/>\r\n            </Form.Item>\r\n        } else {\r\n            let UploadImg;\r\n            if (messageInfo.picurl) {\r\n                UploadImg = <img style={{width: \"100px\"}} src={messageInfo.picurl} alt=\"图片走丢啦~\"/>\r\n            } else {\r\n                UploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n            }\r\n            MessageContent = <Fragment>\r\n                <Form.Item label=\"图文标题\">\r\n                    <Input onChange={e => changeMessageInfo(\"title\", e.target.value)} value={messageInfo.title}\r\n                           placeholder='请输入图文标题'/>\r\n                </Form.Item>\r\n                <Form.Item label=\"图文链接\">\r\n                    <Input onChange={e => changeMessageInfo(\"url\", e.target.value)} value={messageInfo.url}\r\n                           placeholder='请输入图文链接'/>\r\n                </Form.Item>\r\n                <Form.Item label=\"图文描述\">\r\n                    <Input.TextArea onChange={e => changeMessageInfo(\"description\", e.target.value)}\r\n                                    value={messageInfo.description} autoSize={{minRows: 3, maxRows: 6}}\r\n                                    placeholder='请输入图文描述'/>\r\n                </Form.Item>\r\n                <Form.Item label=\"上传图片\">\r\n                    <Upload name=\"imageFile\" action=\"/reply/upload\" showUploadList={false} onChange={uploadImg}>\r\n                        {UploadImg}\r\n                    </Upload>\r\n                </Form.Item>\r\n                <Form.Item label=\" \" colon={false}>\r\n                    {updateIndex > -1 ? <div>\r\n                        <Button onClick={updateCurrentMessage} type=\"primary\" style={{marginRight: 20}}>保存</Button>\r\n                        <Button onClick={deleteCurrentMessage}>删除此条消息</Button>\r\n                    </div> : <div><Button onClick={addToList}>添加到图文列表</Button><p className=\"tips\">Tips:\r\n                        当用户发送文本、图片、视频、图文、地理位置这五种消息时，只能回复1条图文消息；其余场景最多可回复8条图文消息</p></div>}\r\n                </Form.Item>\r\n            </Fragment>\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <MultiSelectSider selectGonghao={selectGonghao} codes={messageInfo.codes} content={\r\n                    <Form className=\"reply-form\" labelAlign=\"right\" {...formItemLayout}>\r\n                        <Col span={14}>\r\n                            <Form.Item label=\"选择公号\">\r\n                                <div style={{width: \"180%\"}}>\r\n                                    {allCodes.map(item => messageInfo.codes.indexOf(item.code) > -1 &&\r\n                                        <Tag key={item._id} className=\"cursor gonghao-tag\" closable\r\n                                             onClose={() => deleteGonghao(messageInfo.codes, item.code)}>{item.nick_name}</Tag>)}\r\n                                </div>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"消息名称\">\r\n                                <Input onChange={e => changeMessageInfo(\"name\", e.target.value)}\r\n                                       value={messageInfo.name} placeholder='请输入消息名称,(仅供备注，不会发送给粉丝)'/>\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Divider style={{width: \"110%\", marginLeft: -50}}/>\r\n                        <h2 className=\"block-title\">设置自动回复</h2>\r\n                        <Row>\r\n                            <Col span={14}>\r\n                                <Form.Item wrapperCol={{offset: 1}}>\r\n                                    <Radio.Group value={messageInfo.replyType}\r\n                                                 onChange={e => changeMessageInfo(\"replyType\", e.target.value)}>\r\n                                        <Radio.Button value={0}>文本消息</Radio.Button>\r\n                                        <Radio.Button value={1}>图文消息</Radio.Button>\r\n                                    </Radio.Group>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"用户昵称\">\r\n                                    <Switch checked={messageInfo.is_nickname} onChange={value => changeMessageInfo(\"is_nickname\", value)} />\r\n                                    <span className=\"tips\">\r\n                        {messageInfo.is_nickname && \"Tips: 点击开启用户昵称后，需要手动添加替换文字\"}\r\n                    </span>\r\n                                </Form.Item>\r\n                                {MessageContent}\r\n                            </Col>\r\n                            <Col span={7}>\r\n                                {messageInfo.articles.length > 0 && <GraphicMessage messageList={messageInfo.articles}\r\n                                                                                    updateMessageItem={updateMessageItem}/>}\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider style={{width: \"110%\", marginLeft: -50}}/>\r\n                        <h2 className=\"block-title\">设置模板消息</h2>\r\n                        <Col span={14}>\r\n                            <Form.Item wrapperCol={{offset: 1}}>\r\n                                <Radio.Group value={messageInfo.type}\r\n                                             onChange={e => changeMessageInfo(\"type\", e.target.value)}>\r\n                                    <Radio.Button value={0}>特定回复</Radio.Button>\r\n                                    <Radio.Button value={2}>用户关注</Radio.Button>\r\n                                    <Radio.Button value={4}>默认回复</Radio.Button>\r\n                                </Radio.Group>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"粉丝性别\">\r\n                                <Radio.Group value={messageInfo.sex}\r\n                                             onChange={e => changeMessageInfo(\"sex\", e.target.value)}>\r\n                                    <Radio value={3}>默认</Radio>\r\n                                    <Radio value={1}>男</Radio>\r\n                                    <Radio value={2}>女</Radio>\r\n                                    <Radio value={0}>未知</Radio>\r\n                                </Radio.Group>\r\n                            </Form.Item>\r\n                            <Form.Item label={<span>未知性别<Tooltip title=\"未知属性粉丝按照`男`或`女`发送\"><Icon className=\"cursor\"\r\n                                                                                                 type=\"question-circle\"\r\n                                                                                                 theme=\"filled\"/></Tooltip> </span>}>\r\n                                <Radio.Group value={messageInfo.attribute}\r\n                                             onChange={e => changeMessageInfo(\"attribute\", e.target.value)}>\r\n                                    <Radio value={1}>男</Radio>\r\n                                    <Radio value={2}>女</Radio>\r\n                                </Radio.Group>\r\n                            </Form.Item>\r\n                            {TextOrKey}\r\n                        </Col>\r\n                        <Divider style={{width: \"110%\", marginLeft: -50}}/>\r\n                        <Form.Item wrapperCol={{offset: 1}}>\r\n                            <Button type=\"primary\" style={{marginRight: 20}}\r\n                                    onClick={() => submitForm(messageInfo, this.props)}>提交</Button>\r\n                            <Button onClick={() => history.goBack()}>取消</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                }/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        this.props.resetState()\r\n    }\r\n}\r\n\r\nconst mapState = state => ({\r\n    messageInfo: state.gonghao.reply.messageInfo,\r\n    allCodes: state.gonghao.reply.allCodes,\r\n    selectGonghaoModal: state.gonghao.reply.selectGonghaoModal,\r\n    updateIndex: state.gonghao.reply.updateIndex,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n    getAllCodes() {\r\n        dispatch(actionCreators.getAllCodes())\r\n    },\r\n    selectGonghao(codes) {\r\n        dispatch(actionCreators.selectGonghao(codes))\r\n    },\r\n    deleteGonghao(codes, code) {\r\n        codes.splice(codes.indexOf(code), 1);\r\n        dispatch(actionCreators.selectGonghao(codes))\r\n    },\r\n    changeMessageInfo(key, value) {\r\n        dispatch(actionCreators.changeMessageInfo(key, value))\r\n    },\r\n    uploadImg(info) {\r\n        if (info.file.status === 'done') {\r\n            let picurl = `http://t.dmmup.com/uploads/${info.file.response.filename}`;\r\n            dispatch(actionCreators.changeMessageInfo(\"picurl\", picurl))\r\n        }\r\n    },\r\n    addToList() {\r\n        dispatch(actionCreators.addToList())\r\n    },\r\n    updateMessageItem(item, index) {\r\n        dispatch(actionCreators.updateMessageItem(item, index))\r\n    },\r\n    updateCurrentMessage() {\r\n        dispatch(actionCreators.updateCurrentMessage())\r\n    },\r\n    deleteCurrentMessage() {\r\n        dispatch(actionCreators.deleteCurrentMessage())\r\n    },\r\n    submitForm(messageInfo, props) {\r\n        const {title, picurl, url, description} = messageInfo;\r\n        const {state} = props.location;\r\n        messageInfo.articles.length === 0 && (messageInfo.articles.push({title, picurl, url, description}));\r\n        messageInfo.title = messageInfo.picurl = messageInfo.url = messageInfo.description = \"\";\r\n        if (state) {\r\n            messageInfo._id = state.record._id;\r\n            dispatch(actionCreators.updateConfigForm(messageInfo, props.history))\r\n        } else {\r\n            dispatch(actionCreators.createConfigForm(messageInfo, props.history))\r\n        }\r\n    },\r\n    resetState() {\r\n        dispatch(actionCreators.resetState());\r\n    },\r\n    initState(record, index) {\r\n        dispatch(actionCreators.initState(record, index))\r\n    }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Form.create({name: 'editConfigInfo'})(EditConfigInfo));","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Tuoguan from './tuoguan';\r\nimport GonghaoGroup from './tuoguan/group'\r\n\r\nimport Menu from './menu';\r\nimport editMenu from './menu/edit';\r\n\r\nimport Replay from './reply';\r\nimport editReplay from './reply/edit';\r\n\r\nclass TuoguanWrapper extends Component {\r\n  render() {\r\n    return (\r\n        <Route path=\"/admin/gonghao\" render={() =>\r\n          <Switch>\r\n            {/*接管公号*/}\r\n            <Route path='/admin/gonghao/tuoguan/'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/tuoguan/index\" component={Tuoguan} />\r\n                <Route path=\"/admin/gonghao/tuoguan/group\" component={GonghaoGroup} />\r\n                <Redirect from=\"/admin/gonghao/tuoguan\" exact to='/admin/gonghao/tuoguan/index' />\r\n              </Switch>\r\n            </Route>\r\n            {/*菜单配置*/}\r\n            <Route path='/admin/gonghao/menu/'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/menu/index\" component={Menu} />\r\n                <Route path='/admin/gonghao/menu/create' component={editMenu} />\r\n                <Route path='/admin/gonghao/menu/update' component={editMenu} />\r\n                <Redirect from=\"/admin/gonghao/menu\" exact to='/admin/gonghao/menu/index' />\r\n              </Switch>\r\n            </Route>\r\n            {/*自动回复*/}\r\n            <Route path='/admin/gonghao/reply'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/reply/index\" component={Replay} />\r\n                <Route path='/admin/gonghao/reply/create' component={editReplay} />\r\n                <Route path='/admin/gonghao/reply/update' component={editReplay} />\r\n                <Redirect from=\"/admin/gonghao/reply\" exact to='/admin/gonghao/reply/index' />\r\n              </Switch>\r\n            </Route>\r\n            <Redirect from=\"/admin/gonghao\" exact to='/admin/gonghao/tuoguan' />\r\n          </Switch>\r\n        } />\r\n    )\r\n  }\r\n}\r\n\r\nexport default TuoguanWrapper;","import React from 'react';\r\nimport {Card, List, Icon, Tooltip} from 'antd';\r\nimport \"./index.scss\";\r\nimport moment from 'moment';\r\n\r\nconst GraphicMessage = props => {\r\n  const {messageList, openSyncModal, openModal, openTimingModal, copy, deleteMaterial, openUpdateMaterialModal} = props;\r\n  return (\r\n    <div className=\"message-list-wrapper\">\r\n      <List grid={{gutter: 20, sm: 3, xxl: 6}} dataSource={messageList}\r\n            renderItem={(item, index) => <List.Item key={item._id}>\r\n              <Card className=\"message-list-card\" title={\r\n                <List className=\"message-list\">\r\n                  <div className=\"update-time\">\r\n                    <Icon type=\"info-circle\"/>{item.isTiming ? `于 ${moment(item.timing).format(\"YYYY-MM-DD HH:mm:ss\")} 发送` : \"未设置定时时间，请手动发送\"}</div>\r\n                  <Tooltip title=\"\" key={item.content.news_item[0].thumb_media_id + \"0\"}>\r\n                    <List.Item className=\"cursor\" onClick={() => openUpdateMaterialModal(item.media_id, 0, item.content.news_item[0], item._id)}>\r\n                      <div className=\"head-message\">\r\n                        <p className=\"ellipse-two\">{item.content.news_item[0].title}</p>\r\n                        <img src={item.content.news_item[0].local_img_path} alt=\"请先在微信后台上传图片\"/>\r\n                      </div>\r\n                    </List.Item>\r\n                  </Tooltip>\r\n                  {item.content.news_item.slice(1).map((message, i) => <Tooltip title=\"点击修改原文链接\" key={message.thumb_media_id + i + 1} placement=\"rightTop\">\r\n                    <List.Item className=\"border_btm cursor\" onClick={() => openUpdateMaterialModal(item.media_id, i + 1, item.content.news_item[i + 1], item._id)}>\r\n                      <div className=\"rest-message\">\r\n                        <p className=\"ellipse-two\">{message.title}</p>\r\n                        <img src={message.local_img_path} alt=\"miss\"/>\r\n                      </div>\r\n                    </List.Item>\r\n                  </Tooltip>)}\r\n                </List>}\r\n                    actions={[\r\n                      <Tooltip title=\"同步\"><Icon onClick={() => openSyncModal(item)} type=\"cloud-upload\"\r\n                                                key=\"sync\"/></Tooltip>,\r\n                      <Tooltip title=\"发送\"><Icon onClick={() => openModal(item)} type=\"message\" key=\"send\"/></Tooltip>,\r\n                      <Tooltip title=\"定时发送\"><Icon onClick={() => openTimingModal(item)} type=\"history\" key=\"timing\"/></Tooltip>,\r\n                      <Tooltip title=\"复制\"><Icon onClick={() => copy(item._id)} type=\"fork\" key=\"copy\"/></Tooltip>,\r\n                      <Tooltip title=\"删除\"><Icon onClick={() => deleteMaterial(item._id, index)} type=\"delete\"\r\n                                                key=\"del\"/></Tooltip>,\r\n                    ]}\r\n              />\r\n            </List.Item>}/>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default GraphicMessage;","import React, {PureComponent} from 'react';\r\nimport {ConfigProvider, message, Modal, Radio, Switch, DatePicker, TimePicker, Checkbox, Row, Col, Input} from \"antd\";\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/zh-cn';\r\nimport {connect} from \"react-redux\";\r\nimport { actionCreators } from '../store';\r\nimport GraphicMessage from '../components/GraphicMessage';\r\n\r\nimport axios from 'axios';\r\n\r\nclass groupMessage extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      syncModal: false,\r\n      checkedList: [],\r\n      indeterminate: false,\r\n      checkAll: false,\r\n      messageInfo: {},\r\n      code: props.code,\r\n      gonghaoList: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { code } = this.state;\r\n    this.props.getMessageList(code);\r\n    this.props.getTagList(code);\r\n    this.props.getGroupGonghao();\r\n    this.getGonghaoList();\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\r\n    if(this.props.code !== nextProps.code) {\r\n      const { code } = nextProps;\r\n      this.props.getMessageList(code);\r\n    }\r\n  }\r\n\r\n  getGonghaoList = () => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        const { data, code } = res.data;\r\n        if (code === 1) {\r\n          this.setState({gonghaoList: data})\r\n        }\r\n      })\r\n  };\r\n\r\n  render() {\r\n    const { messageList, openModal, sendModal, sendMessage, sendInfo, tagList, closeModal, changeTagId, sendTimingModal, sendTimingMessage, sendTimingInfo, openTimingModal, changeTimingState, copy, changeTime, deleteMaterial, isComplete, openUpdateMaterialModal, closeUpdateMaterialModal, updateMaterialModal, updateMaterial, updateInfo, changeContentSourceUrl }  = this.props;\r\n    const { code, gonghaoList } = this.state;\r\n    let selectGonghaoList = gonghaoList.filter(item => item.code !== code);\r\n    return (\r\n      <ConfigProvider locale={zhCN}>\r\n        <div className=\"container\" style={{padding: 0}}>\r\n          <GraphicMessage messageList={messageList} openSyncModal={message => this.setState({syncModal: true, messageInfo: message})} openModal={openModal} openTimingModal={openTimingModal} copy={copy} deleteMaterial={deleteMaterial} isComplete={isComplete} openUpdateMaterialModal={openUpdateMaterialModal} />\r\n        </div>\r\n        <Modal\r\n          title=\"请选择要发送的标签\"\r\n          visible={sendModal}\r\n          onOk={() => sendMessage(sendInfo)}\r\n          onCancel={closeModal}\r\n        >\r\n          <Radio.Group value={sendInfo.tagId} onChange={e => changeTagId(e, false)}>\r\n            <Radio value={-1}>全部</Radio>\r\n            {tagList.map(item => (\r\n                <Radio key={item._id} value={item.id}>{item.name}</Radio>\r\n            ))}\r\n          </Radio.Group>\r\n        </Modal>\r\n        <Modal\r\n          title=\"创建定时发送任务？\"\r\n          visible={sendTimingModal}\r\n          onOk={() => sendTimingMessage(sendTimingInfo, code)}\r\n          onCancel={closeModal}\r\n        >\r\n          <label htmlFor=\"tagId\">\r\n            标签：\r\n            <Radio.Group id=\"tagId\" value={sendTimingInfo.tagId} onChange={e => changeTagId(e, true)}>\r\n              <Radio value={-1}>全部</Radio>\r\n              {tagList.map(item => (\r\n                  <Radio key={item._id} value={item.id}>{item.name}</Radio>\r\n              ))}\r\n            </Radio.Group>\r\n          </label>\r\n          <label style={{display: \"block\", margin: \"20px 0\"}} htmlFor=\"isTiming\">\r\n            是否定时：\r\n            <Switch checked={sendTimingInfo.isTiming} onChange={changeTimingState} />\r\n          </label>\r\n          <label htmlFor=\"timing\" style={{display: sendTimingInfo.isTiming ? \"block\" : \"none\"}}>\r\n            时间选择：\r\n            <DatePicker\r\n              value={moment(new Date(sendTimingInfo.timing), 'YYYY-MM-DD')}\r\n              onChange={(time, timeString) => changeTime(timeString, \"date\")}\r\n            />\r\n            <TimePicker\r\n              value={moment(new Date(sendTimingInfo.timing), 'HH-MM-SS')}\r\n              onChange={(time, timeString) => changeTime(timeString, \"time\")}\r\n            />\r\n          </label>\r\n        </Modal>\r\n        <Modal width={640} title=\"请选择需要同步素材的公号：\" visible={this.state.syncModal} onOk={this.syncMaterial} onCancel={this.closeSyncModal}>\r\n          <div style={{ borderBottom: '1px solid #E9E9E9', paddingBottom: 10, marginBottom: 10 }}>\r\n            <Checkbox\r\n              indeterminate={this.state.indeterminate}\r\n              onChange={this.onCheckAllChange}\r\n              checked={this.state.checkAll}\r\n            >全选</Checkbox>\r\n          </div>\r\n          <Checkbox.Group style={{width: \"100%\"}} onChange={this.onChange} value={this.state.checkedList}>\r\n            <Row>\r\n              {selectGonghaoList.map(item => <Col span={6} key={item._id}>\r\n                <Checkbox value={item.code}>{item.nick_name}</Checkbox>\r\n              </Col>)}\r\n            </Row>\r\n          </Checkbox.Group>\r\n        </Modal>\r\n        <Modal visible={updateMaterialModal} onCancel={closeUpdateMaterialModal} onOk={() => updateMaterial(updateInfo, code)} title=\"修改原文链接\">\r\n          <Input value={updateInfo.articles.content_source_url} placeholder=\"请输入新的原文链接\" onChange={changeContentSourceUrl} />\r\n        </Modal>\r\n      </ConfigProvider>\r\n    )\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n\r\n  syncMaterial = () => {\r\n    const { messageInfo, checkedList: codes } = this.state;\r\n    Modal.confirm({\r\n      title: \"确定同步这条素材吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/material/syncMaterial\", {codes, docs: [messageInfo]})\r\n          .then(res => {\r\n            const {code, msg } = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.closeSyncModal();\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  closeSyncModal = () => {\r\n    this.setState({\r\n      syncModal: false,\r\n      checkedList: [],\r\n      indeterminate: false,\r\n      checkAll: false,\r\n      messageInfo: {}\r\n    })\r\n  };\r\n\r\n  onCheckAllChange = e => {\r\n    const { code, gonghaoList } = this.state;\r\n    const plainOptions = gonghaoList.filter(item => item.code !== code);\r\n    const codes = plainOptions.map(item => item.code);\r\n    this.setState({\r\n      checkedList: e.target.checked ? codes : [],\r\n      indeterminate: false,\r\n      checkAll: e.target.checked,\r\n    });\r\n  };\r\n\r\n  onChange = checkedList => {\r\n    const { code, gonghaoList } = this.state;\r\n    const plainOptions = gonghaoList.filter(item => item.code !== code);\r\n    const codes = plainOptions.map(item => item.code);\r\n    this.setState({\r\n      checkedList,\r\n      indeterminate: !!checkedList.length && checkedList.length < codes.length,\r\n      checkAll: checkedList.length === codes.length,\r\n    });\r\n  };\r\n}\r\n\r\n\r\nconst mapState = state => ({\r\n  tagList: state.message.group.tagList,\r\n  messageList: state.message.group.messageList,\r\n  sendInfo: state.message.group.sendInfo,\r\n  sendTimingInfo: state.message.group.sendTimingInfo,\r\n  sendModal: state.message.group.sendModal,\r\n  sendTimingModal: state.message.group.sendTimingModal,\r\n  gonghaoList: state.message.group.gonghaoList,\r\n  isComplete: state.message.group.isComplete,\r\n  updateMaterialModal: state.message.group.updateMaterialModal,\r\n  updateInfo: state.message.group.updateInfo,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getTagList(code) {\r\n    dispatch(actionCreators.getTagList(code))\r\n  },\r\n  getMessageList(code) {\r\n    dispatch(actionCreators.getMessageList(code))\r\n  },\r\n  openModal(record) {\r\n    dispatch(actionCreators.openModal(record));\r\n  },\r\n  sendMessage(sendInfo) {\r\n    dispatch(actionCreators.sendMessage(sendInfo));\r\n  },\r\n  changeTagId(e, isTiming) {\r\n    dispatch(actionCreators.changeTagId(e.target.value, isTiming));\r\n  },\r\n  openTimingModal(record) {\r\n    dispatch(actionCreators.openTimingModal(record));\r\n  },\r\n  closeModal() {\r\n    dispatch(actionCreators.closeModal());\r\n  },\r\n  sendTimingMessage(sendTimingInfo, code) {\r\n    dispatch(actionCreators.sendTimingMessage(sendTimingInfo, code));\r\n  },\r\n  changeTimingState(value) {\r\n    dispatch(actionCreators.changeTimingState(value));\r\n  },\r\n  changeTime(time, type) {\r\n    dispatch(actionCreators.changeTime(time, type));\r\n  },\r\n  copy(id) {\r\n    dispatch(actionCreators.copy(id));\r\n  },\r\n  deleteMaterial(id, index) {\r\n    dispatch(actionCreators.deleteMaterial(id, index));\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState());\r\n  },\r\n  getGroupGonghao() {\r\n    dispatch(actionCreators.getGroupGonghao());\r\n  },\r\n  openUpdateMaterialModal(media_id, index, articles, id) {\r\n    dispatch(actionCreators.openUpdateMaterialModal({media_id, index, articles, id}));\r\n  },\r\n  closeUpdateMaterialModal() {\r\n    dispatch(actionCreators.closeUpdateMaterialModal());\r\n  },\r\n  updateMaterial(updateInfo, code) {\r\n    dispatch(actionCreators.updateMaterial(updateInfo, code));\r\n  },\r\n  changeContentSourceUrl(e) {\r\n    let content_source_url = e.target.value;\r\n    dispatch(actionCreators.changeContentSourceUrl(content_source_url));\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(groupMessage);","import React, { Component } from 'react';\r\nimport {Modal, Form, Input, Radio, Switch, DatePicker, Button, message} from \"antd\";\r\nimport axios from 'axios';\r\n\r\nimport moment from 'moment';\r\n\r\nclass EditTextMaterialModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props.initMaterial)\r\n    this.openOpenidModal = this.openOpenidModal.bind(this);\r\n    this.prevTextMaterial = this.prevTextMaterial.bind(this);\r\n    this.cancelPrev = this.cancelPrev.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n\r\n  state = {\r\n    openidModalVisible: false,\r\n    tagList: []\r\n  };\r\n\r\n  openOpenidModal() {\r\n    this.setState({openidModalVisible: true})\r\n  }\r\n\r\n  prevTextMaterial() {\r\n    const { form: {getFieldsValue}, code } = this.props;\r\n    let {openid, content} = getFieldsValue();\r\n    axios.post(\"/textMaterial/preview\", {code, openid, content})\r\n      .then(res => {\r\n        const {code, msg} = res.data;\r\n        code === 1 && message.success(msg)\r\n      });\r\n    this.cancelPrev()\r\n  }\r\n\r\n  cancelPrev() {\r\n    const { form: {setFieldsValue} } = this.props;\r\n    setFieldsValue({openid: \"\"});\r\n    this.setState({openidModalVisible: false})\r\n  }\r\n\r\n  submitForm() {\r\n    const { form: {getFieldsValue} } = this.props;\r\n    this.props.submitTextMaterial(getFieldsValue())\r\n  }\r\n\r\n  closeModal() {\r\n    const { form: {resetFields} } = this.props;\r\n    resetFields();\r\n    this.props.cancelEditMaterial()\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { code } = this.props;\r\n    axios.get(\"/material/tag\", {params: {code}})\r\n      .then(res => {\r\n        this.setState({tagList: res.data.data});\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { form: {getFieldDecorator, getFieldValue}, editMaterialModalVisible, initMaterial = {} } = this.props;\r\n    const { openidModalVisible, tagList } = this.state;\r\n    return (\r\n      <Modal\r\n        visible={editMaterialModalVisible}\r\n        title=\"编辑文本素材\"\r\n        footer={\r\n          <div>\r\n            <Button onClick={this.openOpenidModal}>发送预览</Button>\r\n            <Button onClick={this.submitForm}>提交</Button>\r\n          </div>\r\n        }\r\n        onCancel={this.closeModal}\r\n      >\r\n        <Form labelCol={{span: 4}} wrapperCol={{span: 20, offset: 0}}>\r\n          <Form.Item label=\"文本素材\">\r\n            {getFieldDecorator('content', {\r\n              initialValue: initMaterial.content || \"\",\r\n              rules: [{ required: true, message: 'Please input your content!' }]\r\n            })(<Input.TextArea rows={4} placeholder=\"请输入文本素材内容\" />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"粉丝属性\">\r\n            {getFieldDecorator('tagId', {\r\n              initialValue: initMaterial.tagId || null,\r\n              rules: [{required: true}]\r\n            })(<Radio.Group>\r\n              <Radio value={-1}>全部用户</Radio>\r\n              {tagList.map(item =>\r\n                <Radio key={item._id} value={item.id}>{item.name}</Radio>\r\n              )}\r\n            </Radio.Group>)}\r\n          </Form.Item>\r\n          <Form.Item label=\"是否定时\">\r\n            {getFieldDecorator('is_timing', {\r\n              valuePropName: 'checked',\r\n              initialValue: initMaterial.is_timing || false,\r\n            })(<Switch />)}\r\n          </Form.Item>\r\n          {getFieldValue(\"is_timing\") ? <Form.Item label=\"发送时间\">\r\n            {getFieldDecorator('timing_time', {initialValue: initMaterial.is_timing ? moment(initMaterial.timing_time) : null})(<DatePicker showTime={{format: \"HH:mm\"}} format=\"YYYY-MM-DD HH:mm\" placeholder=\"请选择定时发送时间\" />)}\r\n          </Form.Item> : \"\"}\r\n        </Form>\r\n        <Modal visible={openidModalVisible} title=\"发送预览消息\" onOk={this.prevTextMaterial} onCancel={this.cancelPrev}>\r\n          {getFieldDecorator('openid', {\r\n            rules: [{ required: true, message: 'Please input your openid!' }],\r\n            initialValue: \"\"\r\n          })(<Input placeholder=\"请输入openid\" />)}\r\n        </Modal>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(EditTextMaterialModal);","import React, {Component} from 'react';\r\nimport {ConfigProvider, List, Card, Icon, Button, Modal, message} from \"antd\";\r\n\r\nimport axios from '../../../../utils/http';\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/zh-cn';\r\n\r\nimport EditTextMaterialModal from '../components/EditTextMaterialModal';\r\n\r\nimport \"./index.scss\";\r\n\r\nclass TextMaterial extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.openEditMaterialModal = this.openEditMaterialModal.bind(this);\r\n    this.submitTextMaterial = this.submitTextMaterial.bind(this);\r\n    this.cancelEditMaterial = this.cancelEditMaterial.bind(this);\r\n    this.updateTextMaterial = this.updateTextMaterial.bind(this);\r\n  }\r\n\r\n  state = {\r\n    editMaterialModalVisible: false,\r\n    textMaterialList: [],\r\n    initMaterial: {},\r\n    index: -1\r\n  };\r\n\r\n  openEditMaterialModal() {\r\n    this.setState({editMaterialModalVisible: true})\r\n  }\r\n\r\n  submitTextMaterial(textMaterial) {\r\n    const {initMaterial: {_id = \"\"}, index, textMaterialList} = this.state;\r\n    textMaterial.timing_time = +textMaterial.timing_time;\r\n    textMaterial.code = this.props.code;\r\n    textMaterial.tagId = parseInt(textMaterial.tagId);\r\n    _id && (textMaterial._id = _id);\r\n    Modal.confirm({\r\n      title: \"确定提交这条文本素材吗？\",\r\n      onOk: () => {\r\n        if (!_id) {\r\n          axios.post('/textMaterial', {...textMaterial})\r\n            .then(res => {\r\n              const {code, msg, data} = res.data;\r\n              if (code === 1) {\r\n                this.setState(prevState => ({textMaterialList: [data, ...prevState.textMaterialList]}));\r\n                message.success(msg);\r\n                this.cancelEditMaterial();\r\n              } else {\r\n                message.warning(msg);\r\n              }\r\n            })\r\n        } else {\r\n          axios.put('/textMaterial', {...textMaterial})\r\n            .then(res => {\r\n              const {code, msg, data} = res.data;\r\n              if (code === 1) {\r\n                textMaterialList.splice(index, 1, data);\r\n                this.setState({textMaterialList});\r\n                message.success(msg);\r\n                this.cancelEditMaterial();\r\n              } else {\r\n                message.warning(msg);\r\n              }\r\n            })\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  cancelEditMaterial() {\r\n    this.setState({editMaterialModalVisible: false, initMaterial: {}})\r\n  }\r\n\r\n  updateTextMaterial(item, index) {\r\n    this.openEditMaterialModal();\r\n    this.setState({\r\n      initMaterial: {...item}, index\r\n    })\r\n  }\r\n\r\n  sendMaterial(item, index) {\r\n    let {textMaterialList} = this.state;\r\n    Modal.confirm({\r\n      title: \"是否发送这条素材\",\r\n      onOk: () => {\r\n        axios.post(\"/textMaterial/send\", {...item})\r\n          .then(res => {\r\n            const {code, msg} = res.data;\r\n            if (code === 1) {\r\n              message.success(msg);\r\n              Object.assign(textMaterialList[index], {isSend: 1});\r\n              this.setState({textMaterialList})\r\n            } else {\r\n              message.warning(msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteMaterial(_id, index) {\r\n    Modal.confirm({\r\n      title: \"是否删除这条素材？\",\r\n      onOk: () => {\r\n        axios.delete(\"/textMaterial\", {params: {_id}})\r\n          .then(res => {\r\n            const {code, msg} = res.data;\r\n            if (code === 1) {\r\n              message.success(msg);\r\n              this.setState(prevState => {\r\n                let textMaterialList = prevState.textMaterialList;\r\n                textMaterialList.splice(index, 1);\r\n                return {textMaterialList}\r\n              })\r\n            } else {\r\n              message.warning(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/textMaterial\", {params: {code: this.props.code}})\r\n      .then(res => {\r\n        const {code, data} = res.data;\r\n        code === 1 && this.setState({textMaterialList: data.reverse()})\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const {editMaterialModalVisible, textMaterialList, initMaterial} = this.state;\r\n    const {code} = this.props;\r\n    let innerWidth = window.innerWidth > 1440;\r\n    const pagination = {\r\n      pageSize: innerWidth ? 18 : 9\r\n    };\r\n    return (\r\n      <ConfigProvider locale={zhCN}>\r\n        <div className=\"text-material\">\r\n          <Button className=\"mb15\" onClick={this.openEditMaterialModal}>创建文本素材</Button>\r\n          <List grid={{gutter: 16, xl: 3, xxl: 6,}}\r\n                dataSource={textMaterialList}\r\n                renderItem={(item, index) => (\r\n                  <List.Item key={item._id}>\r\n                    <Card title={item.is_timing ?\r\n                      <p>于 <span className=\"date\">{moment(item.timing_time).format(\"YYYY-MM-DD HH:mm\")}</span> 发送\r\n                      </p> : \"未设置定时时间\"} actions={item.isSend ? [<span className=\"see-msg-id\"\r\n                        onClick={() => Modal.warning({\r\n                          title: \"msg_id\",\r\n                          content: <p style={{userSelect: \"text\"}}>{item.msg_id}</p>\r\n                        })}><Icon type=\"eye\" key=\"eye\"/><span>查看msg_id</span></span>] : [\r\n                      <Icon type=\"setting\" key=\"setting\" onClick={() => this.updateTextMaterial(item, index)}/>,\r\n                      <Icon disabled={true} type=\"share-alt\" key=\"edit\"\r\n                            onClick={() => item.is_timing ? message.warning(\"已设置为定时发送，如有需要，请点击修改\") : this.sendMaterial(item, index)}/>,\r\n                      <Icon type=\"delete\" key=\"delete\" onClick={() => this.deleteMaterial(item._id, index)}/>\r\n                    ]}>\r\n                      <p className=\"card-content1\">{item.content}</p>\r\n                    </Card>\r\n                  </List.Item>\r\n                )}\r\n                pagination={pagination}\r\n          />\r\n          {editMaterialModalVisible &&\r\n          <EditTextMaterialModal initMaterial={initMaterial} editMaterialModalVisible={editMaterialModalVisible}\r\n                                 cancelEditMaterial={this.cancelEditMaterial} code={code}\r\n                                 submitTextMaterial={this.submitTextMaterial}/>}\r\n        </div>\r\n      </ConfigProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TextMaterial;","import React, {Component} from 'react';\r\nimport {Avatar, Input, List, Layout, Collapse, message} from \"antd\";\r\nimport axios from 'axios';\r\nimport \"./index.scss\";\r\n\r\nconst {Sider, Content} = Layout;\r\nconst {Panel} = Collapse;\r\n\r\nclass SingleSelectByGroup extends Component {\r\n\r\n  state = {\r\n    gonghaoTagList: [],\r\n    gonghaoList: [],\r\n    nick_name: \"\",\r\n    _id: \"\",\r\n    activeKey: \"\"\r\n  };\r\n\r\n  search = nick_name => {\r\n    const {gonghaoTagList} = this.state;\r\n    if (nick_name !== \"\") {\r\n      axios.get(\"/conf/find_one\", {params: {nick_name}})\r\n        .then(res => {\r\n          if (res.data.data.length !== 0) {\r\n            const {data} = res.data;\r\n            this.props.setCode(data[0].code);\r\n            let selectGonghao = gonghaoTagList.filter(item => data[0].group === item.name);\r\n            this.setState({nick_name: \"\", _id: data[0]._id, activeKey: selectGonghao[0].name})\r\n          } else {\r\n            message.info(\"没有查询到包含该字符的公号，请检查后重新输入\")\r\n          }\r\n        })\r\n    } else {\r\n      message.info(\"公号名不能为空\")\r\n    }\r\n  };\r\n\r\n  changeSearchInput = e => {\r\n    let nick_name = e.target.value;\r\n    this.setState({nick_name})\r\n  };\r\n\r\n  selectGonghao = gonghao => {\r\n    const {code, _id} = gonghao;\r\n    this.props.setCode(code);\r\n    this.setState({_id})\r\n  };\r\n\r\n  handleChangeGroup = value => {\r\n    this.setState({activeKey: value || \"\"})\r\n  };\r\n\r\n  render() {\r\n    const {gonghaoTagList, gonghaoList, nick_name, _id, activeKey} = this.state;\r\n    const PanelList = name => (\r\n      <List className=\"gonghao-list\" dataSource={gonghaoList.length > 0 ? gonghaoList.filter(i => i.group === name) : null} locale={{emptyText: <span style={{display: \"none\"}}>123</span>}}\r\n        renderItem={gonghao =>\r\n          <List.Item className={gonghao._id === _id ? \"cursor selected\" : \"cursor\"} onClick={() => this.selectGonghao(gonghao)} key={gonghao._id}>\r\n            <Avatar shape=\"square\" size={22} icon=\"user\"/>{gonghao.nick_name}\r\n        </List.Item>\r\n      }/>\r\n    );\r\n    return (\r\n      <Layout style={{background: \"#fff\"}} className=\"message-group-wrapper\">\r\n        <Sider className=\"message-sider-wrapper\" theme=\"light\" width=\"180\">\r\n          <Input.Search\r\n            className=\"search-input\"\r\n            placeholder=\"请输入公号名称\"\r\n            onSearch={this.search}\r\n            value={nick_name}\r\n            onChange={this.changeSearchInput}\r\n          />\r\n          <List>\r\n            <List.Item>\r\n              <Collapse bordered={false} accordion activeKey={activeKey} onChange={this.handleChangeGroup}>\r\n                <Panel header=\"未分组\" key=\"未分组\">\r\n                  {PanelList(\"未分组\")}\r\n                </Panel>\r\n                {gonghaoTagList.map(item =>\r\n                  <Panel header={item.name} key={item.name}>\r\n                    {PanelList(item.name)}\r\n                  </Panel>\r\n                )}\r\n              </Collapse>\r\n            </List.Item>\r\n          </List>\r\n        </Sider>\r\n        <Content>{this.props.content}</Content>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  getGonghaoTagList = () => {\r\n    axios.get(\"/gonghaoTag\")\r\n      .then(res => {\r\n        if (res.data.code === 1) {\r\n          const {data: gonghaoTagList} = res.data;\r\n          this.setState({gonghaoTagList})\r\n        }\r\n      })\r\n  };\r\n\r\n  getGonghaoList = () => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        const {data, code} = res.data;\r\n        if (code === 1) {\r\n          this.setState({gonghaoList: data})\r\n        }\r\n      })\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGonghaoTagList();\r\n    this.getGonghaoList();\r\n  }\r\n}\r\n\r\nexport default SingleSelectByGroup;","import React, { Component } from 'react';\r\nimport {Modal, Table, Tooltip, Input} from 'antd';\r\nimport moment from 'moment';\r\nimport {connect} from \"react-redux\";\r\nimport { actionCreators } from '../store';\r\nimport Button from '../../../../common/components/Button';\r\n\r\n\r\nclass History extends Component {\r\n\r\n  componentWillMount() {\r\n    const { code } = this.props;\r\n    this.props.getTagList(code);\r\n    this.props.getHistoryList(code);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\r\n    if(this.props.code !== nextProps.code) {\r\n      const { code } = nextProps;\r\n      this.props.getTagList(code);\r\n      this.props.getHistoryList(code);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { historyList, tagList, checkSendState, openMsgModal, closeMsgModal, deleteMsg, changeArticleIdx, delMsgInfo, historyMsgModal, code } = this.props;\r\n    const historyHeader = [\r\n      {\r\n        key: \"update_time\",\r\n        title: \"发送消息时间\",\r\n        align: \"center\",\r\n        width: 120,\r\n        render: (text, record) => {\r\n          let time = moment(record.update_time * 1000).format(\"YYYY-MM-DD, HH:mm:ss\");\r\n          return (\r\n            <span>{time}</span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: \"发送对象\",\r\n        align: \"center\",\r\n        render: (text, record) => {\r\n          let tag = \"无\";\r\n          if(record.tagId) {\r\n            tag = tagList.map(item => record.tagId === item.id ? item.name : \"全部\");\r\n          }\r\n          return {tag}\r\n        }\r\n      },\r\n      {\r\n        title: \"是否成功\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record) => {\r\n          let msg_id = record.msg_id;\r\n          let success;\r\n          if(msg_id === \"\") {\r\n            success = \"无msg_id,发送不成功\"\r\n          } else {\r\n            success = \"msg_id存在,发送成功\"\r\n          }\r\n          return <span>{success}</span>\r\n        }\r\n      },\r\n      {\r\n        title: \"图文标题\",\r\n        align: \"center\",\r\n        width: 300,\r\n        render: (text, record) => {\r\n          let arr =\r\n            record.content.news_item.length !== 0\r\n              ? record.content.news_item\r\n              : [];\r\n          let titles = [];\r\n          for (let i = 0; i < arr.length; i++) {\r\n            titles.push(i + 1 + \".\" + arr[i].title);\r\n          }\r\n          return (\r\n            <Tooltip placement=\"top\" title={titles}>\r\n              <p className=\"textEllipsis\" style={{width: 300}}>{titles}</p>\r\n            </Tooltip>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"isTiming\",\r\n        title: \"是否定时\",\r\n        align: \"center\",\r\n        render: (text, record) => {\r\n          let time = record.isTiming ? \"是\" : \"否\";\r\n          return (\r\n            <span>{time}</span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"timing\",\r\n        title: \"定时时间\",\r\n        align: \"center\",\r\n        render: (text, record) => {\r\n          let time = \"~~\";\r\n          if (record.timing) {\r\n            time = moment(record.timing).format(\"YYYY-MM-DD, HH:mm:ss\")\r\n          }\r\n          return (\r\n            <span>{time}</span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: (text, record) => (\r\n          <div>\r\n            <Button mb={10} onClick={() => checkSendState(code, record.msg_id)} buttonContent=\"发送状态\" />\r\n            <Button background=\"danger\" onClick={() => openMsgModal(record.code, record.msg_id)} buttonContent=\"删除消息\" />\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          {/*<Button size=\"default\" background=\"warning\" onClick={() => clearHistory(code)} buttonContent=\"清空列表\" />*/}\r\n            {/*<div className=\"fr\">*/}\r\n              {/*<DatePicker value={delDate ? moment(delDate): null} onChange={changeDate} />*/}\r\n              {/*<Button background=\"danger\" size=\"default\" ml={10} onClick={() => deleteMany(code, delDate)} buttonContent=\"批量删除\" />*/}\r\n            {/*</div>*/}\r\n          <Table size=\"small\" bordered rowKey={record => record._id} columns={historyHeader} dataSource={historyList} />\r\n        </div>\r\n        <Modal\r\n          title=\"请输入要删除的消息的索引\"\r\n          visible={historyMsgModal}\r\n          onOk={() => deleteMsg(delMsgInfo)}\r\n          onCancel={closeMsgModal}\r\n        >\r\n          <Input style={{width: 100}} value={delMsgInfo.article_idx} onChange={changeArticleIdx} />\r\n          <p style={{color: \"red\", marginTop: 10}}>Tips:   0为全部删除  1、2、3...为对应第几条</p>\r\n        </Modal>\r\n    \t</div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nconst mapState = state => ({\r\n  tagList: state.message.group.tagList,\r\n  historyList: state.message.group.historyList,\r\n  historyMsgModal: state.message.group.historyMsgModal,\r\n  delMsgInfo: state.message.group.delMsgInfo,\r\n  delDate: state.message.group.delDate\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getHistoryList(code) {\r\n    dispatch(actionCreators.getHistoryList(code))\r\n  },\r\n  getTagList(code) {\r\n    dispatch(actionCreators.getTagList(code))\r\n  },\r\n  checkSendState(code, msg_id) {\r\n    dispatch(actionCreators.checkSendState(code, msg_id))\r\n  },\r\n  openMsgModal(code, msg_id) {\r\n    dispatch(actionCreators.openMsgModal(code, msg_id))\r\n  },\r\n  closeMsgModal() {\r\n    dispatch(actionCreators.closeMsgModal())\r\n  },\r\n  deleteMsg(delMsgInfo) {\r\n    dispatch(actionCreators.deleteMsg(delMsgInfo))\r\n  },\r\n  changeArticleIdx(e) {\r\n    dispatch(actionCreators.changeArticleIdx(e.target.value))\r\n  },\r\n  clearHistory(code) {\r\n    dispatch(actionCreators.clearHistory(code))\r\n  },\r\n  changeDate(date, dataString) {\r\n    dispatch(actionCreators.changeDate(dataString))\r\n  },\r\n  deleteMany(code, delDate) {\r\n    let time = new Date(delDate).getTime()/1000;\r\n    dispatch(actionCreators.deleteMany(code, time))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(History);\r\n","import React from 'react';\r\nimport {Spin} from 'antd';\r\n\r\nconst loadingWrapper = {\r\n  width: \"100%\",\r\n  textAlign: \"center\",\r\n  background: \"rgba(241, 244, 245, .7)\",\r\n  position: \"absolute\",\r\n  padding: \"200px 0\",\r\n  top: 0,\r\n  left: 0,\r\n  zIndex: 1,\r\n};\r\n\r\nconst Loading = props => <div style={loadingWrapper}><Spin spinning={props.spinning}/></div>\r\n\r\nexport default Loading;","import React, {Component} from 'react';\r\nimport {Empty, Modal, message, Tabs} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {actionCreators} from \"./store\";\r\nimport './index.scss';\r\nimport GroupMaterial from './material';\r\nimport TextMaterial from './textMaterial';\r\nimport SingleSelectByGroup from \"../../../common/components/SelectGonghao/SingleSelectByGroup\";\r\nimport Button from '../../../common/components/Button';\r\nimport History from './history';\r\nimport Loading from '../../../common/components/Loading';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass groupMessage extends Component {\r\n\r\n  state = {\r\n    code: null,\r\n    historyModalVisible: false,\r\n    spinning: true\r\n  };\r\n\r\n  timer = () => setTimeout(() => {\r\n    this.setState({spinning: false})\r\n  }, 1000);\r\n\r\n  setCode = code => {\r\n    clearTimeout(this.timer);\r\n    this.setState({spinning: true});\r\n    this.setState({code});\r\n    this.timer();\r\n  };\r\n\r\n  componentDidMount() {\r\n    message.warning(\"请选择公号进行操作\")\r\n  }\r\n\r\n  render() {\r\n    const {getMaterial, clearMaterial} = this.props;\r\n    const {code, historyModalVisible, spinning} = this.state;\r\n    const imageStyle = {\r\n      height: \"auto\",\r\n      margin: \"0 auto\"\r\n    };\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <SingleSelectByGroup setCode={this.setCode} content={\r\n            code\r\n              ? spinning\r\n                ? <div>\r\n                    <Loading spinning={spinning}/><Empty description=\"\" image=\"https://s.weituibao.com/static/1544235586856/empty.png\" imageStyle={imageStyle}/>\r\n                  </div>\r\n                : <div>\r\n                <Tabs tabPosition=\"left\">\r\n                  <TabPane tab=\"图文\" key=\"1\">\r\n                    <Button size=\"default\" background=\"success\" buttonContent=\"同步素材\" onClick={() => getMaterial(code)}/>\r\n                    <Button size=\"default\" buttonContent=\"群发记录\" onClick={() => this.setState({historyModalVisible: true})}/>\r\n                    <Button size=\"default\" mb={20} background=\"danger\" onClick={() => clearMaterial(code)} buttonContent=\"清空列表\"/>\r\n                    <GroupMaterial code={code}/>\r\n                  </TabPane>\r\n                  <TabPane tab=\"文本\" key=\"2\">\r\n                    <TextMaterial code={code} />\r\n                  </TabPane>\r\n                </Tabs>\r\n                  </div>\r\n              : <Empty description=\"\" image=\"https://s.weituibao.com/static/1544235586856/empty.png\" imageStyle={imageStyle}/>}/>\r\n        </div>\r\n        {code && <Modal title=\"发送记录\" visible={historyModalVisible} width={1200} footer=\"\" onCancel={() => this.setState({historyModalVisible: false})}><History code={code}/></Modal>}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getMaterial(code) {\r\n    dispatch(actionCreators.getMaterial(code))\r\n  },\r\n  clearMaterial(code) {\r\n    dispatch(actionCreators.clearMaterial(code));\r\n  },\r\n});\r\n\r\nexport default connect(null, mapDispatch)(groupMessage);","import React, { Component } from 'react';\r\nimport { Table, Select, Modal, Radio } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionCreators } from './store';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '../../../common/components/Button';\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\n\r\nclass Kefu extends Component {\r\n\r\n  state = {\r\n    messageType: \"请选择消息类型\"\r\n  };\r\n\r\n  UNSAFE_componentWillMount () {\r\n    this.props.getKefuMessageList();\r\n    this.props.getAllGroup();\r\n    this.props.getAllCodes();\r\n    this.props.changePage(this.props.currentPage);\r\n  }\r\n\r\n  render() {\r\n    const { allCodes, kefuMessageList, copyMessage, deleteMessage, sendKefuMessage, messageType, handleChangeSelect, allGroup, messageGroup, selectedMessages, changeSelectedMessages, updateMoreGroup, updateGroupModal, openUpdateGroupModal, changeGroup, cancelUpdateGroup, group, changePage, currentPage, searchName, changeSearchName, searchInputChange, clearCondition, deleteMultiMsg }  = this.props;\r\n    const kefuMessageHeader = [\r\n      {\r\n        key: \"remarks\",\r\n        title: \"消息名称\",\r\n        dataIndex: \"remarks\",\r\n        align: \"center\",\r\n        render: text => !text ? \"请点击修改，编辑消息名称\" : text\r\n      },\r\n      {\r\n        key: \"group\",\r\n        title: \"分组\",\r\n        dataIndex: \"group\",\r\n        align: \"center\",\r\n        width: 80\r\n      },\r\n      {\r\n        key: \"delay\",\r\n        title: \"延时时间\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: (text, record) => record.task ? (record.isHour ? record.delay / 60 + \"小时\" : record.delay + \"分钟\") : \"——\"\r\n      },\r\n      {\r\n        key: \"timing_time\",\r\n        title: \"定时时间\",\r\n        align: \"center\",\r\n        sorter: (a, b) => (new Date(a.timing_time)).getTime() - (new Date(b.timing_time)).getTime(),\r\n        render: (text, record) => record.is_timing ? moment(record.timing_time).format(\"YYYY-MM-DD HH:mm:ss\") : \"——\",\r\n      },\r\n      {\r\n        key: \"daily_time_show\",\r\n        dataIndex: \"daily_time_show\",\r\n        title: \"按时发送\",\r\n        align: \"center\",\r\n        sorter: (a, b) => b.daily_time_show - a.daily_time_show,\r\n        render: (text, record) => record.is_daily ? moment(text).format(\"HH:mm:ss\") : \"——\",\r\n      },\r\n      {\r\n        key: \"gonghaoList\",\r\n        dataIndex: \"gonghaoList\",\r\n        title: \"已选公号 (最多显示4个)\",\r\n        align: \"center\",\r\n        width: 120,\r\n        render: text => text.slice(0, 4).map(item => <p key={item._id}>{item.nick_name}</p>)\r\n      },\r\n      {\r\n        key: \"sex\",\r\n        title: \"群发粉丝\",\r\n        align: \"center\",\r\n        dataIndex: \"sex\",\r\n        width: 80,\r\n        render: text => text === \"0\" ? \"未知粉丝\" : text === \"1\"  ? \"男性粉丝\" : text === \"2\" ? \"女性粉丝\" : \"全部粉丝\"\r\n      },\r\n      {\r\n        key: \"action_type\",\r\n        title: \"互动行为\",\r\n        align: \"center\",\r\n        dataIndex: \"action_type\",\r\n        width: 80,\r\n        render: (text, record) => record.task ? (text === 1 ? \"用户关注\" : \"用户互动\") : \"~~\"\r\n      },\r\n      {\r\n        key: \"count\",\r\n        title: \"触达用户\",\r\n        align: \"center\",\r\n        dataIndex: \"count\",\r\n        width: 80,\r\n        render: (text, record) => record.task ? \"暂不支持\" : (text ? text : 0)\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 280,\r\n        render: (text, record, index) => (\r\n          <div>\r\n            <Button background=\"success\" onClick={() => copyMessage({...record})} buttonContent=\"复制\" />\r\n            <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />\r\n            <Button disabled={record.is_timing || record.delay || record.is_daily} background={(record.is_timing || record.delay || record.is_daily) ? \"info\" : \"warning\"} onClick={() => sendKefuMessage(record._id, record.tagId)} buttonContent=\"发送消息\" />\r\n            <Button background=\"danger\" onClick={() => deleteMessage(record._id, index)} buttonContent=\"删除\" />\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n    const rowSelection = {\r\n      selectedRowKeys: selectedMessages,\r\n      onChange: changeSelectedMessages\r\n    };\r\n    const pagination = {\r\n      showQuickJumper: true,\r\n      hideOnSinglePage: true,\r\n      onChange: changePage,\r\n      current: currentPage\r\n    };\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Select\r\n              showSearch\r\n              allowClear\r\n              value={searchName}\r\n              onChange={changeSearchName}\r\n              onSearch={searchInputChange}\r\n              style={{ width: 200, marginRight: 5 }}\r\n              placeholder=\"请输入公号名称\"\r\n          >\r\n            {allCodes.map(item => (\r\n                <Option key={item._id} value={item.nick_name}>{item.nick_name}</Option>\r\n            ))}\r\n          </Select>\r\n          <Select value={messageType} onChange={value => handleChangeSelect(value, \"messageType\")} style={{marginRight: 5}}>\r\n            <Option value={4}>全部</Option>\r\n            <Option value={0}>手动</Option>\r\n            <Option value={1}>延时</Option>\r\n            <Option value={2}>定时</Option>\r\n            <Option value={3}>按时</Option>\r\n          </Select>\r\n          <Select style={{width: 100}} value={messageGroup} onChange={value => handleChangeSelect(value, \"messageGroup\")}>\r\n            <Option value=\"全部分组\">全部分组</Option>\r\n            <Option value=\"未分组\">未分组</Option>\r\n            {allGroup.map(item => <Option key={item._id} value={item.group}>{item.group}</Option>)}\r\n          </Select>\r\n          <Button size=\"default\" background=\"warning\" buttonContent=\"清空所有条件\" ml={5} onClick={clearCondition} />\r\n          <Button size=\"default\" ml={5} background=\"success\" buttonContent=\"批量修改分组\" onClick={openUpdateGroupModal} />\r\n          <Button size=\"default\" ml={5} background=\"danger\" buttonContent=\"批量删除\" onClick={() => deleteMultiMsg(selectedMessages)} />\r\n          <Button size=\"default\" mb={20} buttonContent={<Link to=\"./create\">新建客服消息</Link>} />\r\n          <Table size=\"middle\" rowKey={record => record._id} columns={kefuMessageHeader} dataSource={kefuMessageList} rowSelection={rowSelection} pagination={pagination} />\r\n        </div>\r\n        <Modal title=\"请选择分组\" visible={updateGroupModal} onCancel={cancelUpdateGroup} onOk={() => updateMoreGroup(selectedMessages, group)}>\r\n          <Radio.Group onChange={changeGroup} value={group}>\r\n            {allGroup.map(item => <Radio key={item._id} value={item.group}>{item.group}</Radio>)}\r\n          </Radio.Group>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  allCodes: state.message.kefu.allCodes,\r\n  kefuMessageList: state.message.kefu.kefuMessageList,\r\n  messageType: state.message.kefu.messageType,\r\n  allGroup: state.message.kefu.allGroup,\r\n  messageGroup: state.message.kefu.messageGroup,\r\n  selectedMessages: state.message.kefu.selectedMessages,\r\n  updateGroupModal: state.message.kefu.updateGroupModal,\r\n  group: state.message.kefu.group,\r\n  currentPage: state.message.kefu.currentPage,\r\n  searchName: state.message.kefu.searchName\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  getKefuMessageList() {\r\n    dispatch(actionCreators.getKefuMessageList())\r\n  },\r\n  getAllGroup() {\r\n    dispatch(actionCreators.getAllGroup())\r\n  },\r\n  copyMessage(record) {\r\n    dispatch(actionCreators.createKefuMessage(record))\r\n  },\r\n  deleteMessage(id, index) {\r\n    dispatch(actionCreators.deleteMessage(id, index))\r\n  },\r\n  sendKefuMessage(id, tagId) {\r\n    dispatch(actionCreators.sendKefuMessage(id, tagId))\r\n  },\r\n  handleChangeSelect(value, name) {\r\n    dispatch(actionCreators.handleChangeSelect(value, name))\r\n  },\r\n  changeSelectedMessages(selectedMessages) {\r\n    dispatch(actionCreators.changeSelectedMessages(selectedMessages))\r\n  },\r\n  updateMoreGroup(selectedMessages, group) {\r\n    dispatch(actionCreators.updateMoreGroup(selectedMessages, group))\r\n  },\r\n  openUpdateGroupModal() {\r\n    dispatch(actionCreators.openUpdateGroupModal())\r\n  },\r\n  changeGroup(e) {\r\n    dispatch(actionCreators.changeGroup(e.target.value))\r\n  },\r\n  cancelUpdateGroup() {\r\n    dispatch(actionCreators.cancelUpdateGroup())\r\n  },\r\n  changePage(page) {\r\n    dispatch(actionCreators.changePage(page))\r\n  },\r\n  changeSearchName(value) {\r\n    dispatch(actionCreators.changeSearchName(value))\r\n  },\r\n  searchInputChange(value) {\r\n    dispatch(actionCreators.searchInputChange(value))\r\n  },\r\n  clearCondition() {\r\n    dispatch(actionCreators.clearCondition())\r\n  },\r\n  deleteMultiMsg(selectedMessages) {\r\n    dispatch(actionCreators.deleteMultiMsg(selectedMessages))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Kefu);","import React, {Component} from 'react';\r\nimport {\r\n  ConfigProvider,\r\n  Icon,\r\n  Form,\r\n  Button,\r\n  Radio,\r\n  DatePicker,\r\n  Input,\r\n  Upload,\r\n  InputNumber,\r\n  Divider,\r\n  Modal,\r\n  Select,\r\n  Tag,\r\n  TimePicker\r\n} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {actionCreators} from '../store';\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/zh-cn';\r\nimport \"./index.scss\";\r\nimport MultiSelectByGroup from '../../../../common/components/SelectGonghao/MultiSelectSider';\r\n\r\nconst {Option} = Select;\r\n\r\nclass EditMessage extends Component {\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.props.getAllCodes();\r\n    this.props.getAllGroup();\r\n    let query = this.props.history.location.query;\r\n    query && this.props.initKefuMessageInfo(query);\r\n  }\r\n\r\n  render() {\r\n    const {kefuMessageInfo, content, changeContentValue, changeMessageValue, uploadImg, submitMessage, allCodes, selectGonghao, deleteGonghao, history, openPreviewModal, closePreviewModal, openid, changeOpenId, previewModal, preview, allGroup, groupInputVisible, groupValue, showGroupInput, handleGroupInputChange, handleGroupInputConfirm, handleClose, cancelSelectGroup} = this.props;\r\n    let isUploadImg, isTextUploadImg, FormItemWrapper;\r\n    if (content.picurl) {\r\n      isTextUploadImg = <img style={{width: \"100px\"}} src={content.picurl} alt=\"\"/>\r\n    } else {\r\n      isTextUploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n    }\r\n    if (kefuMessageInfo.img) {\r\n      isUploadImg = <img style={{width: \"100px\"}} src={kefuMessageInfo.img} alt=\"\"/>\r\n    } else {\r\n      isUploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n    }\r\n    if (kefuMessageInfo.type === 1) {\r\n      FormItemWrapper = <Form.Item label=\"文本消息\" className=\"text-message\">\r\n        <Input.TextArea autoSize={{minRows: 6}} value={content.description} placeholder=\"请输入文本消息\"\r\n                        onChange={e => changeContentValue(e, \"description\")}/>\r\n      </Form.Item>\r\n    } else if (kefuMessageInfo.type === 0) {\r\n      FormItemWrapper = <div>\r\n        <Form.Item label=\"图片封面\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" onChange={(info) => {\r\n            uploadImg(kefuMessageInfo, info)\r\n          }} showUploadList={false}>\r\n            {isTextUploadImg}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文标题\">\r\n          <Input placeholder=\"请输入图文标题\" value={content.title} onChange={e => changeContentValue(e, \"title\")}/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文描述\" className=\"text-message\">\r\n          <Input.TextArea autoSize={{minRows: 6}} value={content.description} placeholder=\"请输入图文描述\"\r\n                          onChange={e => changeContentValue(e, \"description\")}/>\r\n        </Form.Item>\r\n        <Form.Item label=\"跳转链接\">\r\n          <Input placeholder=\"请输入跳转链接\" value={content.url} onChange={e => changeContentValue(e, \"url\")}/>\r\n        </Form.Item>\r\n      </div>\r\n    } else if (kefuMessageInfo.type === 2) {\r\n      FormItemWrapper =\r\n        <Form.Item label=\"图片消息\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" onChange={(info) => {\r\n            uploadImg(kefuMessageInfo, info)\r\n          }} showUploadList={false}>\r\n            {isUploadImg}\r\n          </Upload>\r\n        </Form.Item>;\r\n    }\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: {span: 4}\r\n      },\r\n      wrapperCol: {\r\n        sm: {span: 20, offset: 0}\r\n      },\r\n    };\r\n    let Channel;\r\n    if (kefuMessageInfo.channel === 1) {\r\n      Channel = <><Form.Item label=\"延时时间\">\r\n        <InputNumber value={kefuMessageInfo.delay} min={1} onChange={value => changeMessageValue(value, \"delay\")}/>\r\n        <Select value={kefuMessageInfo.isHour} onChange={value => changeMessageValue(value, \"isHour\")}\r\n                style={{width: 80}}>\r\n          <Option value={0}>分钟</Option>\r\n          <Option value={1}>小时</Option>\r\n        </Select>\r\n      </Form.Item>\r\n        <Form.Item label=\"互动类型\">\r\n          <Radio.Group value={kefuMessageInfo.action_type}\r\n                       onChange={e => changeMessageValue(e.target.value, \"action_type\")}>\r\n            <Radio value={1}>用户关注</Radio>\r\n            <Radio value={2}>用户互动</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n      </>\r\n    } else if (kefuMessageInfo.channel === 2) {\r\n      Channel =\r\n        <Form.Item label=\"定时时间\">\r\n          <DatePicker showTime placeholder=\"选择时间\" value={moment(kefuMessageInfo.timing_time)}\r\n                      onChange={(value, dateString) => changeMessageValue(dateString, 'timing_time')}/>\r\n        </Form.Item>\r\n    } else if (kefuMessageInfo.channel === 3) {\r\n      Channel =\r\n        <Form.Item label=\"选择时间\">\r\n          <TimePicker placeholder=\"选择时间\" value={moment(kefuMessageInfo.daily_time_show)}\r\n                      onChange={(value, dateString) => changeMessageValue(value, 'daily_time_show')}/>\r\n        </Form.Item>\r\n    }\r\n    return (\r\n      <ConfigProvider locale={zhCN}>\r\n\r\n        <div className=\"container\">\r\n          <MultiSelectByGroup selectGonghao={selectGonghao}  codes={kefuMessageInfo.codes} content={<div className=\"container edit-message\">\r\n            <div className=\"kefu-form fl\">\r\n              <Form {...formItemLayout}>\r\n                <Form.Item label=\"公号列表\">\r\n                  <div style={{width: \"180%\"}}>\r\n                   {allCodes.map(item => kefuMessageInfo.codes.indexOf(item.code) > -1 && <Tag key={item._id} className=\"cursor gonghao-tag\" closable onClose={() => deleteGonghao(kefuMessageInfo.codes, item.code)}>{item.nick_name}</Tag>)}\r\n                  </div>\r\n                </Form.Item>\r\n                <Form.Item label=\"消息名称\">\r\n                  <Input value={kefuMessageInfo.remarks} placeholder=\"请输入消息名称,(仅供备注，不会发送给粉丝)\"\r\n                         onChange={e => changeMessageValue(e.target.value, \"remarks\")}/>\r\n                </Form.Item>\r\n                <Form.Item label=\"消息分组\">\r\n                  <Tag color={kefuMessageInfo.group !== \"未分组\" ? \"#1890ff\" : \"\"} closable={kefuMessageInfo.group !== \"未分组\"}\r\n                       onClose={cancelSelectGroup}\r\n                       style={kefuMessageInfo.group !== \"未分组\" ? {} : {background: '#fff', borderStyle: 'dashed'}}>\r\n                    {kefuMessageInfo.group}\r\n                  </Tag>\r\n                </Form.Item>\r\n                <Form.Item label=\"全部分组\">\r\n                  {groupInputVisible && (\r\n                      <Input\r\n                          ref={input => this.input = input}\r\n                          type=\"text\"\r\n                          size=\"small\"\r\n                          style={{width: 78, marginRight: 10}}\r\n                          value={groupValue}\r\n                          onChange={handleGroupInputChange}\r\n                          onBlur={handleGroupInputConfirm}\r\n                          onPressEnter={handleGroupInputConfirm}\r\n                      />\r\n                  )}\r\n                  {!groupInputVisible && (\r\n                      <Tag className=\"cursor\" onClick={() => showGroupInput(this)}\r\n                           style={{background: '#fff', borderStyle: 'dashed'}}>\r\n                        <Icon type=\"plus\"/> New Tag\r\n                      </Tag>\r\n                  )}\r\n                  {allGroup.map((item, index) => <Tag color=\"#1890ff\" key={item._id} className=\"cursor\" closable onClose={e => handleClose(e, item._id, index)} onClick={e => changeMessageValue(item.group, \"group\")}>\r\n                    {item.group}\r\n                  </Tag>)}\r\n                </Form.Item>\r\n                <Divider style={{width: \"205%\", marginLeft: -50}}/>\r\n                <h2 className=\"block-title\">设置客服消息</h2>\r\n                <Form.Item>\r\n                  <Radio.Group buttonStyle=\"solid\" value={kefuMessageInfo.type} onChange={e => changeMessageValue(e.target.value, \"type\")}>\r\n                    <Radio.Button value={0}>图文消息</Radio.Button>\r\n                    <Radio.Button value={1}>文本消息</Radio.Button>\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n                {FormItemWrapper}\r\n                <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n                <h2 className=\"block-title\">选择群发对象</h2>\r\n                <Form.Item label=\"群发粉丝\">\r\n                  <Radio.Group value={kefuMessageInfo.sex} onChange={e => changeMessageValue(e.target.value, \"sex\")}>\r\n                    <Radio value=\"all\">全部粉丝</Radio>\r\n                    <br/>\r\n                    <Radio value=\"1\">仅男性粉丝</Radio>\r\n                    <Radio value=\"2\">仅女性粉丝</Radio>\r\n                    <Radio value=\"0\">仅未知粉丝</Radio>\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n                <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n                <h2 className=\"block-title\">设置群发方式</h2>\r\n                <Form.Item label=\"发送方式\">\r\n                  <Radio.Group value={kefuMessageInfo.channel}\r\n                               onChange={e => changeMessageValue(e.target.value, \"channel\")}>\r\n                    <Radio.Button value={0}>人工</Radio.Button>\r\n                    <Radio.Button value={1}>延时</Radio.Button>\r\n                    <Radio.Button value={2}>定时</Radio.Button>\r\n                    <Radio.Button value={3}>按时发送</Radio.Button>\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n                {Channel}\r\n                <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n                <Form.Item>\r\n                  <Button size=\"large\" type=\"primary\"\r\n                          onClick={() => submitMessage(kefuMessageInfo, history, allCodes)}>确定{!kefuMessageInfo._id ? \"并创建消息\" : \"并保存消息\"}</Button>\r\n                  {kefuMessageInfo._id && <Button style={{marginLeft: 20}} type=\"info\" size=\"large\"\r\n                                                  onClick={() => history.goBack()}>取消编辑</Button>}\r\n                  <Button size=\"large\" style={{marginLeft: 30, background: \"yellowgreen\", borderColor: \"yellowgreen\"}}\r\n                          type=\"primary\" onClick={openPreviewModal}>发送预览</Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </div>}/>\r\n        </div>\r\n        <Modal title=\"发送预览\" visible={previewModal} onCancel={closePreviewModal}\r\n               onOk={() => preview(kefuMessageInfo, openid)}>\r\n          <Input onChange={changeOpenId} value={openid} placeholder=\"请输入预览用户的openid\"/>\r\n          <span className=\"tips\">Tips: 在预览公号回复<span> openid </span>,将返回的内容复制到输入框中<br/>一个openid只对应一个公号</span>\r\n        </Modal>\r\n      </ConfigProvider>\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  kefuMessageInfo: state.message.kefu.kefuMessageInfo,\r\n  content: state.message.kefu.content,\r\n  allCodes: state.message.kefu.allCodes,\r\n  previewModal: state.message.kefu.previewModal,\r\n  openid: state.message.kefu.openid,\r\n  allGroup: state.message.kefu.allGroup,\r\n  groupInputVisible: state.message.kefu.groupInputVisible,\r\n  groupValue: state.message.kefu.groupValue,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  initKefuMessageInfo(query) {\r\n    dispatch(actionCreators.initKefuMessageInfo(query));\r\n  },\r\n  changeContentValue(e, name) {\r\n    dispatch(actionCreators.changeContentValue(e.target.value, name));\r\n  },\r\n  uploadImg(kefuMessageInfo, info) {\r\n    if (info.file.status === 'done') {\r\n      let img = `http://t.dmmup.com/uploads/${info.file.response.filename}`,\r\n        img_path = `./public/uploads/${info.file.response.filename}`;\r\n      if (kefuMessageInfo.type === 0) {\r\n        dispatch(actionCreators.changeContentValue(img, \"picurl\"));\r\n      } else {\r\n        dispatch(actionCreators.changeMessageValue(img, \"img\"));\r\n        dispatch(actionCreators.changeMessageValue(img_path, \"img_path\"));\r\n      }\r\n    }\r\n  },\r\n  changeMessageValue(value, name) {\r\n    dispatch(actionCreators.changeMessageValue(value, name));\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState());\r\n  },\r\n  selectParams() {\r\n    dispatch(actionCreators.selectParams());\r\n  },\r\n  submitMessage(info, history, allCodes) {\r\n    dispatch(actionCreators.submitMessage(info, history, allCodes));\r\n  },\r\n  selectGonghao(codes) {\r\n    dispatch(actionCreators.selectGonghao(codes))\r\n  },\r\n  deleteGonghao(codes, code) {\r\n    codes.splice(codes.indexOf(code), 1);\r\n    dispatch(actionCreators.selectGonghao(codes))\r\n  },\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  changeOpenId(e) {\r\n    dispatch(actionCreators.changeOpenId(e.target.value))\r\n  },\r\n  openPreviewModal() {\r\n    dispatch(actionCreators.openPreviewModal())\r\n  },\r\n  closePreviewModal() {\r\n    dispatch(actionCreators.closePreviewModal())\r\n  },\r\n  preview(info, openid) {\r\n    dispatch(actionCreators.preview(info, openid))\r\n  },\r\n  getAllGroup() {\r\n    dispatch(actionCreators.getAllGroup())\r\n  },\r\n  showGroupInput(that) {\r\n    dispatch(actionCreators.showGroupInput(that))\r\n  },\r\n  handleGroupInputChange(e) {\r\n    dispatch(actionCreators.handleGroupInputChange(e.target.value))\r\n  },\r\n  handleGroupInputConfirm(e) {\r\n    dispatch(actionCreators.handleGroupInputConfirm(e.target.value))\r\n  },\r\n  handleClose(e, _id, index) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    dispatch(actionCreators.handleClose(_id, index))\r\n  },\r\n  cancelSelectGroup(e) {\r\n    e.preventDefault();\r\n    dispatch(actionCreators.cancelSelectGroup())\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(EditMessage);","import React, {Component} from 'react';\r\nimport {Input, Table} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../../common/components/Button';\r\nimport {actionCreators} from './store';\r\nimport moment from 'moment';\r\n\r\nconst {Search} = Input;\r\n\r\nclass Template extends Component {\r\n  render() {\r\n    const {confName, templateMessageList, deleteTemplate, sendTemplate, changeConfNickName, searchConfName} = this.props;\r\n    const templateColumns = [\r\n      {\r\n        key: \"confName\",\r\n        dataIndex: \"confName\",\r\n        title: \"公众号\",\r\n        align: \"center\"\r\n      }, {\r\n        key: \"name\",\r\n        dataIndex: \"name\",\r\n        title: \"消息名称\",\r\n        align: \"center\"\r\n      }, {\r\n        key: \"sex\",\r\n        dataIndex: \"sex\",\r\n        title: \"消息名称\",\r\n        align: \"center\",\r\n        render: text => text === \"all\" ? \"全部\" : (text === \"1\" ? \"男\" : (text === \"2\" ? \"女\" : \"未知\"))\r\n      }, {\r\n        key: \"templateName\",\r\n        dataIndex: \"templateName\",\r\n        title: \"模板名称\",\r\n        align: \"center\"\r\n      }, {\r\n        key: \"timing_time\",\r\n        dataIndex: \"timing_time\",\r\n        title: \"定时\",\r\n        align: \"center\",\r\n        render: (text, record) => record.is_timing ? moment(text).format(\"YYYY-MM-DD HH:mm:ss\") : \"~~\"\r\n      }, {\r\n        key: \"status\",\r\n        dataIndex: \"status\",\r\n        title: \"发送状态\",\r\n        align: \"center\",\r\n        width: 80,\r\n        render: text => text === 0 ? \"未发送\" : (text === 1 ? \"正在发送\" : (text === 2 ? \"发送次数超出限制\" : \"发送完成\"))\r\n      }, {\r\n        key: \"count\",\r\n        dataIndex: \"count\",\r\n        title: \"已接收用户数\",\r\n        align: \"center\",\r\n        width: 80\r\n      }, {\r\n        key: \"Action\",\r\n        title: \"操作\",\r\n        align: \"center\",\r\n        width: 240,\r\n        render: (text, record, index) => <div>\r\n          {(!record.is_timing && record.status === 0) && <Button buttonContent=\"发送\" onClick={() => sendTemplate(record._id, index)} background=\"success\"/>}\r\n          {record.status === 0 && <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />}\r\n          <Button buttonContent=\"删除\" onClick={() => deleteTemplate(record._id, index)} background=\"danger\"/>\r\n        </div>\r\n      }\r\n    ];\r\n    return (\r\n      <div className=\"container\">\r\n        <Search style={{width: 200}} placeholder=\"搜索公众号\" value={confName} onChange={changeConfNickName} onSearch={searchConfName}/>\r\n        <div className=\"fr\"><Button size=\"default\" className=\"fr\" mb={20} buttonContent={<Link to=\"./create\">+ 新建模板消息</Link>}/></div>\r\n        <Table rowKey={record => record._id} size=\"middle\" dataSource={templateMessageList} columns={templateColumns}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getTemplateList()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  templateMessageList: state.message.template.templateMessageList,\r\n  confName: state.message.template.confName,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getTemplateList() {\r\n    dispatch(actionCreators.getTemplateList())\r\n  },\r\n  deleteTemplate(id, index) {\r\n    dispatch(actionCreators.deleteTemplate(id, index))\r\n  },\r\n  sendTemplate(id, index) {\r\n    dispatch(actionCreators.sendTemplate(id, index))\r\n  },\r\n  changeConfNickName(e) {\r\n    dispatch(actionCreators.changeConfNickName(e.target.value))\r\n  },\r\n  searchConfName(value) {\r\n    dispatch(actionCreators.searchConfName(value))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Template);","import React from 'react';\r\nimport { Radio, Row, Col, Modal, Button } from 'antd';\r\n\r\nconst SingleSelectModal = props => {\r\n  const {selectGonghaoModal, allCodes, code, confirmSelect, closeSelectModal} = props;\r\n  return (\r\n    <Modal width={1000} visible={selectGonghaoModal} maskClosable={false} closable={false} mask={false}  footer={<Button type=\"primary\" disabled={!code} onClick={closeSelectModal}>确定</Button>}>\r\n      <Radio.Group value={code} style={{ width: '100%' }} onChange={e => confirmSelect(e.target.value, code)}>\r\n        <Row>\r\n          {allCodes.map(item => <Col span={4} key={item._id}>\r\n            <Radio value={item.code}>{item.nick_name}</Radio>\r\n          </Col>)}\r\n        </Row>\r\n      </Radio.Group>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default SingleSelectModal;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  ConfigProvider,\r\n  Icon,\r\n  Form,\r\n  Button,\r\n  Radio,\r\n  Input,\r\n  Avatar,\r\n  Divider,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Switch,\r\n  DatePicker\r\n} from \"antd\";\r\nimport SingleSelectModal from '../../../../common/components/SelectGonghao/SingleSelectModal';\r\nimport {actionCreators} from \"../store\";\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/zh-cn';\r\nimport './index.scss';\r\n\r\nconst {Option} = Select;\r\nconst colors = [\"#000\", \"#CF021B\", \"#F5A623\", \"#3BA6FF\", \"#BD10E0\", \"#999\"];\r\nconst colorWrapperStyle = {\r\n  width: 20,\r\n  height: 20,\r\n  marginLeft: 10,\r\n  display: \"inline-block\",\r\n  marginTop: 5\r\n};\r\n\r\nclass EditTemplate extends Component {\r\n\r\n  async componentWillMount() {\r\n    this.props.getAllCodes();\r\n    const {query} = this.props.location;\r\n    query && await this.props.initMessageInfo(query);\r\n  }\r\n\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: {span: 4}\r\n      },\r\n      wrapperCol: {\r\n        sm: {span: 20, offset: 0}\r\n      },\r\n    };\r\n\r\n    const {openSelectModal, messageInfo, changeMessageInfo, selectGonghaoModal, allCodes, openEditModal, templateList, templateInfo, templateModalVisible, changeTemplate, history, submitMessage, confirmSelect, closeSelectModal, openPreviewModal, closePreviewModal, openid, changeOpenId, previewModal, preview} = this.props;\r\n    const { show, content, closeTemplateModal, saveTemplateModal, editTemplate } = this.props;\r\n    const footer = (\r\n        <div style={{overflow: \"hidden\", lineHeight: 1.5}}>\r\n          <div className=\"fl\">\r\n            {colors.map(item => <span className=\"cursor\" style={{...colorWrapperStyle, background: item}} key={item} onClick={() => editTemplate('color', item)} />)}\r\n          </div>\r\n          <Button type=\"primary\" className=\"fr\" onClick={saveTemplateModal}>保存</Button>\r\n        </div>);\r\n    let template = [];\r\n    for (let key in templateInfo.data) {\r\n      let content = messageInfo.content[key];\r\n      if (key === \"first\") {\r\n        template.unshift(<Form.Item label={templateInfo.data[\"first\"].pre || \"\"} key=\"first\">\r\n          <span className=\"mr5\">{content.value}</span>\r\n          <Icon className=\"cursor\" onClick={() => openEditModal(key, content)} type=\"edit\"/>\r\n        </Form.Item>)\r\n      } else {\r\n        template.push(<Form.Item label={templateInfo.data[key].pre || \"\"} key={key}>\r\n          <span className=\"mr5\">{content.value}</span>\r\n          <Icon className=\"cursor\" onClick={() => openEditModal(key, content)} type=\"edit\"/>\r\n        </Form.Item>)\r\n      }\r\n    }\r\n    let GonghaoModal;\r\n    selectGonghaoModal && (GonghaoModal =\r\n      <SingleSelectModal code={messageInfo.code} confirmSelect={confirmSelect} closeSelectModal={closeSelectModal}\r\n                         allCodes={allCodes} selectGonghaoModal={selectGonghaoModal}/>);\r\n    return (\r\n      <ConfigProvider locale={zhCN}>\r\n        <div className=\"container edit-message\">\r\n          <Form className=\"kefu-form\" {...formItemLayout} style={{width: 520}}>\r\n            <Form.Item label=\"选择公号\">\r\n              <Avatar onClick={openSelectModal} className=\"cursor\" shape=\"square\" icon=\"user\"/>\r\n            </Form.Item>\r\n            <Form.Item label=\"消息名称\">\r\n              <Input value={messageInfo.name} onChange={e => changeMessageInfo(\"name\", e.target.value)}\r\n                     placeholder=\"请输入消息名称,(仅供备注，不会发送给粉丝)\"/>\r\n            </Form.Item>\r\n            <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n            <h2 className=\"block-title\">设置模板消息</h2>\r\n            <Form.Item label=\"选择模板\">\r\n              <Select value={messageInfo.templateId} onChange={changeTemplate}>\r\n                {templateList.map(item => <Option value={item.template_id}\r\n                                                  key={item.template_id}>{item.title}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n            <Row className=\"template-wrapper\">\r\n              <Col span={4}/>\r\n              <Col span={20}>\r\n                <div className=\"message-block\">\r\n                  {template}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"点击跳转\">\r\n              <Input value={messageInfo.url} placeholder=\"输入跳转链接，且必须以http://或https://开头\"\r\n                     onChange={e => changeMessageInfo(\"url\", e.target.value)}/>\r\n            </Form.Item>\r\n            <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n            <h2 className=\"block-title\">选择群发对象</h2>\r\n            <Form.Item label=\"群发粉丝\">\r\n              <Radio.Group value={messageInfo.sex} onChange={e => changeMessageInfo(\"sex\", e.target.value)}>\r\n                <Radio value=\"all\">全部粉丝</Radio>\r\n                <Radio value=\"0\">未知粉丝</Radio>\r\n                <Radio value=\"1\">男粉丝</Radio>\r\n                <Radio value=\"2\">女粉丝</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n            <h2 className=\"block-title\">设置发送方式</h2>\r\n            <Form.Item label=\"定时发送\">\r\n              <Switch checked={messageInfo.is_timing} onChange={value => changeMessageInfo(\"is_timing\", value)}/>\r\n            </Form.Item>\r\n            {messageInfo.is_timing && <Form.Item label=\"发送时间\">\r\n              <DatePicker showTime placeholder=\"选择时间\" value={moment(messageInfo.timing_time)}\r\n                          onChange={(value, dateString) => changeMessageInfo('timing_time', dateString)}/>\r\n            </Form.Item>}\r\n            <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n            <Form.Item>\r\n              <Button size=\"large\" type=\"primary\"\r\n                      onClick={() => submitMessage(messageInfo, history, templateList)}>确定{!messageInfo._id ? \"并创建消息\" : \"并保存消息\"}</Button>\r\n              {messageInfo._id &&\r\n              <Button style={{marginLeft: 20}} type=\"info\" size=\"large\" onClick={() => history.goBack()}>取消编辑</Button>}\r\n              <Button size=\"large\" style={{marginLeft: 20, background: \"yellowgreen\", borderColor: \"yellowgreen\"}}\r\n                      type=\"primary\" onClick={openPreviewModal}>发送预览</Button>\r\n            </Form.Item>\r\n          </Form>\r\n          {GonghaoModal}\r\n          <Modal\r\n              visible={templateModalVisible}\r\n              onCancel={closeTemplateModal}\r\n              closable={false}\r\n              footer={footer}\r\n              mask={false}\r\n          >\r\n            <Input.TextArea style={{color: content[\"color\"]}} value={content[\"value\"]} autoSize={{ minRows: 3, maxRows: 6 }} onChange={e => editTemplate('value', e.target.value)} />\r\n          </Modal>\r\n          <Modal title=\"发送预览\" visible={previewModal} onCancel={closePreviewModal}\r\n                 onOk={() => preview(messageInfo, openid)}>\r\n            <Input onChange={changeOpenId} value={openid} placeholder=\"请输入预览用户的openid\"/>\r\n            <span className=\"tips\">Tips: 在预览公号回复<span> openid </span>,将返回的内容复制到输入框中<br/>一个openid只对应一个公号</span>\r\n          </Modal>\r\n        </div>\r\n      </ConfigProvider>\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  messageInfo: state.message.template.messageInfo,\r\n  templateList: state.message.template.templateList,\r\n  templateInfo: state.message.template.templateInfo,\r\n  templateModalVisible: state.message.template.templateModalVisible,\r\n  selectGonghaoModal: state.message.template.selectGonghaoModal,\r\n  allCodes: state.message.template.allCodes,\r\n  previewModal: state.message.template.previewModal,\r\n  openid: state.message.template.openid,\r\n  content: state.message.template.content\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  openEditModal(key, content) {\r\n    !content.color && (content.color = \"#000\");\r\n    dispatch(actionCreators.openEditModal(key, content))\r\n  },\r\n  changeTemplate(value) {\r\n    dispatch(actionCreators.changeTemplate(value))\r\n  },\r\n  submitMessage(info, history, templateList) {\r\n    dispatch(actionCreators.submitMessage(info, history, templateList));\r\n  },\r\n  openSelectModal() {\r\n    dispatch(actionCreators.openSelectModal())\r\n  },\r\n  changeMessageInfo(key, value) {\r\n    dispatch(actionCreators.changeMessageInfo(key, value))\r\n  },\r\n  initMessageInfo(record) {\r\n    dispatch(actionCreators.initMessageInfo(record))\r\n  },\r\n  confirmSelect(code) {\r\n    dispatch(actionCreators.confirmSelect(code))\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState())\r\n  },\r\n  closeSelectModal() {\r\n    dispatch(actionCreators.closeSelectModal())\r\n  },\r\n  changeOpenId(e) {\r\n    dispatch(actionCreators.changeOpenId(e.target.value))\r\n  },\r\n  openPreviewModal() {\r\n    dispatch(actionCreators.openPreviewModal())\r\n  },\r\n  closePreviewModal() {\r\n    dispatch(actionCreators.closePreviewModal())\r\n  },\r\n  preview(info, openid) {\r\n    dispatch(actionCreators.preview(info, openid))\r\n  },\r\n  closeTemplateModal() {\r\n    dispatch(actionCreators.closeTemplateModal())\r\n  },\r\n  saveTemplateModal() {\r\n    dispatch(actionCreators.saveTemplateModal())\r\n  },\r\n  editTemplate(key, value) {\r\n    dispatch(actionCreators.editTemplate(key, value))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(EditTemplate);","import React, { Component } from 'react';\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Group from \"./group\";\r\nimport GroupMaterial from \"./group/material\";\r\nimport History from './group/history';\r\nimport Kefu from './kefu';\r\nimport EditKefuMSg from './kefu/edit';\r\nimport Template from './template';\r\nimport EditTemplate from './template/edit';\r\n\r\nclass GroupRouter extends Component {\r\n  render() {\r\n    return (\r\n    \t<div>\r\n        <Route path='/admin/message'>\r\n          <Switch>\r\n            <Route path=\"/admin/message/group/index\" component={Group} />\r\n            <Route path=\"/admin/message/group/material\" component={GroupMaterial} />\r\n            <Route path=\"/admin/message/group/history\" component={History} />\r\n            <Route path=\"/admin/message/kefu/index\" component={Kefu} />\r\n            <Route path=\"/admin/message/kefu/create\" component={EditKefuMSg} />\r\n            <Route path=\"/admin/message/kefu/update\" component={EditKefuMSg} />\r\n            <Route path=\"/admin/message/template/index\" component={Template} />\r\n            <Route path=\"/admin/message/template/create\" component={EditTemplate} />\r\n            <Route path=\"/admin/message/template/update\" component={EditTemplate} />\r\n            <Redirect from=\"/admin/message\" exact to='/admin/message/group' />\r\n            <Redirect from=\"/admin/message/group\" exact to='/admin/message/group/index' />\r\n            <Redirect from=\"/admin/message/kefu\" exact to='/admin/message/kefu/index' />\r\n            <Redirect from=\"/admin/message/template\" exact to='/admin/message/template/index' />\r\n          </Switch>\r\n        </Route>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroupRouter;","import React, {Component} from 'react';\r\nimport {Table, Modal, message, Tabs} from 'antd';\r\nimport axios from '../../../utils/http';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '../../../common/components/Button';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\nclass Advertise extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeTab = this.changeTab.bind(this);\r\n  }\r\n\r\n  state = {\r\n    spreadData: [],\r\n    domain_names: [],\r\n    tagList: [],\r\n    dataList: []\r\n  };\r\n\r\n  render() {\r\n    const {spreadData, tagList} = this.state;\r\n    const tabsRender = tagList.map(item => (\r\n      <TabPane tab={item.name} key={item.name}/>\r\n    ));\r\n    const spreadHeader = [\r\n      {\r\n        key: \"links\",\r\n        title: \"链接\",\r\n        align: \"center\",\r\n        width: 280,\r\n        render: (text, record) => <p\r\n          style={{width: 280, wordWrap: \"break-word\", userSelect: \"all\"}}>{'http://doumobone.top/cmst/' + record.id}</p>\r\n      },\r\n      {\r\n        key: \"group\",\r\n        dataIndex: \"group\",\r\n        title: \"分组\",\r\n        align: \"center\",\r\n        width: 120\r\n      },\r\n      {\r\n        key: \"title\",\r\n        dataIndex: \"title\",\r\n        title: \"标题\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        key: \"remarks\",\r\n        dataIndex: \"remarks\",\r\n        title: \"备注\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: text => text ? text : \"无\"\r\n      },\r\n      {\r\n        title: \"数据\",\r\n        align: \"center\",\r\n        width: 80,\r\n        render: (text, record) => <a href={'http://doumobone.top/transfer/' + record.id} target={\"_blank\"}>查看数据</a>\r\n      },\r\n      {\r\n        title: \"置顶\",\r\n        align: \"center\",\r\n        width: 80,\r\n        render: (text, record) => <Button background=\"warning\" onClick={() => this.goTop(record._id)} buttonContent=\"置顶\" />\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record, index) => <div>\r\n          <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />\r\n          <Button background=\"danger\" buttonContent=\"删除\" onClick={() => this.deleteLink(record._id, index)} />\r\n          <Button background=\"success\" mr={0} buttonContent=\"复制\" onClick={() => this.copyLink({...record})} />\r\n        </div>\r\n      }\r\n    ];\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <Button size=\"default\" background=\"success\" mb={20} buttonContent={<Link to=\"./create\">添加新链接</Link>} />\r\n          <Tabs animated={false} defaultActiveKey=\"ALL\" tabBarGutter={0} onChange={this.changeTab}\r\n                size='small'>\r\n            <TabPane tab=\"ALL\" key=\"ALL\"/>\r\n            {tabsRender}\r\n          </Tabs>\r\n          <Table rowKey={record => record._id} size=\"small\" bordered columns={spreadHeader} dataSource={spreadData}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSpreadList();\r\n    this.getTagList();\r\n  }\r\n\r\n  getSpreadList() {\r\n    axios.get(\"/transfer\").then(res => {\r\n      let spreadData = res.data.messages;\r\n      let domain_names = res.data.domain_names;\r\n      this.setState({\r\n        spreadData,\r\n        dataList: spreadData,\r\n        domain_names\r\n      })\r\n    });\r\n  }\r\n\r\n  getTagList() {\r\n    axios.get(\"/tuiguangTag\").then(res => {\r\n      const {data: tagList} = res.data;\r\n      this.setState({tagList})\r\n    });\r\n  }\r\n\r\n  changeTab(key) {\r\n    const {dataList} = this.state;\r\n    if (key === 'ALL') {\r\n      this.setState({\r\n        spreadData: dataList\r\n      });\r\n    } else {\r\n      let data = [];\r\n      for (let i = 0; i < dataList.length; i++) {\r\n        if (key === dataList[i].group) {\r\n          data.push(dataList[i]);\r\n        }\r\n      }\r\n      this.setState({spreadData: [...data]})\r\n    }\r\n  }\r\n\r\n  goTop(id) {\r\n    Modal.confirm({\r\n      title: \"确定置顶这条链接吗？\",\r\n      onOk: () => {\r\n        axios.post('/transfer/goTop', {id})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            this.getSpreadList();\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteLink(id, index) {\r\n    const {spreadData} = this.state;\r\n    Modal.confirm({\r\n      title: '确认删除这条内容吗？:',\r\n      onOk: () => {\r\n        axios.get('/transfer/delete', {params: {id}})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            spreadData.splice(index, 1);\r\n            this.setState({spreadData});\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  copyLink(record) {\r\n    record.id += '_copy';\r\n    const {spreadData} = this.state;\r\n    Modal.confirm({\r\n      title: \"确定复制一条推广链接吗？\",\r\n      onOk: () => {\r\n        axios.post('/transfer/create', {...record})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.info('复制成功');\r\n              spreadData.unshift(res.data.data);\r\n              this.setState({spreadData})\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default Advertise;","import React, {Component, Fragment} from 'react';\r\nimport {Form, Input, Button, Switch, InputNumber, message, Modal, List, Tag } from 'antd';\r\nimport axios from '../../../../utils/http';\r\n\r\nconst initState = {\r\n  spreadLinkInfo: {\r\n    id: \"\",\r\n    title: \"\",\r\n    links: [],\r\n    weights: [],\r\n    back_urls: [],\r\n    link: \"\",\r\n    back_url: \"\",\r\n    weight: \"\",\r\n    type: false,\r\n    status: false,\r\n    granularity: 1,\r\n    group: \"\",\r\n    remarks: \"\"\r\n  },\r\n  tagList: [],\r\n  index: -1\r\n};\r\n\r\nclass EditAdvertise extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addTag = this.addTag.bind(this);\r\n    this.cancelSelectTag = this.cancelSelectTag.bind(this);\r\n    this.cancelEdit = this.cancelEdit.bind(this);\r\n    this.submitSpreadLink = this.submitSpreadLink.bind(this);\r\n    this.cancelUpdate= this.cancelUpdate.bind(this);\r\n  }\r\n\r\n  state = {...initState};\r\n\r\n  componentWillMount() {\r\n    let query = this.props.history.location.query;\r\n    query && this.initData(query);\r\n    this.getTagList();\r\n  }\r\n\r\n  render() {\r\n    const {spreadLinkInfo, tagList, index} = this.state;\r\n    const {title, links, weights, back_urls, link, back_url, weight, type, status, granularity, group, remarks} = spreadLinkInfo;\r\n    let isAddWeight, hasLink, hasBackUrl, hasWeight, selectedTag;\r\n    links.length > 0 && (hasLink = <Form.Item label=\"链接组\">\r\n      <List\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={links}\r\n        renderItem={(item, index) => (\r\n          <List.Item actions={[<span className=\"cursor\" style={{color: \"#f00\"}} onClick={() => this.delLink(index, \"links\")}>del</span>]}>\r\n            {item}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </Form.Item>);\r\n    back_urls.length > 0 && (hasBackUrl = <Form.Item label=\"返回链接组\">\r\n      <List\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={back_urls}\r\n        renderItem={(item, index) => (\r\n          <List.Item actions={[<span className=\"cursor\" style={{color: \"#f00\"}} onClick={() => this.delLink(index, \"back_urls\")}>del</span>]}>\r\n            {item}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </Form.Item>);\r\n    weights.length > 0 && (hasWeight = <Form.Item label=\"权重组\">\r\n      <List\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={weights}\r\n        renderItem={(item, i) => {\r\n          let isUpdate;\r\n          if(index === i) {\r\n            isUpdate = [<span className=\"cursor\" style={{color: \"#f00\"}} onClick={this.cancelUpdate}>取消</span>]\r\n          } else {\r\n            isUpdate = [<span className=\"cursor\" style={{color: \"#f00\"}} onClick={e => this.delLink(i, \"weights\", e)}>删除</span>]\r\n          }\r\n          return (\r\n          <List.Item onClick={() => this.updateWeight(i)} actions={isUpdate}>\r\n            {index === i ? <Input.Search size=\"small\" enterButton=\"保存\" onSearch={(value, e) => this.saveUpdate(value, e)} /> : item}\r\n          </List.Item>\r\n        )}}\r\n      />\r\n    </Form.Item>);\r\n    if (type) {\r\n      isAddWeight = <Fragment>\r\n        <Form.Item label=\"权重\">\r\n          <Input.Search value={weight} enterButton=\"添加\" placeholder=\"请输入权重\"\r\n                        onChange={e => this.changeInputValue(e.target.value, \"weight\")} onSearch={value => this.addLink(value, \"weights\", \"weight\")}/>\r\n        </Form.Item>\r\n        {hasWeight}\r\n        <Form.Item label=\"投放状态\">\r\n          <Switch checked={status} onChange={value => this.changeInputValue(value, \"status\")}/>\r\n        </Form.Item>\r\n        <Form.Item label=\"时间颗粒度\">\r\n          <InputNumber min={1} value={granularity} placeholder=\"请输入标题\"\r\n                       onChange={value => this.changeInputValue(value, \"granularity\")}/>\r\n        </Form.Item>\r\n      </Fragment>\r\n    }\r\n    if(group) {\r\n      selectedTag = <Tag closable onClose={this.cancelSelectTag}>{group}</Tag>\r\n    } else {\r\n     selectedTag = <Input.Search enterButton=\"确定\" placeholder=\"请输入标签\" onSearch={this.addTag}/>\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"title-wrapper\">\r\n            <h2>编辑推广链接</h2>\r\n            <div className=\"fr\">\r\n              <Button type=\"primary\" style={{marginRight: 10}} onClick={this.submitSpreadLink}>提交</Button>\r\n              <Button onClick={this.cancelEdit}>取消</Button>\r\n            </div>\r\n          </div>\r\n          <Form className=\"fl\" style={{width: \"60%\", borderRight: \"1px solid #eee\"}} labelCol={{sm: 3}} wrapperCol={{sm: 18, offset: 0}} colon={false}>\r\n            <Form.Item label=\"标题\">\r\n              <Input value={title} placeholder=\"请输入标题\"\r\n                     onChange={e => this.changeInputValue(e.target.value, \"title\")}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"链接\">\r\n              <Input.Search value={link} enterButton=\"添加\" placeholder=\"请输入链接\" onChange={e => this.changeInputValue(e.target.value, \"link\")} onSearch={value => this.addLink(value, \"links\", \"link\")}/>\r\n            </Form.Item>\r\n            {hasLink}\r\n            <Form.Item label=\"返回链接\">\r\n              <Input.Search value={back_url} enterButton=\"添加\" placeholder=\"请输入返回链接\" onChange={e => this.changeInputValue(e.target.value, \"back_url\")} onSearch={value => this.addLink(value, \"back_urls\", \"back_url\")}/>\r\n            </Form.Item>\r\n            {hasBackUrl}\r\n            <Form.Item label=\"选择标签\">\r\n              {selectedTag}\r\n            </Form.Item>\r\n            <Form.Item label=\"标签选项\">\r\n              {tagList.map((item, index) => <Tag className=\"cursor\" closable onClose={(e) => this.deleteTag(e, item._id, index)} key={item._id} onClick={() => this.selectTag(item.name)}>{item.name}</Tag>)}\r\n            </Form.Item>\r\n          </Form>\r\n          <Form className=\"fl\" style={{width: \"36%\", paddingLeft: \"4%\"}} labelCol={{sm: 7}} wrapperCol={{sm: 17, offset: 0}} colon={false}>\r\n            <Form.Item label=\"是否增加权重\">\r\n              <Switch checked={type} onChange={value => this.changeInputValue(value, \"type\")}/>\r\n            </Form.Item>\r\n            {isAddWeight}\r\n            <Form.Item label=\"链接备注\">\r\n              <Input value={remarks} placeholder=\"请输入备注\" onChange={e => this.changeInputValue(e.target.value, \"remarks\")}/>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  initData(query) {\r\n    query.type = query.type === 1;\r\n    query.status = query.status === 1;\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...query}}))\r\n  }\r\n\r\n  changeInputValue(value, name) {\r\n    let {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo[name] = value;\r\n    this.setState({spreadLinkInfo})\r\n  }\r\n\r\n  addLink(value, list, item) {\r\n    const {spreadLinkInfo} = this.state;\r\n    if(!value.trim()) {\r\n      message.error(\"链接不能为空\")\r\n    } else {\r\n      spreadLinkInfo[list].push(value.trim());\r\n      spreadLinkInfo[item] = \"\";\r\n      this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}))\r\n    }\r\n  }\r\n\r\n  delLink(index, list, e) {\r\n    e && e.stopPropagation();\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo[list].splice(index, 1);\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}))\r\n  }\r\n\r\n  updateWeight(index) {\r\n    this.setState({index})\r\n  }\r\n\r\n  saveUpdate(value, e) {\r\n    e.stopPropagation();\r\n    const {spreadLinkInfo, index} = this.state;\r\n    spreadLinkInfo[\"weights\"].splice(index, 1, value);\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}, index: -1}));\r\n  }\r\n\r\n  cancelUpdate(e) {\r\n    e.stopPropagation();\r\n    this.setState({index: -1})\r\n  }\r\n\r\n  getTagList() {\r\n    axios.get(\"/tuiguangTag\").then(res => {\r\n      let tagList = res.data.data;\r\n      this.setState({tagList});\r\n    });\r\n  }\r\n\r\n  addTag(value) {\r\n    const { spreadLinkInfo } = this.state;\r\n    if(!value.trim()) {\r\n      message.error(\"标签名不能为空\")\r\n    } else {\r\n      axios.post(\"/tuiguangTag\", {name: value.trim()})\r\n        .then(res => {\r\n          if (res.data.exist === 0) {\r\n            const { data } = res.data;\r\n            this.setState(state => ({tagList: [...state.tagList, data]}));\r\n          }\r\n          spreadLinkInfo.group = value;\r\n          this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\r\n        })\r\n    }\r\n  }\r\n\r\n  selectTag(group) {\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo.group = group;\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\r\n  }\r\n\r\n  cancelSelectTag() {\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo.group = \"\";\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\r\n  }\r\n\r\n  deleteTag(e, id, index) {\r\n    e.stopPropagation();\r\n    const {tagList} = this.state;\r\n    axios.delete('/tuiguangTag', {params: {id}})\r\n      .then(res => {\r\n        tagList.splice(index, 1)\r\n        this.setState({tagList})\r\n      });\r\n  }\r\n\r\n  submitSpreadLink() {\r\n    const { query } = this.props.history.location;\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo.type = spreadLinkInfo.type ? 1 : 0;\r\n    spreadLinkInfo.status = spreadLinkInfo.status ? 1 : 0;\r\n    let url = '/transfer/create';\r\n    if(query) {\r\n      url = '/transfer/update'\r\n    }\r\n    Modal.confirm({\r\n      title: \"确定提交吗？\",\r\n      onOk: () => {\r\n        axios.post(url, {...spreadLinkInfo})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.info(res.data.success);\r\n              this.cancelEdit()\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  cancelEdit() {\r\n    this.props.history.goBack();\r\n    this.resetState();\r\n  }\r\n\r\n  resetState() {\r\n    this.setState({...initState})\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.resetState()\r\n  }\r\n}\r\n\r\nexport default EditAdvertise;","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Spread from './spread';\r\nimport EditSpread from './spread/edit';\r\n\r\nclass ChannelWrapper extends Component {\r\n  render() {\r\n    return (\r\n        <Route path=\"/admin/channel\" render={\r\n          () =>\r\n            <Switch>\r\n              <Route path=\"/admin/channel/spread/index\" component={Spread} />\r\n              <Route path=\"/admin/channel/spread/create\" component={EditSpread} />\r\n              <Route path=\"/admin/channel/spread/update\" component={EditSpread} />\r\n              <Redirect from=\"/admin/channel\" exact to='/admin/channel/spread' />\r\n              <Redirect from=\"/admin/channel/spread\" exact to='/admin/channel/spread/index' />\r\n            </Switch>\r\n          }\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChannelWrapper;","import React, { Component } from 'react';\r\nimport { Input, Table, message, Modal } from 'antd';\r\nimport Button from '../../common/components/Button';\r\nimport axios from 'axios';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nconst Search = Input.Search;\r\n\r\nclass Account extends Component {\r\n\r\n  state = {\r\n    accountList: [],\r\n    searchValue: \"\",\r\n    updateRemarksIndex: -1\r\n  };\r\n\r\n\r\n\r\n  searchAccount = () => {\r\n    const { searchValue } = this.state;\r\n    axios.get('/account', {params: {username: searchValue}})\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          const {data: accountList, msg} = res.data;\r\n          this.setState({accountList, searchValue: \"\"});\r\n          message.success(msg)\r\n        } else {\r\n          message.error(res.data.msg);\r\n          this.getAccountList()\r\n        }\r\n      })\r\n  };\r\n\r\n  saveUpdate(id, remarks) {\r\n    Modal.confirm({\r\n      title: \"确定保存修改吗？\",\r\n      onOk: () => {\r\n        axios.put(\"/account/remarks\", {id, remarks})\r\n          .then(res => {\r\n            const {code, msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.setState({\r\n                updateRemarksIndex: -1\r\n              });\r\n              this.getAccountList()\r\n            } else {\r\n              message.error(msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteAccount(_id) {\r\n    Modal.confirm({\r\n      title: \"确定删除这个账户吗？\",\r\n      onOk: () => {\r\n        axios.delete('/account', {params: {_id}})\r\n          .then(res => {\r\n            if(res.data.code === 1) {\r\n              message.success(res.data.msg);\r\n              this.getAccountList()\r\n            } else {\r\n              message.error(res.data.msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  getAccountList = () => {\r\n    axios.get('/account')\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          let { data } = res.data;\r\n          let accountList = data.reverse();\r\n          this.setState({accountList});\r\n        }\r\n      })\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAccountList()\r\n  }\r\n\r\n  handleChangeSearchValue = e => {\r\n    this.setState({searchValue: e.target.value})\r\n  };\r\n\r\n  render() {\r\n    const {accountList, searchValue, updateRemarksIndex} = this.state;\r\n    const columns = [\r\n      {\r\n        key: 'username',\r\n        dataIndex: 'username',\r\n        title: '账户名',\r\n        align: 'center'\r\n      }, {\r\n        key: 'remarks',\r\n        dataIndex: 'remarks',\r\n        title: '公司名称/备注',\r\n        align: 'center',\r\n        width: 300,\r\n        render: (text, record, index) => updateRemarksIndex !== index ? text : <Input.Search enterButton=\"保存\" size=\"small\" onSearch={value => this.saveUpdate(record._id,value)} />\r\n      }, {\r\n        key: 'password',\r\n        dataIndex: 'password',\r\n        title: '密码（点击自动复制，打开解密网站）',\r\n        align: 'center',\r\n        render: text => <CopyToClipboard text={text} onCopy={() => message.success(\"复制成功\")}><a href=\"https://www.somd5.com/\" target=\"__blank\">{text}</a></CopyToClipboard>\r\n      }, {\r\n        key: 'role',\r\n        dataIndex: 'role',\r\n        title: '权限',\r\n        align: 'center',\r\n        render: text => text === 0 ? \"超级管理员\" : (text === 1 ? \"一级代理\" : \"二级代理\")\r\n      }, {\r\n        title: 'Action',\r\n        key: 'action',\r\n        align: 'center',\r\n        render: (text, record, index) => <>\r\n          <Button buttonContent=\"修改备注\" onClick={() => this.setState({updateRemarksIndex: index})} />\r\n          <Button mr={0} background=\"danger\" disabled={record.role === 0} buttonContent=\"删除\" onClick={() => this.deleteAccount(record._id)} />\r\n        </>\r\n      }\r\n    ];\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Search onChange={this.handleChangeSearchValue} value={searchValue} style={{width: 300, marginBottom: 20}} placeholder=\"请输入账户名\" enterButton=\"查询\" onSearch={this.searchAccount} />\r\n          <Table rowKey={record => record._id} size=\"small\" dataSource={accountList} columns={columns} />\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","import React, { Component } from 'react';\r\nimport { Form, Input, message, Modal, Select } from 'antd';\r\nimport Button from '../../../common/components/Button';\r\nimport axios from '../../../utils/http';\r\n\r\nconst { Option  } = Select;\r\n\r\nclass AddAccount extends Component {\r\n\r\n  addAccount = () => {\r\n    const { form: {validateFields} } = this.props;\r\n    validateFields((errors, values) => {\r\n      if(errors) {\r\n        message.error(\"请检查输入是否有误\");\r\n        return\r\n      }\r\n      values.password = this.$MD5(values.password).toString();\r\n      Modal.confirm({\r\n        title: \"确定创建一个新账户吗？\",\r\n        onOk: () => {\r\n          axios.post('/account', {...values})\r\n            .then(res => {\r\n              if(res.data.code === 1) {\r\n                this.resetForm()\r\n                message.success(res.data.msg)\r\n              } else {\r\n                message.error(res.data.msg)\r\n              }\r\n            })\r\n        }\r\n      })\r\n    })\r\n    // console.log(getFieldsValue())\r\n  };\r\n\r\n  resetForm = () => {\r\n    const { form: {setFieldsValue} } = this.props;\r\n    setFieldsValue({username: \"\", password: \"\", role: 2})\r\n  };\r\n\r\n  render() {\r\n    const { form: {getFieldDecorator} } = this.props;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 2 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      colon: false\r\n    };\r\n    return (\r\n\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Form {...formItemLayout}>\r\n            <Form.Item label=\"用户名\">\r\n              {getFieldDecorator('username', {\r\n                rules: [{ required: true, message: '用户名不能为空' }],\r\n              })(\r\n                <Input placeholder=\"请输入用户名\"/>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"密码\">\r\n              {getFieldDecorator('password', {\r\n                rules: [{ required: true, message: '密码不能为空' }],\r\n              })(\r\n                <Input placeholder=\"请输入密码\"/>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"备注\">\r\n              {getFieldDecorator('remarks', {\r\n                rules: [{ required: true, message: '备注不能为空' }],\r\n              })(\r\n                <Input placeholder=\"请输入备注\"/>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"管理员权限\">\r\n              {getFieldDecorator('role', {\r\n                rules: [{ required: true }],\r\n                initialValue: 2\r\n              })(\r\n                <Select>\r\n                  <Option value={0}>超级管理员</Option>\r\n                  <Option value={1}>一级代理</Option>\r\n                  <Option value={2}>二级代理</Option>\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\" \">\r\n              <Button size=\"default\" buttonContent=\"新增\" onClick={this.addAccount} />\r\n              <Button ml={20} background=\"info\" size=\"default\" buttonContent=\"清空\" onClick={this.resetForm}  />\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddAccount);","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Account from './index';\r\nimport AddAccount from './add';\r\nclass AccountRouter extends Component {\r\n  render() {\r\n    return (\r\n    \t<Switch>\r\n        <Route path=\"/admin/account/list\" component={Account} />\r\n        <Route path=\"/admin/account/add\" component={AddAccount} />\r\n        <Redirect from=\"/admin/account\" exact to=\"/admin/account/list\"/>\r\n    \t</Switch>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AccountRouter;","import React, { Component } from 'react';\r\nimport { Input, message, Modal } from 'antd';\r\nimport Button from '../../../common/components/Button';\r\nimport axios from 'axios';\r\n\r\nimport \"./index.scss\";\r\n\r\nconst Search = Input.Search;\r\n\r\nclass TikTok extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.changeUrl = this.changeUrl.bind(this);\r\n\t\tthis.jiexi = this.jiexi.bind(this);\r\n\t}\r\n\r\n\tstate = {\r\n\t\turl: \"\",\r\n\t\tnewUrl: \"\"\r\n\t}\r\n\r\n\tchangeUrl(e) {\r\n\t\tlet url = e.target.value;\r\n\t\tthis.setState({url})\r\n\t}\r\n\r\n\tjiexi(url) {\r\n\t\tif(url) {\r\n\t\t\taxios({\r\n\t\t\t\tmethod: \"get\",\r\n\t\t\t\turl: \"/watermark/douyin\",\r\n\t\t\t\tparams: {url},\r\n\t\t\t\ttimeout: 50000\r\n\t\t\t}).then(res => {\r\n\t\t\t\tthis.setState({newUrl: '/douyin/' + res.data})\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tmessage.warning(\"链接不能为空\")\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n  render() {\r\n  \tconst {url, newUrl} = this.state;\r\n    return (\r\n    \t<div className=\"container\">\r\n    \t\t<div className=\"tik-tok\">\r\n          \t\t<Search value={url} placeholder=\"请输入抖音短视频的链接\" size=\"large\" enterButton=\"解析\" onChange={this.changeUrl} onSearch={this.jiexi} />\r\n          \t\t<div className=\"video-container\" style={{display: newUrl ? \"block\" : \"none\"}}>\r\n          \t\t\t<video controlslist=\"nodownload\" controls=\"controls\" muted src={newUrl} autoPlay height=\"100%\" width=\"100%\"></video>\r\n          \t\t\t<a href={newUrl} download={newUrl} target=\"__blank\">下载</a>\r\n          \t\t</div>\r\n          \t</div>\r\n      \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TikTok;","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport TikTok from './tikTok';\r\nclass ToolsRouter extends Component {\r\n  render() {\r\n    return (\r\n    \t<Switch>\r\n\t        <Route path=\"/admin/tools/tikTok\" component={TikTok} />\r\n\t        <Redirect from=\"/admin/tools\" exact to=\"/admin/tools/tikTok\"/>\r\n    \t</Switch>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ToolsRouter;","import React, { Component } from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport store from './store';\r\n\r\nimport Login from './pages/login';\r\n\r\nimport BasicLayout from './common/BasicLayout';\r\nimport TuoguanRouter from './pages/gonghao/router';\r\nimport MessageRouter from './pages/message/router';\r\nimport ChannelRouter from './pages/channel/router';\r\nimport AccountRouter from './pages/account/router';\r\nimport ToolsRouter from './pages/tools/router';\r\n\r\nclass App extends Component{\r\n\r\n  state = {\r\n    userInfo: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userInfo = localStorage.getItem(\"userInfo\");\r\n    if(userInfo && (Date.now() - (+ new Date(JSON.parse(userInfo).loginAt)) < 24 * 60 * 60 * 1000)) {\r\n      this.setState({userInfo: JSON.parse(userInfo)});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { userInfo } = this.state;\r\n    const needLogin = Object.keys(userInfo).length > 0;\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/admin/login\" render={() => needLogin ? <Redirect to={window.location.search ? decodeURIComponent(window.location.search.split(\"=\")[1]) : \"/admin\"} /> : <Login />} />\r\n            <Route path=\"/admin\" render={() => (\r\n              needLogin ?\r\n                <BasicLayout content={\r\n                    <Switch>\r\n                      <Route path='/admin/gonghao' component={TuoguanRouter} />\r\n                      <Route path='/admin/message' component={MessageRouter} />\r\n                      <Route path='/admin/channel' component={ChannelRouter} />\r\n                      <Route path='/admin/account' component={AccountRouter} />\r\n                      <Route path='/admin/tools' component={ToolsRouter} />\r\n                      <Redirect from=\"/admin\" exact to={userInfo.role === 2 ? \"/admin/gonghao\" : \"/admin/account\"} />\r\n                    </Switch>\r\n                } />\r\n                : <Redirect to={\"/admin/login?redirect=\" + encodeURIComponent(window.location.pathname)} />\r\n            )} />\r\n            <Redirect from=\"/\" exact to=\"/admin\" />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import 'core-js/es/map';\r\nimport 'core-js/es/set';\r\nimport 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './assets/css/reset.css';\r\nimport App from './App.jsx';\r\nimport MD5 from 'crypto-js/md5';\r\nimport Promise from 'promise-polyfill';\r\n\r\n\r\n// // To add to window  解决promise 在ie中未定义的问题\r\nif (!window.Promise) {\r\n  window.Promise = Promise;\r\n}\r\n\r\nReact.Component.prototype.$MD5 = MD5;\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}