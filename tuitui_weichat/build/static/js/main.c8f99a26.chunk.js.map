{"version":3,"sources":["assets/images/login_bg.png","assets/images/logo.png","pages/gonghao/tuoguan/store/reducer.js","utils/http.js","utils/index.js","pages/gonghao/tuoguan/store/actionCreators.js","pages/gonghao/tuoguan/store/constants.js","pages/gonghao/menu/store/constants.js","pages/gonghao/menu/store/reducer.js","pages/gonghao/menu/store/actionCreators.js","pages/gonghao/reply/store/reducer.js","pages/gonghao/reply/store/actionCreators.js","pages/gonghao/reply/store/constants.js","pages/gonghao/reducer.js","pages/message/group/store/constants.js","pages/message/group/store/reducer.js","pages/message/group/store/actionCreators.js","pages/message/kefu/store/reducer.js","pages/message/kefu/store/actionCreators.js","pages/message/kefu/store/constants.js","pages/message/template/store/reducer.js","pages/message/template/store/actionCreators.js","pages/message/template/store/constants.js","pages/message/randomKefu/store/reducer.js","pages/message/randomKefu/store/actionCreators.js","pages/message/randomKefu/store/constants.js","pages/message/reducer.js","pages/channel/links/store/actionCreators.js","pages/channel/links/store/constants.js","pages/channel/links/store/reducer.js","pages/channel/reducer.js","store/reducer.js","store/index.js","pages/login/index.jsx","common/BasicLayout/header/index.jsx","common/BasicLayout/sider/index.jsx","common/BasicLayout/bread/index.jsx","common/BasicLayout/index.jsx","common/components/Button/index.jsx","pages/gonghao/tuoguan/statistics/index.jsx","pages/gonghao/tuoguan/index.jsx","pages/gonghao/tuoguan/group/index.jsx","pages/gonghao/menu/index.jsx","common/components/GraphicMessage/index.jsx","pages/gonghao/menu/components/MenuReplyMessage.jsx","pages/gonghao/menu/edit/index.jsx","pages/gonghao/reply/index.jsx","common/components/SelectGonghao/MultiSelectSider/index.jsx","pages/gonghao/reply/edit/index.jsx","pages/gonghao/timingReply/index.jsx","pages/gonghao/router.jsx","pages/message/group/components/GraphicMessage/index.jsx","pages/message/group/material/index.jsx","pages/message/group/components/EditTextMaterialModal/index.jsx","pages/message/group/textMaterial/index.jsx","common/components/SelectGonghao/SingleSelectByGroup/index.jsx","pages/message/group/history/index.jsx","common/components/Loading/index.jsx","pages/message/group/index.jsx","pages/message/kefu/index.jsx","pages/message/kefu/edit/index.jsx","pages/message/template/index.jsx","common/components/SelectGonghao/SingleSelectModal/index.jsx","pages/message/template/edit/index.jsx","pages/message/randomKefu/index.jsx","pages/message/randomKefu/edit/index.jsx","pages/message/router.jsx","pages/channel/spread/index.jsx","pages/channel/spread/edit/index.jsx","pages/channel/links/index.jsx","pages/channel/links/edit/index.jsx","pages/channel/management/index.jsx","pages/channel/liantiao/index.jsx","pages/channel/zsy/index.jsx","pages/channel/router.jsx","pages/account/index.jsx","pages/account/add/index.jsx","pages/account/router.jsx","pages/tools/tikTok/index.jsx","pages/tools/router.jsx","App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","defaultState","gonghaoTagList","allGonghaoList","originalGonghaoList","gonghaoList","group","status","currentPage","searchName","isSelectTag","selectedTag","isCreate","gonghaoModal","gonghaoInfo","id","attribute","ab_test","statisticsModal","statistics","configList","configForm","type","sex","text","replyType","msgId","key","urlList","axios","defaults","timeout","userInfo","localStorage","getItem","account_id","JSON","parse","_id","interceptors","request","use","config","method","url","indexOf","Date","getTime","data","_t","err","Promise","reject","response","message","concat","resolve","backTop","timer","setInterval","osTop","document","documentElement","scrollTop","body","ispeed","Math","floor","clearInterval","getGroupList","dispatch","get","then","res","code","getAllGonghaoList","length","changePage","page","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","action","wrap","_context","prev","next","stop","_x","apply","this","arguments","changeSearchInput","searchByName","nick_name","params","success","changeSelectValue","value","deleteGonghao","index","Modal","confirm","okText","cancelText","content","title","onOk","jieguan","viewData","item","closeStatisticsModal","addNewGonghao","window","open","openGonghaoModal","closeGonghaoModal","updateGonghaoInfo","console","log","put","objectSpread2","msg","changeGroup","name","changeAttribute","changeAbTest","selectTag","removeTag","tagConfirm","props","post","exist","form","setFieldsValue","deleteTagItem","delete","createForm","history","goBack","updateForm","checkPageAttr","getConfigList","deleteConfig","changeConfigForm","formInfo","createConfigForm","configInfo","updateConfigForm","SAVE_TO_CONTENTS","firstMenuForm","sub_button","messageInfo","articles","menuList","menuForm","stringify","menuInfo","individual","values","codes","contents","menuIndex","secMenuIndex","isSubmit","updateIndex","currentKey","getMenuList","reverse","deleteMenu","handleInfoChange","handleIndividualChange","handleInputChange","randomString","handleSubInputChange","constants","addFirstMenu","editMenu","addSecondMenu","editSecMenu","deleteFirMenu","deleteSubMenu","openModal","submitMenu","validateArray","location","query","resetState","cancelMenu","getAllCodes","allCodes","changeGonghao","targetKeys","initMenuInfo","record","changeMessageInfo","addToList","updateMessageItem","updateCurrentMessage","deleteCurrentMessage","chars","result","i","random","j","warning","replyMessageList","is_nickname","messageIndex","getReplyMessageList","_res$data","deleteReplyMessage","selectGonghao","error","initState","reducer","combineReducers","tuoguan","_start","_end","state","undefined","newState","toConsumableArray","filter","slice","splice","push","_action$item","yesterdayCount","todayCount","menu","_newState$messageInfo","picurl","description","assign","currentMessage","_newState$messageInfo2","reply","COPY","messageList","isComplete","tagList","sendModal","sendTimingModal","date","time","sendInfo","tagId","mediaId","sendTimingInfo","isTiming","timing","updateInfo","media_id","content_source_url","updateMaterialModal","historyList","historyMsgModal","delMsgInfo","msg_id","article_idx","delDate","getGroupGonghao","sent","getMaterial","setTimeout","getMessageList","openUpdateMaterialModal","closeUpdateMaterialModal","updateMaterial","catch","changeContentSourceUrl","Number","getTagList","changeTagId","closeModal","sendMessage","info","openTimingModal","sendTimingMessage","changeTimingState","changeTime","timeType","copy","dipatch","deleteMaterial","clearMaterial","getHistoryList","checkSendState","msg_status","openMsgModal","closeMsgModal","changeArticleIdx","deleteMsg","clearHistory","changeDate","deleteMany","initContent","allMessageList","kefuMessageList","messageType","messageGroup","selectedMessages","updateGroupModal","kefuMessageInfo","img","img_path","channel","timing_time","daily_time_show","delay","tagName","remarks","action_type","isHour","paramsModal","allGroup","previewModal","openid","groupInputVisible","groupValue","getKefuMessageList","sort","messages","createKefuMessage","deleteMessage","sendKefuMessage","take_over","handleChangeSelect","changeSelectedMessages","openUpdateGroupModal","cancelUpdateGroup","updateMoreGroup","changeSearchName","searchInputChange","clearCondition","deleteMultiMsg","changeContentValue","changeMessageValue","addMessage","selectMessage","selectParams","hideParamsModal","getAllGroup","showGroupInput","that","handleGroupInputChange","handleGroupInputConfirm","_res$data2","handleClose","_res$data3","cancelSelectGroup","submitMessage","task","is_timing","is_daily","_d","initKefuMessageInfo","openPreviewModal","closePreviewModal","preview","_ref2","_res$data4","changeOpenId","templateMessageList","confName","selectGonghaoModal","templateId","templateName","templateList","templateInfo","template_id","templateModalVisible","color","getTemplateList","deleteTemplate","sendTemplate","changeConfNickName","searchConfName","test","openSelectModal","openEditModal","closeTemplateModal","changeTemplate","saveTemplateModal","editTemplate","confirmSelect","closeSelectModal","initMessageInfo","defaultContent","local_picurl","randomMessageList","randomMessageInfo","message_id","message_array","message_info","currentIndex","getRandomMessageList","deleteRandomMessage","changeMessageType","deleteMessageItem","saveMessage","cancelAction","initRandomMsgInfo","now","dateTime","unshift","kefu","gonghaoList1","map","gonghaoList2","input","focus","keys","_newState2","template","randomMsg","getData","novelLinkList","domain_name","count","getNovelLinkList","_callee2","_context2","t0","t1","_x2","deleteNovel","changeZIndexState","zIndex","submitNovel","tips","_ref3","_callee3","_context3","_x3","initNovelInfo","getContent","deleteFinalImg","defaultNovelInfo","gonghao_id","pageTitle","capter","imgUrl","finalImg","finalImgUrl","gonghaoLogo","gonghaoLogoUrl","company","bgcolor","suffix","domainModal","novelInfo","domain","links","gonghao","gonghaoReducer","messageReducer","channelReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Login","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","login","bind","assertThisInitialized","loginInfo","username","password","_this2","bgStyle","minHeight","backgroundSize","backgroundRepeat","backgroundAttachment","backgroundImage","require","_react_16_12_0_react_default","createElement","className","style","size","onChange","e","changeInputValue","target","prefix","icon","marginRight","marginBottom","placeholder","onKeyUp","keyCode","onClick","setState","_this3","$MD5","toString","setItem","href","Component","HeaderWrapper","getFieldsValue","_getFieldsValue","trim","md5Password","cancelUpdate","showUpdateModal","_this$state","getFieldDecorator","react_router_dom","to","src","alt","tooltip","avatar","backgroundColor","popover","Fragment","fontSize","logout","modal","visible","onCancel","es_form","labelCol","span","wrapperCol","Item","label","initialValue","rules","required","Form","create","SubMenu","Menu","MenuItem","SideWrapper","keyIndex","role","subMenuList","path","power","selectedKeys","onSelect","selectItem","latestSelectedKey","selectList","find","pathname","split","pathName","MenuListRender","SubMenuList","subItem","mode","theme","defaultOpenKeys","defaultSelectedKeys","breadList","/gonghao","/gonghao/tuoguan","/gonghao/tuoguan/group","/gonghao/tuoguan/error","/gonghao/tuoguan/config","/gonghao/tuoguan/config/create","/gonghao/tuoguan/config/update","/gonghao/menu","/gonghao/menu/create","/gonghao/menu/update","/gonghao/reply","/gonghao/reply/create","/gonghao/reply/update","/gonghao/timingReply","/message","/message/kefu","/message/kefu/create","/message/kefu/update","/message/randomKefu/index","/message/randomKefu/create","/message/randomKefu/update","/message/group","/message/group/material","/message/group/history","/message/template","/message/template/create","/message/template/update","/channel","/channel/novelLinks","/channel/novelLinks/create","/channel/novelLinks/update","/channel/management","/channel/jointDebugging","/channel/zhuishuyun","/channel/spread","/channel/spread/create","/channel/spread/update","/source","/source/group","/source/group/create","/source/group/update","/wechat/qrcode","/wechat/qrcode/create","/wechat/qrcode/update","/tools","/tools/tikTok","/account","/account/list","/account/add","BreadWrapper","getPath","pathSnippets","extraBreadcrumbItems","_","join","breadcrumb","seeDetail","notification","width","marginLeft","withRouter","Content","Layout","Sider","Header","Footer","BasicLayout","layout","BasicLayout_header","collapsible","BasicLayout_sider","card","BasicLayout_bread","ButtonList","danger","update","ButtonWrapper","buttonStyle","background","_this$props","_this$props$backgroun","_this$props$color","_this$props$mr","mr","_this$props$ml","ml","_this$props$mb","mb","_this$props2","_this$props2$size","buttonContent","_this$props2$disabled","disabled","es_button","StatisticsModal","footer","cumulate_user","new_user","cancel_user","y_cumulate_user","y_new_user","y_cancel_user","connect","actionCreators","Search","Input","Option","Select","Grid","Card","Tuoguan","pagination","pageSize","innerWidth","onSearch","es_select","Button","es_list","grid","gutter","sm","xxl","dataSource","renderItem","actions","head_img","shape","marginTop","es_tag","es_radio","Group","gonghao_tuoguan_statistics","GonghaoGroup","columns","dataIndex","align","render","gonghao_index","editGroupModalVisible","group_id","group_index","selectGroup","selectedRowKeys","getGonghaoTagList","openEditGroupModal","closeEditGroupModal","confirmEditGroup","updateGroup","addGroup","deleteGroup","changeGroupValue","searchGroupGonghao","submitGonghaoModal","_this$state2","ids","updateOne","updateMore","openUpdateMoreModal","_res$data5","_res$data6","changeSelectGroup","_this$state3","rowSelection","group_Sider","header","bordered","display","flexDirection","justifyContent","lineHeight","margin","padding","borderRadius","border","group_Content","group_Search","table","rowKey","menuHeader","GraphicMessage","MenuReplyMessage","MessageContent","UploadImg","uploadImg","TextArea","autoSize","minRows","maxRows","_react_16_12_0_react","upload","showUploadList","colon","divider","dashed","common_components_GraphicMessage","offset","EditMenuInfo","keyOrUrl","subKeyOrUrl","menuInfoForm","submitButton","menuModal","individualSex","formItemLayout","top","idx","components_MenuReplyMessage","maxLength","allowClear","transfer","showSearch","labelAlign","es_switch","checked","unMountState","resetMessageInfo","stopPropagation","file","filename","Config","configHeader","lib_default","onCopy","MultiSelectByGroup","AllGonghaoList","search","handleChangeGroup","getGonghaoList","nextProps","MultiSelectSider_Sider","MultiSelectSider_Option","locale","emptyText","MultiSelectSider_Content","EditConfigInfo","TextOrKey","submitForm","SelectGonghao_MultiSelectSider","col","closable","onClose","row","TimingReply","replyList","replyModal","replyInfo","reply_id","submitReplyInfo","getReplyList","_this4","updateReplyInfo","createReplyInfo","_this5","_this6","moment","format","ellipsis","openUpdateModal","deleteReply","offser","changeReplyInfoInput","spellCheck","date_picker","showTime","TuoguanWrapper","react_router","component","from","exact","Replay","editReplay","openSyncModal","news_item","thumb_media_id","local_img_path","placement","groupMessage","syncMaterial","checkedList","docs","closeSyncModal","syncModal","indeterminate","checkAll","onCheckAllChange","nextContext","_this$state4","selectGonghaoList","config_provider","zhCN","message_group_components_GraphicMessage","htmlFor","timeString","time_picker","borderBottom","paddingBottom","es_checkbox","PureComponent","EditTextMaterialModal","openidModalVisible","initMaterial","openOpenidModal","prevTextMaterial","cancelPrev","submitTextMaterial","resetFields","cancelEditMaterial","_this$props2$form","getFieldValue","editMaterialModalVisible","_this$props2$initMate","rows","valuePropName","TextMaterial","textMaterialList","openEditMaterialModal","updateTextMaterial","textMaterial","_this$state$initMater","parseInt","prevState","isSend","xl","userSelect","sendMaterial","components_EditTextMaterialModal","Panel","Collapse","SingleSelectByGroup","activeKey","setCode","PanelList","SingleSelectByGroup_Sider","collapse","accordion","SingleSelectByGroup_Content","History","historyHeader","update_time","tag","arr","titles","dataString","loadingWrapper","textAlign","position","left","Loading","spin","spinning","TabPane","Tabs","historyModalVisible","clearTimeout","imageStyle","height","components_SelectGonghao_SingleSelectByGroup","components_Loading","empty","image","tabs","tabPosition","tab","material","message_group_textMaterial","group_history","Kefu","copyMessage","kefuMessageHeader","sorter","b","columnWidth","showQuickJumper","hideOnSinglePage","current","kefu_Option","tableLayout","EditMessage","isUploadImg","isTextUploadImg","FormItemWrapper","Channel","input_number","min","edit_Option","dateString","borderStyle","ref","onBlur","onPressEnter","borderColor","preventDefault","Template","templateColumns","template_Search","SingleSelectModal","maskClosable","mask","colors","colorWrapperStyle","EditTemplate","GonghaoModal","overflow","_loop","pre","SelectGonghao_SingleSelectModal","template_edit_Option","RandomKefu","EditRandomMessage","GroupRouter","GroupMaterial","EditKefuMSg","EditRandomKefu","Advertise","spreadData","domain_names","dataList","changeTab","tabsRender","spread_TabPane","spreadHeader","wordWrap","goTop","deleteLink","copyLink","animated","defaultActiveKey","tabBarGutter","getSpreadList","_this7","spreadLinkInfo","weights","back_urls","link","back_url","weight","granularity","EditAdvertise","addTag","cancelSelectTag","cancelEdit","submitSpreadLink","initData","isAddWeight","hasLink","hasBackUrl","hasWeight","delLink","isUpdate","updateWeight","enterButton","saveUpdate","addLink","borderRight","deleteTag","paddingLeft","list","NovelLink","copyNovel","cancelGoTop","openDomainModal","closeDomainModal","submitDomain","changeDomainName","novelLinkHeader","checkedChildren","unCheckedChildren","total","rowClassName","EditNovelInfo","deleteModalStyle","boxSizing","enterImg","leaveImg","isFinalUploadImg","isGonghaoUploadLogo","cancel","onMouseOver","onMouseLeave","ts","apiKey","init","menubar","plugins","toolbar","items","min_height","fontsize_formats","font_formats","toolbar_drawer","NovelChannel","platformList","modalVisible","platformInfo","platform","gonghao_name","seruid","addPlatform","changePlatformInfoInput","submitPlatform","editPlatform","deletePlatform","updatePlatform","createPlatform","getPlatformList","eroor","management_Option","ToutiaoLiantiao","td_url","changeTdUrlInput","submitInput","ZhuiShuYun","zsyData","linkModal","linkInfo","getLinks","updateLink","createLink","zsyHeader","submitLink","channel_id","tuiguang_link","ChannelWrapper","Links","EditLinks","Management","Zsy","Spread","EditSpread","Account","accountList","searchValue","updateRemarksIndex","searchAccount","getAccountList","handleChangeSearchValue","lib","changePower","deleteAccount","account_Search","AddAccount","addAccount","validateFields","errors","resetForm","xs","add_Option","AccountRouter","TikTok","newUrl","changeUrl","jiexi","tikTok_Search","controlslist","controls","muted","autoPlay","download","ToolsRouter","App","loginAt","needLogin","es","decodeURIComponent","src_pages_login","src_common_BasicLayout","TuoguanRouter","MessageRouter","ChannelRouter","encodeURIComponent","React","prototype","MD5","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.c8f99a26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login_bg.e3347162.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ad641e9f.png\";","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  // 公号接管\r\n  gonghaoTagList: [],\r\n  allGonghaoList: [],\r\n  originalGonghaoList: [],\r\n  gonghaoList: [],\r\n  group: \"全部\",\r\n  status: \"全部\",\r\n  currentPage: 1,\r\n  searchName: \"\",\r\n  isSelectTag: false,\r\n  selectedTag: \"\",\r\n  isCreate: true,\r\n  gonghaoModal: false,\r\n  gonghaoInfo: {\r\n    group: \"\",\r\n    id: \"\",\r\n    attribute: 0,\r\n    ab_test: 0\r\n  },\r\n  statisticsModal: false,\r\n  statistics: {},\r\n  // 公号配置\r\n  configList: [],\r\n  configForm: {type: 0, sex: 3, attribute: 1, text: \"\", replyType: 0, msgId: null, key: \"\", urlList: []},\r\n\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state)), _start, _end;\r\n  switch (action.type) {\r\n    case constants.GET_GONGHAO_TAG_LIST:\r\n      newState.gonghaoTagList = action.gonghaoTagList;\r\n      return newState;\r\n    case constants.GET_ALL_GONGHAO_LIST:\r\n      newState.allGonghaoList = newState.originalGonghaoList = action.allGonghaoList;\r\n      newState.gonghaoList = action.gonghaoList;\r\n      return newState;\r\n    case constants.CHANGE_SELECT_VALUE:\r\n      newState.group = newState.status = \"全部\";\r\n      newState[action.key] = action.value;\r\n      if(newState[action.key] === \"全部\") {\r\n        newState.gonghaoList = [...newState.allGonghaoList]\r\n      } else{\r\n        newState.gonghaoList = [...newState.allGonghaoList.filter(item => item[action.key] === action.value)]\r\n      }\r\n      return newState;\r\n    case constants.CHANGE_PAGE:\r\n      _start = (action.page - 1) * 10;\r\n      _end = action.page * 10;\r\n      newState.gonghaoList = newState.allGonghaoList.slice(_start, _end);\r\n      newState.currentPage = action.page;\r\n      return newState;\r\n    case constants.CHANGE_SEARCH_INPUT:\r\n      newState.searchName = action.searchName;\r\n      return newState;\r\n    case constants.SEARCH_BY_NAME:\r\n      newState.allGonghaoList = action.allGonghaoList;\r\n      newState.gonghaoList = action.gonghaoList;\r\n      newState.searchName = \"\";\r\n      return newState;\r\n    case constants.OPEN_GONGHAO_MODAL:\r\n      newState.gonghaoModal = true;\r\n      newState.gonghaoInfo = {id: action.id, group: action.group, attribute: action.attribute, ab_test: action.ab_test};\r\n      return newState;\r\n    case constants.CLOSE_GONGHAO_MODAL:\r\n      newState.gonghaoModal = false;\r\n      newState.gonghaoInfo = {attribute: 0};\r\n      return newState;\r\n    case constants.CHANGE_GROUP:\r\n      newState.gonghaoInfo.group = action.name;\r\n      return newState;\r\n    case  constants.CHANGE_ATTRIBUTE:\r\n      newState.gonghaoInfo.attribute = action.attribute;\r\n      return newState;\r\n    case  constants.CHANGE_AB_TEST:\r\n      newState.gonghaoInfo.ab_test = action.ab_test;\r\n      return newState;\r\n    case constants.DELETE_GONGHAO:\r\n      newState.gonghaoList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.SESECT_TAG:\r\n      newState.isSelectTag = true;\r\n      newState.selectedTag = action.selectedTag;\r\n      return newState;\r\n    case constants.REMOVE_TAG:\r\n      newState.isSelectTag = false;\r\n      newState.selectedTag = \"\";\r\n      return newState;\r\n    case constants.TAG_CONFIRM:\r\n      newState.isSelectTag = true;\r\n      newState.selectedTag = action.group;\r\n      action.name && newState.gonghaoTagList.push(action.name);\r\n      return newState;\r\n    case constants.DELETE_TAG_ITEM:\r\n      newState.isSelectTag = false;\r\n      newState.selectedTag = \"\";\r\n      newState.gonghaoTagList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CHECK_PAGE_ATTR:\r\n      newState.isCreate = false;\r\n      return newState;\r\n    case constants.JIEGUAN_GONGHAO:\r\n      newState.gonghaoList[action.index].status = 0;\r\n      return newState;\r\n    case constants.VIEW_DATA:\r\n      let {yesterdayCount, todayCount, nick_name} = action.item;\r\n      newState.statistics = {yesterdayCount, todayCount, ...action.data, nick_name};\r\n      newState.statisticsModal = true;\r\n      return newState;\r\n    case constants.CLOSE_STATTISTTICS_MODAL:\r\n      newState.statisticsModal = false;\r\n      newState.statistics = {};\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from \"axios\";\r\n\r\naxios.defaults.timeout = 10000;\r\n//\r\n// axios.defaults.headers = {\r\n//   'X-Requested-With': 'XMLHttpRequest',\r\n//   \"Content-Type\": \"application/json;charset=utf-8\"\r\n// };\r\nlet userInfo = localStorage.getItem(\"userInfo\")\r\n\r\nlet account_id = userInfo ? JSON.parse(userInfo)._id  : \"\";\r\n\r\naxios.interceptors.request.use(\r\n  config => {\r\n    if(config.method === \"get\" || config.method === \"delete\") {\r\n      if (config.url.indexOf('?') >= 0) {\r\n        config.url += ('&account_id=' + account_id + \"&_t=\" + new Date().getTime());\r\n      } else {\r\n        config.url += ('?account_id=' + account_id + \"&_t=\" + new Date().getTime());\r\n      }\r\n    } else if(config.method === \"post\" || config.method === \"put\") {\r\n      config.data.account_id = account_id;\r\n      config.data._t = new Date().getTime();\r\n    }\r\n    return config;\r\n  },\r\n  err => {\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\n//响应拦截器即异常处理\r\naxios.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  err => {\r\n    if (err && err.response) {\r\n      switch (err.response.status) {\r\n        case 400:\r\n          err.message = \"错误请求\";\r\n          break;\r\n        case 401:\r\n          err.message = \"登录信息失效\";\r\n          break;\r\n        case 403:\r\n          err.message = \"拒绝访问\";\r\n          break;\r\n        case 404:\r\n          err.message = \"请求错误,未找到该资源\";\r\n          break;\r\n        case 405:\r\n          err.message = \"请求方法未允许\";\r\n          break;\r\n        case 408:\r\n          err.message = \"请求超时\";\r\n          break;\r\n        case 500:\r\n          err.message = \"服务器端出错\";\r\n          break;\r\n        case 501:\r\n          err.message = \"网络未实现\";\r\n          break;\r\n        case 502:\r\n          err.message = \"网络错误\";\r\n          break;\r\n        case 503:\r\n          err.message = \"服务不可用\";\r\n          break;\r\n        case 504:\r\n          err.message = \"网络超时\";\r\n          break;\r\n        case 505:\r\n          err.message = \"http版本不支持该请求\";\r\n          break;\r\n        default:\r\n          err.message = `连接错误${err.response.status}`;\r\n      }\r\n    } else {\r\n      err.message = \"连接到服务器失败\";\r\n    }\r\n    return Promise.resolve(err.response);\r\n  }\r\n);\r\n\r\nexport default axios;","const backTop = () => {\r\n  return new Promise((resolve, reject) => {\r\n    let timer;\r\n    timer = setInterval(function () {\r\n      let osTop =\r\n        document.documentElement.scrollTop || document.body.scrollTop;\r\n      let ispeed = Math.floor(-osTop / 1.2);\r\n      document.documentElement.scrollTop = document.body.scrollTop =\r\n        osTop + ispeed;\r\n      if (osTop === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 30);\r\n    resolve(null)\r\n  })\r\n};\r\n\r\nexport default backTop;","import axios from '../../../../utils/http';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\nimport backTop from '../../../../utils';\r\n\r\nexport const getGroupList = () => {\r\n  return (dispatch) => {\r\n    axios.get('/gonghaoTag')\r\n      .then(res => {\r\n        if (res.data.code === 1) {\r\n          let gonghaoTagList = res.data.data;\r\n          const action = {\r\n            type: constants.GET_GONGHAO_TAG_LIST,\r\n            gonghaoTagList\r\n          };\r\n          dispatch(action)\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const getAllGonghaoList = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let allGonghaoList = res.data.data;\r\n          const action = {\r\n            type: constants.GET_ALL_GONGHAO_LIST,\r\n            allGonghaoList,\r\n            gonghaoList: allGonghaoList\r\n          };\r\n          dispatch(action);\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changePage = (page) => {\r\n  return async dispatch => {\r\n    const action = {\r\n      type: constants.CHANGE_PAGE,\r\n      page\r\n    };\r\n    await backTop();\r\n    await dispatch(action);\r\n  }\r\n};\r\n\r\n\r\nexport const changeSearchInput = searchName => ({\r\n  type: constants.CHANGE_SEARCH_INPUT,\r\n  searchName\r\n});\r\n\r\nexport const searchByName = nick_name => {\r\n  return dispatch => {\r\n    axios.get('/conf/find_one', {params: {nick_name}})\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let allGonghaoList = res.data.data,\r\n            gonghaoList = allGonghaoList;\r\n          const action = {\r\n            type: constants.SEARCH_BY_NAME,\r\n            allGonghaoList, gonghaoList\r\n          };\r\n          dispatch(action);\r\n          message.success(\"查询成功\")\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeSelectValue = (key, value) => ({\r\n  type: constants.CHANGE_SELECT_VALUE,\r\n  key, value\r\n});\r\n\r\nexport const deleteGonghao = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认删除吗？\",\r\ntitle: \"提示\",\r\n      onOk: () => {\r\n        axios.get(\"/conf/del\", {\r\n          params: {id}\r\n        }).then(res => {\r\n          const action = {\r\n            type: constants.DELETE_GONGHAO,\r\n            index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"删除成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const jieguan = (code, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认接管吗？\",\r\ntitle: \"提示\",\r\n      onOk: () => {\r\n        axios.get(\"/conf/jieguan\", {\r\n          params: {code}\r\n        }).then(res => {\r\n          const action = {\r\n            type: constants.JIEGUAN_GONGHAO,\r\n            index\r\n          };\r\n          dispatch(action);\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const viewData = item => {\r\n  return dispatch => {\r\n    axios.get('/conf/data/' + item.code)\r\n      .then(res => {\r\n        let data = res.data;\r\n        const action = {\r\n          type: constants.VIEW_DATA,\r\n          item, data\r\n        };\r\n        dispatch(action)\r\n      })\r\n  }\r\n};\r\n\r\nexport const closeStatisticsModal = () => ({\r\n  type: constants.CLOSE_STATTISTTICS_MODAL\r\n});\r\n\r\nexport const addNewGonghao = () => {\r\n  return dispatch => {\r\n    axios.get('/component/componentAuthorize')\r\n      .then(res => {\r\n        window.open(res.data)\r\n      })\r\n  }\r\n};\r\n\r\nexport const openGonghaoModal = (id, group, attribute, ab_test) => ({\r\n  type: constants.OPEN_GONGHAO_MODAL,\r\n  id, group, attribute, ab_test\r\n});\r\n\r\nexport const closeGonghaoModal = () => ({\r\n  type: constants.CLOSE_GONGHAO_MODAL\r\n});\r\n\r\nexport const updateGonghaoInfo = gonghaoInfo => {\r\n  return dispatch => {\r\n    console.log(gonghaoInfo)\r\n    axios.put('/conf', {...gonghaoInfo})\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          message.success(res.data.msg);\r\n          dispatch(closeGonghaoModal());\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeGroup = name => ({\r\n  type: constants.CHANGE_GROUP,\r\n  name\r\n});\r\n\r\nexport const changeAttribute = attribute => ({\r\n  type: constants.CHANGE_ATTRIBUTE,\r\n  attribute\r\n});\r\n\r\nexport const changeAbTest = ab_test => ({\r\n  type: constants.CHANGE_AB_TEST,\r\n  ab_test\r\n});\r\n\r\nexport const selectTag = (selectedTag) => ({\r\n  type: constants.SESECT_TAG,\r\n  selectedTag\r\n});\r\n\r\nexport const removeTag = () => ({\r\n  type: constants.REMOVE_TAG\r\n});\r\n\r\nexport const tagConfirm = (group, props) => {\r\n  return (dispatch) => {\r\n    let name;\r\n    axios.post(\"/gonghaoTag\", {name: group})\r\n      .then(res => {\r\n        if (res.data.exist === 0) {\r\n          name = res.data.data\r\n        }\r\n        props.form.setFieldsValue({group})\r\n        const action = {\r\n          type: constants.TAG_CONFIRM,\r\n          name, group\r\n        };\r\n        dispatch(action)\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteTagItem = (id, index) => {\r\n  return (dispatch) => {\r\n    axios.delete('/gonghaoTag/' + id)\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.DELETE_TAG_ITEM,\r\n          index\r\n        };\r\n        dispatch(action)\r\n      });\r\n  }\r\n};\r\n\r\nexport const createForm = (gonghaoInfo, history) => {\r\n  return (dispatch) => {\r\n    axios.post(\"/conf/create\", gonghaoInfo).then(res => {\r\n      history.goBack();\r\n      const action = {\r\n        type: constants.CREATE_FORM,\r\n        gonghaoInfo\r\n      };\r\n      dispatch(action);\r\n      message.success(\"添加成功\")\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateForm = (gonghaoInfo, history) => {\r\n  return (dispatch) => {\r\n    axios.post(\"/conf/update\", gonghaoInfo).then(res => {\r\n      history.goBack();\r\n      getAllGonghaoList();\r\n      const action = {\r\n        type: constants.UPDATE_FORM,\r\n        gonghaoInfo\r\n      };\r\n      dispatch(action);\r\n      message.success(\"修改成功\")\r\n    });\r\n  }\r\n};\r\n\r\nexport const checkPageAttr = () => ({\r\n  type: constants.CHECK_PAGE_ATTR\r\n});\r\n\r\n// 公号配置\r\n\r\nexport const getConfigList = (code) => {\r\n  return (dispatch) => {\r\n    axios.get('/reply', {params: {code}})\r\n      .then(res => {\r\n        let configList = res.data.data;\r\n        const action = {\r\n          type: constants.GET_CONFIG_LIST,\r\n          configList\r\n        };\r\n        dispatch(action)\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteConfig = (id, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认删除吗？\",\r\n      title: \"提示\",\r\n      onOk: () => {\r\n        axios.get('/reply/del', {params: {id}})\r\n          .then(res => {\r\n          const action = {\r\n            type: constants.DELETE_CONFIG,\r\n            index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"删除成功\")\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n};\r\n\r\nexport const changeConfigForm = (formInfo) => ({\r\n  type: constants.CHANGE_CONFIG_FORM,\r\n  formInfo\r\n});\r\n\r\nexport const createConfigForm = (configInfo, history) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      title: \"确定新建一条规则吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/create\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.CREATE_CONFIG_FORM,\r\n            configInfo\r\n          };\r\n          dispatch(action);\r\n          message.success(\"创建成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const updateConfigForm = (configInfo, history, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      title: \"确定修改吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/update\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.UPDATE_CONFIG_FORM,\r\n            configInfo, index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"修改成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\n","export const GET_GONGHAO_TAG_LIST = \"gonghao/tuoguan/getGonghaoTagList\";\r\nexport const GET_ALL_GONGHAO_LIST = \"gonghao/tuoguan/getAllGonghaoList\";\r\nexport const CHANGE_PAGE = \"gonghao/tuoguan/changePage\";\r\nexport const SEARCH_BY_NAME = \"gonghao/tuoguan/searchByName\";\r\nexport const DELETE_GONGHAO = \"gonghao/tuoguan/deleteGonghao\";\r\nexport const JIEGUAN_GONGHAO = \"gonghao/tuoguan/jieguan\";\r\nexport const VIEW_DATA = \"gonghao/tuoguan/viewData\";\r\nexport const CLOSE_STATTISTTICS_MODAL = \"gonghao/tuoguan/closeStatisticsModal\";\r\nexport const CHANGE_SEARCH_INPUT = \"gonghao/tuoguan/changeSearchInput\";\r\nexport const SESECT_TAG = \"gonghao/tuoguan/selectTag\";\r\nexport const REMOVE_TAG = \"gonghao/tuoguan/removeTag\";\r\nexport const TAG_CONFIRM = \"gonghao/tuoguan/tagConfirm\";\r\nexport const DELETE_TAG_ITEM = \"gonghao/tuoguan/deleteTagItem\";\r\nexport const CREATE_FORM = \"gonghao/tuoguan/createForm\";\r\nexport const UPDATE_FORM = \"gonghao/tuoguan/updateForm\";\r\nexport const CHECK_PAGE_ATTR = \"gonghao/tuoguan/checkPageAttr\";\r\nexport const OPEN_GONGHAO_MODAL = \"gonghao/tuoguan/openGonghaoModal\";\r\nexport const CLOSE_GONGHAO_MODAL = \"gonghao/tuoguan/closeGonghaoModal\";\r\nexport const CHANGE_GROUP = \"gonghao/tuoguan/changeGroup\";\r\nexport const CHANGE_ATTRIBUTE = \"gonghao/tuoguan/changeAttribute\";\r\nexport const CHANGE_AB_TEST = \"gonghao/tuoguan/changeAbTest\";\r\nexport const CHANGE_SELECT_VALUE = \"gonghao/tuoguan/changeSelectValue\";\r\n\r\n// 公号配置\r\nexport const GET_CONFIG_LIST = \"gonghao/tuoguan/getConfigList\";\r\nexport const DELETE_CONFIG = \"gonghao/tuoguan/deleteConfig\";\r\nexport const CREATE_CONFIG_FORM = \"gonghao/tuoguan/createConfigForm\";\r\nexport const UPDATE_CONFIG_FORM = \"gonghao/tuoguan/updateConfigForm\";\r\nexport const CHANGE_CONFIG_FORM = \"gonghao/tuoguan/changeConfigForm\";\r\n","export const GET_MENU_LIST = \"gonghao/menu/getMenuList\";\r\nexport const DELETE_MENU = \"gonghao/menu/deleteMenu\";\r\nexport const HANDLE_INFO_CHANGE = \"gonghao/menu/handleInfoChange\";\r\nexport const HANDLE_INDIVIDUAL_CHANGE = \"gonghao/menu/handleIndividualChange\";\r\nexport const HANDLE_INPUT_CHANGE = \"gonghao/menu/handleInputChange\";\r\nexport const HANDLE_SUB_INPUT_CHANGE = \"gonghao/menu/handleSubInputChange\";\r\nexport const ADD_FIRST_MENU = \"gonghao/menu/addFirstMenu\";\r\nexport const ADD_SECOND_MENU = \"gonghao/menu/addSecondMenu\";\r\nexport const EDIT_MENU = \"gonghao/menu/editMenu\";\r\nexport const EDIT_SEC_MENU = \"gonghao/menu/editSecMenu\";\r\nexport const SUBMIT_MENU = \"gonghao/menu/submitMenu\";\r\nexport const OPEN_MADAL = \"gonghao/menu/openModal\";\r\nexport const CANCEL_MENU = \"gonghao/menu/cancelMenu\";\r\nexport const DELETE_FIR_MENU = \"gonghao/menu/deleteFirMenu\";\r\nexport const DELETE_SUB_MENU = \"gonghao/menu/deleteSubMenu\";\r\nexport const GET_ALL_CODES = \"gonghao/menu/getAllCodes\";\r\nexport const CHANGE_GONGHAO = \"gonghao/menu/changeGonghao\";\r\nexport const INIT_MENU_INFO = \"gonghao/menu/initMenuInfo\";\r\nexport const RESET_STATE = \"gonghao/menu/resetState\";\r\nexport const CHANGE_MESSAGE_INFO = \"gonghao/menu/changeMessageInfo\";\r\nexport const ADD_TO_LIST = \"gonghao/menu/addToList\";\r\nexport const UPDATE_MESSAGE_ITEM = \"gonghao/menu/updateMessageItem\";\r\nexport const UPDATE_CURRENT_MESSAGE = \"gonghao/menu/updateCurrentMessage\";\r\nexport const DELETE_CURRENT_MESSAGE = \"gonghao/menu/deleteCurrentMessage\";\r\nexport const CLEAR_MESSAGE_INFO_INPUT = \"gonghao/menu/clearMessageInfoInput\";\r\nexport const SAVE_TO_CONTENTS = \"gonghao/menu/saveToContents\";\r\nexport const RANDOM_STRING = \"gonghao/menu/randomString\";","import * as constants from './constants';\r\n\r\nconst firstMenuForm = {\r\n  name: \"\",\r\n  type: \"view\",\r\n  key: \"\",\r\n  url: \"\",\r\n  sub_button: []\r\n};\r\n\r\nconst sub_button = {\r\n  name: \"\",\r\n  type: \"view\",\r\n  key: \"\",\r\n  url: \"\"\r\n};\r\n\r\nconst defaultMenuInfo = {\r\n  title: \"\",\r\n  individual: false,\r\n  sex: \"0\",\r\n  values: [],\r\n  codes: [],\r\n  contents: {}\r\n};\r\n\r\nconst messageInfo = {\r\n  replyType: 0,\r\n  articles: [],\r\n  content: \"\"\r\n};\r\n\r\nconst defaultState = {\r\n  menuList: [],\r\n  menuForm: JSON.parse(JSON.stringify(firstMenuForm)),\r\n  menuInfo: JSON.parse(JSON.stringify(defaultMenuInfo)),\r\n  menuIndex: -1,\r\n  sub_button: JSON.parse(JSON.stringify(sub_button)),\r\n  secMenuIndex: -1,\r\n  isSubmit: false,\r\n  updateIndex: -1,\r\n  messageInfo: JSON.parse(JSON.stringify(messageInfo)),\r\n  currentKey: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    // 菜单配置列表页\r\n    case constants.GET_MENU_LIST:    // 获取菜单列表\r\n      newState.menuList = action.menuList;\r\n      return newState;\r\n    case constants.DELETE_MENU:      // 删除菜单\r\n      newState.menuList.splice(action.index, 1);\r\n      return newState;\r\n\r\n    // 编辑菜单栏\r\n    case constants.GET_ALL_CODES:    // 获取所有公号\r\n      newState.allCodes = [...action.allCodes];\r\n      return newState;\r\n    case constants.CHANGE_GONGHAO:   // 选择公号\r\n      newState.menuInfo.codes = newState.targetKeys = [...action.targetKeys];\r\n      return newState;\r\n    case constants.ADD_FIRST_MENU:    // 添加一级菜单\r\n      newState.menuForm = JSON.parse(JSON.stringify(firstMenuForm));\r\n      newState.menuInfo.values.push({...newState.menuForm});\r\n      newState.menuIndex = newState.menuInfo.values.length - 1;\r\n      return newState;\r\n    case constants.EDIT_MENU:         // 编辑一级菜单\r\n      newState.secMenuIndex = -1;\r\n      newState.menuIndex = action.index;\r\n      newState.menuForm = {...action.data};\r\n      if(newState.menuForm.sub_button && newState.menuForm.sub_button.length) {\r\n        newState.sub_button = {...newState.menuForm.sub_button[0]};\r\n        newState.secMenuIndex = 0;\r\n      }\r\n      newState.currentKey = \"\";\r\n      if(newState.menuIndex > -1) {\r\n        if(newState.sub_button.key && newState.secMenuIndex > -1){\r\n          newState.menuInfo.values[newState.menuIndex].key = newState.menuForm.key = \"\";\r\n          newState.currentKey = newState.sub_button.key;\r\n          newState.messageInfo = newState.menuInfo.contents[newState.currentKey]\r\n        } else if(action.data.key) {\r\n          newState.currentKey = newState.menuForm.key = newState.menuInfo.values[newState.menuIndex].key;\r\n          newState.messageInfo = newState.menuInfo.contents[newState.currentKey]\r\n        }\r\n      }\r\n      return newState;\r\n    case constants.DELETE_FIR_MENU:   // 删除一级菜单\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1);\r\n      newState.menuIndex = 0;\r\n      newState.menuForm = newState.menuInfo.values[0] || JSON.parse(JSON.stringify(firstMenuForm));\r\n      delete newState.menuInfo.contents[newState.currentKey];\r\n      newState.menuForm.key &&( newState.messageInfo = newState.menuInfo.contents[newState.menuForm.key]);\r\n      return newState;\r\n    case constants.HANDLE_INPUT_CHANGE:    // 一级菜单input修改\r\n      if(action.name === \"type\") {\r\n        newState.menuForm.url = \"\";\r\n        newState.messageInfo = JSON.parse(JSON.stringify(messageInfo));\r\n        if(action.value === \"click\") {\r\n          // newState.menuForm.key = newState.currentKey = newState.menuInfo.values[newState.menuIndex].key = \"wxb_mn_\" + (newState.menuIndex + 1) + \"_0\";\r\n          newState.menuForm.key = newState.menuInfo.values[newState.menuIndex].key  = newState.currentKey;\r\n        } else {\r\n          newState.menuForm.key = newState.menuInfo.values[newState.menuIndex].key = newState.currentKey = \"\"\r\n        }\r\n      }\r\n      newState.menuForm[action.name] = action.value;\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm});\r\n      return newState;\r\n    case constants.ADD_SECOND_MENU:   // 添加二级菜单\r\n      newState.sub_button = JSON.parse(JSON.stringify(sub_button));\r\n      newState.menuForm.sub_button.push({...newState.sub_button});\r\n      newState.messageInfo = JSON.parse(JSON.stringify(messageInfo));\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm});\r\n      newState.secMenuIndex = newState.menuForm.sub_button.length - 1;\r\n      return newState;\r\n    case constants.EDIT_SEC_MENU:     // 编辑二级菜单\r\n      newState.currentKey && (newState.menuInfo.contents[newState.currentKey] = newState.messageInfo);\r\n      newState.secMenuIndex = action.index;\r\n      newState.sub_button = {...action.data};\r\n      newState.currentKey = \"\";\r\n      if(action.data.key && newState.secMenuIndex > -1) {\r\n        newState.menuInfo.values[newState.menuIndex].key = newState.menuForm.key = \"\";\r\n        newState.currentKey = newState.sub_button.key;\r\n        newState.messageInfo = newState.menuInfo.contents[newState.currentKey]\r\n      }\r\n      return newState;\r\n    case constants.DELETE_SUB_MENU:   // 删除二级菜单\r\n      newState.menuForm.sub_button.splice(newState.secMenuIndex, 1);\r\n      newState.menuInfo.values[newState.menuIndex].sub_button.splice(newState.secMenuIndex, 1);\r\n      newState.secMenuIndex = 0;\r\n      newState.sub_button = newState.menuForm.sub_button[0] ||JSON.parse(JSON.stringify(sub_button));\r\n      delete newState.menuInfo.contents[newState.currentKey];\r\n      newState.sub_button.key && (newState.messageInfo = newState.menuInfo.contents[newState.sub_button.key]);\r\n      return newState;\r\n    case constants.HANDLE_SUB_INPUT_CHANGE:    // 二级菜单input修改\r\n      if(action.name === \"type\") {\r\n        newState.sub_button.url = \"\";\r\n        newState.messageInfo = JSON.parse(JSON.stringify(messageInfo));\r\n        if(action.value === \"click\") {\r\n          newState.menuInfo.values[newState.menuIndex].key = newState.menuForm.key = \"\";\r\n          newState.sub_button.key = newState.currentKey;\r\n        } else {\r\n          newState.sub_button.key = newState.currentKey = \"\"\r\n        }\r\n      }\r\n      newState.sub_button[action.name] = action.value;\r\n      newState.menuForm.sub_button.splice(newState.secMenuIndex, 1, {...newState.sub_button});\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm})\r\n      return newState;\r\n    case constants.CHANGE_MESSAGE_INFO:  // 修改图文消息Input\r\n      if(action.key === \"replyType\") {\r\n        newState.messageInfo = JSON.parse(JSON.stringify(messageInfo));\r\n        newState.messageInfo.replyType = action.value\r\n      } else {\r\n        newState.messageInfo[action.key] = action.value;\r\n      }\r\n      return newState;\r\n    case constants.ADD_TO_LIST:          // 添加到图文消息列表\r\n      const { title, picurl, url, description } = newState.messageInfo;\r\n      newState.messageInfo.articles.push({...{ title, picurl, url, description }});\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      return newState;\r\n    case constants.UPDATE_MESSAGE_ITEM:  // 选择修改的消息\r\n      const { item, index } = action;\r\n      Object.assign(newState.messageInfo, {...item});\r\n      newState.updateIndex = index;\r\n      return newState;\r\n    case constants.UPDATE_CURRENT_MESSAGE:    // 修改当前的消息\r\n      let currentMessage = {\r\n        title: newState.messageInfo.title,\r\n        picurl: newState.messageInfo.picurl,\r\n        url: newState.messageInfo.url,\r\n        description: newState.messageInfo.description};\r\n      newState.messageInfo.articles.splice(newState.updateIndex, 1, {...currentMessage});\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n    case constants.DELETE_CURRENT_MESSAGE:     // 删除当前的消息\r\n      newState.messageInfo.articles.splice(newState.updateIndex, 1);\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n    case constants.CLEAR_MESSAGE_INFO_INPUT:   // 清空messageInfo的input\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n    case constants.SAVE_TO_CONTENTS:           // 保存到contents\r\n      let {articles, content, replyType} = newState.messageInfo;\r\n      let message = {articles, content, replyType};\r\n      newState.currentKey && (newState.menuInfo.contents[newState.currentKey] = {...message});\r\n      return newState;\r\n    case constants.RANDOM_STRING:              // 随机8位字符串\r\n      newState.currentKey = action.result;\r\n      return newState;\r\n\r\n    case constants.OPEN_MADAL:        // 打开选择公号Modal\r\n      newState.isSubmit = true;\r\n      return newState;\r\n    case constants.SUBMIT_MENU:       // 提交菜单栏\r\n      newState.isSubmit = false;\r\n      return newState;\r\n    case constants.CANCEL_MENU:       // 取消提交、关闭Modal\r\n      newState.isSubmit = false;\r\n      return newState;\r\n    case constants.HANDLE_INFO_CHANGE:         // 修改menuInfo\r\n      newState.menuInfo[action.name] = action.value;\r\n      return newState;\r\n    case constants.HANDLE_INDIVIDUAL_CHANGE:   // 是否开启个性化菜单\r\n      newState.menuInfo.individual = action.value;\r\n      Object.assign(newState.menuForm, {\r\n        sex: 0\r\n      });\r\n      return newState;\r\n\r\n    case constants.INIT_MENU_INFO:    // 修改菜单栏时，初始化菜单栏信息\r\n      newState.menuInfo = {...action.record, contents: {}};\r\n      newState.menuInfo.id = action.record._id;\r\n      newState.targetKeys = [...newState.menuInfo.codes];\r\n      newState.menuForm = {...newState.menuInfo.values[0]};\r\n      newState.menuIndex = 0;\r\n      if(newState.menuForm.sub_button && newState.menuForm.sub_button.length) {\r\n        newState.sub_button = {...newState.menuForm.sub_button[0]};\r\n        newState.secMenuIndex = 0;\r\n        if(newState.sub_button.key) {\r\n          newState.currentKey = newState.sub_button.key;\r\n          newState.messageInfo = newState.menuInfo.contents[newState.currentKey];\r\n        }\r\n      } else {\r\n        newState.menuForm.key && (newState.currentKey = newState.menuForm.key);\r\n        newState.currentKey && (newState.messageInfo = newState.menuInfo.contents[newState.currentKey]);\r\n      }\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:       // 重置state\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from '../../../../utils/http';\r\nimport * as constants from './constants';\r\nimport {Modal, message} from 'antd';\r\n\r\n\r\nexport const getMenuList = () => {\r\n  return dispatch => {\r\n    axios.get('/menu')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let menuList = res.data.data.reverse();\r\n          const action = {\r\n            type: constants.GET_MENU_LIST,\r\n            menuList\r\n          };\r\n          dispatch(action);\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteMenu = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/menu/del\", {params: {id: id}})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              const action = {\r\n                type: constants.DELETE_MENU,\r\n                index\r\n              };\r\n              dispatch(action);\r\n              message.success(res.data.success)\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const handleInfoChange = (value, name) => ({\r\n  type: constants.HANDLE_INFO_CHANGE,\r\n  value, name\r\n});\r\n\r\nexport const handleIndividualChange = value => ({\r\n  type: constants.HANDLE_INDIVIDUAL_CHANGE,\r\n  value\r\n});\r\n\r\nexport const handleInputChange = (name, value) => {\r\n  return dispatch => {\r\n    if (value === \"click\") {\r\n      dispatch(randomString());\r\n    }\r\n    dispatch({\r\n      type: constants.HANDLE_INPUT_CHANGE,\r\n      name, value\r\n    })\r\n  }\r\n};\r\n\r\nexport const handleSubInputChange = (name, value) => {\r\n  return dispatch => {\r\n    if (value === \"click\") {\r\n      dispatch(randomString());\r\n      dispatch({type: constants.SAVE_TO_CONTENTS})\r\n    }\r\n    dispatch({\r\n      type: constants.HANDLE_SUB_INPUT_CHANGE,\r\n      name, value\r\n    })\r\n  }\r\n};\r\n\r\nexport const addFirstMenu = () => {\r\n  return dispatch => {\r\n    dispatch({type: constants.SAVE_TO_CONTENTS});\r\n    dispatch({type: constants.ADD_FIRST_MENU});\r\n  }\r\n};\r\n\r\nexport const editMenu = (data, index) => {\r\n  return dispatch => {\r\n    dispatch({type: constants.SAVE_TO_CONTENTS});\r\n    dispatch({\r\n      type: constants.EDIT_MENU,\r\n      index, data\r\n    });\r\n  }\r\n};\r\n\r\nexport const addSecondMenu = () => {\r\n  return dispatch => {\r\n    dispatch({type: constants.SAVE_TO_CONTENTS});\r\n    dispatch({type: constants.ADD_SECOND_MENU});\r\n  }\r\n};\r\n\r\nexport const editSecMenu = (data, index) => {\r\n  return dispatch => {\r\n    if (data.key) {\r\n      dispatch({type: constants.SAVE_TO_CONTENTS})\r\n    }\r\n    dispatch({\r\n      type: constants.EDIT_SEC_MENU,\r\n      index, data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteFirMenu = () => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        dispatch({type: constants.DELETE_FIR_MENU})\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteSubMenu = () => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        dispatch({type: constants.DELETE_SUB_MENU})\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const openModal = () => {\r\n  return dispatch => {\r\n    dispatch({type: constants.OPEN_MADAL});\r\n    dispatch({type: constants.SAVE_TO_CONTENTS});\r\n  }\r\n};\r\n\r\nexport const submitMenu = props => {\r\n  return dispatch => {\r\n    let {menuInfo} = props, {values} = menuInfo;\r\n    let validateResult = validateArray(values);\r\n    validateResult && Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定提交吗？\",\r\n      onOk: () => {\r\n        axios.post(props.history.location.query ? \"/menu/update\" : \"/menu/create\", {...menuInfo})\r\n          .then(res => {\r\n            const action = {\r\n              type: constants.SUBMIT_MENU\r\n            };\r\n            dispatch(action);\r\n            props.history.goBack();\r\n            dispatch(resetState())\r\n          })\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n\r\nexport const cancelMenu = () => ({\r\n  type: constants.CANCEL_MENU\r\n});\r\n\r\n\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        let allCodes = res.data.data;\r\n        const action = {\r\n          type: constants.GET_ALL_CODES,\r\n          allCodes\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeGonghao = targetKeys => ({\r\n  type: constants.CHANGE_GONGHAO,\r\n  targetKeys\r\n});\r\n\r\nexport const initMenuInfo = record => ({\r\n  type: constants.INIT_MENU_INFO,\r\n  record\r\n});\r\n\r\nexport const changeMessageInfo = (key, value) => ({\r\n  type: constants.CHANGE_MESSAGE_INFO,\r\n  key, value\r\n});\r\n\r\nexport const addToList = () => ({\r\n  type: constants.ADD_TO_LIST\r\n});\r\n\r\nexport const updateMessageItem = (item, index) => ({\r\n  type: constants.UPDATE_MESSAGE_ITEM,\r\n  item, index\r\n});\r\n\r\n\r\nexport const updateCurrentMessage = () => ({\r\n  type: constants.UPDATE_CURRENT_MESSAGE\r\n});\r\n\r\nexport const deleteCurrentMessage = () => ({\r\n  type: constants.DELETE_CURRENT_MESSAGE\r\n});\r\n\r\nexport const randomString = () => {\r\n  return dispatch => {\r\n    var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    var result = '';\r\n    for (var i = 8; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];\r\n    dispatch({type: constants.RANDOM_STRING, result})\r\n  }\r\n};\r\n\r\nconst validateArray = values => {\r\n  for(let j = 0; j < values.length; j ++) {\r\n    let item = values[j];\r\n    if(item.sub_button) {\r\n      for (let i = 0; i < item.sub_button.length; i ++) {\r\n        if(item.sub_button[i].type === \"view\") {\r\n          if(!item.sub_button[i].url) {\r\n            message.warning(\"请检查跳转链接输入是否有误\");\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if(item.type === \"view\") {\r\n        if(!item.url) {\r\n          message.warning(\"请检查跳转链接输入是否有误\");\r\n          return false\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return true\r\n};","import * as constants from './constants';\r\n\r\nconst resetFields = {\r\n  type: 0,\r\n  sex: 3,\r\n  attribute: 1,\r\n  replyType: 0,\r\n  codes: [],\r\n  articles: [],\r\n  is_nickname: false,\r\n  content: \"\"\r\n};\r\n\r\nconst defaultState = {\r\n  // 公号配置\r\n  replyMessageList: [],\r\n  messageInfo: JSON.parse(JSON.stringify(resetFields)),\r\n  allCodes: [],\r\n  updateIndex: -1,\r\n  messageIndex: -1\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    // 公号配置\r\n    case constants.GET_REPLY_MESSAGE_LIST:\r\n      newState.replyMessageList = action.replyMessageList.filter(item => item.type !== 1);\r\n      return newState;\r\n    case constants.DELETE_REPLY_MESSAGE:\r\n      newState.replyMessageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = action.allCodes;\r\n      return newState;\r\n    case constants.SELECT_GONGHAO:\r\n      newState.messageInfo.codes = [...action.codes];\r\n      return newState;\r\n    case constants.CHANGE_MESSAGE_INFO:\r\n      newState.messageInfo[action.key] = action.value;\r\n      return newState;\r\n    case constants.ADD_TO_LIST:\r\n      const { title, picurl, url, description } = newState.messageInfo;\r\n      newState.messageInfo.articles.push({...{ title, picurl, url, description }});\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      return newState;\r\n    case constants.UPDATE_MESSAGE_ITEM:\r\n      const { item, index} = action;\r\n      Object.assign(newState.messageInfo, {...item});\r\n      newState.updateIndex = index;\r\n      return newState;\r\n    case constants.UPDATE_CURRENT_MESSAGE:\r\n      let message = {\r\n        title: newState.messageInfo.title,\r\n        picurl: newState.messageInfo.picurl,\r\n        url: newState.messageInfo.url,\r\n        description: newState.messageInfo.description\r\n      };\r\n      newState.messageInfo.articles.splice(newState.updateIndex, 1, {...message});\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n    case constants.DELETE_CURRENT_MESSAGE:\r\n      newState.messageInfo.articles.splice(newState.updateIndex, 1);\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n\r\n    case constants.INIT_STATE:\r\n      newState.messageInfo = JSON.parse(JSON.stringify(action.record));\r\n      newState.messageIndex = action.index;\r\n      if(newState.messageInfo.replyType === 1) {\r\n        Object.assign(newState.messageInfo, newState.messageInfo.articles[0]);\r\n        newState.updateIndex = 0;\r\n      }\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = JSON.parse(JSON.stringify(defaultState));\r\n      return newState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from '../../../../utils/http';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n\r\n// 公号配置\r\n\r\nexport const getReplyMessageList = () => {\r\n  return dispatch => {\r\n    axios.get('/reply')\r\n      .then(res => {\r\n        let {code, msg, data} = res.data;\r\n        if(code === 1) {\r\n          dispatch({\r\n            type: constants.GET_REPLY_MESSAGE_LIST,\r\n            replyMessageList: data.reverse()\r\n          })\r\n        } else {\r\n          dispatch({\r\n            type: constants.GET_REPLY_MESSAGE_LIST,\r\n            replyMessageList:[]\r\n          })\r\n        }\r\n        \r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteReplyMessage = (_id, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认删除吗？\",\r\n      title: \"提示\",\r\n      onOk: () => {\r\n        axios.get('/reply/del', {params: {_id}})\r\n          .then(res => {\r\n          const action = {\r\n            type: constants.DELETE_REPLY_MESSAGE,\r\n            index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"删除成功\")\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          const {data: allCodes} = res.data;\r\n          dispatch({ type: constants.GET_ALL_CODES, allCodes });\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const selectGonghao = codes => ({\r\n  type: constants.SELECT_GONGHAO,\r\n  codes\r\n});\r\n\r\nexport const changeMessageInfo = (key, value) => ({\r\n  type: constants.CHANGE_MESSAGE_INFO,\r\n  key, value\r\n});\r\n\r\nexport const addToList = () => ({\r\n  type: constants.ADD_TO_LIST\r\n});\r\n\r\nexport const updateMessageItem = (item, index) => ({\r\n  type: constants.UPDATE_MESSAGE_ITEM,\r\n  item, index\r\n});\r\n\r\nexport const updateCurrentMessage = () => ({\r\n  type: constants.UPDATE_CURRENT_MESSAGE\r\n});\r\n\r\nexport const deleteCurrentMessage = () => ({\r\n  type: constants.DELETE_CURRENT_MESSAGE\r\n});\r\n\r\nexport const createConfigForm = (configInfo, history) => {\r\n  return (dispatch) => {\r\n    if(!configInfo.codes.length) {\r\n      message.error(\"请选择公号后再试\");\r\n      return\r\n    }\r\n    Modal.confirm({\r\n      title: \"确定新建一条规则吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/create\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.CREATE_CONFIG_FORM,\r\n            configInfo\r\n          };\r\n          dispatch(action);\r\n          message.success(\"创建成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const updateConfigForm = (configInfo, history, index) => {\r\n  return (dispatch) => {\r\n    if(!configInfo.codes.length) {\r\n      message.error(\"请选择公号后再试\");\r\n      return\r\n    }\r\n    Modal.confirm({\r\n      title: \"确定修改吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/update\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.UPDATE_CONFIG_FORM,\r\n            configInfo, index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"修改成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n\r\nexport const initState = (record, index) => ({\r\n  type: constants.INIT_STATE,\r\n  record, index\r\n});","export const GET_REPLY_MESSAGE_LIST = \"gonghao/reply/getReplyMessageList\";\r\nexport const DELETE_REPLY_MESSAGE = \"gonghao/reply/deleteReplyMessage\";\r\n\r\nexport const INIT_STATE = \"gonghao/reply/initState\";\r\n// 获取所有公号\r\nexport const GET_ALL_CODES = \"gonghao/reply/getAllCodes\";\r\nexport const SELECT_GONGHAO = \"gonghao/reply/selectGonghao\";\r\nexport const ADD_TO_LIST = \"gonghao/reply/addToList\";\r\nexport const CHANGE_MESSAGE_INFO = \"gonghao/reply/changeMessageInfo\";\r\nexport const UPDATE_MESSAGE_ITEM = \"gonghao/reply/updateMessageItem\";\r\nexport const UPDATE_CURRENT_MESSAGE = \"gonghao/reply/updateCurrentMessage\";\r\nexport const DELETE_CURRENT_MESSAGE = \"gonghao/reply/deleteCurrentMessage\";\r\n\r\n\r\nexport const CREATE_CONFIG_FORM = \"gonghao/reply/createConfigForm\";\r\nexport const UPDATE_CONFIG_FORM = \"gonghao/reply/updateConfigForm\";\r\n\r\n\r\nexport const RESET_STATE = \"gonghao/reply/resetState\";","import { combineReducers } from 'redux';\r\nimport { reducer as tuoguanReducer } from './tuoguan/store';\r\nimport { reducer as menuReducer } from './menu/store';\r\nimport { reducer as replyReducer } from './reply/store';\r\n\r\nconst reducer = combineReducers({\r\n  tuoguan: tuoguanReducer,\r\n  menu: menuReducer,\r\n  reply: replyReducer,\r\n});\r\n\r\nexport default reducer;","export const GET_GROUP_GONGHAO = \"gonghao/group/getGroupGonghao\";\r\nexport const CHANGE_SEARCH_INPUT = \"gonghao/group/changeSearchInput\";\r\nexport const SEARCH_BY_NAME = \"gonghao/group/search\";\r\n\r\n// 群发素材\r\nexport const GET_GROUP_MATERIAL = \"gonghao/group/getMessageList\";\r\nexport const OPEN_MODAL = \"gonghao/group/openModal\";\r\nexport const OPEN_TIMING_MODAL = \"gonghao/group/openTimingModal\";\r\nexport const CHANGE_TAG_ID = \"gonghao/group/changeTagId\";\r\nexport const GET_TAG_LIST = \"gonghao/group/getTagList\";\r\nexport const CLOSE_MODAL = \"gonghao/group/closeModal\";\r\nexport const CHANGE_TIMING_STATE = \"gonghao/group/changeTimingState\";\r\nexport const CHANGE_TIME = \"gonghao/group/changeTime\";\r\nexport const COPY = \"gonghao/group/copy\";\r\nexport const DELETE_MATERIAL = \"gonghao/group/deleteMaterial\";\r\nexport const CLEAR_MATERIAL = \"gonghao/group/clearMaterial\";\r\nexport const OPEN_UPDATE_MATERIAL_MODAL = \"gonghao/group/openUpdateMaterialModal\";\r\nexport const CLOSE_UPDATE_MATERIAL_MODAL = \"gonghao/group/closeUpdateMaterialModal\";\r\nexport const CHANGE_CONTENT_SOURCE_URL = \"gonghao/group/changeContentSourceUrl\";\r\n\r\n// 群发历史\r\nexport const GET_HISTORY_LIST = \"gonghao/group/getHistoryList\";\r\nexport const OPEN_MSG_MODAL = \"gonghao/group/openMsgModal\";\r\nexport const CLOSE_MSG_MODAL = \"gonghao/group/closeMsgModal\";\r\nexport const CHANGE_ARTICLE_IDX = \"gonghao/group/changeArticleIdx\";\r\nexport const CLEAR_HISTORY = \"gonghao/group/clearHistory\";\r\nexport const CHANGE_DATE = \"gonghao/group/changeDate\";\r\n\r\n\r\n\r\n\r\nexport const RESET_STATE = \"gonghao/group/resetState\";\r\n","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  messageList: [],\r\n  isComplete: true,\r\n  tagList: [],\r\n  sendModal: false,\r\n  sendTimingModal: false,\r\n  date: \"\",\r\n  time: \"\",\r\n  sendInfo: {\r\n    id: \"\",\r\n    tagId: null,\r\n    mediaId: \"\"\r\n  },\r\n  sendTimingInfo: {\r\n    id: \"\",\r\n    tagId: null,\r\n    isTiming: false,\r\n    timing: null\r\n  },\r\n  updateInfo: {\r\n    \"media_id\": \"\",\r\n    \"index\": null,\r\n    \"articles\": {\r\n      \"content_source_url\": \"\"\r\n    },\r\n    id: \"\"\r\n  },\r\n  updateMaterialModal: false,\r\n\r\n  historyList: [],\r\n  historyMsgModal: false,\r\n  delMsgInfo: {\r\n    code: null,\r\n    msg_id: \"\",\r\n    article_idx: \"\"\r\n  },\r\n  delDate: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n\r\n    // 群发素材\r\n\r\n    case constants.GET_GROUP_MATERIAL:\r\n      newState.messageList = [...action.data];\r\n      return newState;\r\n    case constants.GET_TAG_LIST:\r\n      newState.tagList = [...action.data];\r\n      return newState;\r\n    case constants.CHANGE_TAG_ID:\r\n      !action.isTiming && (newState.sendInfo.tagId = action.value)\r\n      action.isTiming && (newState.sendTimingInfo.tagId = action.value)\r\n      return newState;\r\n    case constants.CLOSE_MODAL:\r\n      newState.sendInfo = newState.sendTimingInfo = {};\r\n      newState.sendTimingInfo.timing = Date.now();\r\n      newState.sendTimingInfo.isTiming = newState.sendTimingModal = newState.sendModal = false;\r\n      return newState;\r\n    case constants.OPEN_MODAL:\r\n      newState.sendInfo.id = action.record._id;\r\n      newState.sendInfo.tagId = action.record.tagId;\r\n      newState.sendInfo.mediaId = action.record.media_id;\r\n      newState.sendModal = true;\r\n      return newState;\r\n    case constants.OPEN_TIMING_MODAL:\r\n      newState.sendTimingInfo.id = action.record._id;\r\n      newState.sendTimingInfo.tagId = action.record.tagId;\r\n      newState.sendTimingInfo.isTiming = action.record.isTiming;\r\n      newState.sendTimingInfo.timing = action.record.timing;\r\n      newState.sendTimingModal = true;\r\n      return newState;\r\n    case constants.CHANGE_TIMING_STATE:\r\n      newState.sendTimingInfo.isTiming = action.value;\r\n      return newState;\r\n    case constants.CHANGE_TIME:\r\n      if (action.timeType === \"date\") {\r\n        newState.date = action.time\r\n      } else {\r\n        newState.time = action.time\r\n      }\r\n      let dateTime = new Date(newState.date + \" \" + newState.time);\r\n      newState.sendTimingInfo.timing = dateTime.getTime();\r\n      return newState;\r\n    case constants.COPY:\r\n      newState.messageList.unshift({...action.data});\r\n      return newState;\r\n    case constants.DELETE_MATERIAL:\r\n      newState.messageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CLEAR_MATERIAL:\r\n      newState.messageList = [];\r\n      return newState;\r\n    case constants.OPEN_UPDATE_MATERIAL_MODAL:\r\n      newState.updateMaterialModal = true;\r\n      newState.updateInfo = action.updateInfo;\r\n      return newState;\r\n    case constants.CLOSE_UPDATE_MATERIAL_MODAL:\r\n      newState.updateMaterialModal = false;\r\n      newState.updateInfo.articles.content_source_url = \"\";\r\n      return newState;\r\n    case constants.CHANGE_CONTENT_SOURCE_URL:\r\n      newState.updateInfo.articles.content_source_url = action.content_source_url;\r\n      return newState;\r\n\r\n    // 群发历史\r\n    case constants.GET_HISTORY_LIST:\r\n      newState.historyList = [...action.data];\r\n      return newState;\r\n    case constants.OPEN_MSG_MODAL:\r\n      newState.historyMsgModal = true;\r\n      newState.delMsgInfo.code = action.code;\r\n      newState.delMsgInfo.msg_id = action.msg_id;\r\n      return newState;\r\n    case constants.CLOSE_MSG_MODAL:\r\n      newState.historyMsgModal = false;\r\n      newState.delMsgInfo.article_idx = \"\";\r\n      return newState;\r\n    case constants.CHANGE_ARTICLE_IDX:\r\n      newState.delMsgInfo.article_idx = action.value;\r\n      return newState;\r\n    case constants.CLEAR_HISTORY:\r\n      newState.historyList = [];\r\n      return newState;\r\n    case constants.CHANGE_DATE:\r\n      newState.delDate = action.delDate;\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from '../../../../utils/http';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n// 群发公号\r\nconst getGonghaoList = () => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let gonghaoList = res.data.data;\r\n          const action = {\r\n            type: constants.GET_GROUP_GONGHAO,\r\n            gonghaoList\r\n          };\r\n          resolve(action)\r\n        } else {\r\n          reject('error message: 没有数据')\r\n        }\r\n      })\r\n  });\r\n};\r\n\r\nexport const getGroupGonghao = () => {\r\n  return async dispatch => {\r\n    let action = await getGonghaoList();\r\n    dispatch(action);\r\n  }\r\n};\r\n\r\nexport const getMaterial = code => {\r\n  return dispatch => {\r\n    if(code) {\r\n      axios.get('/material', {params: {code}})\r\n        .then(res => {\r\n          message.success(res.data.success);\r\n          setTimeout(function () {\r\n            dispatch(getMessageList(code))\r\n          }, 3000)\r\n        })\r\n    } else {\r\n      message.warning(\"请选择公号后再试\")\r\n    }\r\n  }\r\n};\r\n\r\nexport const openUpdateMaterialModal = updateInfo => ({\r\n  type: constants.OPEN_UPDATE_MATERIAL_MODAL,\r\n  updateInfo\r\n});\r\n\r\nexport const closeUpdateMaterialModal = () => ({\r\n  type: constants.CLOSE_UPDATE_MATERIAL_MODAL\r\n});\r\n\r\nexport const updateMaterial = (updateInfo, code) => {\r\n  return dispatch => {\r\n    axios.put(\"/material/contentSourceUrl\", {...updateInfo, code})\r\n      .then(res => {\r\n        const { code, msg } = res.data;\r\n        if(code === 1) {\r\n          message.success(msg);\r\n          dispatch(closeUpdateMaterialModal())\r\n        } else {\r\n          message.error(msg)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeContentSourceUrl = content_source_url => ({\r\n  type: constants.CHANGE_CONTENT_SOURCE_URL,\r\n  content_source_url\r\n});\r\n\r\n// 群发素材\r\n\r\nexport const getMessageList = code => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"/material/show\", { params: { code: Number(code) } })\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        const action = {\r\n          type: constants.GET_GROUP_MATERIAL,\r\n          data\r\n        };\r\n        dispatch(action)\r\n      });\r\n  }\r\n};\r\n\r\nexport const getTagList = code => {\r\n  return dispatch => {\r\n    axios.get(\"/material/tag\", {params: {code}})\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        const action = {\r\n          type: constants.GET_TAG_LIST,\r\n          data\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeTagId = (value, isTiming) => ({\r\n  type: constants.CHANGE_TAG_ID,\r\n  value, isTiming\r\n});\r\n\r\nexport const closeModal = () => ({\r\n  type: constants.CLOSE_MODAL\r\n});\r\n\r\nexport const openModal = record => ({\r\n  type: constants.OPEN_MODAL,\r\n  record\r\n});\r\n\r\nexport const sendMessage = sendInfo => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定发送消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/material/sendMsg\", {params: {...sendInfo}})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            dispatch(closeModal());\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const openTimingModal = record => ({\r\n  type: constants.OPEN_TIMING_MODAL,\r\n  record\r\n});\r\n\r\nexport const sendTimingMessage = (sendTimingInfo, code) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定定时发送消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/material/send_timing\", {params: {...sendTimingInfo}})\r\n          .then(res => {\r\n            message.info(\"设置成功\");\r\n            dispatch(getMessageList(code));\r\n            dispatch(closeModal());\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeTimingState = value => ({\r\n  type: constants.CHANGE_TIMING_STATE,\r\n  value\r\n});\r\n\r\nexport const changeTime = (time, timeType) => ({\r\n  type: constants.CHANGE_TIME,\r\n  time, timeType\r\n});\r\n\r\nexport const copy = id => {\r\n  return dipatch => {\r\n    Modal.confirm({\r\n      title: \"确定复制这条素材吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/material/copy\", {id})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              const { data } = res.data;\r\n              message.success(res.data.success);\r\n              const action = {\r\n                type: constants.COPY,\r\n                data\r\n              };\r\n              dipatch(action)\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const deleteMaterial = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条素材吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/material/del\", {params: {id}})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.success(res.data.success);\r\n              const action = {\r\n                type: constants.DELETE_MATERIAL,\r\n                 index\r\n              };\r\n              dispatch(action);\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const clearMaterial = code => {\r\n  return dispatch => {\r\n    if(code) {\r\n      Modal.confirm({\r\n        title: \"确定清空列表吗？\",\r\n        onOk: () => {\r\n          axios.get(\"/material/clear\", { params: { code } })\r\n            .then(res => {\r\n              message.info(res.data.success);\r\n              const action = {\r\n                type: constants.CLEAR_MATERIAL\r\n              };\r\n              dispatch(action);\r\n            });\r\n        }\r\n      })\r\n    } else {\r\n      message.warning(\"请选择公号后再试\")\r\n    }\r\n  }\r\n};\r\n\r\n// 群发历史\r\n\r\nexport const getHistoryList = code => {\r\n  return dispatch => {\r\n    axios.get(\"/history\", {params: {code}})\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        const action = {\r\n          type: constants.GET_HISTORY_LIST,\r\n          data\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const checkSendState = (code, msg_id) => {\r\n  return dispatch => {\r\n    axios.get(\"/history/state\", { params: { code, msg_id }})\r\n      .then(res => {\r\n        message.info(res.data.data.msg_status)\r\n      })\r\n  }\r\n};\r\n\r\nexport const openMsgModal = (code, msg_id) => ({\r\n  type: constants.OPEN_MSG_MODAL,\r\n  code, msg_id\r\n});\r\n\r\nexport const closeMsgModal = () => ({\r\n  type: constants.CLOSE_MSG_MODAL\r\n});\r\n\r\nexport const changeArticleIdx = value => ({\r\n  type: constants.CHANGE_ARTICLE_IDX,\r\n  value\r\n});\r\n\r\nexport const deleteMsg = (delMsgInfo) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除吗？\",\r\n      onOk: () => {\r\n        axios.get('/history/del_msg', {\r\n          params: {...delMsgInfo}\r\n        }).then(res => {\r\n          message.info(res.data.success);\r\n          dispatch(closeMsgModal());\r\n        })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const clearHistory = code => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定清空列表？\",\r\n      onOk: () => {\r\n        axios.get(\"/history/clear\", {params: {code}})\r\n          .then(res => {\r\n            message.success(res.data.success);\r\n            const action = {\r\n              type: constants.CLEAR_HISTORY\r\n            };\r\n            dispatch(action);\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeDate = delDate => ({\r\n  type: constants.CHANGE_DATE,\r\n  delDate\r\n});\r\n\r\nexport const deleteMany = (code, date) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: '确认删除吗?:',\r\n      onOk: () => {\r\n        axios.get('/history/delByDate', {params: {date, code}})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            dispatch(getHistoryList())\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n","import * as constants from './constants';\r\n\r\nconst initContent = {\r\n  description: \"\",\r\n  title: \"\",\r\n  url: \"\",\r\n  picurl: \"\"\r\n};\r\n\r\nconst defaultState = {\r\n  allMessageList: [],\r\n  kefuMessageList: [],\r\n  messageType: 4,\r\n  messageGroup: \"全部分组\",\r\n  selectedMessages: [],\r\n  updateGroupModal: false,\r\n  group: \"\",\r\n  currentPage: 1,\r\n  searchName: undefined,\r\n  kefuMessageInfo: {\r\n    contents: [],\r\n    type: 0,\r\n    img: \"\",\r\n    img_path: \"\",\r\n    channel: 1,\r\n    sex: \"all\",\r\n    timing_time: new Date(),\r\n    daily_time_show: new Date(),\r\n    delay: 5,\r\n    tagId: \"\",\r\n    tagName: \"\",\r\n    codes: [],\r\n    remarks: \"\",\r\n    action_type: 2,\r\n    isHour: 0,\r\n    group: \"未分组\"\r\n  },\r\n  content: initContent,\r\n  messageIndex: -1,\r\n  paramsModal: false,\r\n  allCodes: [],\r\n  allGroup: [],\r\n  previewModal: false,\r\n  openid: \"\",\r\n  groupInputVisible: false,\r\n  groupValue: \"\",\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case constants.GET_KEFU_MESSAGE_LIST:\r\n      newState.allMessageList = [...action.kefuMessageList];\r\n      if(newState.messageGroup !== \"全部分组\") {\r\n        newState.kefuMessageList = newState.allMessageList.filter(item => item.group === newState.messageGroup)\r\n      } else if (newState.searchName) {\r\n        newState.kefuMessageList = newState.allMessageList.filter(item => {\r\n          let gonghaoList1 = [];\r\n          item.gonghaoList.map(i => {\r\n            i.nick_name === newState.searchName && gonghaoList1.push(i)\r\n          });\r\n          return gonghaoList1.length > 0\r\n        })\r\n      } else {\r\n        newState.kefuMessageList = newState.allMessageList\r\n      }\r\n      return newState;\r\n    case constants.CREATE_KEFU_MESSAGE:\r\n      newState.kefuMessageList.unshift({...action.data});\r\n      return newState;\r\n    case constants.DELETE_LAST_MESSAGE:\r\n      newState.kefuMessageList = [];\r\n      return newState;\r\n    case constants.DELETE_MESSAGE:\r\n      newState.kefuMessageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.HANDLE_CHANGE_SELECT:\r\n      newState.messageType = 4;\r\n      newState.messageGroup = \"全部分组\";\r\n      if(action.name === \"messageType\") {\r\n        const { value: type } = action;\r\n        newState.messageType = type;\r\n        type === 0 && (newState.kefuMessageList = newState.allMessageList.filter(item => !(item.delay || item.is_timing || item.is_daily)));\r\n        type === 1 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item.delay));\r\n        type === 2 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item.is_timing));\r\n        type === 3 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item.is_daily));\r\n        type === 4 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item));\r\n      } else {\r\n        const { value: group } = action;\r\n        newState.messageGroup = group;\r\n        if( group === \"全部分组\") {\r\n          newState.kefuMessageList = newState.allMessageList.filter(item => item.group !== \"全部消息\")\r\n        } else {\r\n          newState.kefuMessageList = newState.allMessageList.filter(item => item.group === group)\r\n        }\r\n      }\r\n      if(newState.searchName) {\r\n        newState.kefuMessageList = newState.kefuMessageList.filter(item => {\r\n          let gonghaoList2 = [];\r\n          item.gonghaoList.map(i => {\r\n            i.nick_name === newState.searchName && gonghaoList2.push(i)\r\n          });\r\n          return gonghaoList2.length > 0\r\n        })\r\n      }\r\n      return newState;\r\n    case constants.CHANGE_SELECTED_MESSAGES:\r\n      newState.selectedMessages = action.selectedMessages;\r\n      return newState;\r\n    case constants.OPEN_UPDATE_GROUP_MODAL:\r\n      newState.updateGroupModal = true;\r\n      return newState;\r\n    case constants.CHANGE_GROUP:\r\n      newState.group = action.value;\r\n      return newState;\r\n    case constants.CANCEL_UPDATE_GROUP:\r\n      newState.updateGroupModal = false;\r\n      newState.group = \"\";\r\n      return newState;\r\n    case constants.UPDATE_MORE_GROUP:\r\n      newState.selectedMessages = [];\r\n      return newState;\r\n    case constants.CHANGE_SEARCH_NAME:\r\n      let { allMessageList } = newState;\r\n      newState.searchName = action.value;\r\n      newState.messageType = 4;\r\n      newState.messageGroup = \"全部分组\";\r\n      newState.kefuMessageList = allMessageList.filter(item => {\r\n        let gonghaoList = [];\r\n        item.gonghaoList.map(i => {\r\n          i.nick_name === action.value && gonghaoList.push(i)\r\n        });\r\n        return gonghaoList.length > 0\r\n      });\r\n      if(newState.kefuMessageList.length > 0) {\r\n        action.message.success(\"查询成功\");\r\n      } else {\r\n        newState.kefuMessageList = allMessageList;\r\n        action.value && action.message.warning(\"没有查询到相关数据\");\r\n      }\r\n      return newState;\r\n    case constants.SEARCH_INPUT_VALUE:\r\n      newState.searchName = action.value;\r\n      !newState.searchName && (newState.kefuMessageList = newState.allMessageList);\r\n      return newState;\r\n    case constants.CLEAR_CONDITION:\r\n      newState.group = newState.searchName = \"\";\r\n      newState.messageGroup = \"全部分组\";\r\n      newState.currentPage = 1;\r\n      newState.kefuMessageList = newState.allMessageList;\r\n      return newState;\r\n\r\n    // 编辑客服消息\r\n    case constants.CHANGE_CONTENT_VALUE:\r\n      newState.content[action.name] = action.value;\r\n      newState.kefuMessageInfo.contents.splice(newState.messageIndex, 1, newState.content);\r\n      return newState;\r\n    case constants.CHANGE_MESSAGE_VALUE:\r\n      newState.kefuMessageInfo[action.name] = action.value;\r\n      if(action.name === \"type\") {\r\n        newState.content = initContent;\r\n        newState.kefuMessageInfo.contents = [];\r\n        newState.kefuMessageInfo.img = newState.kefuMessageInfo.img_path =  \"\";\r\n        newState.messageIndex = -1;\r\n        if(action.value === 0) {\r\n          newState.kefuMessageInfo.contents.push(newState.content);\r\n          newState.messageIndex = 0;\r\n        }\r\n      }\r\n      if(action.name === \"channel\") {\r\n        Object.assign(newState.kefuMessageInfo, {timing_time: new Date(), delay: 5, daily_time_show: new Date()})\r\n      }\r\n      return newState;\r\n    case constants.ADD_MESSAGE:\r\n      newState.content = initContent;\r\n      newState.kefuMessageInfo.contents.push(newState.content);\r\n      newState.messageIndex = newState.kefuMessageInfo.contents.length - 1;\r\n      return newState;\r\n    case constants.SELECT_MESSAGE:\r\n      newState.content = {...action.info};\r\n      newState.messageIndex = action.index;\r\n      return newState;\r\n    case constants.SELECT_PARAMS:\r\n      newState.paramsModal = true;\r\n      return newState;\r\n    case constants.HIDE_PARAMS_MODAL:\r\n      newState.paramsModal = false;\r\n      return newState;\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = [...action.allCodes];\r\n      return newState;\r\n    case constants.SELECT_GONGHAO:\r\n      newState.kefuMessageInfo.codes = [...action.codes];\r\n      return newState;\r\n    case constants.INIT_KEFU_MESSAGE_INFO:\r\n      newState.kefuMessageInfo = {...action.query};\r\n      newState.kefuMessageInfo.contents.length > 0 && (newState.content = {...newState.kefuMessageInfo.contents[0]});\r\n      if(newState.kefuMessageInfo.type === 0) newState.messageIndex = 0;\r\n      if(action.query.task) {\r\n        newState.kefuMessageInfo.channel = 1\r\n      } else if(action.query.is_timing) {\r\n        newState.kefuMessageInfo.channel = 2\r\n      } else if(action.query.is_daily) {\r\n        newState.kefuMessageInfo.channel = 3;\r\n      } else {\r\n        newState.kefuMessageInfo.channel = 0\r\n      }\r\n      newState.kefuMessageInfo.isHour && (newState.kefuMessageInfo.delay = newState.kefuMessageInfo.delay/60);\r\n      !newState.kefuMessageInfo.isHour && (newState.kefuMessageInfo.isHour = 0);\r\n      return newState;\r\n    case constants.OPEN_PREVIEW_MODAL:\r\n      newState.previewModal = true;\r\n      return newState;\r\n    case constants.CLOSE_PREVIEW_MODAL:\r\n      newState.previewModal = false;\r\n      newState.openid = \"\";\r\n      return newState;\r\n    case constants.CHANGE_OPENID:\r\n      newState.openid = action.value;\r\n      return newState;\r\n\r\n    case constants.GET_ALL_GROUP:\r\n      newState.allGroup = [...action.allGroup];\r\n      return newState;\r\n    case constants.SHOW_GROUP_INPUT:\r\n      newState.groupInputVisible = true;\r\n      setTimeout(function () {\r\n        action.that.input.focus();\r\n      }, 500);\r\n      return newState;\r\n    case constants.HANDLE_GROUP_INPUT_CHANGE:\r\n      newState.groupValue = action.value;\r\n      return newState;\r\n    case constants.HANDLE_GROUP_INPUT_CONFIRM:\r\n      Object.keys(action.data).length > 0 && newState.allGroup.push(action.data);\r\n      newState.groupInputVisible = false;\r\n      newState.groupValue = \"\";\r\n      return newState;\r\n    case constants.DELETE_GROUP:\r\n      newState.allGroup.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CANCEL_SELECT_GROUP:\r\n      newState.kefuMessageInfo.group = \"未分组\";\r\n      return newState;\r\n\r\n    case constants.CHANGE_PAGE:\r\n      newState.currentPage = action.page;\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      let {currentPage, messageGroup, searchName} = newState;\r\n      newState = defaultState;\r\n      newState.currentPage = currentPage;\r\n      newState.messageGroup = messageGroup;\r\n      newState.searchName = searchName;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from '../../../../utils/http';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n// 群发公号\r\nconst getData = () => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(\"/message\", {params: {sort: \"_id\"}})\r\n      .then(res => {\r\n        if (res.data.messages.length > 0) {\r\n          let kefuMessageList = res.data.messages;\r\n          const action = {\r\n            type: constants.GET_KEFU_MESSAGE_LIST,\r\n            kefuMessageList\r\n          };\r\n          resolve(action)\r\n        } else {\r\n          reject('error message: 没有数据')\r\n        }\r\n      })\r\n  });\r\n};\r\n\r\nexport const getKefuMessageList = () => {\r\n  return async dispatch => {\r\n    let action = await getData();\r\n    dispatch(action);\r\n  }\r\n};\r\n\r\nexport const createKefuMessage = record => {\r\n  return dispatch => {\r\n    record.delay && record.isHour && (record.delay /= 60);\r\n    Modal.confirm({\r\n      title: \"确定新增一条客服消息吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/message/create\", {...record})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              let data = res.data.data\r\n              message.info(record._id ? \"复制成功\" : res.data.success);\r\n              const action = {\r\n                type: constants.CREATE_KEFU_MESSAGE,\r\n                data\r\n              };\r\n              dispatch(action);\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const deleteMessage = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条客服消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/message/delete\", { params: { id } })\r\n          .then(res => {\r\n            dispatch(getKefuMessageList());\r\n            if (res.data.data.length === 0) {\r\n              message.info(\"已删除最后一条数据\");\r\n              const action = {\r\n                type: constants.DELETE_LAST_MESSAGE\r\n              };\r\n              dispatch(action);\r\n            } else {\r\n              message.info(res.data.success);\r\n              const action = {\r\n                type: constants.DELETE_MESSAGE,\r\n                index\r\n              };\r\n              dispatch(action);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const sendKefuMessage = (id, tagId) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定发送消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/message/send\", { params: { id, tagId, take_over: true } })\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const handleChangeSelect = (value, name) => ({\r\n  type: constants.HANDLE_CHANGE_SELECT,\r\n  value, name\r\n});\r\n\r\nexport const changeSelectedMessages = selectedMessages => ({\r\n  type: constants.CHANGE_SELECTED_MESSAGES,\r\n  selectedMessages\r\n});\r\n\r\nexport const openUpdateGroupModal = () => ({\r\n  type: constants.OPEN_UPDATE_GROUP_MODAL\r\n});\r\n\r\nexport const changeGroup = value => ({\r\n  type: constants.CHANGE_GROUP,\r\n  value\r\n});\r\n\r\nexport const cancelUpdateGroup = () => ({\r\n  type: constants.CANCEL_UPDATE_GROUP\r\n});\r\n\r\nexport const updateMoreGroup = (selectedMessages, group) => {\r\n  return dispatch => {\r\n    axios.put('/message/updateGroup', {selectedMessages, group})\r\n      .then(res => {\r\n        const { code, msg } = res.data;\r\n        if(code === 1) {\r\n          message.success(msg);\r\n          dispatch(getKefuMessageList());\r\n          dispatch({type: constants.UPDATE_MORE_GROUP});\r\n          dispatch(cancelUpdateGroup());\r\n        } else {\r\n          message.error(msg)\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeSearchName = value => ({\r\n  type: constants.CHANGE_SEARCH_NAME,\r\n  value, message\r\n});\r\n\r\nexport const searchInputChange = value => ({\r\n  type: constants.SEARCH_INPUT_VALUE,\r\n  value\r\n});\r\n\r\nexport const clearCondition = () => ({\r\n  type: constants.CLEAR_CONDITION\r\n});\r\n\r\nexport const deleteMultiMsg = selectedMessages => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除选中的客服消息吗？\",\r\n      onOk: () => {\r\n        axios.delete(\"/message/delSelect\", {params: {selectedMessages}})\r\n          .then(res => {\r\n            message.success(res.data.msg);\r\n            dispatch(getKefuMessageList())\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\n// 编辑客服消息\r\nexport const changeContentValue = (value, name) => ({\r\n  type: constants.CHANGE_CONTENT_VALUE,\r\n  value, name\r\n});\r\n\r\nexport const changeMessageValue = (value, name) => ({\r\n  type: constants.CHANGE_MESSAGE_VALUE,\r\n  value, name\r\n});\r\n\r\n\r\nexport const addMessage = () => ({\r\n  type: constants.ADD_MESSAGE\r\n});\r\n\r\nexport const selectMessage = (info, index) => ({\r\n  type: constants.SELECT_MESSAGE,\r\n  info, index\r\n});\r\n\r\nexport const selectParams = () => ({\r\n  type: constants.SELECT_PARAMS\r\n});\r\n\r\nexport const hideParamsModal = () => ({\r\n  type: constants.HIDE_PARAMS_MODAL\r\n});\r\n\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        let allCodes = res.data.data;\r\n        const action = {\r\n          type: constants.GET_ALL_CODES,\r\n          allCodes\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const getAllGroup = () => {\r\n  return dispatch => {\r\n    axios.get('/messageGroup')\r\n      .then(res => {\r\n        let {data: allGroup} = res.data;\r\n        const action = {\r\n          type: constants.GET_ALL_GROUP,\r\n          allGroup\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const showGroupInput = that => ({\r\n  type: constants.SHOW_GROUP_INPUT,\r\n  that\r\n});\r\n\r\nexport const handleGroupInputChange = value => ({\r\n  type: constants.HANDLE_GROUP_INPUT_CHANGE,\r\n  value\r\n});\r\n\r\nexport const handleGroupInputConfirm = group => {\r\n  return dispatch => {\r\n    if(group) {\r\n      axios.post('/messageGroup', {group})\r\n        .then(res => {\r\n          const {code, msg, data} = res.data;\r\n          if (code === 1) {\r\n            message.success(msg);\r\n            dispatch({type: constants.HANDLE_GROUP_INPUT_CONFIRM, data})\r\n          } else {\r\n            message.error(msg);\r\n          }\r\n        })\r\n    } else {\r\n      dispatch({type: constants.HANDLE_GROUP_INPUT_CONFIRM, data: {}})\r\n    }\r\n  }\r\n};\r\n\r\nexport const handleClose = (_id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这个分组吗？\",\r\n      onOk: () => {\r\n        axios.delete(\"/messageGroup\", {params: {_id}})\r\n          .then(res => {\r\n            const {code, msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              dispatch({type: constants.DELETE_GROUP, index})\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const cancelSelectGroup = () => ({\r\n  type: constants.CANCEL_SELECT_GROUP\r\n});\r\n\r\nexport const selectGonghao = codes => ({\r\n  type: constants.SELECT_GONGHAO,\r\n  codes\r\n});\r\n\r\nexport const submitMessage = (info, history, allCodes) => {\r\n  return dispatch => {\r\n    info.gonghaoList = allCodes.filter(item => info.codes.indexOf(item.code) > -1);\r\n    !info.img && info.contents.length > 0 && (info.img = info.contents[0].picurl);\r\n    info.channel === 1 ? info.task = true : info.task = false;\r\n    info.channel === 2 ? info.is_timing = true : info.is_timing = false;\r\n    if(info.channel !== 1) {\r\n      info.delay = null;\r\n    }\r\n    if(info.channel === 3) {\r\n      info.is_daily = true;\r\n      if(info.daily_time_show._d) {\r\n        info.daily_time_show = new Date(info.daily_time_show._d).getTime()\r\n      } else {\r\n        info.daily_time_show = new Date(info.daily_time_show).getTime()\r\n      }\r\n    } else {\r\n      info.is_daily = false;\r\n      info.daily_time_show = 0;\r\n    }\r\n    if(!info.codes.length) {\r\n      message.error(\"请选择公号后再试\");\r\n      return\r\n    }\r\n    Modal.confirm({\r\n      title: \"确定提交吗？\",\r\n      onOk: () => {\r\n        let url = \"/message/create\";\r\n        if(history.location.query) {\r\n          url = \"/message/update\";\r\n          info.id = info._id\r\n        }\r\n        axios.post(url, {...info})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.info(res.data.success);\r\n              history.goBack();\r\n              dispatch(resetState());\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const initKefuMessageInfo = query => {\r\n  return dispatch => {\r\n    if (query.tagId) {\r\n      axios.get(\"/tag/get_name\", { params: { tagId: query.tagId } })\r\n        .then(res => {\r\n          query.tagName = res.data.data.name;\r\n          const action = {\r\n            type: constants.INIT_KEFU_MESSAGE_INFO,\r\n            query\r\n          };\r\n          dispatch(action);\r\n        });\r\n    } else {\r\n      const action = {\r\n        type: constants.INIT_KEFU_MESSAGE_INFO,\r\n        query\r\n      };\r\n      dispatch(action);\r\n    }\r\n\r\n  }\r\n};\r\n\r\nexport const openPreviewModal = () => ({\r\n  type: constants.OPEN_PREVIEW_MODAL\r\n});\r\n\r\nexport const closePreviewModal = () => ({\r\n  type: constants.CLOSE_PREVIEW_MODAL\r\n});\r\n\r\nexport const preview = ({codes, type, contents, img_path}, openid) => {\r\n  return dispatch => {\r\n    axios.post('/message/preview', {codes, type, contents, img_path, openid})\r\n      .then(res => {\r\n        const { code, msg } = res.data;\r\n        if(code === 1) {\r\n          message.success(msg);\r\n        } else {\r\n          message.warning(msg);\r\n        }\r\n        dispatch(closePreviewModal());\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeOpenId = value => ({\r\n  type: constants.CHANGE_OPENID,\r\n  value\r\n});\r\n\r\nexport const changePage = page => ({\r\n  type: constants.CHANGE_PAGE,\r\n  page\r\n});\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n","export const GET_KEFU_MESSAGE_LIST = \"message/kefu/getKefuMessageList\";\r\nexport const CREATE_KEFU_MESSAGE = \"message/kefu/createKefuMessage\";\r\nexport const DELETE_LAST_MESSAGE = \"message/kefu/deleteLastMessage\";\r\nexport const DELETE_MESSAGE = \"message/kefu/deleteMessage\";\r\nexport const CHANGE_CONTENT_VALUE = \"message/kefu/changeContentValue\";\r\nexport const CHANGE_MESSAGE_VALUE = \"message/kefu/changeMessageValue\";\r\nexport const HANDLE_CHANGE_SELECT = \"message/kefu/handleChangeSelect\";\r\nexport const CHANGE_SELECTED_MESSAGES = \"message/kefu/changeSelectedMessages\";\r\nexport const OPEN_UPDATE_GROUP_MODAL = \"message/kefu/openUpdateGroupModal\";\r\nexport const CHANGE_GROUP = \"message/kefu/changeGroup\";\r\nexport const CANCEL_UPDATE_GROUP = \"message/kefu/cancelUpdateGroup\";\r\nexport const UPDATE_MORE_GROUP = \"message/kefu/updateMoreGroup\";\r\nexport const CHANGE_SEARCH_NAME = \"message/kefu/changeSearchName\";\r\nexport const SEARCH_INPUT_VALUE = \"message/kefu/searchInputChange\";\r\nexport const CLEAR_CONDITION = \"message/kefu/clearCondition\";\r\n\r\nexport const ADD_MESSAGE = \"message/kefu/addMessage\";\r\nexport const SELECT_MESSAGE = \"message/kefu/selectMessage\";\r\nexport const GET_ALL_CODES = \"message/kefu/getAllCodes\";\r\nexport const SELECT_GONGHAO = \"message/kefu/selectGonghao\";\r\nexport const SELECT_PARAMS = \"message/kefu/selectParams\";\r\nexport const HIDE_PARAMS_MODAL = \"message/kefu/hideParamsModal\";\r\nexport const INIT_KEFU_MESSAGE_INFO = \"message/kefu/initKefuMessageInfo\";\r\nexport const SUBMIT_MESSAGE = \"message/kefu/submitMessage\";\r\nexport const OPEN_PREVIEW_MODAL = \"message/kefu/openPreviewModal\";\r\nexport const CLOSE_PREVIEW_MODAL = \"message/kefu/closePreviewModal\";\r\nexport const CHANGE_OPENID = \"message/kefu/changeOpenId\";\r\n\r\nexport const GET_ALL_GROUP = \"message/kefu/getAllGroup\";\r\nexport const SHOW_GROUP_INPUT = \"message/kefu/showGroupInput\";\r\nexport const HANDLE_GROUP_INPUT_CHANGE = \"message/kefu/handleGroupInputChange\";\r\nexport const HANDLE_GROUP_INPUT_CONFIRM = \"message/kefu/handleGroupInputConfirm\";\r\nexport const DELETE_GROUP = \"message/kefu/handleClose\";\r\nexport const CANCEL_SELECT_GROUP = \"message/kefu/cancelSelectGroup\";\r\n\r\nexport const CHANGE_PAGE = \"message/kefu/changePage\";\r\n\r\n\r\nexport const RESET_STATE = \"message/kefu/resetState\";\r\n","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  templateMessageList: [],\r\n  confName: \"\",\r\n\r\n  selectGonghaoModal: true,\r\n  messageInfo: {\r\n    name: \"\",\r\n    code: null,\r\n    templateId: \"\",\r\n    templateName: \"\",\r\n    url: \"\",\r\n    sex: \"all\",\r\n    content: {},\r\n    is_timing: false,\r\n    timing_time: new Date()\r\n  },\r\n  allCodes: [],\r\n  templateList: [],\r\n  templateInfo: {\r\n    template_id: \"\",\r\n  },\r\n  name: \"\",\r\n  templateModalVisible: false,\r\n  content: {\r\n    value: \"\",\r\n    color: \"#000\"\r\n  },\r\n  previewModal: false,\r\n  openid: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n\r\n    case constants.GET_TEMPLATE_LIST:\r\n      newState.templateMessageList = action.data;\r\n      newState.confName = \"\";\r\n      return newState;\r\n    case constants.DELETE_TEMPLATE:\r\n      newState.templateMessageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CHANGE_CONF_NAME:\r\n      newState.confName = action.value;\r\n      return newState;\r\n    case constants.SEARCH_CONF_NAME:\r\n      newState.templateMessageList = action.data;\r\n      newState.confName = \"\";\r\n      return newState;\r\n    case constants.SEND_TEMPLATE_MSG:\r\n      let templateMessageList = newState.templateMessageList.map(item => {\r\n        item._id === action.id && (item.status = 1);\r\n        return item\r\n      });\r\n      newState.templateMessageList = templateMessageList;\r\n      return newState;\r\n\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = action.allCodes;\r\n      return newState;\r\n\r\n    case constants.OPEN_SELECT_MODAL:\r\n      newState.selectGonghaoModal = true;\r\n      return newState;\r\n    case constants.OPEN_EDIT_MODAL:\r\n      newState.name = action.key;\r\n      newState.content = action.content;\r\n      newState.templateModalVisible = true;\r\n      return newState;\r\n    case constants.CLOSE_TEMPLATE_MODAL:\r\n      newState.name = \"\";\r\n      newState.templateModalVisible = false;\r\n      newState.content = { value: \"\", color: \"#000\" };\r\n      return newState;\r\n    case constants.CHANGE_TEMPLATE:\r\n      newState.templateInfo = newState.templateList.filter(item => item.template_id === action.value)[0];\r\n      newState.messageInfo.templateId = newState.templateInfo.template_id;\r\n      newState.messageInfo.content = {};\r\n      for(let key in newState.templateInfo.data) {\r\n        newState.messageInfo.content[key] = {\r\n          value: \"\",\r\n          color: \"#000\"\r\n        }\r\n      }\r\n      return newState;\r\n    case constants.EDIT_TEMPLATE:\r\n      newState.content[action.key] = action.value;\r\n      return newState;\r\n    case constants.SAVE_TEMPLATE_MODAL:\r\n      newState.messageInfo.content[newState.name] = newState.content;\r\n      newState.name = \"\";\r\n      newState.templateModalVisible = false;\r\n      newState.content = { value: \"\", color: \"#000\" };\r\n      return newState;\r\n\r\n    case constants.CHANGE_MESSAGE_INFO:\r\n      newState.messageInfo[action.key] = action.value;\r\n      if(action.key === \"is_timing\") {\r\n        newState.messageInfo.timing_time = new Date()\r\n      }\r\n      return newState;\r\n    case constants.CONFIRM_SELECT:\r\n      newState.templateList = action.templateList;\r\n      newState.templateInfo = action.templateInfo;\r\n      newState.messageInfo.templateId = newState.templateInfo.template_id;\r\n      for(let key in newState.templateInfo.data) {\r\n        newState.messageInfo.content[key] = {\r\n          value: \"\",\r\n          color: \"#000\"\r\n        }\r\n      }\r\n      return newState;\r\n    case constants.CLOSE_SELECT_MODAL:\r\n      newState.selectGonghaoModal = false;\r\n      return newState;\r\n    case constants.OPEN_PREVIEW_MODAL:\r\n      newState.previewModal = true;\r\n      return newState;\r\n    case constants.CLOSE_PREVIEW_MODAL:\r\n      newState.previewModal = false;\r\n      newState.openid = \"\";\r\n      return newState;\r\n    case constants.CHANGE_OPENID:\r\n      newState.openid = action.value;\r\n      return newState;\r\n\r\n    case constants.INIT_MESSAGE_INFO:\r\n      newState.messageInfo = JSON.parse(JSON.stringify(action.record));\r\n      newState.templateList = action.templateList;\r\n      newState.templateInfo = newState.templateList.filter(item => item.template_id === action.record.templateId)[0];\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from '../../../../utils/http';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n// 列表页\r\n\r\nexport const getTemplateList = () => {\r\n  return dispatch => {\r\n    axios.get(\"/template\")\r\n      .then(res => {\r\n        const {data} = res.data;\r\n        dispatch({ type: constants.GET_TEMPLATE_LIST, data })\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteTemplate = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条模板消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/template/del\", {params: {id}})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              message.success(res.data.success);\r\n              dispatch({ type: constants.DELETE_TEMPLATE, index })\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const sendTemplate = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定发送这条模板消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/template/send\", {params: {id}})\r\n          .then(res => {\r\n            message.success(res.data);\r\n            dispatch({\r\n              type: constants.SEND_TEMPLATE_MSG,\r\n              id\r\n            });\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeConfNickName = value => ({\r\n  type: constants.CHANGE_CONF_NAME,\r\n  value\r\n});\r\n\r\nexport const searchConfName = confName => {\r\n  return dispatch => {\r\n    if(/^\\?.*/.test(confName) )\r\n    axios.get('/template/search', {params: {confName}})\r\n      .then(res => {\r\n        if(res.data.data.length > 0) {\r\n          dispatch({type: constants.SEARCH_CONF_NAME, data: res.data.data});\r\n          message.success(res.data.msg)\r\n        } else {\r\n          dispatch(getTemplateList());\r\n          message.error(\"没有查询到相关数据\")\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\n\r\n// 编辑模板消息\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.GET_ALL_CODES,\r\n          allCodes: res.data.data\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const openSelectModal = () => ({\r\n  type: constants.OPEN_SELECT_MODAL\r\n});\r\n\r\nexport const openEditModal = (key, content) => ({\r\n  type: constants.OPEN_EDIT_MODAL,\r\n  key, content\r\n});\r\n\r\nexport const closeTemplateModal = () => ({\r\n  type: constants.CLOSE_TEMPLATE_MODAL\r\n});\r\n\r\nexport const changeTemplate = value => ({\r\n  type: constants.CHANGE_TEMPLATE,\r\n  value\r\n});\r\n\r\nexport const saveTemplateModal = () => ({\r\n  type: constants.SAVE_TEMPLATE_MODAL\r\n});\r\n\r\n\r\nexport const editTemplate = (key, value) => ({\r\n  type: constants.EDIT_TEMPLATE,\r\n  key, value\r\n});\r\n\r\nexport const changeMessageInfo = (key, value) => ({\r\n  type: constants.CHANGE_MESSAGE_INFO,\r\n  key, value\r\n});\r\n\r\nexport const confirmSelect = code => {\r\n  return dispatch => {\r\n    dispatch(changeMessageInfo(\"code\", code));\r\n    axios.get('/template/list', {params: {code}})\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.CONFIRM_SELECT,\r\n          templateList: res.data, templateInfo: {...res.data[0]}, code\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const closeSelectModal = () => ({\r\n  type: constants.CLOSE_SELECT_MODAL\r\n});\r\n\r\n\r\nexport const openPreviewModal = () => ({\r\n  type: constants.OPEN_PREVIEW_MODAL\r\n});\r\n\r\nexport const closePreviewModal = () => ({\r\n  type: constants.CLOSE_PREVIEW_MODAL\r\n});\r\n\r\nexport const preview = ({code, templateId, url, content}, openid) => {\r\n  return dispatch => {\r\n    axios.post('/template/preview', {code, templateId, url, content, openid})\r\n      .then(res => {\r\n        message.success(res.data.msg);\r\n        dispatch(closePreviewModal());\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeOpenId = value => ({\r\n  type: constants.CHANGE_OPENID,\r\n  value\r\n});\r\n\r\nexport const submitMessage = (info, history, templateList) => {\r\n  return dispatch => {\r\n    let url = '/template/create';\r\n    info.templateName = templateList.filter(item => item.template_id === info.templateId)[0].title;\r\n    info._id && (url = '/template/update') && (info.id = info._id);\r\n    info.is_timing && (info.timing_time = new Date(info.timing_time));\r\n    Modal.confirm({\r\n      title: \"确定\" + (info._id ? \"保存这\" : \"创建一\") + \"条模板消息吗？\",\r\n      onOk: () => {\r\n        axios.post(url, {...info})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              message.success(res.data.success);\r\n              history.goBack()\r\n            } else {\r\n              message.error(res.data.err)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\n\r\nexport const initMessageInfo = record => {\r\n  return dispatch => {\r\n    dispatch(closeSelectModal());\r\n    axios.get('/template/list', {params: {code: record.code}})\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.INIT_MESSAGE_INFO,\r\n          templateList: res.data,\r\n          record\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n// ({\r\n//   type: constants.INIT_MESSAGE_INFO,\r\n//   record\r\n// });\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n","// 列表页\r\n// 获取模板消息列表\r\nexport const GET_TEMPLATE_LIST = \"message/template/getTemplateList\";\r\nexport const DELETE_TEMPLATE = \"message/template/deleteTemplate\";\r\nexport const CHANGE_CONF_NAME = \"message/template/changeConfNickName\";\r\nexport const SEARCH_CONF_NAME = \"message/template/searchConfName\";\r\nexport const SEND_TEMPLATE_MSG = \"message/template/sendTemplate\";\r\n\r\n\r\n// 编辑模板消息\r\n// 获取所有公号\r\nexport const GET_ALL_CODES = \"message/template/getAllCodes\";\r\n\r\n// 打开选择公号面板\r\nexport const OPEN_SELECT_MODAL = \"message/template/openSelectModal\";\r\n// 关闭选择公号面板\r\nexport const CLOSE_SELECT_MODAL = \"message/template/closeSelectModal\";\r\n\r\n// 打开列表编辑的modal\r\nexport const OPEN_EDIT_MODAL = \"message/template/openEditModal\";\r\n// 关闭列表编辑的modal\r\nexport const CLOSE_TEMPLATE_MODAL = \"message/template/closeTemplateModal\";\r\n// 更换模板\r\nexport const CHANGE_TEMPLATE = \"message/template/changeTemplate\";\r\n// 编辑模板\r\nexport const EDIT_TEMPLATE = \"message/template/editTemplate\";\r\n// 保存模板\r\nexport const SAVE_TEMPLATE_MODAL = \"message/template/saveTemplateModal\";\r\n\r\n// 修改messageInfo\r\nexport const CHANGE_MESSAGE_INFO = \"message/template/changeMessageInfo\";\r\n// 确认选择公号，关闭modal，获取模板列表\r\nexport const CONFIRM_SELECT = \"message/template/confirmSelect\";\r\n\r\nexport const OPEN_PREVIEW_MODAL = \"message/template/openPreviewModal\";\r\nexport const CLOSE_PREVIEW_MODAL = \"message/template/closePreviewModal\";\r\nexport const CHANGE_OPENID = \"message/template/changeOpenId\";\r\n\r\n// 初始化messageInfo\r\nexport const INIT_MESSAGE_INFO = \"message/template/initMessageInfo\";\r\n\r\n\r\n// 重置state\r\nexport const RESET_STATE = \"message/template/resetState\";\r\n","import * as constants from './constants';\r\n\r\nconst defaultContent = {\r\n  description: \"\",\r\n  picurl: \"\",\r\n  title: \"\",\r\n  url: \"\",\r\n  local_picurl: \"\"\r\n}\r\n\r\nconst defaultState = {\r\n  randomMessageList: [],\r\n  randomMessageInfo: {\r\n    message_id: \"\",\r\n    message_array: [],\r\n    remarks: \"\"\r\n  },\r\n  message_info: {\r\n    contents: [],\r\n    type: 0\r\n  },\r\n  content: {...defaultContent},\r\n  currentIndex: -1\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case constants.GET_RANDOM_MESSAGE_LIST:\r\n      newState.randomMessageList = action.data;\r\n      return newState;\r\n\r\n    case constants.CHANGE_MESSAGE_VAlUE:\r\n      newState.randomMessageInfo[action.name] = action.value;\r\n      return newState;\r\n\r\n    case constants.CHANGE_MESSAGE_TYPE:\r\n      newState.message_info.type = action.value;\r\n      newState.content = {...defaultContent};\r\n      return newState;\r\n\r\n    case constants.CHANGE_CONTENT_VALUE:\r\n      newState.content[action.name] = action.value;\r\n      return newState;\r\n\r\n    case constants.ADD_MESSAGE:\r\n      newState.message_info.contents[0] = {...newState.content}\r\n      newState.randomMessageInfo.message_array.push(newState.message_info)\r\n      newState.content = {...defaultContent};\r\n      return newState;\r\n\r\n    case constants.UPDATE_MESSAGE_ITEM:\r\n      newState.message_info = action.item;\r\n      newState.content = newState.message_info.contents[0];\r\n      newState.currentIndex = action.index;\r\n      return newState;\r\n\r\n    case constants.DELETE_MESSAGE_ITEM:\r\n      newState.randomMessageInfo.message_array.splice(action.index, 1);\r\n      newState.content = {...defaultContent};\r\n      newState.currentIndex = -1;\r\n      return newState;\r\n\r\n    case constants.SAVE_MESSAGE_UPDATE:\r\n      newState.message_info.contents[0] = newState.content;\r\n      newState.randomMessageInfo.message_array.splice(newState.currentIndex, 1, newState.message_info);\r\n      newState.content = {...defaultContent};\r\n      newState.currentIndex = -1;\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n\r\n    case constants.INIT_RANDOM_MSG_INFO:\r\n      newState.randomMessageInfo = action.info;\r\n      newState.content = newState.randomMessageInfo.message_array[0].contents[0];\r\n      newState.message_info.type = newState.randomMessageInfo.message_array[0].type;\r\n      newState.currentIndex = 0;\r\n      return newState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from '../../../../utils/http';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\nexport const getRandomMessageList = () => {\r\n  return dispatch => {\r\n    axios.get('/messageRandom')\r\n      .then(res => {\r\n        let {code, data} = res.data;\r\n        if(code === 1) {\r\n          dispatch({\r\n            type: constants.GET_RANDOM_MESSAGE_LIST,\r\n            data\r\n          })\r\n        } else {\r\n          dispatch({\r\n            type: constants.GET_RANDOM_MESSAGE_LIST,\r\n            data: []\r\n          })\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteRandomMessage = _id => {\r\n  return dispatch => {\r\n    \r\n    Modal.confirm({\r\n      title: \"确定删除这条消息吗？\",\r\n      onOk: () => {\r\n        axios.get('/messageRandom/del', {params: {_id}})\r\n          .then(res => {\r\n            let {code, msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              dispatch(getRandomMessageList())\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeMessageValue = (value, name) => ({\r\n  type: constants.CHANGE_MESSAGE_VAlUE,\r\n  value, name\r\n})\r\n\r\nexport const changeMessageType = value => ({\r\n  type: constants.CHANGE_MESSAGE_TYPE,\r\n  value\r\n});\r\n\r\nexport const changeContentValue = (value, name) => ({\r\n  type: constants.CHANGE_CONTENT_VALUE,\r\n  value, name\r\n})\r\n\r\nexport const addMessage = () => ({\r\n  type: constants.ADD_MESSAGE\r\n})\r\n\r\nexport const updateMessageItem = (item, index) => ({\r\n  type: constants.UPDATE_MESSAGE_ITEM,\r\n  item, index\r\n})\r\n\r\nexport const deleteMessageItem = index => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条内容吗？\",\r\n      onOk: () => {\r\n        dispatch({\r\n          type: constants.DELETE_MESSAGE_ITEM,\r\n          index\r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const saveMessage = () => ({\r\n  type: constants.SAVE_MESSAGE_UPDATE\r\n})\r\n\r\nexport const submitMessage = (info, history) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: info._id ? \"确定保存这侧修改吗？\" : \"确定创建一条新消息吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/messageRandom/\" + (info._id ? \"update\" : \"create\"), {...info})\r\n          .then(res => {\r\n            let {code, msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              history.goBack()\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const cancelAction = history => {\r\n  return dispatch => {\r\n    history.goBack()\r\n  }\r\n}\r\n\r\nexport const initRandomMsgInfo = info => ({\r\n  type: constants.INIT_RANDOM_MSG_INFO,\r\n  info\r\n})\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n})","export const GET_RANDOM_MESSAGE_LIST = \"message/randomMsg/getRandomMessageList\"\r\n\r\nexport const CHANGE_MESSAGE_VAlUE = \"message/randomMsg/changeMessageValue\";\r\nexport const CHANGE_MESSAGE_TYPE = \"message/randomMsg/changeMessageType\";\r\nexport const CHANGE_CONTENT_VALUE = \"message/randomMsg/changeContentValue\";\r\nexport const ADD_MESSAGE = \"message/randomMsg/addMessage\";\r\nexport const UPDATE_MESSAGE_ITEM = \"message/randomMsg/updateMessageItem\";\r\nexport const DELETE_MESSAGE_ITEM = \"message/randomMsg/deleteMessageItem\";\r\nexport const SAVE_MESSAGE_UPDATE = \"message/randomMsg/saveMessage\";\r\nexport const RESET_STATE = \"message/randomMsg/resetState\";\r\nexport const INIT_RANDOM_MSG_INFO = \"message/randomMsg/initRandomMsgInfo\";","import { combineReducers } from 'redux';\r\nimport { reducer as groupReducer } from './group/store';\r\nimport { reducer as kefuReducer } from './kefu/store';\r\nimport { reducer as templateReducer } from './template/store';\r\nimport { reducer as randomMsgReducer } from './randomKefu/store';\r\n\r\nconst reducer = combineReducers({\r\n  group: groupReducer,\r\n  kefu: kefuReducer,\r\n  template: templateReducer,\r\n  randomMsg: randomMsgReducer\r\n});\r\n\r\nexport default reducer;","import axios from '../../../../utils/http';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\nimport backTop from \"../../../../utils\";\r\n\r\n// 群发公号\r\nconst getData = (page = 1) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(\"/novelLinks/show\",{params: {page}})\r\n      .then(res => {\r\n        const { data: novelLinkList, domain_name, count } = res.data;\r\n        const action = {\r\n          type: constants.GET_NOVEL_LINK_LIST,\r\n          novelLinkList, domain_name, count\r\n        };\r\n        resolve(action)\r\n      })\r\n  });\r\n};\r\n\r\nexport const getNovelLinkList = () => {\r\n  return async dispatch => {\r\n    let action = await getData();\r\n    dispatch(action);\r\n  }\r\n};\r\n\r\nexport const changePage = (page) => {\r\n  return async dispatch => {\r\n    dispatch(await getData(page));\r\n    const action = {\r\n      type: constants.CHANGE_PAGE,\r\n      page\r\n    };\r\n    await backTop();\r\n    await dispatch(action);\r\n  }\r\n};\r\n\r\nexport const deleteNovel = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条链接吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/novelLinks/delete_one\", {id: id})\r\n          .then(res => {\r\n            if(res.data.message) {\r\n              message.info(res.data.message);\r\n              const action = {\r\n                type: constants.DELETE_NOVEL,\r\n                index\r\n              };\r\n              dispatch(action);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeZIndexState = (zIndex, id) => {\r\n  console.log(zIndex, id)\r\n  return dispatch => {\r\n    if(!zIndex) {\r\n      axios.post('/novelLinks/cancelGoTop', {id})\r\n        .then(res => {\r\n          if(res.data.success) {\r\n            message.success(res.data.success);\r\n            dispatch(getNovelLinkList());\r\n          }\r\n        })\r\n    } else {\r\n      axios.post('/novelLinks/goTop', {id})\r\n        .then(res => {\r\n          if(res.data.success) {\r\n            message.success(res.data.success);\r\n            dispatch(getNovelLinkList());\r\n          }\r\n        })\r\n    }\r\n  }\r\n};\r\n\r\n// 编辑小说链接详情\r\n\r\nexport const submitNovel = (record, props) => {\r\n  return dispatch => {\r\n    let query = props.history.location.query;\r\n    let title = query ? \"确认保存修改吗？\" : \"确认创建一条新的小说链接吗？\";\r\n    let url = query ? \"/novelLinks/update\" : \"/novelLinks/add\";\r\n    let tips = query ? \"保存成功\": \"创建成功\";\r\n    if(!query && record._id) {\r\n      axios.get(\"/novelLinks/get_content\", { params: { _id: record._id } })\r\n        .then(res => {\r\n          record = res.data.data;\r\n          record.id = randomString();\r\n        });\r\n    }\r\n    let remarks = record.remarks;\r\n    Modal.confirm({\r\n      title: title,\r\n      onOk: () => {\r\n        axios.post(url, {...record, remarks}).then(async res => {\r\n          if (res.data.err) {\r\n            message.info(res.data.err);\r\n          } else {\r\n            if((!query && !record._id) || (record._id && query)) {\r\n              props.history.goBack();\r\n            }\r\n            message.success(tips);\r\n            dispatch(await getData());\r\n          }\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const handleInputChange = (value, name) => ({\r\n  type: constants.HANDLE_INPUT_CHANGE,\r\n  value, name\r\n});\r\n\r\nexport const initNovelInfo = record => ({\r\n  type: constants.INIT_NOVEL_INFO,\r\n  record\r\n});\r\n\r\n// 编辑小说链接\r\n\r\nexport const getContent = _id => {\r\n  return dispatch => {\r\n    axios.get(\"/novelLinks/get_content\", { params: { _id } })\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        const action = {\r\n          type: constants.GET_CONTENT,\r\n          data\r\n        };\r\n        dispatch(action);\r\n      });\r\n  }\r\n};\r\n\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n\r\nexport const deleteFinalImg = () => ({\r\n  type: constants.DELETE_FINAL_IMG\r\n});\r\n\r\n\r\nexport const randomString = () => {\r\n  var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n  var result = '';\r\n  for (var i = 8; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];\r\n  return result;\r\n};","export const GET_NOVEL_LINK_LIST = \"channel/links/getNovelLinkList\";\r\nexport const CHANGE_PAGE = \"channel/links/changePage\";\r\nexport const DELETE_NOVEL = \"channel/links/deleteNovel\";\r\n\r\n\r\nexport const OPEN_DOMAIN_MODAL = \"channel/links/openDomainModal\";\r\nexport const CLOSE_DOMAIN_MODAL = \"channel/links/closeDomainModal\";\r\nexport const CHANGE_DOMAIN_INPUT = \"channel/links/changeDomainName\";\r\n\r\n\r\n// 编辑小说链接详情\r\nexport const HANDLE_INPUT_CHANGE = \"channel/links/handleInputChange\";\r\n\r\nexport const INIT_NOVEL_INFO = \"channel/links/initNovelInfo\";\r\nexport const GET_CONTENT = \"channel/links/getContent\";\r\nexport const DELETE_FINAL_IMG = \"channel/links/deleteFinalImg\";\r\n\r\n\r\nexport const RESET_STATE = \"channel/links/resetState\";\r\n","import * as constants from './constants';\r\nimport {randomString} from './actionCreators';\r\n\r\nconst defaultNovelInfo = {\r\n  type: 0,\r\n  id: randomString(),\r\n  gonghao_id: \"\",\r\n  pageTitle: \"\",\r\n  name: \"\",\r\n  picurl: \"\",\r\n  capter: \"\",\r\n  remarks: \"\",\r\n  imgUrl: \"\",\r\n  finalImg: \"\",\r\n  finalImgUrl: \"\",\r\n  gonghaoLogo: \"\",\r\n  gonghaoLogoUrl: \"\",\r\n  domain_name: \"https://td.tyuss.com\",\r\n  company: \"\",\r\n  bgcolor: \"#fff\",\r\n  suffix: \"\"\r\n};\r\n\r\nconst defaultState = {\r\n  novelLinkList: [],\r\n  domain_name: \"\",\r\n  domainModal: false,\r\n  count: null,\r\n  currentPage: 1,\r\n  novelInfo: {...defaultNovelInfo},\r\n  domain: \"\",\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case constants.GET_NOVEL_LINK_LIST:\r\n      newState.novelLinkList = [...action.novelLinkList];\r\n      newState.domain_name = action.domain_name;\r\n      newState.count = action.count;\r\n      return newState;\r\n    case constants.CHANGE_PAGE:\r\n      newState.currentPage = action.page;\r\n      return newState;\r\n    case constants.DELETE_NOVEL:\r\n      newState.novelLinkList.splice(action.index, 1);\r\n      return newState;\r\n\r\n    case constants.OPEN_DOMAIN_MODAL:\r\n      newState.domainModal = true;\r\n      return newState;\r\n    case constants.CLOSE_DOMAIN_MODAL:\r\n      newState.domainModal = false;\r\n      newState.domain = \"\";\r\n      return newState;\r\n    case constants.CHANGE_DOMAIN_INPUT:\r\n      newState.domain = action.domain;\r\n      return newState;\r\n\r\n    // 编辑小说链接详情\r\n\r\n    case constants.HANDLE_INPUT_CHANGE:\r\n      newState.novelInfo[action.name] = action.value;\r\n      if(action.name === \"picurl\") {\r\n        newState.novelInfo.imgUrl = newState.domain_name + action.value;\r\n      }\r\n      if(action.name === \"finalImg\") {\r\n        newState.novelInfo.finalImgUrl = newState.domain_name + action.value;\r\n      }\r\n      if(action.name === \"gonghaoLogo\") {\r\n        newState.novelInfo.gonghaoLogoUrl = newState.domain_name + action.value;\r\n      }\r\n      return newState;\r\n\r\n    case constants.INIT_NOVEL_INFO:\r\n      newState.novelInfo = {...action.record};\r\n      newState.novelInfo.imgUrl = newState.domain_name + action.record.picurl;\r\n      newState.novelInfo.finalImgUrl = newState.domain_name + action.record.finalImg;\r\n      newState.novelInfo.gonghaoLogoUrl = newState.domain_name + action.record.gonghaoLogo;\r\n      return newState;\r\n    case constants.GET_CONTENT:\r\n      newState.novelInfo.capter = action.data.capter;\r\n      return newState;\r\n    case constants.DELETE_FINAL_IMG:\r\n      newState.novelInfo.finalImg = newState.novelInfo.finalImgUrl = \"\";\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from 'redux';\r\nimport { reducer as linksReducer } from './links/store';\r\n\r\nconst reducer = combineReducers({\r\n  links: linksReducer,\r\n});\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport gonghaoReducer from '../pages/gonghao/reducer';\r\nimport messageReducer from '../pages/message/reducer';\r\nimport channelReducer from '../pages/channel/reducer';\r\n\r\nconst reducer = combineReducers({\r\n  gonghao: gonghaoReducer,\r\n  message: messageReducer,\r\n  channel: channelReducer\r\n});\r\n\r\nexport default reducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from './reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport \"./index.scss\";\r\nimport {Input, Icon, message} from 'antd';\r\nimport axios from '../../utils/http';\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.login = this.login.bind(this);\r\n    this.state = {\r\n      loginInfo: {\r\n        username: \"\",\r\n        password: \"\"\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loginInfo } = this.state;\r\n    const bgStyle = {\r\n      minHeight: \"100vh\",\r\n      backgroundSize: \"100%\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundAttachment: \"fixed\",\r\n      backgroundImage: `url(${require(\"../../assets/images/login_bg.png\")})`\r\n    };\r\n    return (\r\n      <div className=\"login-bg\" style={bgStyle}>\r\n        <div className=\"bg-mask\"></div>\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"content\">\r\n            <p className=\"title\">明星说后台管理系统</p>\r\n            <p>运营与管控一体化的整合式服务平台</p>\r\n            <p>一起解构数字世界，碰撞科技创新思想</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"login-form-wrapper\">\r\n          <div className=\"login-form\">\r\n            <h4 className=\"login-title\">登录</h4>\r\n            <Input\r\n              value={loginInfo.username}\r\n              size=\"large\"\r\n              onChange={e => this.changeInputValue(e.target.value, \"username\")}\r\n              prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)', marginRight: 10}}/>}\r\n              style={{marginBottom: 30}}\r\n              placeholder=\"用户名\"\r\n              onKeyUp={e => e.keyCode === 13 && this.login()}\r\n            />\r\n            <Input\r\n              value={loginInfo.password}\r\n              size=\"large\"\r\n              type=\"password\"\r\n              onChange={e => this.changeInputValue(e.target.value, \"password\")}\r\n              prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)', marginRight: 10}}/>}\r\n              placeholder=\"密码\"\r\n              onKeyUp={e => e.keyCode === 13 && this.login()}\r\n            />\r\n            <button className=\"login-btn cursor\" onClick={this.login}>登录</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  changeInputValue(value, name) {\r\n    const { loginInfo } = this.state;\r\n    loginInfo[name] = value;\r\n    this.setState(state => ({loginInfo: {...state.loginInfo, ...loginInfo}}))\r\n  }\r\n\r\n  login() {\r\n    const { loginInfo } = this.state;\r\n    if(loginInfo.username && loginInfo.password) {\r\n      loginInfo.password = this.$MD5(loginInfo.password).toString();\r\n      axios.post('/account/login', {...loginInfo})\r\n        .then(res => {\r\n          const { code, msg, data } = res.data;\r\n          if(code === -1) {\r\n            message.error(msg);\r\n          } else {\r\n            const userInfo = JSON.stringify(data[0]);\r\n            localStorage.setItem(\"userInfo\", userInfo);\r\n            window.location.href = '/admin';\r\n            this.setState({loginInfo: {}});\r\n            message.success(msg)\r\n          }\r\n        })\r\n    } else {\r\n      message.warning(\"用户名或密码不能为空\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Avatar, Popover, Icon, message, Modal, Form, Input, Tooltip } from 'antd';\r\nimport axios from 'axios';\r\n\r\nimport './index.scss';\r\n\r\nclass HeaderWrapper extends Component {\r\n\r\n  state = {\r\n    userInfo: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userInfo = localStorage.getItem(\"userInfo\");\r\n    if(userInfo) {\r\n      userInfo = JSON.parse(userInfo);\r\n      this.setState({userInfo})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { userInfo, showUpdateModal } = this.state;\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div className='header-wrapper'>\r\n        <Link to=\"/\">\r\n          <img className=\"logo fl\" src={require(\"../../../assets/images/logo.png\")} alt=\"\"/>\r\n        </Link>\r\n        <div className=\"user-info fr\">\r\n          <Tooltip title=\"帮助文档\">\r\n            <a href=\"http://t.dmmup.com/平台接管及发文方式.pdf\" target=\"__blank\">\r\n              <Avatar size={25} icon=\"question\" style={{marginRight: 10, color: '#f56a00', backgroundColor: '#fde3cf' }} />\r\n            </a>\r\n          </Tooltip>\r\n          <Avatar size={25} icon=\"user\" />\r\n          <Popover content={\r\n            <>\r\n              <p style={{fontSize: 12, marginBottom: 10}} className=\"cursor\" onClick={() => this.setState({showUpdateModal: true})}><Icon style={{marginRight: 5}} type=\"edit\" />修改信息</p>\r\n              <p style={{fontSize: 12}} className=\"cursor\" onClick={logout}><Icon style={{marginRight: 5}} type=\"logout\" />退出</p>\r\n            </>\r\n          }>\r\n            <div className=\"user fr cursor\">\r\n              <p>{userInfo.username},</p>\r\n              <p>欢迎回来<Icon type=\"down\" /></p>\r\n            </div>\r\n          </Popover>\r\n          <Modal visible={showUpdateModal} title=\"修改用户信息\" onOk={this.updateInfo} onCancel={this.cancelUpdate}>\r\n            <Form labelCol={{span: 4}} wrapperCol={{span: 20}}>\r\n              <Form.Item label=\"用户名：\">\r\n                {getFieldDecorator('username', {\r\n                  initialValue: userInfo.username\r\n                })(\r\n                  <Input placeholder=\"请输入用户名\"/>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"新密码：\">\r\n                {getFieldDecorator('password', {\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"登录密码不能为空\"\r\n                  }]\r\n                })(\r\n                  <Input type=\"password\" placeholder=\"请输入新密码\"/>\r\n                )}\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  updateInfo = () => {\r\n    const { getFieldsValue } = this.props.form;\r\n    const { userInfo: {_id: id} } = this.state;\r\n    const { username, password } = getFieldsValue();\r\n    if(password.trim() && username.trim()) {\r\n      Modal.confirm({\r\n        title: \"确定修改用户信息吗？\",\r\n        onOk: () => {\r\n          let md5Password = this.$MD5(password).toString();\r\n          axios.put('/account', {id, username, password: md5Password })\r\n            .then(res => {\r\n              const {code, msg} = res.data;\r\n              if(code === 1) {\r\n                message.success(msg + \"请重新登录\");\r\n                this.cancelUpdate();\r\n                localStorage.setItem(\"userInfo\", \"\");\r\n                window.location.href = \"/admin/login\";\r\n              } else {\r\n                message.error(msg);\r\n              }\r\n            })\r\n        }\r\n      })\r\n    } else {\r\n      message.error(\"请检查输入是否有误，密码首尾不能为空格\")\r\n    }\r\n  };\r\n\r\n  cancelUpdate = () => {\r\n    const { setFieldsValue } = this.props.form;\r\n    this.setState({showUpdateModal: false});\r\n    setFieldsValue({password: \"\"});\r\n  }\r\n\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.setItem(\"userInfo\", \"\");\r\n  message.success(\"退出登录成功\");\r\n  setTimeout(() => {\r\n    window.location.href = \"/admin/login\";\r\n  }, 500)\r\n};\r\n\r\nexport default Form.create()(HeaderWrapper);\r\n","import React, {Component} from 'react';\r\nimport {Menu, Icon} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './index.scss';\r\n\r\nconst {SubMenu} = Menu;\r\nconst MenuItem = Menu.Item;\r\n\r\nclass SideWrapper extends Component {\r\n  menuList = [\r\n    {\r\n      keyIndex: 'gonghao',\r\n      title: '公号管理',\r\n      icon: 'appstore',\r\n      role: 2,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'tuoguan',\r\n          title: '公号托管',\r\n          path: '/admin/gonghao/tuoguan'\r\n        }, {\r\n          keyIndex: 'menu',\r\n          title: '菜单配置',\r\n          path: '/admin/gonghao/menu'\r\n        }, {\r\n          keyIndex: 'reply',\r\n          title: '自动回复',\r\n          path: '/admin/gonghao/reply'\r\n        }, {\r\n          keyIndex: 'timingReply',\r\n          title: '定时设置自动回复',\r\n          power: 1,\r\n          path: '/admin/gonghao/timingReply'\r\n        }\r\n      ]\r\n    }, {\r\n      keyIndex: 'message',\r\n      title: '消息管理',\r\n      icon: 'snippets',\r\n      role: 2,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'kefu',\r\n          title: '客服消息',\r\n          path: '/admin/message/kefu'\r\n        }, {\r\n          keyIndex: 'randomKefu',\r\n          title: '随机客服消息',\r\n          power: 1,\r\n          path: '/admin/message/randomKefu/index'\r\n        }, {\r\n          keyIndex: 'group',\r\n          title: '群发消息',\r\n          path: '/admin/message/group'\r\n        }, {\r\n          keyIndex: 'template',\r\n          title: '模板消息',\r\n          path: '/admin/message/template'\r\n        }\r\n      ]\r\n    }, {\r\n      keyIndex: 'channel',\r\n      title: '投放推广',\r\n      icon: 'control',\r\n      role: 2,\r\n      power: 1,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'novelLinks',\r\n          title: '投放链接',\r\n          path: '/admin/channel/novelLinks/index'\r\n        }, {\r\n          keyIndex: 'management',\r\n          title: '投放渠道',\r\n          path: '/admin/channel/management'\r\n        }, {\r\n          keyIndex: 'jointDebugging',\r\n          title: '头条联调',\r\n          path: '/admin/channel/jointDebugging'\r\n        }, {\r\n          keyIndex: 'zhuishuyun',\r\n          title: '追书云链接',\r\n          path: '/admin/channel/zhuishuyun'\r\n        }, {\r\n          keyIndex: 'spread',\r\n          title: '推广链接',\r\n          path: '/admin/channel/spread/index'\r\n        }\r\n      ]\r\n    }, {\r\n      keyIndex: 'tools',\r\n      title: '便捷工具',\r\n      icon: 'setting',\r\n      role: 2,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'tikTok',\r\n          title: '抖音水印',\r\n          path: '/admin/tools/tikTok'\r\n        }\r\n      ]\r\n    }, {\r\n      keyIndex: 'account',\r\n      title: '账户管理',\r\n      icon: 'user',\r\n      role: 0,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'list',\r\n          title: '账户管理',\r\n          path: '/admin/account/list'\r\n        }, {\r\n          keyIndex: 'add',\r\n          title: '新增用户',\r\n          path: '/admin/account/add'\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  state = {\r\n    selectedKeys: [],\r\n    role: null,\r\n    power: 0\r\n  };\r\n\r\n  onSelect = async (selectItem) => {\r\n    const latestSelectedKey = selectItem.selectedKeys.find(key => this.state.selectedKeys.indexOf(key) === -1);\r\n    let selectList = [];\r\n    await this.menuList.map(item => (selectList = [...selectList, ...item.subMenuList]));\r\n    await selectList.find(item => (\r\n      item.keyIndex === latestSelectedKey\r\n      && this.setState({ selectedKeys: latestSelectedKey ? [latestSelectedKey] : [this.state.role === 2 ? 'tuoguan' : 'list'] })\r\n    ))\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    let userInfo = localStorage.getItem(\"userInfo\");\r\n    if(userInfo) {\r\n      userInfo = JSON.parse(userInfo);\r\n      this.setState({\r\n        role: userInfo.role,\r\n        power: userInfo.power,\r\n        selectedKeys: [window.location.pathname.split('/')[3] || (userInfo.role === 2 ? 'tuoguan' : 'list')]\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const pathName = window.location.pathname;\r\n    const MenuListRender = this.menuList.map((item, index) => {\r\n      if(item.role === this.state.role) {\r\n        const SubMenuList = item.subMenuList.map(subItem => (this.state.power === subItem.power || !subItem.power) && <MenuItem key={subItem.keyIndex}><Link to={subItem.path}>{subItem.title}</Link></MenuItem>);\r\n        return (<SubMenu\r\n          key={item.keyIndex}\r\n          title={\r\n            <span className='side-item'>\r\n            <Icon className=\"side-icon\" type={item.icon}/>\r\n            <span>{item.title}</span>\r\n          </span>\r\n          }\r\n        >\r\n          {SubMenuList}\r\n        </SubMenu>)\r\n      }\r\n      return '';\r\n    });\r\n    return (\r\n      <div className='side-wrapper'>\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"light\"\r\n          selectedKeys={this.state.selectedKeys}\r\n          defaultOpenKeys={[window.location.pathname.split('/')[2] || (this.state.role === 2 ? 'gonghao' : 'account')]}\r\n          onSelect={this.onSelect}\r\n          defaultSelectedKeys={[pathName]}\r\n        >\r\n          {MenuListRender}\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SideWrapper;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Breadcrumb, notification } from 'antd';\r\nimport { withRouter } from 'react-router'\r\nimport './index.scss';\r\n\r\nconst breadList = {\r\n  '/gonghao': '公号管理',\r\n\r\n  '/gonghao/tuoguan': '公号托管',\r\n  '/gonghao/tuoguan/group': '分组管理',\r\n\r\n  '/gonghao/tuoguan/error': '错误信息',\r\n\r\n  '/gonghao/tuoguan/config': '公号配置',\r\n  '/gonghao/tuoguan/config/create': '新建配置',\r\n  '/gonghao/tuoguan/config/update': '修改配置',\r\n\r\n  '/gonghao/menu': '配置菜单',\r\n  '/gonghao/menu/create': '新建菜单',\r\n  '/gonghao/menu/update': '修改菜单',\r\n\r\n  '/gonghao/reply': '自动回复',\r\n  '/gonghao/reply/create': '新建素材',\r\n  '/gonghao/reply/update': '修改素材',\r\n\r\n  '/gonghao/timingReply': '定时设置自动回复',\r\n\r\n  '/message': '消息管理',\r\n\r\n  '/message/kefu': '客服消息',\r\n  '/message/kefu/create': '新建消息',\r\n  '/message/kefu/update': '修改消息',\r\n  \r\n  '/message/randomKefu/index': '随机客服消息',\r\n  '/message/randomKefu/create': '新建随机客服消息',\r\n  '/message/randomKefu/update': '修改随机客服消息',\r\n\r\n  '/message/group': '群发消息',\r\n  '/message/group/material': '群发素材',\r\n  '/message/group/history': '历史记录',\r\n\r\n  '/message/template': '模板消息',\r\n  '/message/template/create': '创建消息',\r\n  '/message/template/update': '修改消息',\r\n\r\n  '/channel': \"投放推广\",\r\n\r\n  '/channel/novelLinks': '投放链接',\r\n  '/channel/novelLinks/create': '创建链接',\r\n  '/channel/novelLinks/update': '修改链接',\r\n\r\n  '/channel/management': '投放渠道',\r\n\r\n  '/channel/jointDebugging': '头条联调',\r\n\r\n  '/channel/zhuishuyun': '追书云链接',\r\n  \r\n  '/channel/spread': '推广链接',\r\n  '/channel/spread/create': '创建素材',\r\n  '/channel/spread/update': '修改素材',\r\n\r\n  '/source': '素材库',\r\n  '/source/group': '图文素材',\r\n  '/source/group/create': '新建素材',\r\n  '/source/group/update': '修改素材',\r\n\r\n  '/wechat/qrcode': '参数二维码',\r\n  '/wechat/qrcode/create': '新增二维码',\r\n  '/wechat/qrcode/update': '修改二维码',\r\n\r\n  '/tools': '便捷工具',\r\n  '/tools/tikTok': '抖音去水印',\r\n\r\n  '/account': '账户管理',\r\n  '/account/list': '账户列表',\r\n  '/account/add': '新增账户',\r\n};\r\n\r\nclass BreadWrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pathSnippets: null,\r\n      extraBreadcrumbItems: null,\r\n    }\r\n  }\r\n\r\n  getPath = () => {\r\n    this.setState({\r\n      pathSnippets: window.location.pathname.split('/').slice(2)\r\n    });\r\n    this.setState((prev) => {\r\n      return {\r\n        extraBreadcrumbItems: prev.pathSnippets.map((_, index) => {\r\n          let url = `/${prev.pathSnippets.slice(0, index + 1).join('/')}`;\r\n          return (\r\n            <Breadcrumb.Item key={url}>\r\n              {breadList[url]}\r\n            </Breadcrumb.Item>\r\n          );\r\n        })\r\n      }\r\n    })\r\n  };\r\n\r\n  seeDetail = () => {\r\n    notification.info({\r\n      message: \"系统服务异常公告\",\r\n      description: \"于2020年1月21日22：30分左右平台出现服务异常，部分功能故障，已于当日23:50排查修复，请各位小伙伴知悉。给大家带来不便，敬请谅解。如因担心再次故障影响使用，请自行在微信公众后台解除授权。\",\r\n      style: {\r\n        width: 600,\r\n        marginLeft: 335 - 600,\r\n      },\r\n    })\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps () {\r\n    this.getPath();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPath();\r\n  }\r\n\r\n  render() {\r\n    const { extraBreadcrumbItems } = this.state;\r\n    return (\r\n    \t<div className='bread-wrapper'>\r\n    \t\t<div className='bread-nav'>\r\n          <Breadcrumb>\r\n            {extraBreadcrumbItems}\r\n          </Breadcrumb>\r\n        </div>\r\n        <div className=\"notice\">\r\n          <span className=\"notice-title\">【系统通知】</span>\r\n          <span onClick={this.seeDetail} className=\"notice-desc textEllipsis\">\r\n            于2020年1月21日22：30分左右平台出现服务异常，部分功能故障，已于当日23:50排查修复，请各位小伙伴知悉。给大家带来不便，敬请谅解。如因担心再次故障影响使用，请自行在微信公众后台解除授权。\r\n          </span>\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(BreadWrapper);","import React from 'react';\r\nimport {Layout, Card, Icon} from 'antd';\r\nimport HeaderWrapper from './header';\r\nimport SiderWrapper from './sider';\r\nimport BreadCrumb from './bread';\r\nimport \"./index.scss\";\r\n\r\nconst {Content, Sider, Header, Footer} = Layout;\r\n\r\nconst BasicLayout = props => <Layout className=\"basic-layout\">\r\n  <HeaderWrapper/>\r\n  <Layout>\r\n    <Sider collapsible className=\"basic-sider\" theme=\"light\" width=\"180\">\r\n      <SiderWrapper/>\r\n    </Sider>\r\n    <Layout>\r\n      <Content className=\"basic-content\">\r\n        <Card className=\"basic-card\">\r\n          <Layout>\r\n            <Header className=\"basic-header\"><BreadCrumb /></Header>\r\n            <Content>{props.content}</Content>\r\n            <div className=\"connect\">\r\n              <Icon type=\"customer-service\" theme=\"filled\" />\r\n              <p>客服</p>\r\n              <div className=\"connect-method\">\r\n                <img className=\"connect-qrcode\" src=\"http://t.dmmup.com/uploads/1861795c12c690ef4df709abcaf73fc2.jpg\" alt=\"\"/>\r\n                <p className=\"connect-title\">微信扫描二维码，咨询客服</p>\r\n              </div>\r\n            </div>\r\n          </Layout>\r\n        </Card>\r\n      </Content>\r\n      <Footer className=\"basic-footer\">Copyright&copy;2019  最终解释权归本公司所有</Footer>\r\n    </Layout>\r\n  </Layout>\r\n</Layout>;\r\n\r\nexport default BasicLayout;","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\n\r\nconst ButtonList = {\r\n  \"warning\": \"#F39C12\",\r\n  \"danger\": \"#E74C3C\",\r\n  \"success\": \"#2ECC71\",\r\n  \"info\": \"#7F8C8D\",\r\n  \"update\": \"#3498DB\"\r\n};\r\n\r\n\r\nclass ButtonWrapper extends Component {\r\n  state = {\r\n    buttonStyle: {\r\n      background: \"#3498DB\",\r\n      color: \"#fff\",\r\n      marginRight: 5,\r\n      marginLeft: 0,\r\n      marginBottom: 0\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    const { background = \"update\", color = \"#fff\", mr = 5, ml = 0, mb = 0 } = this.props;\r\n    this.setState({\r\n      buttonStyle: { background: ButtonList[background], color, marginRight: mr, marginLeft: ml, marginBottom: mb }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { size = \"small\", buttonContent, disabled = false, onClick } = this.props;\r\n    const { buttonStyle } = this.state;\r\n    return (\r\n    \t<Button size={size} disabled={disabled} style={buttonStyle} onClick={onClick}>{buttonContent}</Button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ButtonWrapper;","import React, { Component } from 'react';\r\nimport { Modal } from 'antd'\r\nimport { connect } from \"react-redux\";\r\nimport { actionCreators } from '../store';\r\n\r\nimport './index.scss';\r\n\r\nclass StatisticsModal extends Component {\r\n\r\n    render() {\r\n        const { statisticsModal, statistics, closeStatisticsModal } = this.props;\r\n        return (\r\n            <Modal visible={statisticsModal} title={`${statistics.nick_name || \"\"} 的粉丝数据`} onCancel={closeStatisticsModal} footer=\"\">\r\n                <div className=\"statistics-modal\">\r\n                <div className=\"statistics-wrapper\">\r\n                        <h2 className=\"title\">当日数据统计</h2>\r\n                        <ul className=\"statistics-content\">\r\n                            <li>\r\n                                <span className=\"category\">粉丝总数: </span>\r\n                                <span className=\"desc\">{statistics.cumulate_user}</span>\r\n                            </li>\r\n                            <li>\r\n                                <span className=\"category\">新增粉丝数: </span>\r\n                                <span className=\"desc\">{statistics.new_user}</span>\r\n                            </li>\r\n                            <li>\r\n                                <span className=\"category\">取关粉丝数: </span>\r\n                                <span className=\"desc\">{statistics.cancel_user}</span>\r\n                            </li>\r\n                            <li>\r\n                                <span className=\"category\">活跃粉丝数: </span>\r\n                                <span className=\"desc\">{statistics.todayCount}</span>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"statistics-wrapper\">\r\n                        <h2 className=\"title\">昨日数据统计</h2>\r\n                        <ul className=\"statistics-content\">\r\n                            <li>\r\n                                <span className=\"category\">粉丝总数: </span>\r\n                                <span className=\"desc\">{statistics.y_cumulate_user}</span>\r\n                            </li>\r\n                            <li>\r\n                                <span className=\"category\">新增粉丝数: </span>\r\n                                <span className=\"desc\">{statistics.y_new_user}</span>\r\n                            </li>\r\n                            <li>\r\n                                <span className=\"category\">取关粉丝数: </span>\r\n                                <span className=\"desc\">{statistics.y_cancel_user}</span>\r\n                            </li>\r\n                            <li>\r\n                                <span className=\"category\">活跃粉丝数: </span>\r\n                                <span className=\"desc\">{statistics.yesterdayCount}</span>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst mapState = state => ({\r\n    statistics: state.gonghao.tuoguan.statistics,\r\n    statisticsModal: state.gonghao.tuoguan.statisticsModal\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n    closeStatisticsModal() {\r\n        dispatch(actionCreators.closeStatisticsModal());\r\n    },\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(StatisticsModal);","import React, {Component} from 'react';\r\nimport {Input, Card, List, Modal, Form, Select, Radio, Tag, Tooltip, Avatar, Icon} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport {actionCreators} from './store';\r\nimport './index.scss';\r\nimport Button from \"../../../common/components/Button\";\r\nimport StatisticsModal from './statistics';\r\n\r\nconst {Search} = Input;\r\nconst {Option} = Select;\r\nconst { Grid } = Card;\r\n\r\nclass Tuoguan extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getGroupList();\r\n    this.props.getAllGonghaoList();\r\n  }\r\n\r\n  render() {\r\n    const {gonghaoTagList, gonghaoList, searchByName, searchName, changeSearchInput, jieguan, addNewGonghao, openGonghaoModal, gonghaoModal, closeGonghaoModal, gonghaoInfo, updateGonghaoInfo, changeGroup, changeAttribute, changeAbTest, deleteGonghao, viewData, group, changeSelectValue, status} = this.props;\r\n    let innerWidth = window.innerWidth > 1440;\r\n    const pagination = {\r\n      pageSize: innerWidth ? 24 : 12\r\n    };\r\n    return (\r\n      <div>\r\n        <div className='container'>\r\n          <Search\r\n            placeholder='请输入公号名称'\r\n            className='search-btn'\r\n            value={searchName}\r\n            onChange={changeSearchInput}\r\n            onSearch={searchName => searchByName(searchName)}\r\n          />\r\n          <Select value={group} onChange={value => changeSelectValue(\"group\", value)} style={{width: 150, marginLeft: 10}}>\r\n            <Option value=\"全部\">全部公号</Option>\r\n            <Option value=\"未分组\">未分组</Option>\r\n            {gonghaoTagList.map(item => <Option key={item._id} value={item.name}>{item.name}</Option>)}\r\n          </Select>\r\n          <Select value={status} onChange={value => changeSelectValue(\"status\", value)} style={{width: 100, marginLeft: 10}}>\r\n            <Option value=\"全部\">全部</Option>\r\n            <Option value={1}>已接管</Option>\r\n            <Option value={-1}>接管中</Option>\r\n            <Option value={0}>待接管</Option>\r\n            <Option value={-2}>未接管</Option>\r\n          </Select>\r\n          <div className=\"fr btn-wrapper\">\r\n            <Button background=\"success\" size=\"default\"\r\n                    buttonContent={<Link to='/admin/gonghao/tuoguan/group'>分组管理</Link>}/>\r\n            <Button size=\"default\" buttonContent=\"添加新公号\" onClick={addNewGonghao}/>\r\n          </div>\r\n          <div className='table-wrapper'>\r\n            <List\r\n              grid={{gutter: 16, sm: 4, xxl: 6}}\r\n              dataSource={gonghaoList}\r\n              pagination={pagination}\r\n              renderItem={(item, index) => (\r\n                <List.Item>\r\n                  <Grid className=\"card-grid\">\r\n\r\n                  <Card className=\"card-item\"\r\n                        actions={\r\n                          [\r\n                            <Tooltip title=\"修改分组和公号属性\"><span onClick={() => openGonghaoModal(item._id, item.group, item.attribute, item.ab_test)}>修改</span></Tooltip>,\r\n                            <Tooltip title={item.status === -2 ? \"接管粉丝，打标签\" : (item.status === -1 ? \"正在接管，请稍后\" : (item.status === 0 ? \"接管账号较多，排队中\" : (item.status === -3 ? \"接管失败，请联系客服\" : \"接管完成\")))}><span className={item.status === -2 ? \"\" : \"disabled-click\"} onClick={() => item.status === -2 ? jieguan(item.code, index) : console.log(\"已接管或接管中\")}>{item.status === -2 ? \"接管\" : (item.status === -1 ? \"接管中\" : (item.status === 0 ? \"待接管\" : (item.status === -3 ? \"接管失败\" : \"已接管\")))}</span></Tooltip>,\r\n                            <Tooltip title={<p>删除公号信息<br />解除授权请在公号后台操作</p>}><span onClick={() => deleteGonghao(item._id, index)}>删除</span></Tooltip>,\r\n                            <Tooltip title={<p>查看粉丝数据统计</p>}><span onClick={() => viewData(item)}>统计</span></Tooltip>,\r\n                          ]\r\n                        }>\r\n                    {item.head_img ? <img src={item.head_img} alt=\"\"/> : <Avatar shape=\"circle\" size={40} icon=\"user\" style={{marginRight: 5, marginTop: -20}}/>}\r\n                    <div className=\"gonghao-info\">\r\n                      <p>{item.nick_name}</p>\r\n                      <Tag>{item.group}</Tag>\r\n                    </div>\r\n                  </Card>\r\n                </Grid>\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Modal visible={gonghaoModal} title=\"修改公号信息\" onCancel={closeGonghaoModal} onOk={() => updateGonghaoInfo(gonghaoInfo)}>\r\n          <Form labelCol={{span: 8}} wrapperCol={{span: 10}}>\r\n            <Form.Item label=\"公号分组\" >\r\n              <Select value={gonghaoInfo.group || \"未分组\"} onChange={changeGroup}>\r\n                <Option value=\"未分组\">未分组</Option>\r\n                {gonghaoTagList.map(item => <Option key={item._id} value={item.name}>{item.name}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item label=\"公号属性\">\r\n              <Radio.Group value={gonghaoInfo.attribute} onChange={changeAttribute}>\r\n                <Radio value={0}>默认</Radio>\r\n                <Radio value={1}>男</Radio>\r\n                <Radio value={2}>女</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item label={<span>测试性别 <Tooltip title={<span>将公号男粉丝或女粉丝平均分开,一般默认即可<br />(如有需要，请在接管前选择)</span>}><Icon className=\"cursor\" type=\"question-circle\" theme=\"filled\" /></Tooltip></span>}>\r\n              <Radio.Group value={gonghaoInfo.ab_test} onChange={changeAbTest}>\r\n                <Radio value={0}>默认</Radio>\r\n                <Radio value={1}>男</Radio>\r\n                <Radio value={2}>女</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n        <StatisticsModal />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  gonghaoTagList: state.gonghao.tuoguan.gonghaoTagList,\r\n  allGonghaoList: state.gonghao.tuoguan.allGonghaoList,\r\n  gonghaoList: state.gonghao.tuoguan.gonghaoList,\r\n  currentPage: state.gonghao.tuoguan.currentPage,\r\n  searchName: state.gonghao.tuoguan.searchName,\r\n  gonghaoModal: state.gonghao.tuoguan.gonghaoModal,\r\n  gonghaoInfo: state.gonghao.tuoguan.gonghaoInfo,\r\n  group: state.gonghao.tuoguan.group,\r\n  status: state.gonghao.tuoguan.status,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getGroupList() {\r\n    dispatch(actionCreators.getGroupList())\r\n  },\r\n  getAllGonghaoList() {\r\n    dispatch(actionCreators.getAllGonghaoList())\r\n  },\r\n  changePage(page) {\r\n    dispatch(actionCreators.changePage(page))\r\n  },\r\n  changeSearchInput(e) {\r\n    dispatch(actionCreators.changeSearchInput(e.target.value))\r\n  },\r\n  searchByName(value) {\r\n    dispatch(actionCreators.searchByName(value));\r\n  },\r\n  deleteGonghao(id, index) {\r\n    dispatch(actionCreators.deleteGonghao(id, index));\r\n  },\r\n  jieguan(code, index) {\r\n    dispatch(actionCreators.jieguan(code, index));\r\n  },\r\n  viewData(item) {\r\n    dispatch(actionCreators.viewData(item));\r\n  },\r\n  addNewGonghao() {\r\n    dispatch(actionCreators.addNewGonghao());\r\n  },\r\n  openGonghaoModal(id, group, attribute, ab_test) {\r\n    dispatch(actionCreators.openGonghaoModal(id, group, attribute, ab_test));\r\n  },\r\n  closeGonghaoModal() {\r\n    dispatch(actionCreators.closeGonghaoModal());\r\n  },\r\n  updateGonghaoInfo(gonghaoInfo) {\r\n    dispatch(actionCreators.updateGonghaoInfo(gonghaoInfo));\r\n  },\r\n  changeGroup(name) {\r\n    dispatch(actionCreators.changeGroup(name));\r\n  },\r\n  changeAttribute(e) {\r\n    let attribute = e.target.value;\r\n    dispatch(actionCreators.changeAttribute(attribute));\r\n  },\r\n  changeAbTest(e) {\r\n    let ab_test = e.target.value;\r\n    dispatch(actionCreators.changeAbTest(ab_test));\r\n  },\r\n  changeSelectValue(key, value) {\r\n    dispatch(actionCreators.changeSelectValue(key, value));\r\n  },\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Tuoguan);","import React, { Component } from 'react';\r\nimport { Layout, List, Input, Card, Table, Button, Modal, Radio, message, Icon } from 'antd'\r\nimport axios from 'axios';\r\n\r\nconst { Sider, Content } = Layout;\r\nconst { Search } = Input;\r\n\r\n\r\nclass GonghaoGroup extends Component {\r\n  columns = [\r\n    {\r\n      key: \"nick_name\",\r\n      dataIndex: \"nick_name\",\r\n      title: \"公号名称\",\r\n      align: \"center\",\r\n      width: 200\r\n    }, {\r\n      key: \"group\",\r\n      dataIndex: \"group\",\r\n      title: \"分组\",\r\n      align: \"center\"\r\n    }, {\r\n      key: \"action\",\r\n      title: \"操作\",\r\n      align: \"center\",\r\n      width: 100,\r\n      render: (text, record, index) => <Button type=\"primary\" size=\"small\" onClick={() => this.setState({gonghaoModal: true, gonghao_id: record._id, gonghao_index: index})}>修改分组</Button>\r\n    }\r\n  ];\r\n\r\n  state = {\r\n    gonghaoTagList: [],\r\n    gonghaoModal: false,\r\n    editGroupModalVisible: false,\r\n    group: \"\",\r\n    gonghaoList: [],\r\n    group_id: \"\",\r\n    group_index: -1,\r\n    gonghao_id: \"\",\r\n    gonghao_index: -1,\r\n    selectGroup: \"\",\r\n    selectedRowKeys: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGonghaoTagList();\r\n    this.getGroupGonghao();\r\n  }\r\n\r\n  getGonghaoTagList = () => {\r\n    axios.get(\"/gonghaoTag\")\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          const { data: gonghaoTagList } = res.data;\r\n          this.setState({gonghaoTagList})\r\n        }\r\n      })\r\n  };\r\n\r\n  getGroupGonghao = group => {\r\n    axios.get('/conf/group', { params: {group} })\r\n      .then(res => {\r\n        let { data: gonghaoList } = res.data;\r\n        this.setState({gonghaoList})\r\n        gonghaoList.length === 0 && message.warning(\"该分组中还没有数据，请添加\")\r\n      })\r\n  };\r\n\r\n  openEditGroupModal = () => {\r\n    this.setState({editGroupModalVisible: true})\r\n  };\r\n\r\n  closeEditGroupModal = () => {\r\n    this.setState({editGroupModalVisible: false, group: \"\"})\r\n  };\r\n\r\n  confirmEditGroup = () => {\r\n    const { group: name, group_id, group_index } = this.state;\r\n    if(!group_id) {\r\n      this.addGroup(name)\r\n    } else {\r\n      this.updateGroup(name, group_id, group_index)\r\n    }\r\n  };\r\n\r\n  addGroup = name => {\r\n    Modal.confirm({\r\n      title: \"确定添加一个分组吗？\",\r\n      onOk: () => {\r\n        if(name) {\r\n          axios.post(\"/gonghaoTag\", {name})\r\n            .then(res => {\r\n              if(res.data.code === 1 && res.data.exist === 0) {\r\n                const { data, msg } = res.data;\r\n                this.setState(state => {\r\n                  let gonghaoTagList = [...state.gonghaoTagList];\r\n                  gonghaoTagList.push(data);\r\n                  return {gonghaoTagList};\r\n                });\r\n                message.success(msg);\r\n                this.closeEditGroupModal();\r\n              } else if (res.data.code === 1 && res.data.exist === 1) {\r\n                message.warning(\"分组已存在，请更换分组名称\");\r\n              } else {\r\n                message.error(res.data.msg)\r\n              }\r\n            });\r\n        } else {\r\n          message.error(\"分组名称不能为空\")\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  updateGroup = (name, id, index) => {\r\n    Modal.confirm({\r\n      title: \"确定修改分组名称吗？\",\r\n      onOk: () => {\r\n        if(name) {\r\n          axios.put(\"/gonghaoTag\", {name, id})\r\n            .then(res => {\r\n              if(res.data.code === 1) {\r\n                const { data, msg } = res.data;\r\n                this.setState(state => {\r\n                  let gonghaoTagList = state.gonghaoTagList;\r\n                  Object.assign(gonghaoTagList[index], data);\r\n                  return {gonghaoTagList};\r\n                });\r\n                message.success(msg);\r\n                this.closeEditGroupModal();\r\n              }else {\r\n                message.error(res.data.msg)\r\n              }\r\n            });\r\n        } else {\r\n          message.error(\"分组名称不能为空\")\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  deleteGroup = (id, index) => {\r\n    Modal.confirm({\r\n      title: \"确定删除这个分组吗？\",\r\n      onOk: () => {\r\n        axios.delete('/gonghaoTag/' + id)\r\n          .then(res => {\r\n            const {code , msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.getGroupGonghao();\r\n              this.setState(state => {\r\n                let gonghaoTagList = state.gonghaoTagList;\r\n                gonghaoTagList.splice(index, 1);\r\n                return {gonghaoTagList}\r\n              })\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  changeGroupValue = e => {\r\n    let group = e.target.value;\r\n    this.setState({group})\r\n  };\r\n\r\n  searchGroupGonghao = nick_name => {\r\n    if(nick_name) {\r\n      axios.get('/conf/find_one', {params: {nick_name}})\r\n        .then(res => {\r\n          const {data: gonghaoList, code, msg} = res.data;\r\n          if(code === 1) {\r\n            message.success(msg);\r\n            this.setState({gonghaoList})\r\n          } else {\r\n            message.error(\"没有查询到相关数据，请检查输入是否有误\")\r\n          }\r\n        })\r\n    } else {\r\n      message.error(\"公号名称不能为空\")\r\n    }\r\n\r\n  };\r\n\r\n  closeGonghaoModal = () => {\r\n    this.setState({\r\n      gonghaoModal: false,\r\n      gonghao_id: \"\",\r\n      gonghao_index: -1,\r\n      selectGroup: \"\"\r\n    })\r\n  };\r\n\r\n  submitGonghaoModal = () => {\r\n    const { gonghao_id: id, gonghao_index, selectGroup: group, selectedRowKeys: ids } = this.state;\r\n    if(id) {\r\n      this.updateOne(id, gonghao_index, group)\r\n    } else {\r\n      this.updateMore(ids, group)\r\n    }\r\n  };\r\n\r\n  openUpdateMoreModal = () => {\r\n    const {selectedRowKeys} = this.state;\r\n    if(selectedRowKeys.length === 0) {\r\n      message.warning(\"请先选择公号\")\r\n    } else {\r\n      this.setState({\r\n        gonghaoModal: true\r\n      })\r\n    }\r\n  };\r\n\r\n  updateOne = (id, gonghao_index, group) => {\r\n    Modal.confirm({\r\n      title: \"确定修改分组吗？\",\r\n      onOk: () => {\r\n        axios.put('/conf', {id, group})\r\n          .then(res => {\r\n            const { code, msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.setState(state => {\r\n                let gonghaoList = [...state.gonghaoList];\r\n                gonghaoList.splice(gonghao_index, 1);\r\n                return {gonghaoList}\r\n              });\r\n              this.closeGonghaoModal();\r\n            } else {\r\n              message.error(msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  updateMore = (ids, group) => {\r\n    Modal.confirm({\r\n      title: \"确定修改分组1吗？\",\r\n      onOk: () => {\r\n        axios.put('/conf/multi_select', {ids, group})\r\n          .then(res => {\r\n            const { code, msg } = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.getGroupGonghao();\r\n              this.closeGonghaoModal();\r\n              this.setState({selectedRowKeys: []})\r\n            } else {\r\n              message.error(msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  changeSelectGroup = e => {\r\n    let selectGroup = e.target.value;\r\n    this.setState({selectGroup});\r\n  };\r\n\r\n  render() {\r\n    const { gonghaoTagList, gonghaoModal, editGroupModalVisible, gonghaoList, group, selectGroup } = this.state;;\r\n    const addGroupStyle = {\r\n      width: \"90%\",\r\n      margin: \"15px auto 0\",\r\n      padding: \"10px 0\",\r\n      borderRadius: 5,\r\n      border: \"1px dashed #999\"\r\n    };\r\n    const rowSelection = {\r\n      selectedRowKeys: this.state.selectedRowKeys,\r\n      onChange: selectedRowKeys => {\r\n        this.setState({selectedRowKeys})\r\n      }\r\n    };\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Layout>\r\n            <Sider theme=\"light\">\r\n              <List\r\n                header={<div className=\"cursor userSelect\" onClick={() => this.getGroupGonghao(\"未分组\")}>未分组</div>}\r\n                bordered\r\n                dataSource={gonghaoTagList}\r\n                style={{marginRight: 10}}\r\n                renderItem={(item, index) => (\r\n                  <List.Item className=\"userSelect\">\r\n                    <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", width: \"100%\", lineHeight: 1}}>\r\n                      <p className=\"cursor\" onClick={() => this.getGroupGonghao(item.name)}>{item.name}</p>\r\n                      <div>\r\n                        <Icon className=\"cursor\" style={{marginRight: 10}} type=\"form\" onClick={() => this.setState({editGroupModalVisible: true, group_id: item._id, group_index: index})} />\r\n                        <Icon className=\"cursor\" type=\"close-square\" onClick={() => this.deleteGroup(item._id, index)} />\r\n                      </div>\r\n                    </div>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n              <div className=\"tc cursor userSelect\" style={addGroupStyle} onClick={this.openEditGroupModal}>+ 添加分组</div>\r\n            </Sider>\r\n            <Content>\r\n              <Card style={{padding: 20}}>\r\n                <Search placeholder=\"请输入公众号名称\" style={{width: 200, marginBottom: 20, marginTop: -10}} onSearch={this.searchGroupGonghao} />\r\n                <Button type=\"primary\" style={{display: 'block', marginBottom: 20}} onClick={this.openUpdateMoreModal}>批量修改</Button>\r\n                <Table rowSelection={rowSelection} bordered size=\"small\" rowKey={record => record._id} columns={this.columns} dataSource={gonghaoList} />\r\n              </Card>\r\n            </Content>\r\n          </Layout>\r\n        </div>\r\n        <Modal visible={gonghaoModal} onCancel={this.closeGonghaoModal} onOk={this.submitGonghaoModal}>\r\n          <Radio.Group value={selectGroup} onChange={this.changeSelectGroup}>\r\n            <Radio value=\"未分组\">未分组</Radio>\r\n            {gonghaoTagList.map(item => <Radio key={item._id} value={item.name}>{item.name}</Radio>)}\r\n          </Radio.Group>\r\n        </Modal>\r\n        <Modal visible={editGroupModalVisible} title=\"新建分组名称\" onCancel={this.closeEditGroupModal} onOk={this.confirmEditGroup}>\r\n          分组名称：<Input onChange={this.changeGroupValue} value={group} style={{width: 300}} placeholder=\"请输入分组名称\" />\r\n        </Modal>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GonghaoGroup;","import React, { Component } from 'react';\r\nimport { Table, Button } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport backTop from '../../../utils';\r\n\r\nimport {actionCreators} from \"./store\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    const { menuList, deleteMenu } = this.props;\r\n    const menuHeader =  [\r\n      {\r\n        title: \"菜单类型\",\r\n        key: \"individual\",\r\n        dataIndex: \"individual\",\r\n        align: \"center\",\r\n        render: (text, record) => record.individual ? \"个性化菜单\" : \"通用菜单\"\r\n      },\r\n      {\r\n        title: \"菜单性别\",\r\n        key: \"sex\",\r\n        dataIndex: \"sex\",\r\n        align: \"center\",\r\n        render: (text, record) => (record.individual ? (record.sex === '0' ? \"未知\"\r\n          : (record.sex === '1' ? '男' : '女')) : '——')\r\n      },\r\n      {\r\n        key: \"title\",\r\n        dataIndex: \"title\",\r\n        title: \"标题\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        key: \"Action\",\r\n        align: \"center\",\r\n        render: (text, record, index) => (\r\n          <div>\r\n            <Button size=\"small\" type=\"primary\" style={{marginRight: \"10px\"}}>\r\n              <Link to={{pathname: \"/admin/gonghao/menu/update\", query: record}}>编辑</Link>\r\n            </Button>\r\n            <Button size=\"small\" type=\"danger\" onClick={() => deleteMenu(record._id, index)}>删除</Button>\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n    \t<div>\r\n    \t\t<div className=\"container\">\r\n          <Button type=\"primary\" style={{marginBottom: \"20px\"}}>\r\n            <Link to=\"/admin/gonghao/menu/create\">配置新菜单栏</Link>\r\n          </Button>\r\n          <Table size=\"small\" rowKey={record => record._id} columns={menuHeader} dataSource={menuList} pagination={{onChange: () => backTop()}} />\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n  componentDidMount() {\r\n    this.props.getMenuList()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  menuList: state.gonghao.menu.menuList\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getMenuList() {\r\n    dispatch(actionCreators.getMenuList())\r\n  },\r\n  deleteMenu(id, index) {\r\n    dispatch(actionCreators.deleteMenu(id, index))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Menu);","import React from 'react';\r\nimport {Card, List} from 'antd';\r\nimport \"./index.scss\";\r\n\r\nconst GraphicMessage = props => {\r\n  const {messageList, updateMessageItem} = props;\r\n  return (\r\n    <div className=\"graphic-message-list-wrapper\">\r\n      <Card className=\"message-list-card\" title={\r\n        messageList.length > 1 ?\r\n        <List className=\"message-list\">\r\n            <List.Item className=\"cursor\" onClick={() => updateMessageItem(messageList[0], 0)}>\r\n              <div className=\"head-message\">\r\n                <p className=\"ellipse-two\">{messageList[0].title}</p>\r\n                <img src={messageList[0].picurl} alt=\"\"/>\r\n              </div>\r\n          </List.Item>\r\n          {messageList.slice(1).map((message, index) => \r\n            <List.Item className=\"border_btm cursor\" onClick={() => updateMessageItem(message, index + 1)} key={index}>\r\n              <div className=\"rest-message\">\r\n                <p className=\"ellipse-two\">{message.title}</p>\r\n                <img src={message.picurl} alt=\"\"/>\r\n              </div>\r\n            </List.Item>)}\r\n        </List> : <div className=\"cursor\" onClick={() => updateMessageItem(messageList[0], 0)}>\r\n          <div className=\"head-other\">\r\n            <img src={messageList[0].picurl} alt=\"\"/>\r\n            <h3 className=\"title textEllipsis\">{messageList[0].title}</h3>\r\n            <p className=\"ellipse-two\">{messageList[0].description}</p>\r\n          </div>\r\n        </div>}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default GraphicMessage;","import React, {Component, Fragment} from 'react';\r\nimport {Form, Input, Radio, Button, Icon, Upload, Divider} from 'antd';\r\nimport GraphicMessage from '../../../../common/components/GraphicMessage';\r\n\r\nclass MenuReplyMessage extends Component {\r\n  render() {\r\n    const {messageInfo, changeMessageInfo, uploadImg, updateCurrentMessage, deleteCurrentMessage, addToList, updateIndex, updateMessageItem} = this.props;\r\n    let MessageContent;\r\n    if (messageInfo.replyType === 0) {\r\n      MessageContent = <Form.Item className=\"inputtxt\" label=\"文本消息\">\r\n        <Input.TextArea onChange={e => changeMessageInfo(\"content\", e.target.value)} value={messageInfo.content} autoSize={{minRows: 3, maxRows: 6}} placeholder='请输入回复文本消息'/>\r\n      </Form.Item>\r\n    } else {\r\n      let UploadImg;\r\n      if (messageInfo.picurl) {\r\n        UploadImg = <img style={{width: \"100px\"}} src={messageInfo.picurl} alt=\"图片走丢啦~\"/>\r\n      } else {\r\n        UploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n      }\r\n      MessageContent = <Fragment>\r\n        <Form.Item label=\"图文标题\">\r\n          <Input onChange={e => changeMessageInfo(\"title\", e.target.value)} value={messageInfo.title} placeholder='请输入图文标题'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文链接\">\r\n          <Input onChange={e => changeMessageInfo(\"url\", e.target.value)} value={messageInfo.url} placeholder='请输入图文链接，必须以 http 或 https 开头'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文描述\">\r\n          <Input.TextArea onChange={e => changeMessageInfo(\"description\", e.target.value)} value={messageInfo.description} autoSize={{minRows: 3, maxRows: 6}} placeholder='请输入图文描述'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"上传图片\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" showUploadList={false} onChange={uploadImg}>\r\n            {UploadImg}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item label=\" \" colon={false}>\r\n          {updateIndex > -1 ? <div>\r\n            <Button onClick={updateCurrentMessage} type=\"primary\" style={{marginRight: 20}}>保存</Button>\r\n            <Button onClick={deleteCurrentMessage}>删除此条消息</Button>\r\n          </div> : <div><Button onClick={addToList}>添加到图文列表</Button><p className=\"tips\">Tips: 当用户发送文本、图片、视频、图文、地理位置这五种消息时，只能回复1条图文消息；其余场景最多可回复8条图文消息</p></div>}\r\n        </Form.Item>\r\n        <Divider dashed />\r\n        <div style={{width: \"50%\", margin: \"auto\"}}>{messageInfo.articles.length > 0 && <GraphicMessage messageList={messageInfo.articles} updateMessageItem={updateMessageItem} />}</div>\r\n      </Fragment>\r\n    }\r\n    return (\r\n    \t<div>\r\n        <Form.Item wrapperCol={{offset: 2}}>\r\n          <Radio.Group value={messageInfo.replyType} onChange={e => changeMessageInfo(\"replyType\", e.target.value)}>\r\n            <Radio.Button value={0}>文本消息</Radio.Button>\r\n            <Radio.Button value={1}>图文消息</Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        {MessageContent}\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MenuReplyMessage;","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Form, Button, Input, Radio, Transfer, Switch} from \"antd\";\r\nimport * as actionCreators from '../store/actionCreators';\r\nimport './index.scss';\r\nimport MenuReplyMessage from '../components/MenuReplyMessage';\r\nclass EditMenuInfo extends Component {\r\n\r\n    componentDidMount() {\r\n        let query = this.props.history.location.query;\r\n        query && this.props.initMenuInfo(query);\r\n    }\r\n\r\n    render() {\r\n        const {menuInfo, menuForm, sub_button, menuIndex, handleInputChange, handleSubInputChange, addFirstMenu, editMenu, submitMenu, addSecondMenu, editSecMenu, deleteFirMenu, deleteSubMenu, allCodes, targetKeys, changeGonghao, isSubmit, cancelMenu, handleInfoChange, handleIndividualChange, openModal, resetState, messageInfo, changeMessageInfo, uploadImg, addToList, updateMessageItem, updateCurrentMessage, deleteCurrentMessage, updateIndex} = this.props;\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                sm: {span: 4}\r\n            },\r\n            wrapperCol: {\r\n                sm: {span: 16, offset: 0}\r\n            },\r\n            colon: false\r\n        };\r\n        const menuList = menuInfo[\"values\"].map((item, index) => (\r\n            <div className=\"menu\" style={{width: menuInfo[\"values\"].length === 1 ? \"50%\" : menuInfo[\"values\"].length === 2 ? \"33.33%\" : \"33.33%\"}} key={index} onClick={() => editMenu(item, index)}>\r\n                <span className=\"nav-title cursor\">{item.name || \"菜单名称\"}</span>\r\n                <ul className=\"sub-menu-list\" style={{top: (item.sub_button && item.sub_button.length) ? (item.sub_button.length === 5 ?  - 4 * 46 - 55 : - item.sub_button.length * 46 - 55) : -55, display: menuIndex === index ? \"block\" : \"none\"}}>\r\n                    {item.sub_button && item.sub_button.map((i, idx) => (\r\n                        <li className=\"textEllipsis\" key={idx} onClick={e=> editSecMenu(e, i, idx)}>{i.name || \"子菜单名称\"}</li>\r\n                    ))}\r\n                    <li className=\"add\" style={{display: item.sub_button && item.sub_button.length < 5 ? \"blcok\" : \"none\"}} onClick={addSecondMenu}>+</li>\r\n                    <div className=\"sanjiao sanjiao-out\"/>\r\n                    <div className=\"sanjiao sanjiao-in\"/>\r\n                </ul>\r\n            </div>\r\n        ));\r\n        let keyOrUrl, subKeyOrUrl;\r\n        if (sub_button.type === 'view') {\r\n            subKeyOrUrl = <Form.Item label=\"链接\">\r\n                <Input value={sub_button.url} placeholder=\"请输入网页跳转链接，必须以 http 或 https 开头\" onChange={(e) => handleSubInputChange(e, \"url\")}/>\r\n            </Form.Item>\r\n        } else if (sub_button.type === 'click') {\r\n            subKeyOrUrl = <div className=\"content-wrapper\">\r\n                {messageInfo && <MenuReplyMessage messageInfo={messageInfo} changeMessageInfo={changeMessageInfo} uploadImg={uploadImg} addToList={addToList} updateMessageItem={updateMessageItem} updateCurrentMessage={updateCurrentMessage} deleteCurrentMessage={deleteCurrentMessage} updateIndex={updateIndex} />}\r\n            </div>\r\n        }\r\n        if (menuForm.type === 'view') {\r\n            keyOrUrl = <Form.Item label=\"链接\">\r\n                <Input value={menuForm.url} placeholder=\"请输入网页跳转链接，必须以 http 或 https 开头\" onChange={(e) => handleInputChange(e, \"url\")}/>\r\n            </Form.Item>\r\n        } else if (menuForm.type === 'click') {\r\n            keyOrUrl =\r\n                <div className=\"content-wrapper\">\r\n                    <MenuReplyMessage messageInfo={messageInfo} changeMessageInfo={changeMessageInfo} uploadImg={uploadImg} addToList={addToList} updateMessageItem={updateMessageItem} updateCurrentMessage={updateCurrentMessage} deleteCurrentMessage={deleteCurrentMessage} updateIndex={updateIndex} />\r\n                </div>\r\n        }\r\n        let menuInfoForm, submitButton;\r\n        if (menuInfo.values.length !== 0) {\r\n            if (menuForm.sub_button && menuForm.sub_button.length !== 0) {\r\n                menuInfoForm =\r\n                    <div className=\"menu-right fl\">\r\n                        <div className=\"menu-parent\">\r\n                            <div className=\"menu-title\">\r\n                                <h4 className=\"fl\">菜单编辑</h4>\r\n                                <Button className=\"fr\" type=\"link\" onClick={deleteFirMenu}>删除菜单</Button>\r\n                            </div>\r\n                            <Form {...formItemLayout}>\r\n                                <Form.Item label=\"菜单名称\">\r\n                                    <Input value={menuForm.name} placeholder=\"一级菜单名称\" maxLength={8} allowClear\r\n                                           onChange={(e) => handleInputChange(e, \"name\")}/>\r\n                                    <span className=\"menu-name-tips\">Tips: 菜单名称中汉字不可以超过4个，写四个汉字的同时可以添加2个表情</span>\r\n                                </Form.Item>\r\n                            </Form>\r\n                            <div className=\"menu-children\">\r\n                                <div className=\"menu-title\">\r\n                                    <h4 className=\"fl\">子菜单编辑</h4>\r\n                                    <Button className=\"fr\" type=\"link\" onClick={deleteSubMenu}>删除子菜单</Button>\r\n                                </div>\r\n                                <Form {...formItemLayout}>\r\n                                    <Form.Item label=\"子菜单名称\">\r\n                                        <Input value={sub_button.name} placeholder=\"二级菜单名称，仅支持中英文和数字，字数不超过8个\" maxLength={16}\r\n                                               onChange={(e) => handleSubInputChange(e, \"name\")}/>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"子菜单内容\">\r\n                                        <Radio.Group value={sub_button.type} onChange={(e) => handleSubInputChange(e, \"type\")}>\r\n                                            <Radio value=\"view\">跳转网页</Radio>\r\n                                            <Radio value=\"click\">发送消息</Radio>\r\n                                        </Radio.Group>\r\n                                    </Form.Item>\r\n                                    {subKeyOrUrl}\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            } else {\r\n                menuInfoForm =\r\n                    <div className=\"menu-right fl\">\r\n                        <div className=\"menu-parent\">\r\n                            <div className=\"menu-title\">\r\n                                <h4 className=\"fl\">菜单编辑</h4>\r\n                                <Button className=\"fr\" type=\"link\" onClick={deleteFirMenu}>删除菜单</Button>\r\n                            </div>\r\n                            <Form {...formItemLayout}>\r\n                                <Form.Item label=\"菜单名称\">\r\n                                    <Input value={menuForm.name} maxLength={8} allowClear placeholder=\"一级菜单名称\" onChange={(e) => handleInputChange(e, \"name\")}/>\r\n                                    <span className=\"menu-name-tips\">Tips: 菜单名称中汉字不可以超过4个，写四个汉字的同时可以添加2个表情</span>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"菜单内容\">\r\n                                    <Radio.Group value={menuForm.type} onChange={(e) => handleInputChange(e, \"type\")}>\r\n                                        <Radio value=\"view\">跳转网页</Radio>\r\n                                        <Radio value=\"click\">发送消息</Radio>\r\n                                    </Radio.Group>\r\n                                </Form.Item>\r\n                                {keyOrUrl}\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            submitButton = <div className=\"menu-right-btm fl\">\r\n                <Button type=\"primary\" onClick={() => {openModal();this.props.getAllCodes()}\r\n                }>提交</Button>\r\n            </div>\r\n        }\r\n        let menuModal;\r\n        if (isSubmit) {\r\n            let individualSex;\r\n            if (menuInfo.individual) {\r\n                individualSex = <Form.Item label=\"性别\">\r\n                    <Radio.Group value={menuInfo.sex} onChange={e => handleInfoChange(e, \"sex\")}>\r\n                        <Radio value=\"0\">未知</Radio>\r\n                        <Radio value=\"1\">男</Radio>\r\n                        <Radio value=\"2\">女</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n            }\r\n            menuModal = <div className=\"menu-modal-wrapper\">\r\n                <div className=\"menu-modal\">\r\n                    <Transfer\r\n                        dataSource={allCodes}\r\n                        showSearch\r\n                        targetKeys={targetKeys}\r\n                        onChange={changeGonghao}\r\n                        render={item => item.nick_name}\r\n                        rowKey={record => record.code}\r\n                        className=\"menu-transfer fl\"\r\n                    />\r\n                    <Form className=\"fl\" colon={false} labelCol={{sm: {span: 30}}} wrapperCol={{sm: {span: 30, offset: 0}}}\r\n                          labelAlign=\"left\">\r\n                        <Form.Item label=\"标题\">\r\n                            <Input value={menuInfo.title} placeholder=\"请输入标题\" onChange={(e) => handleInfoChange(e, \"title\")}/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"个性化菜单\">\r\n                            <Switch onChange={handleIndividualChange} checked={menuInfo.individual}/>\r\n                        </Form.Item>\r\n                        {individualSex}\r\n                        <Form.Item label=\" \">\r\n                            <Button style={{marginRight: \"10px\"}} type=\"primary\" onClick={() => submitMenu(this.props)}>提交</Button>\r\n                            <Button onClick={cancelMenu}>取消</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        }\r\n        return (\r\n            <div>\r\n                <div className='container edit-menu'>\r\n                    <div className=\"title-wrapper\">\r\n                        <h2>菜单配置</h2>\r\n                        <Button className=\"fr\" onClick={() => resetState(this.props)}>返回上一级</Button>\r\n                    </div>\r\n                    <div className=\"menu-left fl\">\r\n                        <div className=\"menu-wrapper\">\r\n                            <div className=\"menu-cont\">\r\n                                <div className=\"menu-list\">\r\n                                    {menuList}\r\n                                    <div className=\"menu add\"\r\n                                         style={menuList.length === 1 ? {width: \"50%\"} : (menuList.length === 2 ? {width: \"33%\"} : (menuList.length === 3 ? {display: \"none\"} : {width: \"100%\"}))}\r\n                                         onClick={addFirstMenu}>\r\n                                        <span className=\"nav-title cursor\">+ 添加菜单</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {menuInfoForm}\r\n                    {submitButton}\r\n                </div>\r\n                {menuModal}\r\n            </div>\r\n        )\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.unMountState();\r\n        this.props.resetMessageInfo();\r\n    }\r\n\r\n}\r\n\r\nconst mapState = state => ({\r\n    menuInfo: state.gonghao.menu.menuInfo,\r\n    menuForm: state.gonghao.menu.menuForm,\r\n    sub_button: state.gonghao.menu.sub_button,\r\n    menuIndex: state.gonghao.menu.menuIndex,\r\n    allCodes: state.gonghao.menu.allCodes,\r\n    isSubmit: state.gonghao.menu.isSubmit,\r\n    targetKeys: state.gonghao.menu.targetKeys,\r\n    messageInfo: state.gonghao.menu.messageInfo,\r\n    updateIndex: state.gonghao.menu.updateIndex,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n    initMenuInfo(record) {\r\n        dispatch(actionCreators.initMenuInfo(record));\r\n    },\r\n    handleInfoChange(e, name) {\r\n        dispatch(actionCreators.handleInfoChange(e.target.value, name));\r\n    },\r\n    handleIndividualChange(value) {\r\n        dispatch(actionCreators.handleIndividualChange(value));\r\n    },\r\n    handleInputChange(e, name) {\r\n        dispatch(actionCreators.handleInputChange(name, e.target.value))\r\n    },\r\n    handleSubInputChange(e, name) {\r\n        dispatch(actionCreators.handleSubInputChange(name, e.target.value))\r\n    },\r\n    addFirstMenu() {\r\n        dispatch(actionCreators.addFirstMenu())\r\n    },\r\n    editMenu(item, index) {\r\n        dispatch(actionCreators.editMenu(item, index))\r\n    },\r\n    addSecondMenu(e) {\r\n        e.stopPropagation();\r\n        dispatch(actionCreators.addSecondMenu())\r\n    },\r\n    submitMenu(props) {\r\n        dispatch(actionCreators.submitMenu(props))\r\n    },\r\n    openModal() {\r\n        dispatch(actionCreators.openModal())\r\n    },\r\n    editSecMenu(e, data, idx) {\r\n        e.stopPropagation();\r\n        dispatch(actionCreators.editSecMenu(data, idx))\r\n    },\r\n    deleteFirMenu() {\r\n        dispatch(actionCreators.deleteFirMenu())\r\n    },\r\n    deleteSubMenu() {\r\n        dispatch(actionCreators.deleteSubMenu())\r\n    },\r\n    changeGonghao(targetKeys) {\r\n        dispatch(actionCreators.changeGonghao(targetKeys))\r\n    },\r\n    getAllCodes() {\r\n        dispatch(actionCreators.getAllCodes())\r\n    },\r\n    cancelMenu() {\r\n        dispatch(actionCreators.cancelMenu())\r\n    },\r\n    resetState(props) {\r\n        props.history.goBack();\r\n        dispatch(actionCreators.resetState());\r\n    },\r\n    unMountState() {\r\n        dispatch(actionCreators.resetState());\r\n    },\r\n    uploadImg(info) {\r\n        if (info.file.status === 'done') {\r\n            let picurl = `http://t.dmmup.com/uploads/${info.file.response.filename}`;\r\n            dispatch(actionCreators.changeMessageInfo(\"picurl\", picurl))\r\n        }\r\n    },\r\n    changeMessageInfo(key, value) {\r\n        dispatch(actionCreators.changeMessageInfo(key, value))\r\n    },\r\n    addToList() {\r\n        dispatch(actionCreators.addToList())\r\n    },\r\n    updateMessageItem(item, index) {\r\n        dispatch(actionCreators.updateMessageItem(item, index))\r\n    },\r\n    updateCurrentMessage() {\r\n        dispatch(actionCreators.updateCurrentMessage())\r\n    },\r\n    deleteCurrentMessage() {\r\n        dispatch(actionCreators.deleteCurrentMessage())\r\n    },\r\n    resetMessageInfo() {\r\n        dispatch(actionCreators.resetState())\r\n    },\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Form.create({name: 'editMenuInfo'})(EditMenuInfo));","import React, {Component} from 'react';\r\nimport {Button, Table, message} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport {actionCreators} from './store';\r\nimport './index.scss';\r\n\r\nclass Config extends Component {\r\n\r\n  state = {\r\n    power: 0\r\n  }\r\n\r\n  render() {\r\n    const {power} = this.state;\r\n    const {replyMessageList, allCodes, deleteReplyMessage} = this.props;\r\n    const configHeader = [\r\n      {\r\n        key: \"_id\",\r\n        title: \"消息ID\",\r\n        dataIndex: \"_id\",\r\n        align: \"center\",\r\n        width: 220,\r\n        className: power ? \"\" : \"powerHide\"\r\n      }, {\r\n        key: \"replyType\",\r\n        title: \"消息类型\",\r\n        dataIndex: \"replyType\",\r\n        align: \"center\",\r\n        render: text => text === 0 ? \"文本消息\" : \"图文消息\"\r\n      }, {\r\n        key: \"type\",\r\n        title: \"互动类型\",\r\n        dataIndex: \"type\",\r\n        align: \"center\",\r\n        render: text => text === 0 ? \"用户回复\" : (text === 2 ? \"用户关注\" : (text === 4 ? \"默认回复\" : \"~~\"))\r\n      }, {\r\n        key: \"name\",\r\n        dataIndex: \"name\",\r\n        title: \"消息名称\",\r\n        align: \"center\"\r\n      },{\r\n        key: \"sex\",\r\n        title: \"性别\",\r\n        dataIndex: \"sex\",\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return (\r\n            <span>\r\n              {record.sex === 1 ? \"男\" : (record.sex === 2\r\n                ? \"女\" : (record.sex === 0 ? \"未知\" : \"默认\"))}\r\n            </span>\r\n          )\r\n        }\r\n      }, {\r\n        key: \"text\",\r\n        title: \"用户回复文本\",\r\n        dataIndex: \"text\",\r\n        align: \"center\",\r\n        render: text => text ? text : \"——\"\r\n      }, {\r\n        key: \"codes\",\r\n        title: \"公号名称\",\r\n        dataIndex: \"codes\",\r\n        align: \"center\",\r\n        render: text => text.length > 0 ? text.slice(0, 4).map(item => {\r\n          let a = allCodes.filter(i => i.code === item)[0];\r\n          return a && a.nick_name\r\n        }) : \"无\"\r\n      }, {\r\n        key: \"copy_id\",\r\n        title: \"复制消息ID\",\r\n        align: \"center\",\r\n        className: power ? \"\" : \"powerHide\",\r\n        render: (text, record) => <CopyToClipboard className=\"btn-wrapper\" text={record._id} onCopy={() => message.success(\"复制成功\")}>\r\n          <Button size=\"small\" type=\"primary\">复制消息ID</Button>\r\n        </CopyToClipboard>\r\n      },{\r\n        key: \"Action\",\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 120,\r\n        render: (text, record, index) => {\r\n          return (\r\n            <div className=\"btn-wrapper\">\r\n              <Button size=\"small\" type=\"primary\">\r\n                <Link to={{pathname: './update', state: {record, index}}}>编辑</Link>\r\n              </Button>\r\n              <Button size=\"small\" style={{background: \"red\", marginLeft: \"5px\"}}\r\n                      onClick={() => deleteReplyMessage(record._id, index)}>删除</Button>\r\n            </div>\r\n          )\r\n        }\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"edit-config\">\r\n          <Button type=\"primary\" className=\"edit-btn\">\r\n            <Link to='./create'>新建回复规则</Link>\r\n          </Button>\r\n          <Table className='config-table' size=\"small\" rowKey={(record => record._id)} columns={configHeader} dataSource={replyMessageList} bordered/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    let userInfo = localStorage.getItem(\"userInfo\");\r\n    if(userInfo) {\r\n      let power = JSON.parse(userInfo).power;\r\n      this.setState({power})\r\n    }\r\n    this.props.getReplyMessageList();\r\n    this.props.getAllCodes();\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  allCodes: state.gonghao.reply.allCodes,\r\n  replyMessageList: state.gonghao.reply.replyMessageList\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  getReplyMessageList() {\r\n    dispatch(actionCreators.getReplyMessageList())\r\n  },\r\n  deleteReplyMessage(id, index) {\r\n    dispatch(actionCreators.deleteReplyMessage(id, index))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Config);","import React, {Component} from 'react';\r\nimport {Avatar, Input, List, Layout, message, Select} from \"antd\";\r\nimport axios from 'axios';\r\nimport \"./index.scss\";\r\n\r\nconst {Sider, Content} = Layout;\r\nconst {Option} = Select;\r\n\r\nclass MultiSelectByGroup extends Component {\r\n\r\n    state = {\r\n        gonghaoTagList: [],\r\n        gonghaoList: [],\r\n        nick_name: \"\",\r\n        group: \"全部\",\r\n        codes: [],\r\n        AllGonghaoList: []\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps (nextProps) {\r\n        this.setState({codes: nextProps.codes})\r\n    }\r\n\r\n    search = nick_name => {\r\n        if (nick_name !== \"\") {\r\n            axios.get(\"/conf/find_one\", {params: {nick_name}})\r\n                .then(res => {\r\n                    if (res.data.data.length !== 0) {\r\n                        const {data: gonghaoList} = res.data;\r\n                        this.setState({gonghaoList})\r\n                    } else {\r\n                        message.info(\"没有查询到包含该字符的公号，请检查后重新输入\")\r\n                    }\r\n                })\r\n        } else {\r\n            let {AllGonghaoList: gonghaoList} = this.state;\r\n            this.setState({gonghaoList})\r\n        }\r\n    };\r\n\r\n    changeSearchInput = e => {\r\n        let nick_name = e.target.value;\r\n        this.setState({nick_name, group: \"全部\"})\r\n    };\r\n\r\n    selectGonghao = gonghao => {\r\n        let {codes} = this.state;\r\n        const {code} = gonghao;\r\n        const keyIndex = codes.indexOf(code);\r\n        if(keyIndex > -1) {\r\n            codes.splice(keyIndex, 1);\r\n        } else {\r\n            codes.push(code);\r\n        }\r\n        this.setState({codes});\r\n        this.props.selectGonghao(codes);\r\n    };\r\n\r\n    handleChangeGroup = group => {\r\n        const {AllGonghaoList: gonghaoList} = this.state;\r\n        this.setState({group, nick_name: \"\", gonghaoList})\r\n    };\r\n\r\n    render() {\r\n        const {gonghaoTagList, gonghaoList, nick_name, group, codes} = this.state;\r\n        return (\r\n            <Layout style={{background: \"#fff\"}} className=\"multi-gonghao-wrapper\">\r\n                <Sider className=\"message-sider-wrapper\" theme=\"light\" width=\"200\">\r\n                    <Select placeholder=\"按分组查询\" value={group} className=\"search-input\" onChange={this.handleChangeGroup}>\r\n                        <Option value=\"全部\">所有公号</Option>\r\n                        {gonghaoTagList.map(item =>\r\n                            <Option key={item._id} value={item.name}>{item.name}</Option>\r\n                        )}\r\n                    </Select>\r\n                    <Input.Search\r\n                        className=\"search-input\"\r\n                        placeholder=\"请输入公号名称\"\r\n                        onSearch={this.search}\r\n                        value={nick_name}\r\n                        allowClear\r\n                        onChange={this.changeSearchInput}\r\n                    />\r\n                    <List className=\"gonghao-list\"\r\n                          dataSource={group !== \"全部\" ? gonghaoList.filter(i => i.group === group) : gonghaoList}\r\n                          locale={{emptyText: <span style={{display: \"none\"}}>123</span>}}\r\n                          renderItem={gonghao =>\r\n                              <List.Item className={codes.indexOf(gonghao.code) > -1 ? \"cursor selected\" : \"cursor\"}\r\n                                         onClick={() => this.selectGonghao(gonghao)} key={gonghao._id}>\r\n                                  <Avatar shape=\"square\" size={22} src={gonghao.head_img} />{gonghao.nick_name}\r\n                              </List.Item>\r\n                          }/>\r\n                </Sider>\r\n                <Content>{this.props.content}</Content>\r\n            </Layout>\r\n        )\r\n    }\r\n\r\n    getGonghaoTagList = () => {\r\n        axios.get(\"/gonghaoTag\")\r\n            .then(res => {\r\n                if (res.data.code === 1) {\r\n                    const {data: gonghaoTagList} = res.data;\r\n                    this.setState({gonghaoTagList})\r\n                }\r\n            })\r\n    };\r\n\r\n    getGonghaoList = () => {\r\n        axios.get('/conf')\r\n            .then(res => {\r\n                const {data, code} = res.data;\r\n                if (code === 1) {\r\n                    this.setState({gonghaoList: data, AllGonghaoList: data})\r\n                }\r\n            })\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getGonghaoTagList();\r\n        this.getGonghaoList();\r\n    }\r\n}\r\n\r\nexport default MultiSelectByGroup;","import React, {Component, Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Form, Button, Input, Upload, Radio, Icon, Row, Col, Divider, Tooltip, Tag, Switch} from \"antd\";\r\nimport * as actionCreators from '../store/actionCreators';\r\nimport \"./index.scss\";\r\nimport GraphicMessage from '../../../../common/components/GraphicMessage';\r\nimport MultiSelectSider from '../../../../common/components/SelectGonghao/MultiSelectSider';\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        sm: {span: 4}\r\n    },\r\n    wrapperCol: {\r\n        sm: {span: 14, offset: 0}\r\n    },\r\n};\r\n\r\nclass EditConfigInfo extends Component {\r\n\r\n    UNSAFE_componentWillMount() {\r\n        const {location: {state}, getAllCodes, initState} = this.props;\r\n        getAllCodes();\r\n        state && initState(state.record, state.index);\r\n    }\r\n\r\n    render() {\r\n        const {allCodes, selectGonghao, deleteGonghao, submitForm, messageInfo, updateMessageItem, addToList, changeMessageInfo, uploadImg, history, updateIndex, updateCurrentMessage, deleteCurrentMessage} = this.props;\r\n        let TextOrKey, MessageContent;\r\n        if (messageInfo.type === 0) {\r\n            TextOrKey = <Form.Item label=\"用户回复内容\">\r\n                <Input onChange={e => changeMessageInfo(\"text\", e.target.value)} value={messageInfo.text}\r\n                       placeholder='请输入用户回复内容'/>\r\n            </Form.Item>\r\n        } else if (messageInfo.type === 1) {\r\n            TextOrKey = <Form.Item label=\"点击关键词\">\r\n                <Input onChange={e => changeMessageInfo(\"key\", e.target.value)} value={messageInfo.key}\r\n                       placeholder='请输入菜单栏点击关键词'/>\r\n            </Form.Item>\r\n        }\r\n\r\n        if (messageInfo.replyType === 0) {\r\n            MessageContent =<Form.Item className=\"inputtxt\" label=\"文本消息\">\r\n                <Input.TextArea onChange={e => changeMessageInfo(\"content\", e.target.value)}\r\n                                value={messageInfo.content} autoSize={{minRows: 3, maxRows: 6}}\r\n                                placeholder='请输入回复文本消息'/>\r\n            </Form.Item>\r\n        } else {\r\n            let UploadImg;\r\n            if (messageInfo.picurl) {\r\n                UploadImg = <img style={{width: \"100px\"}} src={messageInfo.picurl} alt=\"图片走丢啦~\"/>\r\n            } else {\r\n                UploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n            }\r\n            MessageContent = <Fragment>\r\n                <Form.Item label=\"图文标题\">\r\n                    <Input onChange={e => changeMessageInfo(\"title\", e.target.value)} value={messageInfo.title}\r\n                           placeholder='请输入图文标题'/>\r\n                </Form.Item>\r\n                <Form.Item label=\"图文链接\">\r\n                    <Input onChange={e => changeMessageInfo(\"url\", e.target.value)} value={messageInfo.url}\r\n                           placeholder='请输入图文链接'/>\r\n                </Form.Item>\r\n                <Form.Item label=\"图文描述\">\r\n                    <Input.TextArea onChange={e => changeMessageInfo(\"description\", e.target.value)}\r\n                                    value={messageInfo.description} autoSize={{minRows: 3, maxRows: 6}}\r\n                                    placeholder='请输入图文描述'/>\r\n                </Form.Item>\r\n                <Form.Item label=\"上传图片\">\r\n                    <Upload name=\"imageFile\" action=\"/reply/upload\" showUploadList={false} onChange={uploadImg}>\r\n                        {UploadImg}\r\n                    </Upload>\r\n                </Form.Item>\r\n                <Form.Item label=\" \" colon={false}>\r\n                    {updateIndex > -1 ? <div>\r\n                        <Button onClick={updateCurrentMessage} type=\"primary\" style={{marginRight: 20}}>保存</Button>\r\n                        <Button onClick={deleteCurrentMessage}>删除此条消息</Button>\r\n                    </div> : <div><Button onClick={addToList}>添加到图文列表</Button><p className=\"tips\">Tips:\r\n                        当用户发送文本、图片、视频、图文、地理位置这五种消息时，只能回复1条图文消息；其余场景最多可回复8条图文消息</p></div>}\r\n                </Form.Item>\r\n            </Fragment>\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <MultiSelectSider selectGonghao={selectGonghao} codes={messageInfo.codes} content={\r\n                    <Form className=\"reply-form\" labelAlign=\"right\" {...formItemLayout}>\r\n                        <Col span={14}>\r\n                            <Form.Item label=\"选择公号\">\r\n                                <div style={{width: \"180%\"}}>\r\n                                    {allCodes.map(item => messageInfo.codes.indexOf(item.code) > -1 &&\r\n                                        <Tag key={item._id} className=\"cursor gonghao-tag\" closable\r\n                                             onClose={() => deleteGonghao(messageInfo.codes, item.code)}>{item.nick_name}</Tag>)}\r\n                                </div>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"消息名称\">\r\n                                <Input onChange={e => changeMessageInfo(\"name\", e.target.value)}\r\n                                       value={messageInfo.name} placeholder='请输入消息名称,(仅供备注，不会发送给粉丝)'/>\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Divider style={{width: \"110%\", marginLeft: -50}}/>\r\n                        <h2 className=\"block-title\">设置自动回复</h2>\r\n                        <Row>\r\n                            <Col span={14}>\r\n                                <Form.Item wrapperCol={{offset: 1}}>\r\n                                    <Radio.Group value={messageInfo.replyType}\r\n                                                 onChange={e => changeMessageInfo(\"replyType\", e.target.value)}>\r\n                                        <Radio.Button value={0}>文本消息</Radio.Button>\r\n                                        <Radio.Button value={1}>图文消息</Radio.Button>\r\n                                    </Radio.Group>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"用户昵称\">\r\n                                    <Switch checked={messageInfo.is_nickname} onChange={value => changeMessageInfo(\"is_nickname\", value)} />\r\n                                    <span className=\"tips\">\r\n                        {messageInfo.is_nickname && \"Tips: 点击开启用户昵称后，需要手动添加替换文字\"}\r\n                    </span>\r\n                                </Form.Item>\r\n                                {MessageContent}\r\n                            </Col>\r\n                            <Col span={7}>\r\n                                {messageInfo.articles.length > 0 && <GraphicMessage messageList={messageInfo.articles}\r\n                                                                                    updateMessageItem={updateMessageItem}/>}\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider style={{width: \"110%\", marginLeft: -50}}/>\r\n                        <h2 className=\"block-title\">设置模板消息</h2>\r\n                        <Col span={14}>\r\n                            <Form.Item wrapperCol={{offset: 1}}>\r\n                                <Radio.Group value={messageInfo.type}\r\n                                             onChange={e => changeMessageInfo(\"type\", e.target.value)}>\r\n                                    <Radio.Button value={0}>特定回复</Radio.Button>\r\n                                    <Radio.Button value={2}>用户关注</Radio.Button>\r\n                                    <Radio.Button value={4}>默认回复</Radio.Button>\r\n                                </Radio.Group>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"粉丝性别\">\r\n                                <Radio.Group value={messageInfo.sex}\r\n                                             onChange={e => changeMessageInfo(\"sex\", e.target.value)}>\r\n                                    <Radio value={3}>默认</Radio>\r\n                                    <Radio value={1}>男</Radio>\r\n                                    <Radio value={2}>女</Radio>\r\n                                    <Radio value={0}>未知</Radio>\r\n                                </Radio.Group>\r\n                            </Form.Item>\r\n                            <Form.Item label={<span>未知性别<Tooltip title=\"未知属性粉丝按照`男`或`女`发送\"><Icon className=\"cursor\"\r\n                                                                                                 type=\"question-circle\"\r\n                                                                                                 theme=\"filled\"/></Tooltip> </span>}>\r\n                                <Radio.Group value={messageInfo.attribute}\r\n                                             onChange={e => changeMessageInfo(\"attribute\", e.target.value)}>\r\n                                    <Radio value={1}>男</Radio>\r\n                                    <Radio value={2}>女</Radio>\r\n                                </Radio.Group>\r\n                            </Form.Item>\r\n                            {TextOrKey}\r\n                        </Col>\r\n                        <Divider style={{width: \"110%\", marginLeft: -50}}/>\r\n                        <Form.Item wrapperCol={{offset: 1}}>\r\n                            <Button type=\"primary\" style={{marginRight: 20}}\r\n                                    onClick={() => submitForm(messageInfo, this.props)}>提交</Button>\r\n                            <Button onClick={() => history.goBack()}>取消</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                }/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        this.props.resetState()\r\n    }\r\n}\r\n\r\nconst mapState = state => ({\r\n    messageInfo: state.gonghao.reply.messageInfo,\r\n    allCodes: state.gonghao.reply.allCodes,\r\n    selectGonghaoModal: state.gonghao.reply.selectGonghaoModal,\r\n    updateIndex: state.gonghao.reply.updateIndex,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n    getAllCodes() {\r\n        dispatch(actionCreators.getAllCodes())\r\n    },\r\n    selectGonghao(codes) {\r\n        dispatch(actionCreators.selectGonghao(codes))\r\n    },\r\n    deleteGonghao(codes, code) {\r\n        codes.splice(codes.indexOf(code), 1);\r\n        dispatch(actionCreators.selectGonghao(codes))\r\n    },\r\n    changeMessageInfo(key, value) {\r\n        dispatch(actionCreators.changeMessageInfo(key, value))\r\n    },\r\n    uploadImg(info) {\r\n        if (info.file.status === 'done') {\r\n            let picurl = `http://t.dmmup.com/uploads/${info.file.response.filename}`;\r\n            dispatch(actionCreators.changeMessageInfo(\"picurl\", picurl))\r\n        }\r\n    },\r\n    addToList() {\r\n        dispatch(actionCreators.addToList())\r\n    },\r\n    updateMessageItem(item, index) {\r\n        dispatch(actionCreators.updateMessageItem(item, index))\r\n    },\r\n    updateCurrentMessage() {\r\n        dispatch(actionCreators.updateCurrentMessage())\r\n    },\r\n    deleteCurrentMessage() {\r\n        dispatch(actionCreators.deleteCurrentMessage())\r\n    },\r\n    submitForm(messageInfo, props) {\r\n        const {title, picurl, url, description} = messageInfo;\r\n        const {state} = props.location;\r\n        messageInfo.articles.length === 0 && (messageInfo.articles.push({title, picurl, url, description}));\r\n        messageInfo.title = messageInfo.picurl = messageInfo.url = messageInfo.description = \"\";\r\n        if (state) {\r\n            messageInfo._id = state.record._id;\r\n            dispatch(actionCreators.updateConfigForm(messageInfo, props.history))\r\n        } else {\r\n            dispatch(actionCreators.createConfigForm(messageInfo, props.history))\r\n        }\r\n    },\r\n    resetState() {\r\n        dispatch(actionCreators.resetState());\r\n    },\r\n    initState(record, index) {\r\n        dispatch(actionCreators.initState(record, index))\r\n    }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Form.create({name: 'editConfigInfo'})(EditConfigInfo));","import React, {Component} from 'react';\r\nimport {Table, Form, Input, Modal, message, Switch, DatePicker} from 'antd';\r\nimport moment from 'moment';\r\nimport Button from '../../../common/components/Button';\r\nimport axios from '../../../utils/http';\r\n\r\nclass TimingReply extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.submitReplyInfo = this.submitReplyInfo.bind(this);\r\n        this.cancelAction = this.cancelAction.bind(this);\r\n    }\r\n\r\n    state = {\r\n        replyList: [],\r\n        replyModal: false,\r\n        replyInfo: {\r\n            reply_id: \"\",\r\n            is_nickname: false,\r\n            content: \"\",\r\n            timing_time: new Date(),\r\n            remarks: \"\"\r\n        }\r\n    };\r\n\r\n    getReplyList() {\r\n        axios.get(\"/replyTime\")\r\n            .then(res => {\r\n                const {code, data} = res.data;\r\n                if(code === 1) {\r\n                    this.setState({replyList: data})\r\n                } else {\r\n                    this.setState({replyList: []})\r\n                }\r\n            })\r\n    }\r\n\r\n    openUpdateModal(record) {\r\n        this.setState({\r\n            replyModal: true,\r\n            replyInfo: {...record}\r\n        })\r\n    }\r\n\r\n    changeReplyInfoInput(value, name) {\r\n        let {replyInfo} = this.state;\r\n        replyInfo[name] = value;\r\n        this.setState({replyInfo})\r\n    }\r\n\r\n    createReplyInfo(replyInfo) {\r\n        console.log(replyInfo)\r\n        Modal.confirm({\r\n            title: \"确定创建一条新内容吗？\",\r\n            onOk: () => {\r\n                axios.post('/replyTime/create', {...replyInfo})\r\n                    .then(res => {\r\n                        let {code, msg} = res.data;\r\n                        if(code === 1) {\r\n                            message.success(msg);\r\n                            this.getReplyList();\r\n                            this.cancelAction()\r\n                        } else {\r\n                            message.error(msg)\r\n                        }\r\n                    })\r\n            }\r\n        })\r\n    }\r\n\r\n    updateReplyInfo(replyInfo) {\r\n        console.log(replyInfo)\r\n        Modal.confirm({\r\n            title: \"确定修改这条内容吗？\",\r\n            onOk: () => {\r\n                axios.post('/replyTime/update', {...replyInfo})\r\n                    .then(res => {\r\n                        let {code, msg} = res.data;\r\n                        if(code === 1) {\r\n                            message.success(msg);\r\n                            this.getReplyList();\r\n                            this.cancelAction()\r\n                        } else {\r\n                            message.error(msg)\r\n                        }\r\n                    })\r\n            }\r\n        })\r\n    }\r\n\r\n    submitReplyInfo() {\r\n        let {replyInfo} = this.state;\r\n        if(!replyInfo._id) {\r\n            this.createReplyInfo(replyInfo)\r\n        } else {\r\n            this.updateReplyInfo(replyInfo)\r\n        }\r\n    }\r\n\r\n    cancelAction() {\r\n        this.setState({\r\n            replyModal: false,\r\n            replyInfo: {\r\n                reply_id: \"\",\r\n                is_nickname: false,\r\n                content: \"\",\r\n                timing_time: + new Date()\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteReply(_id) {\r\n        Modal.confirm({\r\n            title: \"确定删除这条内容吗？\",\r\n            onOk: () => {\r\n                axios.get(\"/replyTime/del\", {params: {_id}})\r\n                    .then(res => {\r\n                        let {code, msg} = res.data;\r\n                        if(code === 1) {\r\n                            this.getReplyList()\r\n                            message.success(msg)\r\n                        } else {\r\n                            message.error(msg)\r\n                        }\r\n                    })\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getReplyList()\r\n    }\r\n\r\n    render() {\r\n\r\n        let {replyList, replyModal, replyInfo} = this.state;\r\n\r\n        const columns = [\r\n            {\r\n                key: \"reply_id\",\r\n                dataIndex: \"reply_id\",\r\n                title: \"自动回复消息ID\",\r\n                align: \"center\",\r\n                width: 120\r\n            }, {\r\n                key: \"remarks\",\r\n                dataIndex: \"remarks\",\r\n                title: \"消息名称\",\r\n                align: \"center\",\r\n                width: 150\r\n            }, {\r\n                key: \"timing_time\",\r\n                dataIndex: \"timing_time\",\r\n                title: \"设置时间\",\r\n                align: \"center\",\r\n                width: 180,\r\n                render: text => moment(text).format(\"YYYY-MM-DD HH:mm:ss\")\r\n            }, {\r\n                key: \"is_nickname\",\r\n                dataIndex: \"is_nickname\",\r\n                title: \"开启用户昵称\",\r\n                align: \"center\",\r\n                width: 80,\r\n                render: text => text ? \"开启\" : \"关闭\"\r\n            }, {\r\n                key: \"content\",\r\n                dataIndex: \"content\",\r\n                title: \"回复消息\",\r\n                align: \"center\",\r\n                ellipsis: true\r\n            }, {\r\n                key: \"action\",\r\n                title: \"操作\",\r\n                align: \"center\",\r\n                render: (text, record, index) => (\r\n                    <div>\r\n                        <Button onClick={() => this.openUpdateModal(record)} buttonContent=\"编辑\" />\r\n                        <Button onClick={() => this.deleteReply(record._id)} background=\"danger\" buttonContent=\"删除\" />\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        const formItemConfig = {\r\n            labelCol: {\r\n                span: 4\r\n            }, \r\n            wrapperCol: {\r\n                span: 16,\r\n                offser: 0\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <Button mb={20} size=\"default\" onClick={() => this.setState({replyModal: true})} buttonContent=\"新建消息\" />\r\n                <Table size=\"small\" dataSource={replyList} rowKey={record => record._id} columns={columns} />\r\n                <Modal visible={replyModal} title=\"编辑回复消息\" onOk={this.submitReplyInfo} onCancel={this.cancelAction}>\r\n                    <Form {...formItemConfig}>\r\n                        <Form.Item label=\"消息备注\">\r\n                            <Input value={replyInfo.remarks} placeholder=\"自行填写，便于区分对应\" onChange={e => this.changeReplyInfoInput(e.target.value, \"remarks\")} />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"消息ID\">\r\n                            <Input value={replyInfo.reply_id} placeholder=\"请在自动回复中复制\" onChange={e => this.changeReplyInfoInput(e.target.value, \"reply_id\")} />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"开启昵称\">\r\n                            <Switch checked={replyInfo.is_nickname} onChange={value => this.changeReplyInfoInput(value, \"is_nickname\")} />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"回复内容\">\r\n                            <Input.TextArea value={replyInfo.content} spellCheck={false} autoSize={{minRows: 3}}\r\n                            onChange={e => this.changeReplyInfoInput(e.target.value, \"content\")} />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"设置时间\">\r\n                            <DatePicker showTime value={moment(replyInfo.timing_time)} onChange={value => this.changeReplyInfoInput(value, \"timing_time\")} />\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>   \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default TimingReply;","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Tuoguan from './tuoguan';\r\nimport GonghaoGroup from './tuoguan/group'\r\n\r\nimport Menu from './menu';\r\nimport editMenu from './menu/edit';\r\n\r\nimport Replay from './reply';\r\nimport editReplay from './reply/edit';\r\n\r\nimport TimingReply from './timingReply';\r\n\r\nclass TuoguanWrapper extends Component {\r\n  render() {\r\n    return (\r\n        <Route path=\"/admin/gonghao\" render={() =>\r\n          <Switch>\r\n            {/*接管公号*/}\r\n            <Route path='/admin/gonghao/tuoguan/'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/tuoguan/index\" component={Tuoguan} />\r\n                <Route path=\"/admin/gonghao/tuoguan/group\" component={GonghaoGroup} />\r\n                <Redirect from=\"/admin/gonghao/tuoguan\" exact to='/admin/gonghao/tuoguan/index' />\r\n              </Switch>\r\n            </Route>\r\n            {/*菜单配置*/}\r\n            <Route path='/admin/gonghao/menu/'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/menu/index\" component={Menu} />\r\n                <Route path='/admin/gonghao/menu/create' component={editMenu} />\r\n                <Route path='/admin/gonghao/menu/update' component={editMenu} />\r\n                <Redirect from=\"/admin/gonghao/menu\" exact to='/admin/gonghao/menu/index' />\r\n              </Switch>\r\n            </Route>\r\n            {/*自动回复*/}\r\n            <Route path='/admin/gonghao/reply'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/reply/index\" component={Replay} />\r\n                <Route path='/admin/gonghao/reply/create' component={editReplay} />\r\n                <Route path='/admin/gonghao/reply/update' component={editReplay} />\r\n                <Redirect from=\"/admin/gonghao/reply\" exact to='/admin/gonghao/reply/index' />\r\n              </Switch>\r\n            </Route>\r\n            <Route path='/admin/gonghao/timingReply' component={TimingReply} />\r\n            <Redirect from=\"/admin/gonghao\" exact to='/admin/gonghao/tuoguan' />\r\n          </Switch>\r\n        } />\r\n    )\r\n  }\r\n}\r\n\r\nexport default TuoguanWrapper;","import React from 'react';\r\nimport {Card, List, Icon, Tooltip} from 'antd';\r\nimport \"./index.scss\";\r\nimport moment from 'moment';\r\n\r\nconst GraphicMessage = props => {\r\n  const {messageList, openSyncModal, openModal, openTimingModal, copy, deleteMaterial, openUpdateMaterialModal} = props;\r\n  return (\r\n    <div className=\"message-list-wrapper\">\r\n      <List grid={{gutter: 20, sm: 3, xxl: 6}} dataSource={messageList}\r\n            renderItem={(item, index) => <List.Item key={item._id}>\r\n              <Card className=\"message-list-card\" title={\r\n                <List className=\"message-list\">\r\n                  <div className=\"update-time\">\r\n                    <Icon type=\"info-circle\"/>{item.isTiming ? `于 ${moment(item.timing).format(\"YYYY-MM-DD HH:mm:ss\")} 发送` : \"未设置定时时间，请手动发送\"}</div>\r\n                  <Tooltip title=\"\" key={item.content.news_item[0].thumb_media_id + \"0\"}>\r\n                    <List.Item className=\"cursor\" onClick={() => openUpdateMaterialModal(item.media_id, 0, item.content.news_item[0], item._id)}>\r\n                      <div className=\"head-message\">\r\n                        <p className=\"ellipse-two\">{item.content.news_item[0].title}</p>\r\n                        <img src={item.content.news_item[0].local_img_path} alt=\"请先在微信后台上传图片\"/>\r\n                      </div>\r\n                    </List.Item>\r\n                  </Tooltip>\r\n                  {item.content.news_item.slice(1).map((message, i) => <Tooltip title=\"点击修改原文链接\" key={message.thumb_media_id + i + 1} placement=\"rightTop\">\r\n                    <List.Item className=\"border_btm cursor\" onClick={() => openUpdateMaterialModal(item.media_id, i + 1, item.content.news_item[i + 1], item._id)}>\r\n                      <div className=\"rest-message\">\r\n                        <p className=\"ellipse-two\">{message.title}</p>\r\n                        <img src={message.local_img_path} alt=\"miss\"/>\r\n                      </div>\r\n                    </List.Item>\r\n                  </Tooltip>)}\r\n                </List>}\r\n                    actions={[\r\n                      <Tooltip title=\"同步\"><Icon onClick={() => openSyncModal(item)} type=\"cloud-upload\"\r\n                                                key=\"sync\"/></Tooltip>,\r\n                      <Tooltip title=\"发送\"><Icon onClick={() => openModal(item)} type=\"message\" key=\"send\"/></Tooltip>,\r\n                      <Tooltip title=\"定时发送\"><Icon onClick={() => openTimingModal(item)} type=\"history\" key=\"timing\"/></Tooltip>,\r\n                      <Tooltip title=\"复制\"><Icon onClick={() => copy(item._id)} type=\"fork\" key=\"copy\"/></Tooltip>,\r\n                      <Tooltip title=\"删除\"><Icon onClick={() => deleteMaterial(item._id, index)} type=\"delete\"\r\n                                                key=\"del\"/></Tooltip>,\r\n                    ]}\r\n              />\r\n            </List.Item>}/>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default GraphicMessage;","import React, {PureComponent} from 'react';\r\nimport {ConfigProvider, message, Modal, Radio, Switch, DatePicker, TimePicker, Checkbox, Row, Col, Input} from \"antd\";\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/zh-cn';\r\nimport {connect} from \"react-redux\";\r\nimport { actionCreators } from '../store';\r\nimport GraphicMessage from '../components/GraphicMessage';\r\n\r\nimport axios from 'axios';\r\n\r\nclass groupMessage extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      syncModal: false,\r\n      checkedList: [],\r\n      indeterminate: false,\r\n      checkAll: false,\r\n      messageInfo: {},\r\n      code: props.code,\r\n      gonghaoList: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { code } = this.state;\r\n    this.props.getMessageList(code);\r\n    this.props.getTagList(code);\r\n    this.props.getGroupGonghao();\r\n    this.getGonghaoList();\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\r\n    if(this.props.code !== nextProps.code) {\r\n      const { code } = nextProps;\r\n      this.props.getMessageList(code);\r\n    }\r\n  }\r\n\r\n  getGonghaoList = () => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        const { data, code } = res.data;\r\n        if (code === 1) {\r\n          this.setState({gonghaoList: data})\r\n        }\r\n      })\r\n  };\r\n\r\n  render() {\r\n    const { messageList, openModal, sendModal, sendMessage, sendInfo, tagList, closeModal, changeTagId, sendTimingModal, sendTimingMessage, sendTimingInfo, openTimingModal, changeTimingState, copy, changeTime, deleteMaterial, isComplete, openUpdateMaterialModal, closeUpdateMaterialModal, updateMaterialModal, updateMaterial, updateInfo, changeContentSourceUrl }  = this.props;\r\n    const { code, gonghaoList } = this.state;\r\n    let selectGonghaoList = gonghaoList.filter(item => item.code !== code);\r\n    return (\r\n      <ConfigProvider locale={zhCN}>\r\n        <div className=\"container\" style={{padding: 0}}>\r\n          <GraphicMessage messageList={messageList} openSyncModal={message => this.setState({syncModal: true, messageInfo: message})} openModal={openModal} openTimingModal={openTimingModal} copy={copy} deleteMaterial={deleteMaterial} isComplete={isComplete} openUpdateMaterialModal={openUpdateMaterialModal} />\r\n        </div>\r\n        <Modal\r\n          title=\"请选择要发送的标签\"\r\n          visible={sendModal}\r\n          onOk={() => sendMessage(sendInfo)}\r\n          onCancel={closeModal}\r\n        >\r\n          <Radio.Group value={sendInfo.tagId} onChange={e => changeTagId(e, false)}>\r\n            <Radio value={-1}>全部</Radio>\r\n            {tagList.map(item => (\r\n                <Radio key={item._id} value={item.id}>{item.name}</Radio>\r\n            ))}\r\n          </Radio.Group>\r\n        </Modal>\r\n        <Modal\r\n          title=\"创建定时发送任务？\"\r\n          visible={sendTimingModal}\r\n          onOk={() => sendTimingMessage(sendTimingInfo, code)}\r\n          onCancel={closeModal}\r\n        >\r\n          <label htmlFor=\"tagId\">\r\n            标签：\r\n            <Radio.Group id=\"tagId\" value={sendTimingInfo.tagId} onChange={e => changeTagId(e, true)}>\r\n              <Radio value={-1}>全部</Radio>\r\n              {tagList.map(item => (\r\n                  <Radio key={item._id} value={item.id}>{item.name}</Radio>\r\n              ))}\r\n            </Radio.Group>\r\n          </label>\r\n          <label style={{display: \"block\", margin: \"20px 0\"}} htmlFor=\"isTiming\">\r\n            是否定时：\r\n            <Switch checked={sendTimingInfo.isTiming} onChange={changeTimingState} />\r\n          </label>\r\n          <label htmlFor=\"timing\" style={{display: sendTimingInfo.isTiming ? \"block\" : \"none\"}}>\r\n            时间选择：\r\n            <DatePicker\r\n              value={moment(new Date(sendTimingInfo.timing), 'YYYY-MM-DD')}\r\n              onChange={(time, timeString) => changeTime(timeString, \"date\")}\r\n            />\r\n            <TimePicker\r\n              value={moment(new Date(sendTimingInfo.timing), 'HH-MM-SS')}\r\n              onChange={(time, timeString) => changeTime(timeString, \"time\")}\r\n            />\r\n          </label>\r\n        </Modal>\r\n        <Modal width={640} title=\"请选择需要同步素材的公号：\" visible={this.state.syncModal} onOk={this.syncMaterial} onCancel={this.closeSyncModal}>\r\n          <div style={{ borderBottom: '1px solid #E9E9E9', paddingBottom: 10, marginBottom: 10 }}>\r\n            <Checkbox\r\n              indeterminate={this.state.indeterminate}\r\n              onChange={this.onCheckAllChange}\r\n              checked={this.state.checkAll}\r\n            >全选</Checkbox>\r\n          </div>\r\n          <Checkbox.Group style={{width: \"100%\"}} onChange={this.onChange} value={this.state.checkedList}>\r\n            <Row>\r\n              {selectGonghaoList.map(item => <Col span={6} key={item._id}>\r\n                <Checkbox value={item.code}>{item.nick_name}</Checkbox>\r\n              </Col>)}\r\n            </Row>\r\n          </Checkbox.Group>\r\n        </Modal>\r\n        <Modal visible={updateMaterialModal} onCancel={closeUpdateMaterialModal} onOk={() => updateMaterial(updateInfo, code)} title=\"修改原文链接\">\r\n          <Input value={updateInfo.articles.content_source_url} placeholder=\"请输入新的原文链接\" onChange={changeContentSourceUrl} />\r\n        </Modal>\r\n      </ConfigProvider>\r\n    )\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n\r\n  syncMaterial = () => {\r\n    const { messageInfo, checkedList: codes } = this.state;\r\n    Modal.confirm({\r\n      title: \"确定同步这条素材吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/material/syncMaterial\", {codes, docs: [messageInfo]})\r\n          .then(res => {\r\n            const {code, msg } = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.closeSyncModal();\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  closeSyncModal = () => {\r\n    this.setState({\r\n      syncModal: false,\r\n      checkedList: [],\r\n      indeterminate: false,\r\n      checkAll: false,\r\n      messageInfo: {}\r\n    })\r\n  };\r\n\r\n  onCheckAllChange = e => {\r\n    const { code, gonghaoList } = this.state;\r\n    const plainOptions = gonghaoList.filter(item => item.code !== code);\r\n    const codes = plainOptions.map(item => item.code);\r\n    this.setState({\r\n      checkedList: e.target.checked ? codes : [],\r\n      indeterminate: false,\r\n      checkAll: e.target.checked,\r\n    });\r\n  };\r\n\r\n  onChange = checkedList => {\r\n    const { code, gonghaoList } = this.state;\r\n    const plainOptions = gonghaoList.filter(item => item.code !== code);\r\n    const codes = plainOptions.map(item => item.code);\r\n    this.setState({\r\n      checkedList,\r\n      indeterminate: !!checkedList.length && checkedList.length < codes.length,\r\n      checkAll: checkedList.length === codes.length,\r\n    });\r\n  };\r\n}\r\n\r\n\r\nconst mapState = state => ({\r\n  tagList: state.message.group.tagList,\r\n  messageList: state.message.group.messageList,\r\n  sendInfo: state.message.group.sendInfo,\r\n  sendTimingInfo: state.message.group.sendTimingInfo,\r\n  sendModal: state.message.group.sendModal,\r\n  sendTimingModal: state.message.group.sendTimingModal,\r\n  gonghaoList: state.message.group.gonghaoList,\r\n  isComplete: state.message.group.isComplete,\r\n  updateMaterialModal: state.message.group.updateMaterialModal,\r\n  updateInfo: state.message.group.updateInfo,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getTagList(code) {\r\n    dispatch(actionCreators.getTagList(code))\r\n  },\r\n  getMessageList(code) {\r\n    dispatch(actionCreators.getMessageList(code))\r\n  },\r\n  openModal(record) {\r\n    dispatch(actionCreators.openModal(record));\r\n  },\r\n  sendMessage(sendInfo) {\r\n    dispatch(actionCreators.sendMessage(sendInfo));\r\n  },\r\n  changeTagId(e, isTiming) {\r\n    dispatch(actionCreators.changeTagId(e.target.value, isTiming));\r\n  },\r\n  openTimingModal(record) {\r\n    dispatch(actionCreators.openTimingModal(record));\r\n  },\r\n  closeModal() {\r\n    dispatch(actionCreators.closeModal());\r\n  },\r\n  sendTimingMessage(sendTimingInfo, code) {\r\n    dispatch(actionCreators.sendTimingMessage(sendTimingInfo, code));\r\n  },\r\n  changeTimingState(value) {\r\n    dispatch(actionCreators.changeTimingState(value));\r\n  },\r\n  changeTime(time, type) {\r\n    dispatch(actionCreators.changeTime(time, type));\r\n  },\r\n  copy(id) {\r\n    dispatch(actionCreators.copy(id));\r\n  },\r\n  deleteMaterial(id, index) {\r\n    dispatch(actionCreators.deleteMaterial(id, index));\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState());\r\n  },\r\n  getGroupGonghao() {\r\n    dispatch(actionCreators.getGroupGonghao());\r\n  },\r\n  openUpdateMaterialModal(media_id, index, articles, id) {\r\n    dispatch(actionCreators.openUpdateMaterialModal({media_id, index, articles, id}));\r\n  },\r\n  closeUpdateMaterialModal() {\r\n    dispatch(actionCreators.closeUpdateMaterialModal());\r\n  },\r\n  updateMaterial(updateInfo, code) {\r\n    dispatch(actionCreators.updateMaterial(updateInfo, code));\r\n  },\r\n  changeContentSourceUrl(e) {\r\n    let content_source_url = e.target.value;\r\n    dispatch(actionCreators.changeContentSourceUrl(content_source_url));\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(groupMessage);","import React, { Component } from 'react';\r\nimport {Modal, Form, Input, Radio, Switch, DatePicker, Button, message} from \"antd\";\r\nimport axios from 'axios';\r\n\r\nimport moment from 'moment';\r\n\r\nclass EditTextMaterialModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props.initMaterial)\r\n    this.openOpenidModal = this.openOpenidModal.bind(this);\r\n    this.prevTextMaterial = this.prevTextMaterial.bind(this);\r\n    this.cancelPrev = this.cancelPrev.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n\r\n  state = {\r\n    openidModalVisible: false,\r\n    tagList: []\r\n  };\r\n\r\n  openOpenidModal() {\r\n    this.setState({openidModalVisible: true})\r\n  }\r\n\r\n  prevTextMaterial() {\r\n    const { form: {getFieldsValue}, code } = this.props;\r\n    let {openid, content} = getFieldsValue();\r\n    axios.post(\"/textMaterial/preview\", {code, openid, content})\r\n      .then(res => {\r\n        const {code, msg} = res.data;\r\n        code === 1 && message.success(msg)\r\n      });\r\n    this.cancelPrev()\r\n  }\r\n\r\n  cancelPrev() {\r\n    const { form: {setFieldsValue} } = this.props;\r\n    setFieldsValue({openid: \"\"});\r\n    this.setState({openidModalVisible: false})\r\n  }\r\n\r\n  submitForm() {\r\n    const { form: {getFieldsValue} } = this.props;\r\n    this.props.submitTextMaterial(getFieldsValue())\r\n  }\r\n\r\n  closeModal() {\r\n    const { form: {resetFields} } = this.props;\r\n    resetFields();\r\n    this.props.cancelEditMaterial()\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { code } = this.props;\r\n    axios.get(\"/material/tag\", {params: {code}})\r\n      .then(res => {\r\n        this.setState({tagList: res.data.data});\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { form: {getFieldDecorator, getFieldValue}, editMaterialModalVisible, initMaterial = {} } = this.props;\r\n    const { openidModalVisible, tagList } = this.state;\r\n    return (\r\n      <Modal\r\n        visible={editMaterialModalVisible}\r\n        title=\"编辑文本素材\"\r\n        footer={\r\n          <div>\r\n            <Button onClick={this.openOpenidModal}>发送预览</Button>\r\n            <Button onClick={this.submitForm}>提交</Button>\r\n          </div>\r\n        }\r\n        onCancel={this.closeModal}\r\n      >\r\n        <Form labelCol={{span: 4}} wrapperCol={{span: 20, offset: 0}}>\r\n          <Form.Item label=\"文本素材\">\r\n            {getFieldDecorator('content', {\r\n              initialValue: initMaterial.content || \"\",\r\n              rules: [{ required: true, message: 'Please input your content!' }]\r\n            })(<Input.TextArea rows={4} placeholder=\"请输入文本素材内容\" />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"粉丝属性\">\r\n            {getFieldDecorator('tagId', {\r\n              initialValue: initMaterial.tagId || null,\r\n              rules: [{required: true}]\r\n            })(<Radio.Group>\r\n              <Radio value={-1}>全部用户</Radio>\r\n              {tagList.map(item =>\r\n                <Radio key={item._id} value={item.id}>{item.name}</Radio>\r\n              )}\r\n            </Radio.Group>)}\r\n          </Form.Item>\r\n          <Form.Item label=\"是否定时\">\r\n            {getFieldDecorator('is_timing', {\r\n              valuePropName: 'checked',\r\n              initialValue: initMaterial.is_timing || false,\r\n            })(<Switch />)}\r\n          </Form.Item>\r\n          {getFieldValue(\"is_timing\") ? <Form.Item label=\"发送时间\">\r\n            {getFieldDecorator('timing_time', {initialValue: initMaterial.is_timing ? moment(initMaterial.timing_time) : null})(<DatePicker showTime={{format: \"HH:mm\"}} format=\"YYYY-MM-DD HH:mm\" placeholder=\"请选择定时发送时间\" />)}\r\n          </Form.Item> : \"\"}\r\n        </Form>\r\n        <Modal visible={openidModalVisible} title=\"发送预览消息\" onOk={this.prevTextMaterial} onCancel={this.cancelPrev}>\r\n          {getFieldDecorator('openid', {\r\n            rules: [{ required: true, message: 'Please input your openid!' }],\r\n            initialValue: \"\"\r\n          })(<Input placeholder=\"请输入openid\" />)}\r\n        </Modal>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(EditTextMaterialModal);","import React, {Component} from 'react';\r\nimport {ConfigProvider, List, Card, Icon, Button, Modal, message} from \"antd\";\r\n\r\nimport axios from '../../../../utils/http';\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/zh-cn';\r\n\r\nimport EditTextMaterialModal from '../components/EditTextMaterialModal';\r\n\r\nimport \"./index.scss\";\r\n\r\nclass TextMaterial extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.openEditMaterialModal = this.openEditMaterialModal.bind(this);\r\n    this.submitTextMaterial = this.submitTextMaterial.bind(this);\r\n    this.cancelEditMaterial = this.cancelEditMaterial.bind(this);\r\n    this.updateTextMaterial = this.updateTextMaterial.bind(this);\r\n  }\r\n\r\n  state = {\r\n    editMaterialModalVisible: false,\r\n    textMaterialList: [],\r\n    initMaterial: {},\r\n    index: -1\r\n  };\r\n\r\n  openEditMaterialModal() {\r\n    this.setState({editMaterialModalVisible: true})\r\n  }\r\n\r\n  submitTextMaterial(textMaterial) {\r\n    const {initMaterial: {_id = \"\"}, index, textMaterialList} = this.state;\r\n    textMaterial.timing_time = +textMaterial.timing_time;\r\n    textMaterial.code = this.props.code;\r\n    textMaterial.tagId = parseInt(textMaterial.tagId);\r\n    _id && (textMaterial._id = _id);\r\n    Modal.confirm({\r\n      title: \"确定提交这条文本素材吗？\",\r\n      onOk: () => {\r\n        if (!_id) {\r\n          axios.post('/textMaterial', {...textMaterial})\r\n            .then(res => {\r\n              const {code, msg, data} = res.data;\r\n              if (code === 1) {\r\n                this.setState(prevState => ({textMaterialList: [data, ...prevState.textMaterialList]}));\r\n                message.success(msg);\r\n                this.cancelEditMaterial();\r\n              } else {\r\n                message.warning(msg);\r\n              }\r\n            })\r\n        } else {\r\n          axios.put('/textMaterial', {...textMaterial})\r\n            .then(res => {\r\n              const {code, msg, data} = res.data;\r\n              if (code === 1) {\r\n                textMaterialList.splice(index, 1, data);\r\n                this.setState({textMaterialList});\r\n                message.success(msg);\r\n                this.cancelEditMaterial();\r\n              } else {\r\n                message.warning(msg);\r\n              }\r\n            })\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  cancelEditMaterial() {\r\n    this.setState({editMaterialModalVisible: false, initMaterial: {}})\r\n  }\r\n\r\n  updateTextMaterial(item, index) {\r\n    this.openEditMaterialModal();\r\n    this.setState({\r\n      initMaterial: {...item}, index\r\n    })\r\n  }\r\n\r\n  sendMaterial(item, index) {\r\n    let {textMaterialList} = this.state;\r\n    Modal.confirm({\r\n      title: \"是否发送这条素材\",\r\n      onOk: () => {\r\n        axios.post(\"/textMaterial/send\", {...item})\r\n          .then(res => {\r\n            const {code, msg} = res.data;\r\n            if (code === 1) {\r\n              message.success(msg);\r\n              Object.assign(textMaterialList[index], {isSend: 1});\r\n              this.setState({textMaterialList})\r\n            } else {\r\n              message.warning(msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteMaterial(_id, index) {\r\n    Modal.confirm({\r\n      title: \"是否删除这条素材？\",\r\n      onOk: () => {\r\n        axios.delete(\"/textMaterial\", {params: {_id}})\r\n          .then(res => {\r\n            const {code, msg} = res.data;\r\n            if (code === 1) {\r\n              message.success(msg);\r\n              this.setState(prevState => {\r\n                let textMaterialList = prevState.textMaterialList;\r\n                textMaterialList.splice(index, 1);\r\n                return {textMaterialList}\r\n              })\r\n            } else {\r\n              message.warning(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/textMaterial\", {params: {code: this.props.code}})\r\n      .then(res => {\r\n        const {code, data} = res.data;\r\n        code === 1 && this.setState({textMaterialList: data.reverse()})\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const {editMaterialModalVisible, textMaterialList, initMaterial} = this.state;\r\n    const {code} = this.props;\r\n    let innerWidth = window.innerWidth > 1440;\r\n    const pagination = {\r\n      pageSize: innerWidth ? 18 : 9\r\n    };\r\n    return (\r\n      <ConfigProvider locale={zhCN}>\r\n        <div className=\"text-material\">\r\n          <Button className=\"mb15\" onClick={this.openEditMaterialModal}>创建文本素材</Button>\r\n          <List grid={{gutter: 16, xl: 3, xxl: 6,}}\r\n                dataSource={textMaterialList}\r\n                renderItem={(item, index) => (\r\n                  <List.Item key={item._id}>\r\n                    <Card title={item.is_timing ?\r\n                      <p>于 <span className=\"date\">{moment(item.timing_time).format(\"YYYY-MM-DD HH:mm\")}</span> 发送\r\n                      </p> : \"未设置定时时间\"} actions={item.isSend ? [<span className=\"see-msg-id\"\r\n                        onClick={() => Modal.warning({\r\n                          title: \"msg_id\",\r\n                          content: <p style={{userSelect: \"text\"}}>{item.msg_id}</p>\r\n                        })}><Icon type=\"eye\" key=\"eye\"/><span>查看msg_id</span></span>] : [\r\n                      <Icon type=\"setting\" key=\"setting\" onClick={() => this.updateTextMaterial(item, index)}/>,\r\n                      <Icon disabled={true} type=\"share-alt\" key=\"edit\"\r\n                            onClick={() => item.is_timing ? message.warning(\"已设置为定时发送，如有需要，请点击修改\") : this.sendMaterial(item, index)}/>,\r\n                      <Icon type=\"delete\" key=\"delete\" onClick={() => this.deleteMaterial(item._id, index)}/>\r\n                    ]}>\r\n                      <p className=\"card-content1\">{item.content}</p>\r\n                    </Card>\r\n                  </List.Item>\r\n                )}\r\n                pagination={pagination}\r\n          />\r\n          {editMaterialModalVisible &&\r\n          <EditTextMaterialModal initMaterial={initMaterial} editMaterialModalVisible={editMaterialModalVisible}\r\n                                 cancelEditMaterial={this.cancelEditMaterial} code={code}\r\n                                 submitTextMaterial={this.submitTextMaterial}/>}\r\n        </div>\r\n      </ConfigProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TextMaterial;","import React, {Component} from 'react';\r\nimport {Avatar, Input, List, Layout, Collapse, message} from \"antd\";\r\nimport axios from 'axios';\r\nimport \"./index.scss\";\r\n\r\nconst {Sider, Content} = Layout;\r\nconst {Panel} = Collapse;\r\n\r\nclass SingleSelectByGroup extends Component {\r\n\r\n  state = {\r\n    gonghaoTagList: [],\r\n    gonghaoList: [],\r\n    nick_name: \"\",\r\n    _id: \"\",\r\n    activeKey: \"\"\r\n  };\r\n\r\n  search = nick_name => {\r\n    const {gonghaoTagList} = this.state;\r\n    if (nick_name !== \"\") {\r\n      axios.get(\"/conf/find_one\", {params: {nick_name}})\r\n        .then(res => {\r\n          if (res.data.data.length !== 0) {\r\n            const {data} = res.data;\r\n            this.props.setCode(data[0].code);\r\n            let selectGonghao = gonghaoTagList.filter(item => data[0].group === item.name);\r\n            this.setState({nick_name: \"\", _id: data[0]._id, activeKey: selectGonghao[0].name})\r\n          } else {\r\n            message.info(\"没有查询到包含该字符的公号，请检查后重新输入\")\r\n          }\r\n        })\r\n    } else {\r\n      message.info(\"公号名不能为空\")\r\n    }\r\n  };\r\n\r\n  changeSearchInput = e => {\r\n    let nick_name = e.target.value;\r\n    this.setState({nick_name})\r\n  };\r\n\r\n  selectGonghao = gonghao => {\r\n    const {code, _id} = gonghao;\r\n    this.props.setCode(code);\r\n    this.setState({_id})\r\n  };\r\n\r\n  handleChangeGroup = value => {\r\n    this.setState({activeKey: value || \"\"})\r\n  };\r\n\r\n  render() {\r\n    const {gonghaoTagList, gonghaoList, nick_name, _id, activeKey} = this.state;\r\n    const PanelList = name => (\r\n      <List className=\"gonghao-list\" dataSource={gonghaoList.length ? gonghaoList.filter(i => i.group === name) : []} locale={{emptyText: <span style={{display: \"none\"}}>123</span>}}\r\n        renderItem={gonghao =>\r\n          <List.Item className={gonghao._id === _id ? \"cursor selected\" : \"cursor\"} onClick={() => this.selectGonghao(gonghao)} key={gonghao._id}>\r\n            <Avatar shape=\"square\" size={22} icon=\"user\"/>{gonghao.nick_name}\r\n        </List.Item>\r\n      }/>\r\n    );\r\n    return (\r\n      <Layout style={{background: \"#fff\"}} className=\"message-group-wrapper\">\r\n        <Sider className=\"message-sider-wrapper\" theme=\"light\" width=\"190\">\r\n          <Input.Search\r\n            className=\"search-input\"\r\n            placeholder=\"请输入公号名称\"\r\n            onSearch={this.search}\r\n            value={nick_name}\r\n            onChange={this.changeSearchInput}\r\n          />\r\n          <List>\r\n            <List.Item>\r\n              <Collapse bordered={false} accordion activeKey={activeKey} onChange={this.handleChangeGroup}>\r\n                <Panel header=\"未分组\" key=\"未分组\">\r\n                  {PanelList(\"未分组\")}\r\n                </Panel>\r\n                {gonghaoTagList.map(item =>\r\n                  <Panel header={item.name} key={item.name}>\r\n                    {PanelList(item.name)}\r\n                  </Panel>\r\n                )}\r\n              </Collapse>\r\n            </List.Item>\r\n          </List>\r\n        </Sider>\r\n        <Content>{this.props.content}</Content>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  getGonghaoTagList = () => {\r\n    axios.get(\"/gonghaoTag\")\r\n      .then(res => {\r\n        if (res.data.code === 1) {\r\n          const {data: gonghaoTagList} = res.data;\r\n          this.setState({gonghaoTagList})\r\n        }\r\n      })\r\n  };\r\n\r\n  getGonghaoList = () => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        const {data, code} = res.data;\r\n        if (code === 1) {\r\n          this.setState({gonghaoList: data})\r\n        }\r\n      })\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGonghaoTagList();\r\n    this.getGonghaoList();\r\n  }\r\n}\r\n\r\nexport default SingleSelectByGroup;","import React, { Component } from 'react';\r\nimport {Modal, Table, Tooltip, Input} from 'antd';\r\nimport moment from 'moment';\r\nimport {connect} from \"react-redux\";\r\nimport { actionCreators } from '../store';\r\nimport Button from '../../../../common/components/Button';\r\n\r\n\r\nclass History extends Component {\r\n\r\n  componentWillMount() {\r\n    const { code } = this.props;\r\n    this.props.getTagList(code);\r\n    this.props.getHistoryList(code);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\r\n    if(this.props.code !== nextProps.code) {\r\n      const { code } = nextProps;\r\n      this.props.getTagList(code);\r\n      this.props.getHistoryList(code);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { historyList, tagList, checkSendState, openMsgModal, closeMsgModal, deleteMsg, changeArticleIdx, delMsgInfo, historyMsgModal, code } = this.props;\r\n    const historyHeader = [\r\n      {\r\n        key: \"update_time\",\r\n        title: \"发送消息时间\",\r\n        align: \"center\",\r\n        width: 120,\r\n        render: (text, record) => {\r\n          let time = moment(record.update_time * 1000).format(\"YYYY-MM-DD, HH:mm:ss\");\r\n          return (\r\n            <span>{time}</span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: \"发送对象\",\r\n        align: \"center\",\r\n        render: (text, record) => {\r\n          let tag = \"无\";\r\n          if(record.tagId) {\r\n            let result = tagList.filter(item => record.tagId === item.id);\r\n            tag = result.length ? result[0].name : \"全部\";\r\n          }\r\n          return <span>{tag}</span>\r\n        }\r\n      },\r\n      {\r\n        title: \"是否成功\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record) => {\r\n          let msg_id = record.msg_id;\r\n          let success;\r\n          if(msg_id === \"\") {\r\n            success = \"无msg_id,发送不成功\"\r\n          } else {\r\n            success = \"msg_id存在,发送成功\"\r\n          }\r\n          return <span>{success}</span>\r\n        }\r\n      },\r\n      {\r\n        title: \"图文标题\",\r\n        align: \"center\",\r\n        width: 300,\r\n        render: (text, record) => {\r\n          let arr =\r\n            record.content.news_item.length !== 0\r\n              ? record.content.news_item\r\n              : [];\r\n          let titles = [];\r\n          for (let i = 0; i < arr.length; i++) {\r\n            titles.push(i + 1 + \".\" + arr[i].title);\r\n          }\r\n          return (\r\n            <Tooltip placement=\"top\" title={titles}>\r\n              <p className=\"textEllipsis\" style={{width: 300}}>{titles}</p>\r\n            </Tooltip>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"isTiming\",\r\n        title: \"是否定时\",\r\n        align: \"center\",\r\n        render: (text, record) => {\r\n          let time = record.isTiming ? \"是\" : \"否\";\r\n          return (\r\n            <span>{time}</span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"timing\",\r\n        title: \"定时时间\",\r\n        align: \"center\",\r\n        render: (text, record) => {\r\n          let time = \"~~\";\r\n          if (record.timing) {\r\n            time = moment(record.timing).format(\"YYYY-MM-DD, HH:mm:ss\")\r\n          }\r\n          return (\r\n            <span>{time}</span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: (text, record) => (\r\n          <div>\r\n            <Button mb={10} onClick={() => checkSendState(code, record.msg_id)} buttonContent=\"发送状态\" />\r\n            <Button background=\"danger\" onClick={() => openMsgModal(record.code, record.msg_id)} buttonContent=\"删除消息\" />\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          {/*<Button size=\"default\" background=\"warning\" onClick={() => clearHistory(code)} buttonContent=\"清空列表\" />*/}\r\n            {/*<div className=\"fr\">*/}\r\n              {/*<DatePicker value={delDate ? moment(delDate): null} onChange={changeDate} />*/}\r\n              {/*<Button background=\"danger\" size=\"default\" ml={10} onClick={() => deleteMany(code, delDate)} buttonContent=\"批量删除\" />*/}\r\n            {/*</div>*/}\r\n          <Table size=\"small\" bordered rowKey={record => record._id} columns={historyHeader} dataSource={historyList} />\r\n        </div>\r\n        <Modal\r\n          title=\"请输入要删除的消息的索引\"\r\n          visible={historyMsgModal}\r\n          onOk={() => deleteMsg(delMsgInfo)}\r\n          onCancel={closeMsgModal}\r\n        >\r\n          <Input style={{width: 100}} value={delMsgInfo.article_idx} onChange={changeArticleIdx} />\r\n          <p style={{color: \"red\", marginTop: 10}}>Tips:   0为全部删除  1、2、3...为对应第几条</p>\r\n        </Modal>\r\n    \t</div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nconst mapState = state => ({\r\n  tagList: state.message.group.tagList,\r\n  historyList: state.message.group.historyList,\r\n  historyMsgModal: state.message.group.historyMsgModal,\r\n  delMsgInfo: state.message.group.delMsgInfo,\r\n  delDate: state.message.group.delDate\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getHistoryList(code) {\r\n    dispatch(actionCreators.getHistoryList(code))\r\n  },\r\n  getTagList(code) {\r\n    dispatch(actionCreators.getTagList(code))\r\n  },\r\n  checkSendState(code, msg_id) {\r\n    dispatch(actionCreators.checkSendState(code, msg_id))\r\n  },\r\n  openMsgModal(code, msg_id) {\r\n    dispatch(actionCreators.openMsgModal(code, msg_id))\r\n  },\r\n  closeMsgModal() {\r\n    dispatch(actionCreators.closeMsgModal())\r\n  },\r\n  deleteMsg(delMsgInfo) {\r\n    dispatch(actionCreators.deleteMsg(delMsgInfo))\r\n  },\r\n  changeArticleIdx(e) {\r\n    dispatch(actionCreators.changeArticleIdx(e.target.value))\r\n  },\r\n  clearHistory(code) {\r\n    dispatch(actionCreators.clearHistory(code))\r\n  },\r\n  changeDate(date, dataString) {\r\n    dispatch(actionCreators.changeDate(dataString))\r\n  },\r\n  deleteMany(code, delDate) {\r\n    let time = new Date(delDate).getTime()/1000;\r\n    dispatch(actionCreators.deleteMany(code, time))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(History);\r\n","import React from 'react';\r\nimport {Spin} from 'antd';\r\n\r\nconst loadingWrapper = {\r\n  width: \"100%\",\r\n  textAlign: \"center\",\r\n  background: \"rgba(241, 244, 245, .7)\",\r\n  position: \"absolute\",\r\n  padding: \"200px 0\",\r\n  top: 0,\r\n  left: 0,\r\n  zIndex: 1,\r\n};\r\n\r\nconst Loading = props => <div style={loadingWrapper}><Spin spinning={props.spinning}/></div>\r\n\r\nexport default Loading;","import React, {Component} from 'react';\r\nimport {Empty, Modal, message, Tabs} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {actionCreators} from \"./store\";\r\nimport './index.scss';\r\nimport GroupMaterial from './material';\r\nimport TextMaterial from './textMaterial';\r\nimport SingleSelectByGroup from \"../../../common/components/SelectGonghao/SingleSelectByGroup\";\r\nimport Button from '../../../common/components/Button';\r\nimport History from './history';\r\nimport Loading from '../../../common/components/Loading';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass groupMessage extends Component {\r\n\r\n  state = {\r\n    code: null,\r\n    historyModalVisible: false,\r\n    spinning: true\r\n  };\r\n\r\n  timer = () => setTimeout(() => {\r\n    this.setState({spinning: false})\r\n  }, 1000);\r\n\r\n  setCode = code => {\r\n    clearTimeout(this.timer);\r\n    this.setState({spinning: true});\r\n    this.setState({code});\r\n    this.timer();\r\n  };\r\n\r\n  componentDidMount() {\r\n    message.warning(\"请选择公号进行操作\")\r\n  }\r\n\r\n  render() {\r\n    const {getMaterial, clearMaterial} = this.props;\r\n    const {code, historyModalVisible, spinning} = this.state;\r\n    const imageStyle = {\r\n      height: \"auto\",\r\n      margin: \"0 auto\"\r\n    };\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <SingleSelectByGroup setCode={this.setCode} content={\r\n            code\r\n              ? spinning\r\n                ? <div>\r\n                    <Loading spinning={spinning}/><Empty description=\"\" image=\"https://s.weituibao.com/static/1544235586856/empty.png\" imageStyle={imageStyle}/>\r\n                  </div>\r\n                : <div>\r\n                <Tabs tabPosition=\"left\">\r\n                  <TabPane tab=\"图文\" key=\"1\">\r\n                    <Button size=\"default\" background=\"success\" buttonContent=\"同步素材\" onClick={() => getMaterial(code)}/>\r\n                    <Button size=\"default\" buttonContent=\"群发记录\" onClick={() => this.setState({historyModalVisible: true})}/>\r\n                    <Button size=\"default\" mb={20} background=\"danger\" onClick={() => clearMaterial(code)} buttonContent=\"清空列表\"/>\r\n                    <GroupMaterial code={code}/>\r\n                  </TabPane>\r\n                  <TabPane tab=\"文本\" key=\"2\">\r\n                    <TextMaterial code={code} />\r\n                  </TabPane>\r\n                </Tabs>\r\n                  </div>\r\n              : <Empty description=\"\" image=\"https://s.weituibao.com/static/1544235586856/empty.png\" imageStyle={imageStyle}/>}/>\r\n        </div>\r\n        {code && <Modal title=\"发送记录\" visible={historyModalVisible} width={1200} footer=\"\" onCancel={() => this.setState({historyModalVisible: false})}><History code={code}/></Modal>}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getMaterial(code) {\r\n    dispatch(actionCreators.getMaterial(code))\r\n  },\r\n  clearMaterial(code) {\r\n    dispatch(actionCreators.clearMaterial(code));\r\n  },\r\n});\r\n\r\nexport default connect(null, mapDispatch)(groupMessage);","import React, { Component } from 'react';\r\nimport { Table, Select, Modal, Radio, message, Popover } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionCreators } from './store';\r\nimport { Link } from \"react-router-dom\";\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport Button from '../../../common/components/Button';\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\n\r\nclass Kefu extends Component {\r\n\r\n  state = {\r\n    messageType: \"请选择消息类型\",\r\n    power: 0\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    let userInfo = localStorage.getItem(\"userInfo\");\r\n    if (userInfo) {\r\n      let power = JSON.parse(userInfo).power;\r\n      this.setState({ power })\r\n    }\r\n    this.props.getKefuMessageList();\r\n    this.props.getAllGroup();\r\n    this.props.getAllCodes();\r\n    this.props.changePage(this.props.currentPage);\r\n  }\r\n\r\n  render() {\r\n    const { power } = this.state;\r\n    const { allCodes, kefuMessageList, copyMessage, deleteMessage, sendKefuMessage, messageType, handleChangeSelect, allGroup, messageGroup, selectedMessages, changeSelectedMessages, updateMoreGroup, updateGroupModal, openUpdateGroupModal, changeGroup, cancelUpdateGroup, group, changePage, currentPage, searchName, changeSearchName, searchInputChange, clearCondition, deleteMultiMsg } = this.props;\r\n    const kefuMessageHeader = [\r\n      {\r\n        key: \"_id\",\r\n        title: \"消息ID\",\r\n        dataIndex: \"_id\",\r\n        align: \"center\",\r\n        width: 100,\r\n        className: power ? \"\" : \"powerHide\"\r\n      },\r\n      {\r\n        key: \"remarks\",\r\n        title: \"消息名称\",\r\n        dataIndex: \"remarks\",\r\n        align: \"center\",\r\n        className: \"mw100\",\r\n        render: text => !text ? \"无\" : text\r\n      },\r\n      {\r\n        key: \"group\",\r\n        title: \"分组\",\r\n        dataIndex: \"group\",\r\n        align: \"center\",\r\n        width: 80\r\n      },\r\n      {\r\n        key: \"delay\",\r\n        title: \"延时时间\",\r\n        align: \"center\",\r\n        className: \"mw100\",\r\n        render: (text, record) => record.task ? (record.isHour ? record.delay / 60 + \"小时\" : record.delay + \"分钟\") : \"——\"\r\n      },\r\n      {\r\n        key: \"timing_time\",\r\n        title: \"定时时间\",\r\n        align: \"center\",\r\n        className: \"mw100\",\r\n        sorter: (a, b) => (new Date(a.timing_time)).getTime() - (new Date(b.timing_time)).getTime(),\r\n        render: (text, record) => record.is_timing ? moment(record.timing_time).format(\"YYYY-MM-DD HH:mm:ss\") : \"——\",\r\n      },\r\n      {\r\n        key: \"daily_time_show\",\r\n        dataIndex: \"daily_time_show\",\r\n        title: \"按时发送\",\r\n        align: \"center\",\r\n        className: \"mw100\",\r\n        sorter: (a, b) => b.daily_time_show - a.daily_time_show,\r\n        render: (text, record) => record.is_daily ? moment(text).format(\"HH:mm:ss\") : \"——\",\r\n      },\r\n      {\r\n        key: \"gonghaoList\",\r\n        dataIndex: \"gonghaoList\",\r\n        title: \"已选公号 (最多显示4个)\",\r\n        align: \"center\",\r\n        className: \"mw100\",\r\n        render: text => text.slice(0, 4).map(item => <p key={item._id}>{item.nick_name}</p>)\r\n      },\r\n      {\r\n        key: \"sex\",\r\n        title: \"群发粉丝\",\r\n        align: \"center\",\r\n        dataIndex: \"sex\",\r\n        width: 80,\r\n        render: text => text === \"0\" ? \"未知粉丝\" : text === \"1\" ? \"男性粉丝\" : text === \"2\" ? \"女性粉丝\" : \"全部粉丝\"\r\n      },\r\n      {\r\n        key: \"action_type\",\r\n        title: \"互动行为\",\r\n        align: \"center\",\r\n        width: 80,\r\n        dataIndex: \"action_type\",\r\n        render: (text, record) => record.task ? (text === 1 ? \"用户关注\" : \"用户互动\") : \"~~\"\r\n      },\r\n      {\r\n        key: \"count\",\r\n        title: \"触达用户\",\r\n        align: \"center\",\r\n        dataIndex: \"count\",\r\n        width: 50,\r\n        render: (text, record) => record.task ? \"暂不支持\" : (text ? text : 0)\r\n      }, {\r\n        key: \"copy_id\",\r\n        title: \"复制消息ID\",\r\n        align: \"center\",\r\n        width: 65,\r\n        className: power ? \"\" : \"powerHide\",\r\n        render: (text, record) => <CopyToClipboard className=\"btn-wrapper\" text={record._id} onCopy={() => message.success(\"复制成功\")}>\r\n          <Button background=\"info\" buttonContent=\"复制\" />\r\n        </CopyToClipboard>\r\n      }, {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        className: \"mw150\",\r\n        width: 150,\r\n        render: (text, record, index) => (\r\n          <>\r\n            <div>\r\n              <Button background=\"success\" onClick={() => copyMessage({ ...record })} buttonContent=\"复制\" />\r\n              <Button buttonContent={<Link to={{ pathname: \"./update\", query: { ...record } }}>修改</Link>} />\r\n            </div>\r\n            <div>\r\n              <Button disabled={record.is_timing || record.delay || record.is_daily} background={(record.is_timing || record.delay || record.is_daily) ? \"info\" : \"warning\"} onClick={() => sendKefuMessage(record._id, record.tagId)} buttonContent=\"发送\" />\r\n              <Button background=\"danger\" onClick={() => deleteMessage(record._id, index)} buttonContent=\"删除\" />\r\n            </div>\r\n          </>\r\n        )\r\n      }\r\n    ];\r\n    const rowSelection = {\r\n      selectedRowKeys: selectedMessages,\r\n      onChange: changeSelectedMessages,\r\n      columnWidth: 40\r\n    };\r\n    const pagination = {\r\n      showQuickJumper: true,\r\n      hideOnSinglePage: true,\r\n      onChange: changePage,\r\n      current: currentPage\r\n    };\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <Select\r\n            showSearch\r\n            allowClear\r\n            value={searchName}\r\n            onChange={changeSearchName}\r\n            onSearch={searchInputChange}\r\n            style={{ width: 200, marginRight: 5 }}\r\n            placeholder=\"请输入公号名称\"\r\n          >\r\n            {allCodes.map(item => (\r\n              <Option key={item._id} value={item.nick_name}>{item.nick_name}</Option>\r\n            ))}\r\n          </Select>\r\n          <Select value={messageType} onChange={value => handleChangeSelect(value, \"messageType\")} style={{ marginRight: 5 }}>\r\n            <Option value={4}>全部</Option>\r\n            <Option value={0}>手动</Option>\r\n            <Option value={1}>延时</Option>\r\n            <Option value={2}>定时</Option>\r\n            <Option value={3}>按时</Option>\r\n          </Select>\r\n          <Select style={{ width: 100 }} value={messageGroup} onChange={value => handleChangeSelect(value, \"messageGroup\")}>\r\n            <Option value=\"全部分组\">全部分组</Option>\r\n            <Option value=\"未分组\">未分组</Option>\r\n            {allGroup.map(item => <Option key={item._id} value={item.group}>{item.group}</Option>)}\r\n          </Select>\r\n          <Button size=\"default\" background=\"warning\" buttonContent=\"清空所有条件\" ml={5} onClick={clearCondition} />\r\n          <Button size=\"default\" ml={5} background=\"success\" buttonContent=\"批量修改分组\" onClick={openUpdateGroupModal} />\r\n          <Button size=\"default\" ml={5} background=\"danger\" buttonContent=\"批量删除\" onClick={() => deleteMultiMsg(selectedMessages)} />\r\n          <Button size=\"default\" mb={20} buttonContent={<Link to=\"./create\">新建客服消息</Link>} />\r\n          <Table \r\n            bordered\r\n            tableLayout=\"auto\"\r\n            size=\"middle\" \r\n            rowKey={record => record._id} \r\n            columns={kefuMessageHeader} \r\n            dataSource={kefuMessageList} \r\n            rowSelection={rowSelection} \r\n            pagination={pagination} \r\n          />\r\n        </div>\r\n        <Modal title=\"请选择分组\" visible={updateGroupModal} onCancel={cancelUpdateGroup} onOk={() => updateMoreGroup(selectedMessages, group)}>\r\n          <Radio.Group onChange={changeGroup} value={group}>\r\n            {allGroup.map(item => <Radio key={item._id} value={item.group}>{item.group}</Radio>)}\r\n          </Radio.Group>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  allCodes: state.message.kefu.allCodes,\r\n  kefuMessageList: state.message.kefu.kefuMessageList,\r\n  messageType: state.message.kefu.messageType,\r\n  allGroup: state.message.kefu.allGroup,\r\n  messageGroup: state.message.kefu.messageGroup,\r\n  selectedMessages: state.message.kefu.selectedMessages,\r\n  updateGroupModal: state.message.kefu.updateGroupModal,\r\n  group: state.message.kefu.group,\r\n  currentPage: state.message.kefu.currentPage,\r\n  searchName: state.message.kefu.searchName\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  getKefuMessageList() {\r\n    dispatch(actionCreators.getKefuMessageList())\r\n  },\r\n  getAllGroup() {\r\n    dispatch(actionCreators.getAllGroup())\r\n  },\r\n  copyMessage(record) {\r\n    dispatch(actionCreators.createKefuMessage(record))\r\n  },\r\n  deleteMessage(id, index) {\r\n    dispatch(actionCreators.deleteMessage(id, index))\r\n  },\r\n  sendKefuMessage(id, tagId) {\r\n    dispatch(actionCreators.sendKefuMessage(id, tagId))\r\n  },\r\n  handleChangeSelect(value, name) {\r\n    dispatch(actionCreators.handleChangeSelect(value, name))\r\n  },\r\n  changeSelectedMessages(selectedMessages) {\r\n    dispatch(actionCreators.changeSelectedMessages(selectedMessages))\r\n  },\r\n  updateMoreGroup(selectedMessages, group) {\r\n    dispatch(actionCreators.updateMoreGroup(selectedMessages, group))\r\n  },\r\n  openUpdateGroupModal() {\r\n    dispatch(actionCreators.openUpdateGroupModal())\r\n  },\r\n  changeGroup(e) {\r\n    dispatch(actionCreators.changeGroup(e.target.value))\r\n  },\r\n  cancelUpdateGroup() {\r\n    dispatch(actionCreators.cancelUpdateGroup())\r\n  },\r\n  changePage(page) {\r\n    dispatch(actionCreators.changePage(page))\r\n  },\r\n  changeSearchName(value) {\r\n    dispatch(actionCreators.changeSearchName(value))\r\n  },\r\n  searchInputChange(value) {\r\n    dispatch(actionCreators.searchInputChange(value))\r\n  },\r\n  clearCondition() {\r\n    dispatch(actionCreators.clearCondition())\r\n  },\r\n  deleteMultiMsg(selectedMessages) {\r\n    dispatch(actionCreators.deleteMultiMsg(selectedMessages))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Kefu);","import React, {Component} from 'react';\r\nimport {\r\n  ConfigProvider,\r\n  Icon,\r\n  Form,\r\n  Button,\r\n  Radio,\r\n  DatePicker,\r\n  Input,\r\n  Upload,\r\n  InputNumber,\r\n  Divider,\r\n  Modal,\r\n  Select,\r\n  Tag,\r\n  TimePicker\r\n} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {actionCreators} from '../store';\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/zh-cn';\r\nimport \"./index.scss\";\r\nimport MultiSelectByGroup from '../../../../common/components/SelectGonghao/MultiSelectSider';\r\n\r\nconst {Option} = Select;\r\n\r\nclass EditMessage extends Component {\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.props.getAllCodes();\r\n    this.props.getAllGroup();\r\n    let query = this.props.history.location.query;\r\n    query && this.props.initKefuMessageInfo(query);\r\n  }\r\n\r\n  render() {\r\n    const {kefuMessageInfo, content, changeContentValue, changeMessageValue, uploadImg, submitMessage, allCodes, selectGonghao, deleteGonghao, history, openPreviewModal, closePreviewModal, openid, changeOpenId, previewModal, preview, allGroup, groupInputVisible, groupValue, showGroupInput, handleGroupInputChange, handleGroupInputConfirm, handleClose, cancelSelectGroup} = this.props;\r\n    let isUploadImg, isTextUploadImg, FormItemWrapper;\r\n    if (content.picurl) {\r\n      isTextUploadImg = <img style={{width: \"100px\"}} src={content.picurl} alt=\"\"/>\r\n    } else {\r\n      isTextUploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n    }\r\n    if (kefuMessageInfo.img) {\r\n      isUploadImg = <img style={{width: \"100px\"}} src={kefuMessageInfo.img} alt=\"\"/>\r\n    } else {\r\n      isUploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n    }\r\n    if (kefuMessageInfo.type === 1) {\r\n      FormItemWrapper = <Form.Item label=\"文本消息\" className=\"text-message\">\r\n        <Input.TextArea autoSize={{minRows: 6}} value={content.description} placeholder=\"请输入文本消息\"\r\n                        onChange={e => changeContentValue(e, \"description\")}/>\r\n      </Form.Item>\r\n    } else if (kefuMessageInfo.type === 0) {\r\n      FormItemWrapper = <div>\r\n        <Form.Item label=\"图片封面\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" onChange={(info) => {\r\n            uploadImg(kefuMessageInfo, info)\r\n          }} showUploadList={false}>\r\n            {isTextUploadImg}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文标题\">\r\n          <Input placeholder=\"请输入图文标题\" value={content.title} onChange={e => changeContentValue(e, \"title\")}/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文描述\" className=\"text-message\">\r\n          <Input.TextArea autoSize={{minRows: 6}} value={content.description} placeholder=\"请输入图文描述\"\r\n                          onChange={e => changeContentValue(e, \"description\")}/>\r\n        </Form.Item>\r\n        <Form.Item label=\"跳转链接\">\r\n          <Input placeholder=\"请输入跳转链接\" value={content.url} onChange={e => changeContentValue(e, \"url\")}/>\r\n        </Form.Item>\r\n      </div>\r\n    } else if (kefuMessageInfo.type === 2) {\r\n      FormItemWrapper =\r\n        <Form.Item label=\"图片消息\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" onChange={(info) => {\r\n            uploadImg(kefuMessageInfo, info)\r\n          }} showUploadList={false}>\r\n            {isUploadImg}\r\n          </Upload>\r\n        </Form.Item>;\r\n    }\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: {span: 4}\r\n      },\r\n      wrapperCol: {\r\n        sm: {span: 20, offset: 0}\r\n      },\r\n    };\r\n    let Channel;\r\n    if (kefuMessageInfo.channel === 1) {\r\n      Channel = <><Form.Item label=\"延时时间\">\r\n        <InputNumber value={kefuMessageInfo.delay} min={1} onChange={value => changeMessageValue(value, \"delay\")}/>\r\n        <Select value={kefuMessageInfo.isHour} onChange={value => changeMessageValue(value, \"isHour\")}\r\n                style={{width: 80}}>\r\n          <Option value={0}>分钟</Option>\r\n          <Option value={1}>小时</Option>\r\n        </Select>\r\n      </Form.Item>\r\n        <Form.Item label=\"互动类型\">\r\n          <Radio.Group value={kefuMessageInfo.action_type}\r\n                       onChange={e => changeMessageValue(e.target.value, \"action_type\")}>\r\n            <Radio value={1}>用户关注</Radio>\r\n            <Radio value={2}>用户互动</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n      </>\r\n    } else if (kefuMessageInfo.channel === 2) {\r\n      Channel =\r\n        <Form.Item label=\"定时时间\">\r\n          <DatePicker showTime placeholder=\"选择时间\" value={moment(kefuMessageInfo.timing_time)}\r\n                      onChange={(value, dateString) => changeMessageValue(dateString, 'timing_time')}/>\r\n        </Form.Item>\r\n    } else if (kefuMessageInfo.channel === 3) {\r\n      Channel =\r\n        <Form.Item label=\"选择时间\">\r\n          <TimePicker placeholder=\"选择时间\" value={moment(kefuMessageInfo.daily_time_show)}\r\n                      onChange={(value, dateString) => changeMessageValue(value, 'daily_time_show')}/>\r\n        </Form.Item>\r\n    }\r\n    return (\r\n      <ConfigProvider locale={zhCN}>\r\n\r\n        <div className=\"container\">\r\n          <MultiSelectByGroup selectGonghao={selectGonghao}  codes={kefuMessageInfo.codes} content={<div className=\"container edit-message\">\r\n            <div className=\"kefu-form fl\">\r\n              <Form {...formItemLayout}>\r\n                <Form.Item label=\"公号列表\">\r\n                  <div style={{width: \"180%\"}}>\r\n                   {allCodes.map(item => kefuMessageInfo.codes.indexOf(item.code) > -1 && <Tag key={item._id} className=\"cursor gonghao-tag\" closable onClose={() => deleteGonghao(kefuMessageInfo.codes, item.code)}>{item.nick_name}</Tag>)}\r\n                  </div>\r\n                </Form.Item>\r\n                <Form.Item label=\"消息名称\">\r\n                  <Input value={kefuMessageInfo.remarks} placeholder=\"请输入消息名称,(仅供备注，不会发送给粉丝)\"\r\n                         onChange={e => changeMessageValue(e.target.value, \"remarks\")}/>\r\n                </Form.Item>\r\n                <Form.Item label=\"消息分组\">\r\n                  <Tag color={kefuMessageInfo.group !== \"未分组\" ? \"#1890ff\" : \"\"} closable={kefuMessageInfo.group !== \"未分组\"}\r\n                       onClose={cancelSelectGroup}\r\n                       style={kefuMessageInfo.group !== \"未分组\" ? {} : {background: '#fff', borderStyle: 'dashed'}}>\r\n                    {kefuMessageInfo.group}\r\n                  </Tag>\r\n                </Form.Item>\r\n                <Form.Item label=\"全部分组\">\r\n                  {groupInputVisible && (\r\n                      <Input\r\n                          ref={input => this.input = input}\r\n                          type=\"text\"\r\n                          size=\"small\"\r\n                          style={{width: 78, marginRight: 10}}\r\n                          value={groupValue}\r\n                          onChange={handleGroupInputChange}\r\n                          onBlur={handleGroupInputConfirm}\r\n                          onPressEnter={handleGroupInputConfirm}\r\n                      />\r\n                  )}\r\n                  {!groupInputVisible && (\r\n                      <Tag className=\"cursor\" onClick={() => showGroupInput(this)}\r\n                           style={{background: '#fff', borderStyle: 'dashed'}}>\r\n                        <Icon type=\"plus\"/> New Tag\r\n                      </Tag>\r\n                  )}\r\n                  {allGroup.map((item, index) => <Tag color=\"#1890ff\" key={item._id} className=\"cursor\" closable onClose={e => handleClose(e, item._id, index)} onClick={e => changeMessageValue(item.group, \"group\")}>\r\n                    {item.group}\r\n                  </Tag>)}\r\n                </Form.Item>\r\n                <Divider style={{width: \"205%\", marginLeft: -50}}/>\r\n                <h2 className=\"block-title\">设置客服消息</h2>\r\n                <Form.Item>\r\n                  <Radio.Group buttonStyle=\"solid\" value={kefuMessageInfo.type} onChange={e => changeMessageValue(e.target.value, \"type\")}>\r\n                    <Radio.Button value={0}>图文消息</Radio.Button>\r\n                    <Radio.Button value={1}>文本消息</Radio.Button>\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n                {FormItemWrapper}\r\n                <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n                <h2 className=\"block-title\">选择群发对象</h2>\r\n                <Form.Item label=\"群发粉丝\">\r\n                  <Radio.Group value={kefuMessageInfo.sex} onChange={e => changeMessageValue(e.target.value, \"sex\")}>\r\n                    <Radio value=\"all\">全部粉丝</Radio>\r\n                    <br/>\r\n                    <Radio value=\"1\">仅男性粉丝</Radio>\r\n                    <Radio value=\"2\">仅女性粉丝</Radio>\r\n                    <Radio value=\"0\">仅未知粉丝</Radio>\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n                <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n                <h2 className=\"block-title\">设置群发方式</h2>\r\n                <Form.Item label=\"发送方式\">\r\n                  <Radio.Group value={kefuMessageInfo.channel}\r\n                               onChange={e => changeMessageValue(e.target.value, \"channel\")}>\r\n                    <Radio.Button value={0}>人工</Radio.Button>\r\n                    <Radio.Button value={1}>延时</Radio.Button>\r\n                    <Radio.Button value={2}>定时</Radio.Button>\r\n                    <Radio.Button value={3}>按时发送</Radio.Button>\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n                {Channel}\r\n                <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n                <Form.Item>\r\n                  <Button size=\"large\" type=\"primary\"\r\n                          onClick={() => submitMessage(kefuMessageInfo, history, allCodes)}>确定{!kefuMessageInfo._id ? \"并创建消息\" : \"并保存消息\"}</Button>\r\n                  {kefuMessageInfo._id && <Button style={{marginLeft: 20}} type=\"info\" size=\"large\"\r\n                                                  onClick={() => history.goBack()}>取消编辑</Button>}\r\n                  <Button size=\"large\" style={{marginLeft: 30, background: \"yellowgreen\", borderColor: \"yellowgreen\"}}\r\n                          type=\"primary\" onClick={openPreviewModal}>发送预览</Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </div>}/>\r\n        </div>\r\n        <Modal title=\"发送预览\" visible={previewModal} onCancel={closePreviewModal}\r\n               onOk={() => preview(kefuMessageInfo, openid)}>\r\n          <Input onChange={changeOpenId} value={openid} placeholder=\"请输入预览用户的openid\"/>\r\n          <span className=\"tips\">Tips: 在预览公号回复<span> openid </span>,将返回的内容复制到输入框中<br/>一个openid只对应一个公号</span>\r\n        </Modal>\r\n      </ConfigProvider>\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  kefuMessageInfo: state.message.kefu.kefuMessageInfo,\r\n  content: state.message.kefu.content,\r\n  allCodes: state.message.kefu.allCodes,\r\n  previewModal: state.message.kefu.previewModal,\r\n  openid: state.message.kefu.openid,\r\n  allGroup: state.message.kefu.allGroup,\r\n  groupInputVisible: state.message.kefu.groupInputVisible,\r\n  groupValue: state.message.kefu.groupValue,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  initKefuMessageInfo(query) {\r\n    dispatch(actionCreators.initKefuMessageInfo(query));\r\n  },\r\n  changeContentValue(e, name) {\r\n    dispatch(actionCreators.changeContentValue(e.target.value, name));\r\n  },\r\n  uploadImg(kefuMessageInfo, info) {\r\n    if (info.file.status === 'done') {\r\n      let img = `http://t.dmmup.com/uploads/${info.file.response.filename}`,\r\n        img_path = `./public/uploads/${info.file.response.filename}`;\r\n      if (kefuMessageInfo.type === 0) {\r\n        dispatch(actionCreators.changeContentValue(img, \"picurl\"));\r\n      } else {\r\n        dispatch(actionCreators.changeMessageValue(img, \"img\"));\r\n        dispatch(actionCreators.changeMessageValue(img_path, \"img_path\"));\r\n      }\r\n    }\r\n  },\r\n  changeMessageValue(value, name) {\r\n    dispatch(actionCreators.changeMessageValue(value, name));\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState());\r\n  },\r\n  selectParams() {\r\n    dispatch(actionCreators.selectParams());\r\n  },\r\n  submitMessage(info, history, allCodes) {\r\n    dispatch(actionCreators.submitMessage(info, history, allCodes));\r\n  },\r\n  selectGonghao(codes) {\r\n    dispatch(actionCreators.selectGonghao(codes))\r\n  },\r\n  deleteGonghao(codes, code) {\r\n    codes.splice(codes.indexOf(code), 1);\r\n    dispatch(actionCreators.selectGonghao(codes))\r\n  },\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  changeOpenId(e) {\r\n    dispatch(actionCreators.changeOpenId(e.target.value))\r\n  },\r\n  openPreviewModal() {\r\n    dispatch(actionCreators.openPreviewModal())\r\n  },\r\n  closePreviewModal() {\r\n    dispatch(actionCreators.closePreviewModal())\r\n  },\r\n  preview(info, openid) {\r\n    dispatch(actionCreators.preview(info, openid))\r\n  },\r\n  getAllGroup() {\r\n    dispatch(actionCreators.getAllGroup())\r\n  },\r\n  showGroupInput(that) {\r\n    dispatch(actionCreators.showGroupInput(that))\r\n  },\r\n  handleGroupInputChange(e) {\r\n    dispatch(actionCreators.handleGroupInputChange(e.target.value))\r\n  },\r\n  handleGroupInputConfirm(e) {\r\n    dispatch(actionCreators.handleGroupInputConfirm(e.target.value))\r\n  },\r\n  handleClose(e, _id, index) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    dispatch(actionCreators.handleClose(_id, index))\r\n  },\r\n  cancelSelectGroup(e) {\r\n    e.preventDefault();\r\n    dispatch(actionCreators.cancelSelectGroup())\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(EditMessage);","import React, {Component} from 'react';\r\nimport {Input, Table} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../../common/components/Button';\r\nimport {actionCreators} from './store';\r\nimport moment from 'moment';\r\n\r\nconst {Search} = Input;\r\n\r\nclass Template extends Component {\r\n  render() {\r\n    const {confName, templateMessageList, deleteTemplate, sendTemplate, changeConfNickName, searchConfName} = this.props;\r\n    const templateColumns = [\r\n      {\r\n        key: \"confName\",\r\n        dataIndex: \"confName\",\r\n        title: \"公众号\",\r\n        align: \"center\"\r\n      }, {\r\n        key: \"name\",\r\n        dataIndex: \"name\",\r\n        title: \"消息名称\",\r\n        align: \"center\"\r\n      }, {\r\n        key: \"sex\",\r\n        dataIndex: \"sex\",\r\n        title: \"消息名称\",\r\n        align: \"center\",\r\n        render: text => text === \"all\" ? \"全部\" : (text === \"1\" ? \"男\" : (text === \"2\" ? \"女\" : \"未知\"))\r\n      }, {\r\n        key: \"templateName\",\r\n        dataIndex: \"templateName\",\r\n        title: \"模板名称\",\r\n        align: \"center\"\r\n      }, {\r\n        key: \"timing_time\",\r\n        dataIndex: \"timing_time\",\r\n        title: \"定时\",\r\n        align: \"center\",\r\n        render: (text, record) => record.is_timing ? moment(text).format(\"YYYY-MM-DD HH:mm:ss\") : \"~~\"\r\n      }, {\r\n        key: \"status\",\r\n        dataIndex: \"status\",\r\n        title: \"发送状态\",\r\n        align: \"center\",\r\n        width: 80,\r\n        render: text => text === 0 ? \"未发送\" : (text === 1 ? \"正在发送\" : (text === 2 ? \"发送次数超出限制\" : \"发送完成\"))\r\n      }, {\r\n        key: \"count\",\r\n        dataIndex: \"count\",\r\n        title: \"已接收用户数\",\r\n        align: \"center\",\r\n        width: 80\r\n      }, {\r\n        key: \"Action\",\r\n        title: \"操作\",\r\n        align: \"center\",\r\n        width: 240,\r\n        render: (text, record, index) => <div>\r\n          {(!record.is_timing && record.status === 0) && <Button buttonContent=\"发送\" onClick={() => sendTemplate(record._id, index)} background=\"success\"/>}\r\n          {record.status === 0 && <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />}\r\n          <Button buttonContent=\"删除\" onClick={() => deleteTemplate(record._id, index)} background=\"danger\"/>\r\n        </div>\r\n      }\r\n    ];\r\n    return (\r\n      <div className=\"container\">\r\n        <Search style={{width: 200}} placeholder=\"搜索公众号\" value={confName} onChange={changeConfNickName} onSearch={searchConfName}/>\r\n        <div className=\"fr\"><Button size=\"default\" className=\"fr\" mb={20} buttonContent={<Link to=\"./create\">+ 新建模板消息</Link>}/></div>\r\n        <Table rowKey={record => record._id} size=\"middle\" dataSource={templateMessageList} columns={templateColumns}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getTemplateList()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  templateMessageList: state.message.template.templateMessageList,\r\n  confName: state.message.template.confName,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getTemplateList() {\r\n    dispatch(actionCreators.getTemplateList())\r\n  },\r\n  deleteTemplate(id, index) {\r\n    dispatch(actionCreators.deleteTemplate(id, index))\r\n  },\r\n  sendTemplate(id, index) {\r\n    dispatch(actionCreators.sendTemplate(id, index))\r\n  },\r\n  changeConfNickName(e) {\r\n    dispatch(actionCreators.changeConfNickName(e.target.value))\r\n  },\r\n  searchConfName(value) {\r\n    dispatch(actionCreators.searchConfName(value))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Template);","import React from 'react';\r\nimport { Radio, Row, Col, Modal, Button } from 'antd';\r\n\r\nconst SingleSelectModal = props => {\r\n  const {selectGonghaoModal, allCodes, code, confirmSelect, closeSelectModal} = props;\r\n  return (\r\n    <Modal width={1000} visible={selectGonghaoModal} maskClosable={false} closable={false} mask={false}  footer={<Button type=\"primary\" disabled={!code} onClick={closeSelectModal}>确定</Button>}>\r\n      <Radio.Group value={code} style={{ width: '100%' }} onChange={e => confirmSelect(e.target.value, code)}>\r\n        <Row>\r\n          {allCodes.map(item => <Col span={4} key={item._id}>\r\n            <Radio value={item.code}>{item.nick_name}</Radio>\r\n          </Col>)}\r\n        </Row>\r\n      </Radio.Group>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default SingleSelectModal;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  ConfigProvider,\r\n  Icon,\r\n  Form,\r\n  Button,\r\n  Radio,\r\n  Input,\r\n  Avatar,\r\n  Divider,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Switch,\r\n  DatePicker\r\n} from \"antd\";\r\nimport SingleSelectModal from '../../../../common/components/SelectGonghao/SingleSelectModal';\r\nimport {actionCreators} from \"../store\";\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/zh-cn';\r\nimport './index.scss';\r\n\r\nconst {Option} = Select;\r\nconst colors = [\"#000\", \"#CF021B\", \"#F5A623\", \"#3BA6FF\", \"#BD10E0\", \"#999\"];\r\nconst colorWrapperStyle = {\r\n  width: 20,\r\n  height: 20,\r\n  marginLeft: 10,\r\n  display: \"inline-block\",\r\n  marginTop: 5\r\n};\r\n\r\nclass EditTemplate extends Component {\r\n\r\n  async componentWillMount() {\r\n    this.props.getAllCodes();\r\n    const {query} = this.props.location;\r\n    query && await this.props.initMessageInfo(query);\r\n  }\r\n\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: {span: 4}\r\n      },\r\n      wrapperCol: {\r\n        sm: {span: 20, offset: 0}\r\n      },\r\n    };\r\n\r\n    const {openSelectModal, messageInfo, changeMessageInfo, selectGonghaoModal, allCodes, openEditModal, templateList, templateInfo, templateModalVisible, changeTemplate, history, submitMessage, confirmSelect, closeSelectModal, openPreviewModal, closePreviewModal, openid, changeOpenId, previewModal, preview} = this.props;\r\n    const { content, closeTemplateModal, saveTemplateModal, editTemplate } = this.props;\r\n    const footer = (\r\n        <div style={{overflow: \"hidden\", lineHeight: 1.5}}>\r\n          <div className=\"fl\">\r\n            {colors.map(item => <span className=\"cursor\" style={{...colorWrapperStyle, background: item}} key={item} onClick={() => editTemplate('color', item)} />)}\r\n          </div>\r\n          <Button type=\"primary\" className=\"fr\" onClick={saveTemplateModal}>保存</Button>\r\n        </div>);\r\n    let template = [];\r\n    for (let key in templateInfo.data) {\r\n      let content = messageInfo.content[key];\r\n      if (key === \"first\") {\r\n        template.unshift(<Form.Item label={templateInfo.data[\"first\"].pre || \"\"} key=\"first\">\r\n          <span className=\"mr5\">{content.value}</span>\r\n          <Icon className=\"cursor\" onClick={() => openEditModal(key, content)} type=\"edit\"/>\r\n        </Form.Item>)\r\n      } else {\r\n        template.push(<Form.Item label={templateInfo.data[key].pre || \"\"} key={key}>\r\n          <span className=\"mr5\">{content.value}</span>\r\n          <Icon className=\"cursor\" onClick={() => openEditModal(key, content)} type=\"edit\"/>\r\n        </Form.Item>)\r\n      }\r\n    }\r\n    let GonghaoModal;\r\n    selectGonghaoModal && (GonghaoModal =\r\n      <SingleSelectModal code={messageInfo.code} confirmSelect={confirmSelect} closeSelectModal={closeSelectModal}\r\n                         allCodes={allCodes} selectGonghaoModal={selectGonghaoModal}/>);\r\n    return (\r\n      <ConfigProvider locale={zhCN}>\r\n        <div className=\"container edit-message\">\r\n          <Form className=\"kefu-form\" {...formItemLayout} style={{width: 520}}>\r\n            <Form.Item label=\"选择公号\">\r\n              <Avatar onClick={openSelectModal} className=\"cursor\" shape=\"square\" icon=\"user\"/>\r\n            </Form.Item>\r\n            <Form.Item label=\"消息名称\">\r\n              <Input value={messageInfo.name} onChange={e => changeMessageInfo(\"name\", e.target.value)}\r\n                     placeholder=\"请输入消息名称,(仅供备注，不会发送给粉丝)\"/>\r\n            </Form.Item>\r\n            <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n            <h2 className=\"block-title\">设置模板消息</h2>\r\n            <Form.Item label=\"选择模板\">\r\n              <Select value={messageInfo.templateId} onChange={changeTemplate}>\r\n                {templateList.map(item => <Option value={item.template_id}\r\n                                                  key={item.template_id}>{item.title}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n            <Row className=\"template-wrapper\">\r\n              <Col span={4}/>\r\n              <Col span={20}>\r\n                <div className=\"message-block\">\r\n                  {template}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"点击跳转\">\r\n              <Input value={messageInfo.url} placeholder=\"输入跳转链接，且必须以http://或https://开头\"\r\n                     onChange={e => changeMessageInfo(\"url\", e.target.value)}/>\r\n            </Form.Item>\r\n            <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n            <h2 className=\"block-title\">选择群发对象</h2>\r\n            <Form.Item label=\"群发粉丝\">\r\n              <Radio.Group value={messageInfo.sex} onChange={e => changeMessageInfo(\"sex\", e.target.value)}>\r\n                <Radio value=\"all\">全部粉丝</Radio>\r\n                <Radio value=\"0\">未知粉丝</Radio>\r\n                <Radio value=\"1\">男粉丝</Radio>\r\n                <Radio value=\"2\">女粉丝</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n            <h2 className=\"block-title\">设置发送方式</h2>\r\n            <Form.Item label=\"定时发送\">\r\n              <Switch checked={messageInfo.is_timing} onChange={value => changeMessageInfo(\"is_timing\", value)}/>\r\n            </Form.Item>\r\n            {messageInfo.is_timing && <Form.Item label=\"发送时间\">\r\n              <DatePicker showTime placeholder=\"选择时间\" value={moment(messageInfo.timing_time)}\r\n                          onChange={(value, dateString) => changeMessageInfo('timing_time', dateString)}/>\r\n            </Form.Item>}\r\n            <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n            <Form.Item>\r\n              <Button size=\"large\" type=\"primary\"\r\n                      onClick={() => submitMessage(messageInfo, history, templateList)}>确定{!messageInfo._id ? \"并创建消息\" : \"并保存消息\"}</Button>\r\n              {messageInfo._id &&\r\n              <Button style={{marginLeft: 20}} type=\"info\" size=\"large\" onClick={() => history.goBack()}>取消编辑</Button>}\r\n              <Button size=\"large\" style={{marginLeft: 20, background: \"yellowgreen\", borderColor: \"yellowgreen\"}}\r\n                      type=\"primary\" onClick={openPreviewModal}>发送预览</Button>\r\n            </Form.Item>\r\n          </Form>\r\n          {GonghaoModal}\r\n          <Modal\r\n              visible={templateModalVisible}\r\n              onCancel={closeTemplateModal}\r\n              closable={false}\r\n              footer={footer}\r\n              mask={false}\r\n          >\r\n            <Input.TextArea style={{color: content[\"color\"]}} value={content[\"value\"]} autoSize={{ minRows: 3, maxRows: 6 }} onChange={e => editTemplate('value', e.target.value)} />\r\n          </Modal>\r\n          <Modal title=\"发送预览\" visible={previewModal} onCancel={closePreviewModal}\r\n                 onOk={() => preview(messageInfo, openid)}>\r\n            <Input onChange={changeOpenId} value={openid} placeholder=\"请输入预览用户的openid\"/>\r\n            <span className=\"tips\">Tips: 在预览公号回复<span> openid </span>,将返回的内容复制到输入框中<br/>一个openid只对应一个公号</span>\r\n          </Modal>\r\n        </div>\r\n      </ConfigProvider>\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  messageInfo: state.message.template.messageInfo,\r\n  templateList: state.message.template.templateList,\r\n  templateInfo: state.message.template.templateInfo,\r\n  templateModalVisible: state.message.template.templateModalVisible,\r\n  selectGonghaoModal: state.message.template.selectGonghaoModal,\r\n  allCodes: state.message.template.allCodes,\r\n  previewModal: state.message.template.previewModal,\r\n  openid: state.message.template.openid,\r\n  content: state.message.template.content\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  openEditModal(key, content) {\r\n    !content.color && (content.color = \"#000\");\r\n    dispatch(actionCreators.openEditModal(key, content))\r\n  },\r\n  changeTemplate(value) {\r\n    dispatch(actionCreators.changeTemplate(value))\r\n  },\r\n  submitMessage(info, history, templateList) {\r\n    dispatch(actionCreators.submitMessage(info, history, templateList));\r\n  },\r\n  openSelectModal() {\r\n    dispatch(actionCreators.openSelectModal())\r\n  },\r\n  changeMessageInfo(key, value) {\r\n    dispatch(actionCreators.changeMessageInfo(key, value))\r\n  },\r\n  initMessageInfo(record) {\r\n    dispatch(actionCreators.initMessageInfo(record))\r\n  },\r\n  confirmSelect(code) {\r\n    dispatch(actionCreators.confirmSelect(code))\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState())\r\n  },\r\n  closeSelectModal() {\r\n    dispatch(actionCreators.closeSelectModal())\r\n  },\r\n  changeOpenId(e) {\r\n    dispatch(actionCreators.changeOpenId(e.target.value))\r\n  },\r\n  openPreviewModal() {\r\n    dispatch(actionCreators.openPreviewModal())\r\n  },\r\n  closePreviewModal() {\r\n    dispatch(actionCreators.closePreviewModal())\r\n  },\r\n  preview(info, openid) {\r\n    dispatch(actionCreators.preview(info, openid))\r\n  },\r\n  closeTemplateModal() {\r\n    dispatch(actionCreators.closeTemplateModal())\r\n  },\r\n  saveTemplateModal() {\r\n    dispatch(actionCreators.saveTemplateModal())\r\n  },\r\n  editTemplate(key, value) {\r\n    dispatch(actionCreators.editTemplate(key, value))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(EditTemplate);","import React, { Component } from 'react';\r\nimport { Table } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionCreators } from './store';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '../../../common/components/Button';\r\n\r\nclass RandomKefu extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getRandomMessageList()\r\n  }\r\n\r\n  render() {\r\n    let {randomMessageList, deleteRandomMessage} = this.props;\r\n    const columns = [\r\n      {\r\n        key: \"message_id\",\r\n        title: \"消息ID\",\r\n        dataIndex: \"message_id\",\r\n        align: \"center\"\r\n      }, {\r\n        key: \"remarks\",\r\n        title: \"消息名称\",\r\n        dataIndex: \"remarks\",\r\n        align: \"center\"\r\n      }, {\r\n        key: \"message_array\",\r\n        title: \"随机消息数\",\r\n        dataIndex: \"message_array\",\r\n        align: \"center\",\r\n        render: text => text.length\r\n      }, {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        render: (text, record, index) => (\r\n          <div>\r\n            <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />\r\n            <Button background=\"danger\" onClick={() => deleteRandomMessage(record._id)} buttonContent=\"删除\" />\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Button size=\"default\" mb={20} buttonContent={<Link to=\"./create\">新建客服消息</Link>} />\r\n          <Table size=\"middle\" rowKey={record => record._id} columns={columns} dataSource={randomMessageList} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  randomMessageList: state.message.randomMsg.randomMessageList\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getRandomMessageList() {\r\n    dispatch(actionCreators.getRandomMessageList())\r\n  },\r\n  deleteRandomMessage(id) {\r\n    dispatch(actionCreators.deleteRandomMessage(id))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(RandomKefu);","import React, { Component } from 'react';\r\nimport {\r\n\tIcon,\r\n\tForm,\r\n\tButton,\r\n\tRadio,\r\n\tInput,\r\n\tUpload,\r\n\tDivider\r\n} from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionCreators } from '../store';\r\nimport 'moment/locale/zh-cn';\r\nimport \"./index.scss\";\r\n\r\nclass EditRandomMessage extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet {location: {query}, initRandomMsgInfo} = this.props;\r\n\t\tquery && initRandomMsgInfo(query)\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { randomMessageInfo, message_info, content, currentIndex, changeContentValue, changeMessageValue, changeMessageType, uploadImg, addMessage, submitMessage, updateMessageItem, deleteMessageItem, saveMessage, cancelAction, history } = this.props;\r\n\t\tlet isTextUploadImg, FormItemWrapper;\r\n\t\tif (content.picurl) {\r\n\t\t\tisTextUploadImg = <img style={{ width: \"100px\" }} src={content.picurl} alt=\"\" />\r\n\t\t} else {\r\n\t\t\tisTextUploadImg = <Button><Icon type=\"upload\" /> 上传图片 </Button>\r\n\t\t}\r\n\t\tif (message_info.type === 1) {\r\n\t\t\tFormItemWrapper = <Form.Item label=\"文本消息\" className=\"text-message\">\r\n\t\t\t\t<Input.TextArea autoSize={{ minRows: 6 }} value={content.description} placeholder=\"请输入文本消息\" onChange={e => changeContentValue(e.target.value, \"description\")} />\r\n\t\t\t</Form.Item>\r\n\t\t} else if (message_info.type === 0) {\r\n\t\t\tFormItemWrapper = <div>\r\n\t\t\t\t<Form.Item label=\"图片封面\">\r\n\t\t\t\t\t<Upload name=\"imageFile\" action=\"/reply/upload\" onChange={uploadImg} showUploadList={false}>\r\n\t\t\t\t\t\t{isTextUploadImg}\r\n\t\t\t\t\t</Upload>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item label=\"图文标题\">\r\n\t\t\t\t\t<Input placeholder=\"请输入图文标题\" value={content.title} onChange={e => changeContentValue(e.target.value, \"title\")} />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item label=\"图文描述\" className=\"text-message\">\r\n\t\t\t\t\t<Input.TextArea autoSize={{ minRows: 6 }} value={content.description} placeholder=\"请输入图文描述\" onChange={e => changeContentValue(e.target.value, \"description\")} />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item label=\"跳转链接\">\r\n\t\t\t\t\t<Input placeholder=\"请输入跳转链接\" value={content.url} onChange={e => changeContentValue(e.target.value, \"url\")} />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</div>\r\n\t\t}\r\n\t\tconst formItemLayout = {\r\n\t\t\tlabelCol: {\r\n\t\t\t\tsm: { span: 4 }\r\n\t\t\t},\r\n\t\t\twrapperCol: {\r\n\t\t\t\tsm: { span: 20, offset: 0 }\r\n\t\t\t},\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"edit-random-message\">\r\n\t\t\t\t\t<div className=\"kefu-form fl\">\r\n\t\t\t\t\t\t<Form {...formItemLayout}>\r\n\t\t\t\t\t\t\t<Form.Item label=\"消息名称\">\r\n\t\t\t\t\t\t\t\t<Input value={randomMessageInfo.remarks} placeholder=\"自行填写，便于区分对应\" onChange={e => changeMessageValue(e.target.value, \"remarks\")} />\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t<Form.Item label=\"消息ID\">\r\n\t\t\t\t\t\t\t\t<Input value={randomMessageInfo.message_id} placeholder=\"请在客服消息列表复制消息ID\" onChange={e => changeMessageValue(e.target.value, \"message_id\")} />\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t\t\t<Radio.Group buttonStyle=\"solid\" value={message_info.type} onChange={changeMessageType}>\r\n\t\t\t\t\t\t\t\t\t<Radio.Button value={0}>图文消息</Radio.Button>\r\n\t\t\t\t\t\t\t\t\t<Radio.Button value={1}>文本消息</Radio.Button>\r\n\t\t\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t{FormItemWrapper}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcurrentIndex > -1 ?\r\n\t\t\t\t\t\t\t\t<Button onClick={saveMessage}>保存修改</Button> : \r\n\t\t\t\t\t\t\t\t<Button onClick={addMessage}>添加一条</Button>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t<Form.Item className=\"btn-wrapper\">\r\n\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={() => submitMessage(randomMessageInfo, history)}>确定</Button>\r\n\t\t\t\t\t\t\t\t<Button style={{ marginLeft: 20 }} type=\"info\" onClick={() => cancelAction(history)}>取消</Button>\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{!!randomMessageInfo.message_array.length && <ul className=\"fr message-wrapper\">\r\n\t\t\t\t\t\t{randomMessageInfo.message_array.map((item, index) =>\r\n\t\t\t\t\t\t\t<li key={index} className=\"cursor\">\r\n\t\t\t\t\t\t\t\t<div className=\"head-other\">\r\n\t\t\t\t\t\t\t\t\t<img src={item.contents[0].picurl} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t<h3 className=\"title textEllipsis\">{item.contents[0].title}</h3>\r\n\t\t\t\t\t\t\t\t\t<p className=\"ellipse-two\">{item.contents[0].description}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mask\">\r\n\t\t\t\t\t\t\t\t\t<Button onClick={() => updateMessageItem(item, index)} type=\"link\">编辑</Button>\r\n\t\t\t\t\t\t\t\t\t<Button onClick={() => deleteMessageItem(index)} type=\"link\">删除</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</ul>}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.resetState()\r\n\t}\r\n\t\r\n}\r\n\r\nconst mapState = state => ({\r\n\tcontent: state.message.randomMsg.content,\r\n\tmessage_info: state.message.randomMsg.message_info,\r\n\trandomMessageInfo: state.message.randomMsg.randomMessageInfo,\r\n\tcurrentIndex: state.message.randomMsg.currentIndex,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n\tchangeMessageValue(value, name) {\r\n\t\tdispatch(actionCreators.changeMessageValue(value, name))\r\n\t},\r\n\tchangeMessageType(e) {\r\n\t\tdispatch(actionCreators.changeMessageType(e.target.value))\r\n\t},\r\n\tchangeContentValue(value, name) {\r\n\t\tdispatch(actionCreators.changeContentValue(value, name))\r\n\t},\r\n\tuploadImg(info) {\r\n\t\tif (info.file.status === 'done') {\r\n\t\t\tlet img = `http://t.dmmup.com/uploads/${info.file.response.filename}`;\r\n\t\t\tdispatch(actionCreators.changeContentValue(img, \"picurl\"));\r\n\t\t\tdispatch(actionCreators.changeContentValue(img, \"local_picurl\"));\r\n\t\t}\r\n\t},\r\n\taddMessage() {\r\n\t\tdispatch(actionCreators.addMessage())\r\n\t},\r\n\tupdateMessageItem(item, index) {\r\n\t\tdispatch(actionCreators.updateMessageItem(item, index))\r\n\t},\r\n\tdeleteMessageItem(index) {\r\n\t\tdispatch(actionCreators.deleteMessageItem(index))\r\n\t},\r\n\tsaveMessage() {\r\n\t\tdispatch(actionCreators.saveMessage())\r\n\t}, \r\n\tsubmitMessage(info, history) {\r\n\t\tdispatch(actionCreators.submitMessage(info, history))\r\n\t},\r\n\tcancelAction(history) {\r\n\t\tdispatch(actionCreators.cancelAction(history))\r\n\t},\r\n\tresetState() {\r\n\t\tdispatch(actionCreators.resetState())\r\n\t},\r\n\tinitRandomMsgInfo(info) {\r\n\t\tdispatch(actionCreators.initRandomMsgInfo(info))\r\n\t}\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(EditRandomMessage);","import React, { Component } from 'react';\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Group from \"./group\";\r\nimport GroupMaterial from \"./group/material\";\r\nimport History from './group/history';\r\nimport Kefu from './kefu';\r\nimport EditKefuMSg from './kefu/edit';\r\nimport Template from './template';\r\nimport EditTemplate from './template/edit';\r\nimport RandomKefu from './randomKefu';\r\nimport EditRandomKefu from './randomKefu/edit';\r\n\r\nclass GroupRouter extends Component {\r\n  render() {\r\n    return (\r\n    \t<div>\r\n        <Route path='/admin/message'>\r\n          <Switch>\r\n            <Route path=\"/admin/message/group/index\" component={Group} />\r\n            <Route path=\"/admin/message/group/material\" component={GroupMaterial} />\r\n            <Route path=\"/admin/message/group/history\" component={History} />\r\n            <Route path=\"/admin/message/kefu/index\" component={Kefu} />\r\n            <Route path=\"/admin/message/kefu/create\" component={EditKefuMSg} />\r\n            <Route path=\"/admin/message/kefu/update\" component={EditKefuMSg} />\r\n            <Route path=\"/admin/message/randomKefu/index\" component={RandomKefu} />\r\n            <Route path=\"/admin/message/randomKefu/create\" component={EditRandomKefu} />\r\n            <Route path=\"/admin/message/randomKefu/update\" component={EditRandomKefu} />\r\n            <Route path=\"/admin/message/template/index\" component={Template} />\r\n            <Route path=\"/admin/message/template/create\" component={EditTemplate} />\r\n            <Route path=\"/admin/message/template/update\" component={EditTemplate} />\r\n            <Redirect from=\"/admin/message\" exact to='/admin/message/group' />\r\n            <Redirect from=\"/admin/message/group\" exact to='/admin/message/group/index' />\r\n            <Redirect from=\"/admin/message/kefu\" exact to='/admin/message/kefu/index' />\r\n            <Redirect from=\"/admin/message/template\" exact to='/admin/message/template/index' />\r\n          </Switch>\r\n        </Route>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroupRouter;","import React, {Component} from 'react';\r\nimport {Table, Modal, message, Tabs} from 'antd';\r\nimport axios from '../../../utils/http';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '../../../common/components/Button';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\nclass Advertise extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeTab = this.changeTab.bind(this);\r\n  }\r\n\r\n  state = {\r\n    spreadData: [],\r\n    domain_names: [],\r\n    tagList: [],\r\n    dataList: []\r\n  };\r\n\r\n  render() {\r\n    const {spreadData, tagList} = this.state;\r\n    const tabsRender = tagList.map(item => (\r\n      <TabPane tab={item.name} key={item.name}/>\r\n    ));\r\n    const spreadHeader = [\r\n      {\r\n        key: \"links\",\r\n        title: \"链接\",\r\n        align: \"center\",\r\n        width: 280,\r\n        render: (text, record) => <p\r\n          style={{width: 280, wordWrap: \"break-word\", userSelect: \"all\"}}>{'http://doumobone.top/cmst/' + record.id}</p>\r\n      },\r\n      {\r\n        key: \"group\",\r\n        dataIndex: \"group\",\r\n        title: \"分组\",\r\n        align: \"center\",\r\n        width: 120\r\n      },\r\n      {\r\n        key: \"title\",\r\n        dataIndex: \"title\",\r\n        title: \"标题\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        key: \"remarks\",\r\n        dataIndex: \"remarks\",\r\n        title: \"备注\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: text => text ? text : \"无\"\r\n      },\r\n      {\r\n        title: \"数据\",\r\n        align: \"center\",\r\n        width: 80,\r\n        render: (text, record) => <a href={'http://doumobone.top/transfer/' + record.id} target={\"_blank\"}>查看数据</a>\r\n      },\r\n      {\r\n        title: \"置顶\",\r\n        align: \"center\",\r\n        width: 80,\r\n        render: (text, record) => <Button background=\"warning\" onClick={() => this.goTop(record._id)} buttonContent=\"置顶\" />\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record, index) => <div>\r\n          <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />\r\n          <Button background=\"danger\" buttonContent=\"删除\" onClick={() => this.deleteLink(record._id, index)} />\r\n          <Button background=\"success\" mr={0} buttonContent=\"复制\" onClick={() => this.copyLink({...record})} />\r\n        </div>\r\n      }\r\n    ];\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <Button size=\"default\" background=\"success\" mb={20} buttonContent={<Link to=\"./create\">添加新链接</Link>} />\r\n          <Tabs animated={false} defaultActiveKey=\"ALL\" tabBarGutter={0} onChange={this.changeTab}\r\n                size='small'>\r\n            <TabPane tab=\"ALL\" key=\"ALL\"/>\r\n            {tabsRender}\r\n          </Tabs>\r\n          <Table rowKey={record => record._id} size=\"small\" bordered columns={spreadHeader} dataSource={spreadData}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSpreadList();\r\n    this.getTagList();\r\n  }\r\n\r\n  getSpreadList() {\r\n    axios.get(\"/transfer\").then(res => {\r\n      let spreadData = res.data.messages;\r\n      let domain_names = res.data.domain_names;\r\n      this.setState({\r\n        spreadData,\r\n        dataList: spreadData,\r\n        domain_names\r\n      })\r\n    });\r\n  }\r\n\r\n  getTagList() {\r\n    axios.get(\"/tuiguangTag\").then(res => {\r\n      const {data: tagList} = res.data;\r\n      this.setState({tagList})\r\n    });\r\n  }\r\n\r\n  changeTab(key) {\r\n    const {dataList} = this.state;\r\n    if (key === 'ALL') {\r\n      this.setState({\r\n        spreadData: dataList\r\n      });\r\n    } else {\r\n      let data = [];\r\n      for (let i = 0; i < dataList.length; i++) {\r\n        if (key === dataList[i].group) {\r\n          data.push(dataList[i]);\r\n        }\r\n      }\r\n      this.setState({spreadData: [...data]})\r\n    }\r\n  }\r\n\r\n  goTop(id) {\r\n    Modal.confirm({\r\n      title: \"确定置顶这条链接吗？\",\r\n      onOk: () => {\r\n        axios.post('/transfer/goTop', {id})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            this.getSpreadList();\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteLink(id, index) {\r\n    const {spreadData} = this.state;\r\n    Modal.confirm({\r\n      title: '确认删除这条内容吗？:',\r\n      onOk: () => {\r\n        axios.get('/transfer/delete', {params: {id}})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            spreadData.splice(index, 1);\r\n            this.setState({spreadData});\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  copyLink(record) {\r\n    record.id += '_copy';\r\n    const {spreadData} = this.state;\r\n    Modal.confirm({\r\n      title: \"确定复制一条推广链接吗？\",\r\n      onOk: () => {\r\n        axios.post('/transfer/create', {...record})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.info('复制成功');\r\n              spreadData.unshift(res.data.data);\r\n              this.setState({spreadData})\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default Advertise;","import React, {Component, Fragment} from 'react';\r\nimport {Form, Input, Button, Switch, InputNumber, message, Modal, List, Tag } from 'antd';\r\nimport axios from '../../../../utils/http';\r\n\r\nconst initState = {\r\n  spreadLinkInfo: {\r\n    id: \"\",\r\n    title: \"\",\r\n    links: [],\r\n    weights: [],\r\n    back_urls: [],\r\n    link: \"\",\r\n    back_url: \"\",\r\n    weight: \"\",\r\n    type: false,\r\n    status: false,\r\n    granularity: 1,\r\n    group: \"\",\r\n    remarks: \"\"\r\n  },\r\n  tagList: [],\r\n  index: -1\r\n};\r\n\r\nclass EditAdvertise extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addTag = this.addTag.bind(this);\r\n    this.cancelSelectTag = this.cancelSelectTag.bind(this);\r\n    this.cancelEdit = this.cancelEdit.bind(this);\r\n    this.submitSpreadLink = this.submitSpreadLink.bind(this);\r\n    this.cancelUpdate= this.cancelUpdate.bind(this);\r\n  }\r\n\r\n  state = {...initState};\r\n\r\n  componentWillMount() {\r\n    let query = this.props.history.location.query;\r\n    query && this.initData(query);\r\n    this.getTagList();\r\n  }\r\n\r\n  render() {\r\n    const {spreadLinkInfo, tagList, index} = this.state;\r\n    const {title, links, weights, back_urls, link, back_url, weight, type, status, granularity, group, remarks} = spreadLinkInfo;\r\n    let isAddWeight, hasLink, hasBackUrl, hasWeight, selectedTag;\r\n    links.length > 0 && (hasLink = <Form.Item label=\"链接组\">\r\n      <List\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={links}\r\n        renderItem={(item, index) => (\r\n          <List.Item actions={[<span className=\"cursor\" style={{color: \"#f00\"}} onClick={() => this.delLink(index, \"links\")}>del</span>]}>\r\n            {item}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </Form.Item>);\r\n    back_urls.length > 0 && (hasBackUrl = <Form.Item label=\"返回链接组\">\r\n      <List\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={back_urls}\r\n        renderItem={(item, index) => (\r\n          <List.Item actions={[<span className=\"cursor\" style={{color: \"#f00\"}} onClick={() => this.delLink(index, \"back_urls\")}>del</span>]}>\r\n            {item}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </Form.Item>);\r\n    weights.length > 0 && (hasWeight = <Form.Item label=\"权重组\">\r\n      <List\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={weights}\r\n        renderItem={(item, i) => {\r\n          let isUpdate;\r\n          if(index === i) {\r\n            isUpdate = [<span className=\"cursor\" style={{color: \"#f00\"}} onClick={this.cancelUpdate}>取消</span>]\r\n          } else {\r\n            isUpdate = [<span className=\"cursor\" style={{color: \"#f00\"}} onClick={e => this.delLink(i, \"weights\", e)}>删除</span>]\r\n          }\r\n          return (\r\n          <List.Item onClick={() => this.updateWeight(i)} actions={isUpdate}>\r\n            {index === i ? <Input.Search size=\"small\" enterButton=\"保存\" onSearch={(value, e) => this.saveUpdate(value, e)} /> : item}\r\n          </List.Item>\r\n        )}}\r\n      />\r\n    </Form.Item>);\r\n    if (type) {\r\n      isAddWeight = <Fragment>\r\n        <Form.Item label=\"权重\">\r\n          <Input.Search value={weight} enterButton=\"添加\" placeholder=\"请输入权重\"\r\n                        onChange={e => this.changeInputValue(e.target.value, \"weight\")} onSearch={value => this.addLink(value, \"weights\", \"weight\")}/>\r\n        </Form.Item>\r\n        {hasWeight}\r\n        <Form.Item label=\"投放状态\">\r\n          <Switch checked={status} onChange={value => this.changeInputValue(value, \"status\")}/>\r\n        </Form.Item>\r\n        <Form.Item label=\"时间颗粒度\">\r\n          <InputNumber min={1} value={granularity} placeholder=\"请输入标题\"\r\n                       onChange={value => this.changeInputValue(value, \"granularity\")}/>\r\n        </Form.Item>\r\n      </Fragment>\r\n    }\r\n    if(group) {\r\n      selectedTag = <Tag closable onClose={this.cancelSelectTag}>{group}</Tag>\r\n    } else {\r\n     selectedTag = <Input.Search enterButton=\"确定\" placeholder=\"请输入标签\" onSearch={this.addTag}/>\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"title-wrapper\">\r\n            <h2>编辑推广链接</h2>\r\n            <div className=\"fr\">\r\n              <Button type=\"primary\" style={{marginRight: 10}} onClick={this.submitSpreadLink}>提交</Button>\r\n              <Button onClick={this.cancelEdit}>取消</Button>\r\n            </div>\r\n          </div>\r\n          <Form className=\"fl\" style={{width: \"60%\", borderRight: \"1px solid #eee\"}} labelCol={{sm: 3}} wrapperCol={{sm: 18, offset: 0}} colon={false}>\r\n            <Form.Item label=\"标题\">\r\n              <Input value={title} placeholder=\"请输入标题\"\r\n                     onChange={e => this.changeInputValue(e.target.value, \"title\")}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"链接\">\r\n              <Input.Search value={link} enterButton=\"添加\" placeholder=\"请输入链接\" onChange={e => this.changeInputValue(e.target.value, \"link\")} onSearch={value => this.addLink(value, \"links\", \"link\")}/>\r\n            </Form.Item>\r\n            {hasLink}\r\n            <Form.Item label=\"返回链接\">\r\n              <Input.Search value={back_url} enterButton=\"添加\" placeholder=\"请输入返回链接\" onChange={e => this.changeInputValue(e.target.value, \"back_url\")} onSearch={value => this.addLink(value, \"back_urls\", \"back_url\")}/>\r\n            </Form.Item>\r\n            {hasBackUrl}\r\n            <Form.Item label=\"选择标签\">\r\n              {selectedTag}\r\n            </Form.Item>\r\n            <Form.Item label=\"标签选项\">\r\n              {tagList.map((item, index) => <Tag className=\"cursor\" closable onClose={(e) => this.deleteTag(e, item._id, index)} key={item._id} onClick={() => this.selectTag(item.name)}>{item.name}</Tag>)}\r\n            </Form.Item>\r\n          </Form>\r\n          <Form className=\"fl\" style={{width: \"36%\", paddingLeft: \"4%\"}} labelCol={{sm: 7}} wrapperCol={{sm: 17, offset: 0}} colon={false}>\r\n            <Form.Item label=\"是否增加权重\">\r\n              <Switch checked={type} onChange={value => this.changeInputValue(value, \"type\")}/>\r\n            </Form.Item>\r\n            {isAddWeight}\r\n            <Form.Item label=\"链接备注\">\r\n              <Input value={remarks} placeholder=\"请输入备注\" onChange={e => this.changeInputValue(e.target.value, \"remarks\")}/>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  initData(query) {\r\n    query.type = query.type === 1;\r\n    query.status = query.status === 1;\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...query}}))\r\n  }\r\n\r\n  changeInputValue(value, name) {\r\n    let {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo[name] = value;\r\n    this.setState({spreadLinkInfo})\r\n  }\r\n\r\n  addLink(value, list, item) {\r\n    const {spreadLinkInfo} = this.state;\r\n    if(!value.trim()) {\r\n      message.error(\"链接不能为空\")\r\n    } else {\r\n      spreadLinkInfo[list].push(value.trim());\r\n      spreadLinkInfo[item] = \"\";\r\n      this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}))\r\n    }\r\n  }\r\n\r\n  delLink(index, list, e) {\r\n    e && e.stopPropagation();\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo[list].splice(index, 1);\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}))\r\n  }\r\n\r\n  updateWeight(index) {\r\n    this.setState({index})\r\n  }\r\n\r\n  saveUpdate(value, e) {\r\n    e.stopPropagation();\r\n    const {spreadLinkInfo, index} = this.state;\r\n    spreadLinkInfo[\"weights\"].splice(index, 1, value);\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}, index: -1}));\r\n  }\r\n\r\n  cancelUpdate(e) {\r\n    e.stopPropagation();\r\n    this.setState({index: -1})\r\n  }\r\n\r\n  getTagList() {\r\n    axios.get(\"/tuiguangTag\").then(res => {\r\n      let tagList = res.data.data;\r\n      this.setState({tagList});\r\n    });\r\n  }\r\n\r\n  addTag(value) {\r\n    const { spreadLinkInfo } = this.state;\r\n    if(!value.trim()) {\r\n      message.error(\"标签名不能为空\")\r\n    } else {\r\n      axios.post(\"/tuiguangTag\", {name: value.trim()})\r\n        .then(res => {\r\n          if (res.data.exist === 0) {\r\n            const { data } = res.data;\r\n            this.setState(state => ({tagList: [...state.tagList, data]}));\r\n          }\r\n          spreadLinkInfo.group = value;\r\n          this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\r\n        })\r\n    }\r\n  }\r\n\r\n  selectTag(group) {\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo.group = group;\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\r\n  }\r\n\r\n  cancelSelectTag() {\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo.group = \"\";\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\r\n  }\r\n\r\n  deleteTag(e, id, index) {\r\n    e.stopPropagation();\r\n    const {tagList} = this.state;\r\n    axios.delete('/tuiguangTag', {params: {id}})\r\n      .then(res => {\r\n        tagList.splice(index, 1)\r\n        this.setState({tagList})\r\n      });\r\n  }\r\n\r\n  submitSpreadLink() {\r\n    const { query } = this.props.history.location;\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo.type = spreadLinkInfo.type ? 1 : 0;\r\n    spreadLinkInfo.status = spreadLinkInfo.status ? 1 : 0;\r\n    let url = '/transfer/create';\r\n    if(query) {\r\n      url = '/transfer/update'\r\n    }\r\n    Modal.confirm({\r\n      title: \"确定提交吗？\",\r\n      onOk: () => {\r\n        axios.post(url, {...spreadLinkInfo})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.info(res.data.success);\r\n              this.cancelEdit()\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  cancelEdit() {\r\n    this.props.history.goBack();\r\n    this.resetState();\r\n  }\r\n\r\n  resetState() {\r\n    this.setState({...initState})\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.resetState()\r\n  }\r\n}\r\n\r\nexport default EditAdvertise;","import React, { Component } from 'react';\r\nimport { Table, Modal, message, Switch, Input } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport { actionCreators } from './store';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../../../common/components/Button';\r\n\r\nimport \"./index.scss\";\r\n\r\nclass NovelLink extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getNovelLinkList();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { novelLinkList, count, domain, domainModal, changePage, deleteNovel, changeZIndexState, cancelGoTop, copyNovel, openDomainModal, closeDomainModal, submitDomain, changeDomainName } = this.props;\r\n\t\tconst novelLinkHeader = [\r\n\t\t\t{\r\n\t\t\t\tkey: \"id\",\r\n\t\t\t\tdataIndex: \"id\",\r\n\t\t\t\ttitle: \"id\",\r\n\t\t\t\talign: \"center\",\r\n\t\t\t\tellipsis: true,\r\n\t\t\t}, {\r\n\t\t\t\tkey: \"type\",\r\n\t\t\t\tdataIndex: \"type\",\r\n\t\t\t\ttitle: \"类型\",\r\n\t\t\t\talign: \"center\",\r\n\t\t\t\twidth: 85,\r\n\t\t\t\trender: text => !text ? \"头条投放\" : \"平台数据\"\r\n\t\t\t}, {\r\n\t\t\t\tkey: \"name\",\r\n\t\t\t\tdataIndex: \"name\",\r\n\t\t\t\ttitle: \"公号\",\r\n\t\t\t\talign: \"center\",\r\n\t\t\t\twidth: 85\r\n\t\t\t}, {\r\n\t\t\t\tkey: \"domain_name\",\r\n\t\t\t\tdataIndex: \"domain_name\",\r\n\t\t\t\ttitle: \"域名\",\r\n\t\t\t\talign: \"center\",\r\n\t\t\t\tellipsis: true,\r\n\t\t\t}, {\r\n\t\t\t\tkey: \"remarks\",\r\n\t\t\t\tdataIndex: \"remarks\",\r\n\t\t\t\ttitle: \"备注\",\r\n\t\t\t\talign: \"center\",\r\n\t\t\t\tellipsis: true,\r\n\t\t\t}, {\r\n\t\t\t\tkey: \"zIndex\",\r\n\t\t\t\tdataIndex: \"zIndex\",\r\n\t\t\t\ttitle: \"置顶状态\",\r\n\t\t\t\talign: \"center\",\r\n\t\t\t\twidth: 85,\r\n\t\t\t\trender: (text, record) => <Switch\tchecked={!!text} checkedChildren=\"已置顶\" unCheckedChildren=\"默认\" onChange={value => changeZIndexState(value, record._id)} />\r\n\t\t\t}, {\r\n\t\t\t\ttitle: \"复制链接\",\r\n\t\t\t\talign: \"center\",\r\n\t\t\t\twidth: 85,\r\n\t\t\t\trender: (text, record) => <CopyToClipboard text={record.domain_name + \"/tuiguang/\" + (record.type === 0 ? \"toutiao/\" : \"data/\") + record.id} onCopy={() => message.success(\"复制成功\")}>\r\n\t\t\t\t\t<Button background=\"success\" buttonContent=\"复制链接\" />\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t}, {\r\n\t\t\t\ttitle: \"Action\",\r\n\t\t\t\talign: \"center\",\r\n\t\t\t\trender: (text, record, index) => <div>\r\n\t\t\t\t\t<Button background=\"update\" buttonContent={<Link to={{ pathname: \"./update\", query: record }}>修改</Link>} />\r\n\t\t\t\t\t<Button background=\"danger\" buttonContent=\"删除\" onClick={() => deleteNovel(record.id, index)} />\r\n\t\t\t\t\t<Button background=\"success\" mr={0} buttonContent=\"复制一条\" onClick={() => copyNovel(record, this.props)} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\tconst pagination = {\r\n\t\t\tpageSize: 20,\r\n\t\t\ttotal: count,\r\n\t\t\tonChange: page => changePage(page),\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<Button background=\"success\" mb={10} size=\"default\" buttonContent={<Link to=\"./create\">新建小说链接</Link>} />\r\n\t\t\t\t\t<div className=\"fr\">\r\n\t\t\t\t\t\t<Button background=\"update\" size=\"default\" buttonContent=\"修改域名\" onClick={openDomainModal} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Table tableLayout=\"auto\" bordered size=\"small\" rowKey={record => record._id} columns={novelLinkHeader} rowClassName={record => record.zIndex !== 0 ? \"selectedRow\" : \"\"} dataSource={novelLinkList} pagination={{ ...pagination }} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\ttitle=\"请输入新域名\"\r\n\t\t\t\t\tvisible={domainModal}\r\n\t\t\t\t\tonOk={() => submitDomain(domain)}\r\n\t\t\t\t\tonCancel={closeDomainModal}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input placeholder=\"请输入新域名，如：https://www.baidu.com\" value={domain} onChange={changeDomainName} />\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nconst mapState = state => ({\r\n\tnovelLinkList: state.channel.links.novelLinkList,\r\n\tcount: state.channel.links.count,\r\n\tdomainModal: state.channel.links.domainModal,\r\n\tdomain: state.channel.links.domain\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n\tgetNovelLinkList() {\r\n\t\tdispatch(actionCreators.getNovelLinkList())\r\n\t},\r\n\tchangePage(page) {\r\n\t\tdispatch(actionCreators.changePage(page))\r\n\t},\r\n\tdeleteNovel(id, index) {\r\n\t\tdispatch(actionCreators.deleteNovel(id, index))\r\n\t},\r\n\tchangeZIndexState(zIndex, id) {\r\n\t\tdispatch(actionCreators.changeZIndexState(zIndex, id))\r\n\t},\r\n\tcopyNovel(record, props) {\r\n\t\tdispatch(actionCreators.submitNovel(record, props));\r\n\t},\r\n\topenDomainModal() {\r\n\t\tdispatch(actionCreators.openDomainModal())\r\n\t},\r\n\tcloseDomainModal() {\r\n\t\tdispatch(actionCreators.closeDomainModal())\r\n\t},\r\n\tsubmitDomain(domain) {\r\n\t\tdispatch(actionCreators.submitDomain(domain))\r\n\t},\r\n\tchangeDomainName(e) {\r\n\t\tdispatch(actionCreators.changeDomainName(e.target.value))\r\n\t},\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(NovelLink);","import React, { Component, Fragment } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Button, Input, Radio, Icon, Upload, Modal, Checkbox, Switch, Select } from \"antd\";\r\nimport * as actionCreators from '../store/actionCreators';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\nconst { Option } = Select;\r\n\r\nclass EditNovelInfo extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet query = this.props.history.location.query;\r\n\t\tquery && this.props.initNovelInfo(query);\r\n\t\tquery && this.props.getContent(query._id);\r\n\t}\r\n\r\n\tstate = {\r\n\t\tdeleteModalStyle: { position: \"absolute\", top: 0, left: 0, width: 100, height: 100, background: \"rgba(0, 0, 0, .3)\", color: \"#fff\", fontSize: 20, display: \"none\", boxSizing: \"border-box\" }\r\n\t};\r\n\r\n\tenterImg = e => {\r\n\t\te.stopPropagation();\r\n\t\tthis.setState(state => ({\r\n\t\t\tdeleteModalStyle: { ...state.deleteModalStyle, display: \"block\" }\r\n\t\t}))\r\n\t};\r\n\r\n\tleaveImg = e => {\r\n\t\te.stopPropagation();\r\n\t\tthis.setState(state => ({\r\n\t\t\tdeleteModalStyle: { ...state.deleteModalStyle, display: \"none\" }\r\n\t\t}))\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { novelInfo, uploadImg, handleInputChange, submitNovel, cancel, deleteFinalImg } = this.props;\r\n\t\tconst { deleteModalStyle } = this.state;\r\n\t\tconst formItemLayout = {\r\n\t\t\tlabelCol: {\r\n\t\t\t\tsm: { span: 8 }\r\n\t\t\t},\r\n\t\t\twrapperCol: {\r\n\t\t\t\tsm: { span: 15, offset: 0 }\r\n\t\t\t},\r\n\t\t};\r\n\t\tlet isUploadImg;\r\n\t\tif (novelInfo.picurl) {\r\n\t\t\tisUploadImg = <img style={{ width: \"100px\" }} src={novelInfo.imgUrl} alt=\"\" />\r\n\t\t} else {\r\n\t\t\tisUploadImg = <Button><Icon type=\"upload\" /> 上传图片 </Button>\r\n\t\t}\r\n\t\tlet isFinalUploadImg, isGonghaoUploadLogo;\r\n\t\tif (novelInfo.finalImg) {\r\n\t\t\tisFinalUploadImg = <div style={{ width: 100, height: 100, position: \"relative\" }} onMouseOver={this.enterImg} onMouseLeave={this.leaveImg} onClick={deleteFinalImg}>\r\n\t\t\t\t<img style={{ width: 100, height: 100 }} src={novelInfo.finalImgUrl} alt=\"\" />\r\n\t\t\t\t<div className=\"cursor\" style={deleteModalStyle}>\r\n\t\t\t\t\t<Icon style={{ margin: \"40px 0 0 40px\" }} type=\"delete\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t} else {\r\n\t\t\tisFinalUploadImg = <Upload name=\"imageFile\" action=\"/novelLinks/upload\" onChange={info => uploadImg(info, \"finalImg\")} showUploadList={false}>\r\n\t\t\t\t<Button><Icon type=\"upload\" /> 上传图片 </Button>\r\n\t\t\t</Upload>\r\n\t\t}\r\n\t\tif (novelInfo.gonghaoLogo) {\r\n\t\t\tisGonghaoUploadLogo = <img style={{ width: \"100px\" }} src={novelInfo.gonghaoLogoUrl} alt=\"\" />\r\n\t\t} else {\r\n\t\t\tisGonghaoUploadLogo = <Button><Icon type=\"upload\" /> 上传图片 </Button>\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<div className=\"title-wrapper\">\r\n\t\t\t\t\t\t<h2>编辑小说内容</h2>\r\n\t\t\t\t\t\t<div className=\"fr\">\r\n\t\t\t\t\t\t\t<Button onClick={() => cancel(this.props)}>取消</Button>\r\n\t\t\t\t\t\t\t<Button type=\"primary\" style={{ marginLeft: 10 }} onClick={() => submitNovel(novelInfo, this.props)}>提交</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Form className=\"fl\" style={{ width: \"30%\", height: 500, overflow: \"auto\" }} {...formItemLayout}>\r\n\t\t\t\t\t\t<Form.Item label=\"类型\">\r\n\t\t\t\t\t\t\t<Radio.Group value={novelInfo.type} onChange={e => handleInputChange(e.target.value, \"type\")}>\r\n\t\t\t\t\t\t\t\t<Radio value={0}>头条投放</Radio>\r\n\t\t\t\t\t\t\t\t<Radio value={1}>平台数据</Radio>\r\n\t\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item label=\"id\">\r\n\t\t\t\t\t\t\t<Input placeholder=\"请输入id\" value={novelInfo.id} onChange={e => handleInputChange(e.target.value, \"id\")} />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item label=\"域名\">\r\n\t\t\t\t\t\t\t<Input placeholder=\"请输入域名\" value={novelInfo.domain_name} onChange={e => handleInputChange(e.target.value, \"domain_name\")} />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item label=\"公号id\">\r\n\t\t\t\t\t\t\t<Input placeholder=\"请输入id\" value={novelInfo.gonghao_id} onChange={e => handleInputChange(e.target.value, \"gonghao_id\")} />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item label=\"公号名称\">\r\n\t\t\t\t\t\t\t<Input placeholder=\"请输入公号名称\" value={novelInfo.name}\r\n\t\t\t\t\t\t\t\tonChange={e => handleInputChange(e.target.value, \"name\")} />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item label=\"公司名称\">\r\n\t\t\t\t\t\t\t<Input placeholder=\"请输入公司名称\" value={novelInfo.company}\r\n\t\t\t\t\t\t\t\tonChange={e => handleInputChange(e.target.value, \"company\")} />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item label=\"备注\">\r\n\t\t\t\t\t\t\t<Input placeholder=\"请输入备注名称\" value={novelInfo.remarks}\r\n\t\t\t\t\t\t\t\tonChange={e => handleInputChange(e.target.value, \"remarks\")} />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item label=\"网页标题\">\r\n\t\t\t\t\t\t\t<Input placeholder=\"请输入页面标题\" value={novelInfo.pageTitle}\r\n\t\t\t\t\t\t\t\tonChange={e => handleInputChange(e.target.value, \"pageTitle\")} />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item label=\"随机后缀\">\r\n\t\t\t\t\t\t\t<Input placeholder=\"请输入随机后缀，以英文逗号隔开\" value={novelInfo.suffix} onChange={e => handleInputChange(e.target.value, \"suffix\")} />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item label=\"背景颜色\">\r\n\t\t\t\t\t\t\t<Input placeholder=\"请输入背景颜色\" value={novelInfo.bgcolor}\r\n\t\t\t\t\t\t\t\tonChange={e => handleInputChange(e.target.value, \"bgcolor\")} />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item label=\"顶部banner\">\r\n\t\t\t\t\t\t\t<Upload name=\"imageFile\" action=\"/novelLinks/upload\" onChange={info => uploadImg(info, \"picurl\")} showUploadList={false}>\r\n\t\t\t\t\t\t\t\t{isUploadImg}\r\n\t\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item label=\"公号logo\">\r\n\t\t\t\t\t\t\t<Upload name=\"imageFile\" action=\"/novelLinks/upload\" onChange={info => uploadImg(info, \"gonghaoLogo\")} showUploadList={false}>\r\n\t\t\t\t\t\t\t\t{isGonghaoUploadLogo}\r\n\t\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item label=\"底部教程图片\">\r\n\t\t\t\t\t\t\t{isFinalUploadImg}\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t<div className=\"fr\" style={{ width: \"68%\" }}>\r\n\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\tapiKey=\"yqk1vsq8qil9z824fv4fverb6jo24twdve8d2a8ntgmxlz09\"\r\n\t\t\t\t\t\t\tinitialValue={novelInfo.capter}\r\n\t\t\t\t\t\t\tvalue={novelInfo.capter}\r\n\t\t\t\t\t\t\tinit={{\r\n\t\t\t\t\t\t\t\tmenubar: false,\r\n\t\t\t\t\t\t\t\tplugins: 'print preview searchreplace autolink directionality visualblocks visualchars image link media template code codesample table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists wordcount imagetools textpattern help emoticons autosave ',\r\n\t\t\t\t\t\t\t\ttoolbar: [{\r\n\t\t\t\t\t\t\t\t\tname: 'history', items: ['code', 'undo', 'redo']\r\n\t\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\t\tname: 'styles', items: [ 'fontselect', 'fontsizeselect', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6' ]\r\n\t\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\t\tname: 'formatting', items: ['forecolor', 'backcolor', 'bold', 'italic', 'underline', 'strikethrough']\r\n\t\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\t\tname: 'alignment', items: ['alignleft', 'aligncenter', 'alignright', 'alignjustify']\r\n\t\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\t\tname: 'symbol', items: ['link', 'anchor', 'blockquote']\r\n\t\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\t\tname: 'indentation', items: ['outdent', 'indent']\r\n\t\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\t\tname: 'list', items: ['bullist', 'numlist']\r\n\t\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\t\tname: 'more', items: ['table', 'image', 'media', 'charmap', 'emoticons', 'hr', 'pagebreak', 'insertdatetime', 'print', 'preview']\r\n\t\t\t\t\t\t\t\t}],\r\n\t\t\t\t\t\t\t\tmin_height: 500,\r\n\t\t\t\t\t\t\t\tfontsize_formats: '12px 14px 16px 18px 24px 36px 48px 56px 72px',\r\n\t\t\t\t\t\t\t\tfont_formats: '微软雅黑=Microsoft YaHei,Helvetica Neue,PingFang SC,sans-serif;苹果苹方=PingFang SC,Microsoft YaHei,sans-serif;宋体=simsun,serif;仿宋体=FangSong,serif;黑体=SimHei,sans-serif;楷体=楷体;隶书=隶书;幼圆=幼圆;Arial=arial,helvetica,sans-serif;Arial Black=arial black,avant garde;Book Antiqua=book antiqua,palatino;Comic Sans MS=comic sans ms,sans-serif;Courier New=courier new,courier;Tahoma=tahoma,arial,helvetica,sans-serif;Times New Roman=times new roman,times;Verdana=verdana,geneva;Webdings=webdings;Wingdings=wingdings,zapf dingbats;',\r\n\t\t\t\t\t\t\t\ttoolbar_drawer: \"sliding\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonChange={e => handleInputChange(e.target.getContent(), \"capter\")}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.resetState()\r\n\t}\r\n}\r\n\r\nconst mapState = state => ({\r\n\tnovelInfo: state.channel.links.novelInfo,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n\tuploadImg(info, name) {\r\n\t\tif (info.file.status === 'done') {\r\n\t\t\tlet url = `/images/website/${info.file.response.filename}`;\r\n\t\t\tdispatch(actionCreators.handleInputChange(url, name));\r\n\t\t}\r\n\t},\r\n\thandleInputChange(value, name) {\r\n\t\tdispatch(actionCreators.handleInputChange(value, name))\r\n\t},\r\n\tcancel(props) {\r\n\t\tprops.history.goBack();\r\n\t\tdispatch(actionCreators.resetState())\r\n\t},\r\n\tsubmitNovel(novelInfo, props) {\r\n\t\tdispatch(actionCreators.submitNovel(novelInfo, props))\r\n\t},\r\n\tinitNovelInfo(record) {\r\n\t\tdispatch(actionCreators.initNovelInfo(record))\r\n\t},\r\n\tgetContent(_id) {\r\n\t\tdispatch(actionCreators.getContent(_id))\r\n\t},\r\n\tresetState() {\r\n\t\tdispatch(actionCreators.resetState())\r\n\t},\r\n\tdeleteFinalImg() {\r\n\t\tdispatch(actionCreators.deleteFinalImg())\r\n\t}\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Form.create({ name: 'editNovelInfo' })(EditNovelInfo));","import React, {Component} from 'react';\r\nimport { Form, Input, Select, Table, Modal, message} from 'antd';\r\nimport Button from '../../../common/components/Button';\r\nimport axios from 'axios';\r\n\r\nconst {Option} = Select;\r\n\r\nclass NovelChannel extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.addPlatform = this.addPlatform.bind(this);\r\n\t\tthis.changePlatformInfoInput = this.changePlatformInfoInput.bind(this);\r\n\t\tthis.submitPlatform = this.submitPlatform.bind(this);\r\n\t\tthis.cancelAction = this.cancelAction.bind(this);\r\n\t\tthis.editPlatform = this.editPlatform.bind(this);\r\n\t\tthis.deletePlatform = this.deletePlatform.bind(this);\r\n\t}\r\n\r\n\tstate = {\r\n\t\tplatformList: [],\r\n\t\temptyText: \"\",\r\n\t\tmodalVisible: false,\r\n\t\tplatformInfo: {\r\n\t\t\tplatform: 1,\r\n\t\t\tgonghao_name: \"\",\r\n\t\t\tseruid: \"\"\r\n\t\t},\r\n\t\ttitle: \"添加平台\"\r\n\t};\r\n\r\n\tgetPlatformList() {\r\n\t\taxios.get('/platform')\r\n\t\t\t.then(res => {\r\n\t\t\t\tlet {code, msg, data} = res.data;\r\n\t\t\t\tif(code === 1) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tplatformList: data\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({emptyText: msg, platformList: []})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\taddPlatform() {\r\n\t\tthis.setState({\r\n\t\t\tmodalVisible: true\r\n\t\t})\r\n\t}\r\n\r\n\tchangePlatformInfoInput(value, name) {\r\n\t\tlet {platformInfo} = this.state;\r\n\t\tplatformInfo[name] = value;\r\n\t\tthis.setState({platformInfo});\r\n\t}\r\n\r\n\tsubmitPlatform() {\r\n\t\tlet {platformInfo} = this.state;\r\n\t\tif(!platformInfo._id) {\r\n\t\t\tthis.createPlatform(platformInfo)\r\n\t\t} else {\r\n\t\t\tthis.updatePlatform(platformInfo)\r\n\t\t}\r\n\t}\r\n\r\n\tcreatePlatform(platformInfo) {\r\n\t\tModal.confirm({\r\n\t\t\ttitle: \"您确认创建一条新的内容吗？\",\r\n\t\t\tonOk: () => {\r\n\t\t\t\taxios.post('/platform', {...platformInfo})\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tlet {code, msg} = res.data;\r\n\t\t\t\t\t\tif(code === 1) {\r\n\t\t\t\t\t\t\tmessage.success(msg);\r\n\t\t\t\t\t\t\tthis.getPlatformList()\r\n\t\t\t\t\t\t\tthis.cancelAction()\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tmessage.error(msg)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tupdatePlatform(platformInfo) {\r\n\t\tModal.confirm({\r\n\t\t\ttitle: \"您确认保存这次修改吗？\",\r\n\t\t\tonOk: () => {\r\n\t\t\t\taxios.put('/platform', {...platformInfo})\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tlet {code, msg} = res.data;\r\n\t\t\t\t\t\tif(code === 1) {\r\n\t\t\t\t\t\t\tmessage.success(msg);\r\n\t\t\t\t\t\t\tthis.getPlatformList()\r\n\t\t\t\t\t\t\tthis.cancelAction()\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tmessage.error(msg)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcancelAction() {\r\n\t\tthis.setState({\r\n\t\t\tmodalVisible: false,\r\n\t\t\tplatformInfo: {\r\n\t\t\t\tplatform: \"\",\r\n\t\t\t\tgonghao_name: \"\",\r\n\t\t\t\tseruid: \"\"\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\teditPlatform(record) {\r\n\t\tthis.setState({platformInfo: record, modalVisible: true})\r\n\t}\r\n\r\n\tdeletePlatform(id) {\r\n\t\tModal.confirm({\r\n\t\t\ttitle: \"确定删除这条内容吗？\",\r\n\t\t\tonOk: () => {\r\n\t\t\t\taxios.delete('/platform', {params: {id}})\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tlet {code, msg} = res.data;\r\n\t\t\t\t\t\tif(code === 1) {\r\n\t\t\t\t\t\t\tmessage.success(msg);\r\n\t\t\t\t\t\t\tthis.getPlatformList();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tmessage.eroor(msg)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tUNSAFE_componentWillMount () {\r\n\t\tthis.getPlatformList()\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet {platformList, emptyText, modalVisible, platformInfo, title} = this.state;\r\n\t\tlet columns = [\r\n\t\t\t{\r\n\t\t\t\tdataIndex: \"platform\",\r\n\t\t\t\tkey: \"platform\",\r\n\t\t\t\ttitle: \"平台名称\",\r\n\t\t\t\talign: \"center\",\r\n\t\t\t\trender: text => text === 1 ? \"阅文\" : (text === 2 ? \"腾文\" : \"无\")\r\n\t\t\t}, {\r\n\t\t\t\tdataIndex: \"gonghao_name\",\r\n\t\t\t\tkey: \"gonghao_name\",\r\n\t\t\t\ttitle: \"公号名称\",\r\n\t\t\t\talign: \"center\"\r\n\t\t\t}, {\r\n\t\t\t\tdataIndex: \"seruid\",\r\n\t\t\t\tkey: \"seruid\",\r\n\t\t\t\ttitle: \"公号id\",\r\n\t\t\t\talign: \"center\"\r\n\t\t\t}, {\r\n\t\t\t\ttitle: \"操作\",\r\n\t\t\t\tkey: \"action\",\r\n\t\t\t\talign: \"center\",\r\n\t\t\t\trender: (text, record, index) => (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button onClick={() => this.editPlatform({...record})} buttonContent=\"编辑\" />\r\n\t\t\t\t\t\t<Button onClick={() => this.deletePlatform(record._id)} background=\"danger\" buttonContent=\"删除\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<Button mb={20} size=\"default\" onClick={this.addPlatform} background=\"success\" buttonContent=\"添加\" />\r\n\t\t\t\t\t<Table rowKey={record => record._id} columns={columns} dataSource={platformList} locale={{emptyText: emptyText}} size=\"small\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Modal title={title} visible={modalVisible} onOk={this.submitPlatform} onCancel={this.cancelAction}>\r\n\t\t\t\t\t<Form labelCol={{span: 6}} wrapperCol={{span: 14}}>\r\n\t\t\t\t\t\t<Form.Item label=\"平台名称\">\r\n\t\t\t\t\t\t\t<Select value={platformInfo.platform} onChange={value => this.changePlatformInfoInput(value, \"platform\")}>\r\n\t\t\t\t\t\t\t\t<Option value={1}>阅文</Option>\r\n\t\t\t\t\t\t\t\t<Option value={2}>腾文</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item label=\"公号名称\">\r\n\t\t\t\t\t\t\t<Input value={platformInfo.gonghao_name} onChange={e => this.changePlatformInfoInput(e.target.value, \"gonghao_name\")} />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item label=\"公号id\">\r\n\t\t\t\t\t\t\t<Input value={platformInfo.seruid} onChange={e => this.changePlatformInfoInput(e.target.value, \"seruid\")} />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default NovelChannel;","import React, { Component } from 'react';\r\nimport { Form, Input, message } from 'antd';\r\nimport Button from '../../../common/components/Button';\r\nimport axios from '../../../utils/http';\r\n\r\nclass ToutiaoLiantiao extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.changeTdUrlInput = this.changeTdUrlInput.bind(this);\r\n\t\tthis.submitInput = this.submitInput.bind(this);\r\n\t}\r\n\r\n\tstate = {\r\n\t\ttd_url: \"\",\r\n\t};\r\n\r\n\tchangeTdUrlInput(e) {\r\n\t\tlet td_url = e.target.value;\r\n\t\tthis.setState({ td_url });\r\n\t}\r\n\r\n\tsubmitInput() {\r\n\t\tlet { td_url } = this.state;\r\n\t\tif (!td_url) {\r\n\t\t\tmessage.error(\"链接不能为空\")\r\n\t\t} else {\r\n\t\t\taxios.post('/platform/liantiao', { td_url })\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tlet { msg } = res.data;\r\n\t\t\t\t\tmessage.success(msg);\r\n\t\t\t\t\tthis.setState({ td_url: \"\" })\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet { td_url } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Form labelCol={{ span: 2 }} wrapperCol={{ span: 14 }}>\r\n\t\t\t\t\t<Form.Item label=\"链接\">\r\n\t\t\t\t\t\t<Input.TextArea autoSize={{ minRows: 3 }} spellCheck={false} value={td_url} onChange={this.changeTdUrlInput} allowClear />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item label=\" \" colon={false}>\r\n\t\t\t\t\t\t<Button size=\"default\" onClick={this.submitInput} background=\"success\" buttonContent=\"提交\" />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ToutiaoLiantiao;","import React, { Component } from 'react';\r\nimport { Table, Modal, message, Form, Input } from 'antd';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\n\r\nimport axios from '../../../utils/http';\r\nimport Button from '../../../common/components/Button';\r\n\r\nclass ZhuiShuYun extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tzsyData: [],\r\n\t\t\tdomain_name: \"\",\r\n\t\t\tlinkModal: false,\r\n\t\t\tlinkInfo: {}\r\n\t\t}\r\n\t}\r\n\r\n\tgetLinks() {\r\n\t\taxios.get(\"/zsy\").then(res => {\r\n\t\t\tlet { code, data, domain_name } = res.data;\r\n\t\t\tif (code === 1) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tzsyData: data,\r\n\t\t\t\t\tdomain_name\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tzsyData: [],\r\n\t\t\t\t\tdomain_name\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tdeleteLink(_id) {\r\n\t\tModal.confirm({\r\n\t\t\ttitle: \"确定删除这条内容吗？\",\r\n\t\t\tonOk: () => {\r\n\t\t\t\taxios.delete(\"/zsy\", { params: { _id } })\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tlet { code, msg } = res.data;\r\n\t\t\t\t\t\tif (code === 1) {\r\n\t\t\t\t\t\t\tthis.getLinks()\r\n\t\t\t\t\t\t\tmessage.success(msg)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tmessage.error(msg)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tchangeInputValue(value, name) {\r\n\t\tlet { linkInfo } = this.state;\r\n\t\tlinkInfo[name] = value;\r\n\t\tthis.setState({ linkInfo })\r\n\t}\r\n\r\n\topenUpdateModal(linkInfo) {\r\n\t\tthis.setState({ linkInfo, linkModal: true })\r\n\t}\r\n\r\n\tcancelAction() {\r\n\t\tthis.setState({ linkInfo: {}, linkModal: false })\r\n\t}\r\n\r\n\tsubmitLink() {\r\n\t\tlet { linkInfo } = this.state;\r\n\t\tif (!linkInfo._id) {\r\n\t\t\tthis.createLink(linkInfo)\r\n\t\t} else {\r\n\t\t\tthis.updateLink(linkInfo)\r\n\t\t}\r\n\t}\r\n\r\n\tcreateLink(linkInfo) {\r\n\t\tModal.confirm({\r\n\t\t\ttitle: \"确定新建一条内容？\",\r\n\t\t\tonOk: () => {\r\n\t\t\t\taxios.post(\"/zsy\", linkInfo)\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tlet { code, msg } = res.data;\r\n\t\t\t\t\t\tif (code === 1) {\r\n\t\t\t\t\t\t\tthis.cancelAction();\r\n\t\t\t\t\t\t\tthis.getLinks();\r\n\t\t\t\t\t\t\tmessage.success(msg)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tmessage.error(msg)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tupdateLink(linkInfo) {\r\n\t\tModal.confirm({\r\n\t\t\ttitle: \"确定修改这条内容？\",\r\n\t\t\tonOk: () => {\r\n\t\t\t\taxios.put(\"/zsy\", linkInfo)\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tlet { code, msg } = res.data;\r\n\t\t\t\t\t\tif (code === 1) {\r\n\t\t\t\t\t\t\tthis.cancelAction();\r\n\t\t\t\t\t\t\tthis.getLinks();\r\n\t\t\t\t\t\t\tmessage.success(msg)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tmessage.error(msg)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getLinks()\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet { zsyData, domain_name, linkModal, linkInfo } = this.state;\r\n\t\tconst zsyHeader = [\r\n\t\t\t{\r\n\t\t\t\tkey: \"gonghao_name\",\r\n\t\t\t\tdataIndex: \"gonghao_name\",\r\n\t\t\t\ttitle: \"公号名称\",\r\n\t\t\t\talign: \"center\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkey: \"channel_id\",\r\n\t\t\t\tdataIndex: \"channel_id\",\r\n\t\t\t\ttitle: \"渠道id\",\r\n\t\t\t\talign: \"center\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkey: \"tuiguang_link\",\r\n\t\t\t\tdataIndex: \"tuiguang_link\",\r\n\t\t\t\ttitle: \"推广链接\",\r\n\t\t\t\talign: \"center\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkey: \"_id\",\r\n\t\t\t\tdataIndex: \"_id\",\r\n\t\t\t\ttitle: \"复制链接\",\r\n\t\t\t\talign: \"center\",\r\n\t\t\t\trender: (text, record) => <CopyToClipboard text={domain_name + \"/zsy/\" + record._id} onCopy={() => message.success(\"复制成功\")}>\r\n\t\t\t\t\t<Button background=\"success\" buttonContent=\"复制链接\" />\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"Action\",\r\n\t\t\t\talign: \"center\",\r\n\t\t\t\trender: (text, record, index) => <div>\r\n\t\t\t\t\t<Button buttonContent=\"修改\" onClick={() => this.openUpdateModal({ ...record })} />\r\n\t\t\t\t\t<Button background=\"danger\" buttonContent=\"删除\" onClick={() => this.deleteLink(record._id)} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t];\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<Button size=\"default\" background=\"success\" mb={20} buttonContent=\"添加新链接\" onClick={() => this.setState({ linkModal: true })} />\r\n\t\t\t\t\t<Table rowKey={record => record._id} size=\"small\" bordered columns={zsyHeader} dataSource={zsyData} />\r\n\t\t\t\t\t<Modal visible={linkModal} title=\"编辑链接信息\" onOk={() => this.submitLink()} onCancel={() => this.cancelAction()}>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Form.Item label=\"公号名称\">\r\n\t\t\t\t\t\t\t\t<Input value={linkInfo.gonghao_name || \"\"} onChange={e => this.changeInputValue(e.target.value, \"gonghao_name\")} />\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t<Form.Item label=\"渠道id\">\r\n\t\t\t\t\t\t\t\t<Input value={linkInfo.channel_id || \"\"} onChange={e => this.changeInputValue(e.target.value, \"channel_id\")} />\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t<Form.Item label=\"推广链接\">\r\n\t\t\t\t\t\t\t\t<Input value={linkInfo.tuiguang_link || \"\"} onChange={e => this.changeInputValue(e.target.value, \"tuiguang_link\")} />\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ZhuiShuYun;","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Spread from './spread';\r\nimport EditSpread from './spread/edit';\r\n\r\nimport Links from \"./links\";\r\nimport EditLinks from \"./links/edit\";\r\n\r\nimport Management from './management';\r\n\r\nimport ToutiaoLiantiao from './liantiao';\r\n\r\nimport Zsy from './zsy';\r\n\r\nclass ChannelWrapper extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Route path=\"/admin/channel\" render={\r\n\t\t\t\t() =>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path=\"/admin/channel/novelLinks/index\" component={Links} />\r\n\t\t\t\t\t\t<Route path=\"/admin/channel/novelLinks/create\" component={EditLinks} />\r\n\t\t\t\t\t\t<Route path=\"/admin/channel/novelLinks/update\" component={EditLinks} />\r\n\t\t\t\t\t\t<Route path=\"/admin/channel/management\" component={Management} />\r\n\t\t\t\t\t\t<Route path=\"/admin/channel/jointDebugging\" component={ToutiaoLiantiao} />\r\n\t\t\t\t\t\t<Route path=\"/admin/channel/zhuishuyun\" component={Zsy} />\r\n\t\t\t\t\t\t<Route path=\"/admin/channel/spread/index\" component={Spread} />\r\n\t\t\t\t\t\t<Route path=\"/admin/channel/spread/create\" component={EditSpread} />\r\n\t\t\t\t\t\t<Route path=\"/admin/channel/spread/update\" component={EditSpread} />\r\n\t\t\t\t\t\t<Redirect from=\"/admin/channel\" exact to='/admin/channel/novelLinks' />\r\n\t\t\t\t\t\t<Redirect from=\"/admin/channel/novelLinks\" exact to='/admin/channel/novelLinks/index' />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ChannelWrapper;","import React, { Component } from 'react';\r\nimport { Input, Table, message, Modal, Switch } from 'antd';\r\nimport Button from '../../common/components/Button';\r\nimport axios from 'axios';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nconst Search = Input.Search;\r\n\r\nclass Account extends Component {\r\n\r\n  state = {\r\n    accountList: [],\r\n    searchValue: \"\",\r\n    updateRemarksIndex: -1\r\n  };\r\n\r\n  changePower(id, power){\r\n    power = power ? 1 : 0;\r\n    axios.put(\"/account/power\", {power, id})\r\n      .then(res => {\r\n        let {code, msg} = res.data;\r\n        if(code === 1) {\r\n          message.success(msg);\r\n          this.getAccountList()\r\n        } else {\r\n          message.error(msg)\r\n        }\r\n      })\r\n  }\r\n\r\n  searchAccount = () => {\r\n    const { searchValue } = this.state;\r\n    axios.get('/account', {params: {username: searchValue}})\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          const {data: accountList, msg} = res.data;\r\n          this.setState({accountList, searchValue: \"\"});\r\n          message.success(msg)\r\n        } else {\r\n          message.error(res.data.msg);\r\n          this.getAccountList()\r\n        }\r\n      })\r\n  };\r\n\r\n  saveUpdate(id, remarks) {\r\n    Modal.confirm({\r\n      title: \"确定保存修改吗？\",\r\n      onOk: () => {\r\n        axios.put(\"/account/remarks\", {id, remarks})\r\n          .then(res => {\r\n            const {code, msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.setState({\r\n                updateRemarksIndex: -1\r\n              });\r\n              this.getAccountList()\r\n            } else {\r\n              message.error(msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteAccount(_id) {\r\n    Modal.confirm({\r\n      title: \"确定删除这个账户吗？\",\r\n      onOk: () => {\r\n        axios.delete('/account', {params: {_id}})\r\n          .then(res => {\r\n            if(res.data.code === 1) {\r\n              message.success(res.data.msg);\r\n              this.getAccountList()\r\n            } else {\r\n              message.error(res.data.msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  getAccountList = () => {\r\n    axios.get('/account')\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          let { data } = res.data;\r\n          let accountList = data.reverse();\r\n          this.setState({accountList});\r\n        }\r\n      })\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAccountList()\r\n  }\r\n\r\n  handleChangeSearchValue = e => {\r\n    this.setState({searchValue: e.target.value})\r\n  };\r\n\r\n  render() {\r\n    const {accountList, searchValue, updateRemarksIndex} = this.state;\r\n    const columns = [\r\n      {\r\n        key: 'username',\r\n        dataIndex: 'username',\r\n        title: '账户名',\r\n        align: 'center'\r\n      }, {\r\n        key: 'remarks',\r\n        dataIndex: 'remarks',\r\n        title: '公司名称/备注',\r\n        align: 'center',\r\n        width: 300,\r\n        render: (text, record, index) => updateRemarksIndex !== index ? text : <Input.Search enterButton=\"保存\" size=\"small\" onSearch={value => this.saveUpdate(record._id,value)} />\r\n      }, {\r\n        key: 'password',\r\n        dataIndex: 'password',\r\n        title: '密码（点击自动复制，打开解密网站）',\r\n        align: 'center',\r\n        render: text => <CopyToClipboard text={text} onCopy={() => message.success(\"复制成功\")}><a href=\"https://www.somd5.com/\" target=\"__blank\">{text}</a></CopyToClipboard>\r\n      }, {\r\n        key: 'role',\r\n        dataIndex: 'role',\r\n        title: '权限',\r\n        align: 'center',\r\n        render: text => text === 0 ? \"超级管理员\" : (text === 1 ? \"一级代理\" : \"二级代理\")\r\n      }, {\r\n        key: 'power',\r\n        dataIndex: 'power',\r\n        title: '是否开启测试权限',\r\n        align: 'center',\r\n        render: (text, record) => <Switch checked={!!text} onChange={value => this.changePower(record._id, value)} />\r\n      }, {\r\n        title: 'Action',\r\n        key: 'action',\r\n        align: 'center',\r\n        render: (text, record, index) => <>\r\n          <Button buttonContent=\"修改备注\" onClick={() => this.setState({updateRemarksIndex: index})} />\r\n          <Button mr={0} background={record.role === 0 ? \"info\" : \"danger\"} disabled={record.role === 0} buttonContent=\"删除\" onClick={() => this.deleteAccount(record._id)} />\r\n        </>\r\n      }\r\n    ];\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Search onChange={this.handleChangeSearchValue} value={searchValue} style={{width: 300, marginBottom: 20}} placeholder=\"请输入账户名\" enterButton=\"查询\" onSearch={this.searchAccount} />\r\n          <Table rowKey={record => record._id} size=\"small\" dataSource={accountList} columns={columns} />\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","import React, { Component } from 'react';\r\nimport { Form, Input, message, Modal, Select } from 'antd';\r\nimport Button from '../../../common/components/Button';\r\nimport axios from '../../../utils/http';\r\n\r\nconst { Option  } = Select;\r\n\r\nclass AddAccount extends Component {\r\n\r\n  addAccount = () => {\r\n    const { form: {validateFields} } = this.props;\r\n    validateFields((errors, values) => {\r\n      if(errors) {\r\n        message.error(\"请检查输入是否有误\");\r\n        return\r\n      }\r\n      values.password = this.$MD5(values.password).toString();\r\n      Modal.confirm({\r\n        title: \"确定创建一个新账户吗？\",\r\n        onOk: () => {\r\n          axios.post('/account', {...values})\r\n            .then(res => {\r\n              if(res.data.code === 1) {\r\n                this.resetForm()\r\n                message.success(res.data.msg)\r\n              } else {\r\n                message.error(res.data.msg)\r\n              }\r\n            })\r\n        }\r\n      })\r\n    })\r\n    // console.log(getFieldsValue())\r\n  };\r\n\r\n  resetForm = () => {\r\n    const { form: {setFieldsValue} } = this.props;\r\n    setFieldsValue({username: \"\", password: \"\", role: 2})\r\n  };\r\n\r\n  render() {\r\n    const { form: {getFieldDecorator} } = this.props;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 2 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      colon: false\r\n    };\r\n    return (\r\n\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Form {...formItemLayout}>\r\n            <Form.Item label=\"用户名\">\r\n              {getFieldDecorator('username', {\r\n                rules: [{ required: true, message: '用户名不能为空' }],\r\n              })(\r\n                <Input placeholder=\"请输入用户名\"/>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"密码\">\r\n              {getFieldDecorator('password', {\r\n                rules: [{ required: true, message: '密码不能为空' }],\r\n              })(\r\n                <Input placeholder=\"请输入密码\"/>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"备注\">\r\n              {getFieldDecorator('remarks', {\r\n                rules: [{ required: true, message: '备注不能为空' }],\r\n              })(\r\n                <Input placeholder=\"请输入备注\"/>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"管理员权限\">\r\n              {getFieldDecorator('role', {\r\n                rules: [{ required: true }],\r\n                initialValue: 2\r\n              })(\r\n                <Select>\r\n                  <Option value={0}>超级管理员</Option>\r\n                  <Option value={1}>一级代理</Option>\r\n                  <Option value={2}>二级代理</Option>\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\" \">\r\n              <Button size=\"default\" buttonContent=\"新增\" onClick={this.addAccount} />\r\n              <Button ml={20} background=\"info\" size=\"default\" buttonContent=\"清空\" onClick={this.resetForm}  />\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddAccount);","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Account from './index';\r\nimport AddAccount from './add';\r\nclass AccountRouter extends Component {\r\n  render() {\r\n    return (\r\n    \t<Switch>\r\n        <Route path=\"/admin/account/list\" component={Account} />\r\n        <Route path=\"/admin/account/add\" component={AddAccount} />\r\n        <Redirect from=\"/admin/account\" exact to=\"/admin/account/list\"/>\r\n    \t</Switch>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AccountRouter;","import React, { Component } from 'react';\r\nimport { Input, message } from 'antd';\r\nimport axios from 'axios';\r\n\r\nimport \"./index.scss\";\r\n\r\nconst Search = Input.Search;\r\n\r\nclass TikTok extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.changeUrl = this.changeUrl.bind(this);\r\n\t\tthis.jiexi = this.jiexi.bind(this);\r\n\t}\r\n\r\n\tstate = {\r\n\t\turl: \"\",\r\n\t\tnewUrl: \"\"\r\n\t}\r\n\r\n\tchangeUrl(e) {\r\n\t\tlet url = e.target.value;\r\n\t\tthis.setState({url})\r\n\t}\r\n\r\n\tjiexi(url) {\r\n\t\tif(url) {\r\n\t\t\taxios({\r\n\t\t\t\tmethod: \"get\",\r\n\t\t\t\turl: \"/watermark/douyin\",\r\n\t\t\t\tparams: {url},\r\n\t\t\t\ttimeout: 50000\r\n\t\t\t}).then(res => {\r\n\t\t\t\tthis.setState({newUrl: '/douyin/' + res.data})\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tmessage.warning(\"链接不能为空\")\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n  render() {\r\n  \tconst {url, newUrl} = this.state;\r\n    return (\r\n    \t<div className=\"container\">\r\n    \t\t<div className=\"tik-tok\">\r\n          \t\t<Search value={url} placeholder=\"请输入抖音短视频的链接\" size=\"large\" enterButton=\"解析\" onChange={this.changeUrl} onSearch={this.jiexi} />\r\n          \t\t<div className=\"video-container\" style={{display: newUrl ? \"block\" : \"none\"}}>\r\n          \t\t\t<video controlslist=\"nodownload\" controls=\"controls\" muted src={newUrl} autoPlay height=\"100%\" width=\"100%\"></video>\r\n          \t\t\t<a href={newUrl} download={newUrl} target=\"__blank\">下载</a>\r\n          \t\t</div>\r\n          \t</div>\r\n      \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TikTok;","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport TikTok from './tikTok';\r\nclass ToolsRouter extends Component {\r\n  render() {\r\n    return (\r\n    \t<Switch>\r\n\t        <Route path=\"/admin/tools/tikTok\" component={TikTok} />\r\n\t        <Redirect from=\"/admin/tools\" exact to=\"/admin/tools/tikTok\"/>\r\n    \t</Switch>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ToolsRouter;","import React, { Component } from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport store from './store';\r\n\r\nimport Login from './pages/login';\r\n\r\nimport BasicLayout from './common/BasicLayout';\r\nimport TuoguanRouter from './pages/gonghao/router';\r\nimport MessageRouter from './pages/message/router';\r\nimport ChannelRouter from './pages/channel/router';\r\nimport AccountRouter from './pages/account/router';\r\nimport ToolsRouter from './pages/tools/router';\r\n\r\nclass App extends Component{\r\n\r\n  state = {\r\n    userInfo: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userInfo = localStorage.getItem(\"userInfo\");\r\n    if(userInfo && (Date.now() - (+ new Date(JSON.parse(userInfo).loginAt)) < 24 * 60 * 60 * 1000)) {\r\n      this.setState({userInfo: JSON.parse(userInfo)});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { userInfo } = this.state;\r\n    const needLogin = Object.keys(userInfo).length > 0;\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/admin/login\" render={() => needLogin ? <Redirect to={window.location.search ? decodeURIComponent(window.location.search.split(\"=\")[1]) : \"/admin\"} /> : <Login />} />\r\n            <Route path=\"/admin\" render={() => (\r\n              needLogin ?\r\n                <BasicLayout content={\r\n                    <Switch>\r\n                      <Route path='/admin/gonghao' component={TuoguanRouter} />\r\n                      <Route path='/admin/message' component={MessageRouter} />\r\n                      <Route path='/admin/channel' component={ChannelRouter} />\r\n                      <Route path='/admin/account' component={AccountRouter} />\r\n                      <Route path='/admin/tools' component={ToolsRouter} />\r\n                      <Redirect from=\"/admin\" exact to={userInfo.role === 2 ? \"/admin/gonghao\" : \"/admin/account\"} />\r\n                    </Switch>\r\n                } />\r\n                : <Redirect to={\"/admin/login?redirect=\" + encodeURIComponent(window.location.pathname)} />\r\n            )} />\r\n            <Redirect from=\"/\" exact to=\"/admin\" />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import 'core-js/es/map';\r\nimport 'core-js/es/set';\r\nimport 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './assets/css/reset.css';\r\nimport App from './App.jsx';\r\nimport MD5 from 'crypto-js/md5';\r\nimport Promise from 'promise-polyfill';\r\n\r\n\r\n// // To add to window  解决promise 在ie中未定义的问题\r\nif (!window.Promise) {\r\n  window.Promise = Promise;\r\n}\r\n\r\nReact.Component.prototype.$MD5 = MD5;\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}