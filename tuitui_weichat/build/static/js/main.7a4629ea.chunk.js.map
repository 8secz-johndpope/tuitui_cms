{"version":3,"sources":["pages/gonghao/tuoguan/store/reducer.js","utils/http.js","utils/index.js","pages/gonghao/tuoguan/store/actionCreators.js","pages/gonghao/tuoguan/store/constants.js","pages/gonghao/menu/store/constants.js","pages/gonghao/menu/store/reducer.js","pages/gonghao/menu/store/actionCreators.js","pages/gonghao/reply/store/reducer.js","pages/gonghao/reply/store/actionCreators.js","pages/gonghao/reply/store/constants.js","pages/gonghao/reducer.js","pages/message/group/store/constants.js","pages/message/group/store/reducer.js","pages/message/group/store/actionCreators.js","pages/message/kefu/store/reducer.js","pages/message/kefu/store/actionCreators.js","pages/message/kefu/store/constants.js","pages/message/template/store/reducer.js","pages/message/template/store/actionCreators.js","pages/message/template/store/constants.js","pages/message/reducer.js","store/reducer.js","store/index.js","pages/login/index.jsx","common/BasicLayout/header/index.jsx","common/BasicLayout/sider/index.jsx","common/BasicLayout/bread/index.jsx","common/BasicLayout/index.jsx","common/components/Button/index.jsx","pages/gonghao/tuoguan/index.jsx","pages/gonghao/tuoguan/group/index.jsx","pages/gonghao/menu/index.jsx","common/components/GraphicMessage/index.jsx","pages/gonghao/menu/components/MenuReplyMessage.jsx","pages/gonghao/menu/edit/index.jsx","pages/gonghao/reply/index.jsx","common/components/SelectGonghao/MultiSelectModal/index.jsx","pages/gonghao/reply/edit/index.jsx","pages/gonghao/router.jsx","pages/message/group/components/GraphicMessage/index.jsx","pages/message/group/material/index.jsx","pages/message/group/components/EditTextMaterialModal/index.jsx","pages/message/group/textMaterial/index.jsx","common/components/SelectGonghao/SingleSelectByGroup/index.jsx","pages/message/group/history/index.jsx","common/components/Loading/index.jsx","pages/message/group/index.jsx","pages/message/kefu/index.jsx","pages/message/kefu/edit/index.jsx","pages/message/template/index.jsx","common/components/SelectGonghao/SingleSelectModal/index.jsx","pages/message/template/components/TemplateModal.jsx","pages/message/template/edit/index.jsx","pages/message/router.jsx","pages/channel/spread/index.jsx","pages/channel/spread/edit/index.jsx","pages/channel/router.jsx","pages/account/index.jsx","pages/account/add/index.jsx","pages/account/router.jsx","App.jsx","index.js","assets/images/login_bg.png","assets/images/logo.png"],"names":["defaultState","gonghaoTagList","allGonghaoList","originalGonghaoList","gonghaoList","group","status","currentPage","searchName","isSelectTag","selectedTag","isCreate","gonghaoModal","gonghaoInfo","id","attribute","ab_test","configList","configForm","type","sex","text","replyType","msgId","key","urlList","axios","defaults","timeout","userInfo","localStorage","getItem","account_id","JSON","parse","_id","interceptors","request","use","config","method","url","indexOf","Date","getTime","data","_t","err","Promise","reject","response","message","concat","resolve","backTop","timer","setInterval","osTop","document","documentElement","scrollTop","body","ispeed","Math","floor","clearInterval","getGroupList","dispatch","get","then","res","code","getAllGonghaoList","length","changePage","page","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","action","wrap","_context","prev","next","stop","_x","apply","this","arguments","changeSearchInput","searchByName","nick_name","params","success","changeSelectValue","value","deleteGonghao","index","Modal","confirm","okText","cancelText","content","title","onOk","jieguan","addNewGonghao","window","open","openGonghaoModal","closeGonghaoModal","updateGonghaoInfo","console","log","put","objectSpread","msg","changeGroup","name","changeAttribute","changeAbTest","selectTag","removeTag","tagConfirm","props","post","exist","form","setFieldsValue","deleteTagItem","delete","createForm","history","goBack","updateForm","checkPageAttr","getConfigList","deleteConfig","changeConfigForm","formInfo","createConfigForm","configInfo","updateConfigForm","SAVE_TO_CONTENTS","firstMenuForm","sub_button","messageInfo","articles","menuList","menuForm","stringify","menuInfo","individual","values","codes","contents","menuIndex","secMenuIndex","isSubmit","updateIndex","currentKey","getMenuList","reverse","deleteMenu","handleInfoChange","handleIndividualChange","handleInputChange","randomString","handleSubInputChange","constants","addFirstMenu","editMenu","addSecondMenu","editSecMenu","deleteFirMenu","deleteSubMenu","openModal","submitMenu","validateArray","location","query","resetState","cancelMenu","getAllCodes","allCodes","changeGonghao","targetKeys","initMenuInfo","record","changeMessageInfo","addToList","updateMessageItem","item","updateCurrentMessage","deleteCurrentMessage","chars","result","i","random","j","warning","replyMessageList","selectGonghaoModal","messageIndex","getReplyMessageList","deleteReplyMessage","closeSelectModal","openSelectModal","initState","reducer","combineReducers","tuoguan","_start","_end","state","undefined","newState","toConsumableArray","filter","slice","splice","push","menu","_newState$messageInfo","picurl","description","assign","currentMessage","_newState$messageInfo2","reply","COPY","messageList","isComplete","tagList","sendModal","sendTimingModal","date","time","sendInfo","tagId","mediaId","sendTimingInfo","isTiming","timing","updateInfo","media_id","content_source_url","updateMaterialModal","historyList","historyMsgModal","delMsgInfo","msg_id","article_idx","delDate","getGroupGonghao","sent","getMaterial","setTimeout","getMessageList","openUpdateMaterialModal","closeUpdateMaterialModal","updateMaterial","_res$data","error","catch","changeContentSourceUrl","Number","getTagList","changeTagId","closeModal","sendMessage","info","openTimingModal","sendTimingMessage","changeTimingState","changeTime","timeType","copy","dipatch","deleteMaterial","clearMaterial","getHistoryList","checkSendState","msg_status","openMsgModal","closeMsgModal","changeArticleIdx","deleteMsg","clearHistory","changeDate","deleteMany","initContent","LocalDate","toLocaleDateString","allMessageList","kefuMessageList","messageType","messageGroup","selectedMessages","updateGroupModal","kefuMessageInfo","img","img_path","channel","timing_time","daily_time","delay","tagName","remarks","action_type","isHour","paramsModal","allGroup","previewModal","openid","groupInputVisible","groupValue","getKefuMessageList","sort","messages","createKefuMessage","deleteMessage","sendKefuMessage","take_over","handleChangeSelect","changeSelectedMessages","openUpdateGroupModal","cancelUpdateGroup","updateMoreGroup","changeSearchName","clearCondition","changeContentValue","changeMessageValue","addMessage","selectMessage","selectParams","hideParamsModal","getAllGroup","showGroupInput","that","handleGroupInputChange","handleGroupInputConfirm","_res$data2","handleClose","_res$data3","cancelSelectGroup","submitMessage","task","is_timing","is_daily","_d","initKefuMessageInfo","openPreviewModal","closePreviewModal","preview","_ref2","_res$data4","changeOpenId","templateMessageList","confName","templateId","templateName","templateList","templateInfo","template_id","templateModalVisible","color","getTemplateList","deleteTemplate","sendTemplate","changeConfNickName","searchConfName","test","openEditModal","closeTemplateModal","changeTemplate","saveTemplateModal","editTemplate","confirmSelect","initMessageInfo","now","dateTime","unshift","kefu","gonghaoList1","map","gonghaoList2","input","focus","keys","_newState2","template","gonghao","gonghaoReducer","messageReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Login","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","login","bind","assertThisInitialized","loginInfo","username","password","_this2","bgStyle","minHeight","backgroundSize","backgroundRepeat","backgroundAttachment","backgroundImage","require","react_default","createElement","className","style","size","onChange","e","changeInputValue","target","prefix","icon","marginRight","marginBottom","placeholder","onKeyUp","keyCode","onClick","setState","_this3","$MD5","toString","setItem","href","Component","HeaderWrapper","getFieldsValue","_getFieldsValue","trim","md5Password","cancelUpdate","showUpdateModal","_this$state","getFieldDecorator","react_router_dom","to","src","alt","tooltip","avatar","backgroundColor","popover","Fragment","fontSize","logout","modal","visible","onCancel","es_form","labelCol","span","wrapperCol","Item","label","initialValue","rules","required","Form","create","SubMenu","Menu","MenuItem","SideWrapper","keyIndex","role","subMenuList","path","selectedKeys","onSelect","selectItem","latestSelectedKey","selectList","find","pathname","split","pathName","MenuListRender","SubMenuList","subItem","mode","theme","defaultOpenKeys","defaultSelectedKeys","breadList","/gonghao","/gonghao/tuoguan","/gonghao/tuoguan/group","/gonghao/tuoguan/error","/gonghao/tuoguan/config","/gonghao/tuoguan/config/create","/gonghao/tuoguan/config/update","/gonghao/menu","/gonghao/menu/create","/gonghao/menu/update","/gonghao/reply","/gonghao/reply/create","/gonghao/reply/update","/message","/message/kefu","/message/kefu/create","/message/kefu/update","/message/group","/message/group/material","/message/group/history","/message/template","/message/template/create","/message/template/update","/channel","/channel/spread","/channel/spread/create","/channel/spread/update","/source","/source/group","/source/group/create","/source/group/update","/wechat/qrcode","/wechat/qrcode/create","/wechat/qrcode/update","/account","/account/list","/account/add","BreadWrapper","getPath","pathSnippets","extraBreadcrumbItems","_","join","breadcrumb","withRouter","Content","Layout","Sider","Header","Footer","BasicLayout","layout","BasicLayout_header","collapsible","width","BasicLayout_sider","marginLeft","card","background","padding","borderBottom","height","BasicLayout_bread","textAlign","ButtonList","danger","update","ButtonWrapper","buttonStyle","_this$props","_this$props$backgroun","_this$props$color","_this$props$mr","mr","_this$props$ml","ml","_this$props$mb","mb","_this$props2","_this$props2$size","buttonContent","_this$props2$disabled","disabled","es_button","Search","Input","Option","Select","Tuoguan","pagination","pageSize","innerWidth","onSearch","es_select","Button","es_list","grid","gutter","sm","xxl","dataSource","renderItem","actions","head_img","shape","marginTop","es_tag","es_radio","Group","connect","actionCreators","GonghaoGroup","columns","dataIndex","align","render","gonghao_id","gonghao_index","editGroupModalVisible","group_id","group_index","selectGroup","selectedRowKeys","getGonghaoTagList","openEditGroupModal","closeEditGroupModal","confirmEditGroup","updateGroup","addGroup","deleteGroup","changeGroupValue","searchGroupGonghao","submitGonghaoModal","_this$state2","ids","updateOne","updateMore","openUpdateMoreModal","_res$data5","_res$data6","changeSelectGroup","_this$state3","rowSelection","group_Sider","header","bordered","display","flexDirection","justifyContent","lineHeight","margin","borderRadius","border","group_Content","group_Search","table","rowKey","menuHeader","GraphicMessage","MenuReplyMessage","MessageContent","UploadImg","uploadImg","TextArea","autoSize","minRows","maxRows","react","upload","showUploadList","colon","divider","dashed","common_components_GraphicMessage","offset","EditMenuInfo","keyOrUrl","subKeyOrUrl","menuInfoForm","submitButton","menuModal","individualSex","formItemLayout","top","idx","components_MenuReplyMessage","transfer","showSearch","labelAlign","es_switch","checked","unMountState","resetMessageInfo","stopPropagation","file","filename","Config","configHeader","MultiSelectModal","_props$codes","maskClosable","closable","mask","footer","es_checkbox","row","col","EditConfigInfo","TextOrKey","submitForm","autosize","SelectGonghao_MultiSelectModal","TuoguanWrapper","react_router","component","from","exact","Replay","editReplay","openSyncModal","moment","format","news_item","thumb_media_id","local_img_path","placement","groupMessage","getGonghaoList","syncMaterial","checkedList","docs","closeSyncModal","syncModal","indeterminate","checkAll","onCheckAllChange","nextProps","nextContext","_this$state4","selectGonghaoList","selectTagRadio","config_provider","locale","zhCN","message_group_components_GraphicMessage","htmlFor","date_picker","timeString","time_picker","paddingBottom","PureComponent","EditTextMaterialModal","openidModalVisible","openOpenidModal","prevTextMaterial","cancelPrev","submitTextMaterial","resetFields","cancelEditMaterial","_this$props2$form","getFieldValue","editMaterialModalVisible","_this$props2$initMate","initMaterial","rows","valuePropName","showTime","TextMaterial","textMaterialList","openEditMaterialModal","updateTextMaterial","textMaterial","_this$state$initMater","parseInt","prevState","isSend","_this4","_this5","_this6","xl","userSelect","sendMaterial","components_EditTextMaterialModal","Panel","Collapse","SingleSelectByGroup","activeKey","search","setCode","selectGonghao","handleChangeGroup","PanelList","emptyText","SingleSelectByGroup_Sider","collapse","accordion","SingleSelectByGroup_Content","History","historyHeader","update_time","tag","arr","titles","dataString","loadingWrapper","position","left","zIndex","Loading","spin","spinning","TabPane","Tabs","historyModalVisible","clearTimeout","imageStyle","components_SelectGonghao_SingleSelectByGroup","components_Loading","empty","image","tabs","tabPosition","tab","material","message_group_textMaterial","group_history","Kefu","copyMessage","kefuMessageHeader","sorter","b","showQuickJumper","hideOnSinglePage","current","allowClear","kefu_Option","EditMessage","isUploadImg","isTextUploadImg","FormItemWrapper","Channel","input_number","min","edit_Option","dateString","onClose","borderStyle","ref","onBlur","onPressEnter","borderColor","preventDefault","Template","templateColumns","template_Search","SingleSelectModal","colors","colorWrapperStyle","show","overflow","EditTemplate","GonghaoModal","_loop","pre","SelectGonghao_SingleSelectModal","template_edit_Option","components_TemplateModal","GroupRouter","GroupMaterial","EditKefuMSg","Advertise","spreadData","domain_names","dataList","changeTab","tabsRender","spread_TabPane","spreadHeader","wordWrap","goTop","deleteLink","copyLink","animated","defaultActiveKey","tabBarGutter","getSpreadList","_this7","spreadLinkInfo","links","weights","back_urls","link","back_url","weight","granularity","EditAdvertise","addTag","cancelSelectTag","cancelEdit","submitSpreadLink","initData","isAddWeight","hasLink","hasBackUrl","hasWeight","delLink","isUpdate","updateWeight","enterButton","saveUpdate","addLink","borderRight","deleteTag","paddingLeft","list","ChannelWrapper","Spread","EditSpread","Account","accountList","searchValue","updateRemarksIndex","searchAccount","getAccountList","handleChangeSearchValue","lib","onCopy","deleteAccount","account_Search","AddAccount","addAccount","validateFields","errors","resetForm","xs","add_Option","AccountRouter","App","loginAt","needLogin","es","decodeURIComponent","src_pages_login","src_common_BasicLayout","TuoguanRouter","MessageRouter","ChannelRouter","encodeURIComponent","React","prototype","MD5","ReactDOM","src_App","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7a4629ea.chunk.js","sourcesContent":["import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  // 公号接管\r\n  gonghaoTagList: [],\r\n  allGonghaoList: [],\r\n  originalGonghaoList: [],\r\n  gonghaoList: [],\r\n  group: \"全部\",\r\n  status: \"全部\",\r\n  currentPage: 1,\r\n  searchName: \"\",\r\n  isSelectTag: false,\r\n  selectedTag: \"\",\r\n  isCreate: true,\r\n  gonghaoModal: false,\r\n  gonghaoInfo: {\r\n    group: \"\",\r\n    id: \"\",\r\n    attribute: 0,\r\n    ab_test: 0\r\n  },\r\n  // 公号配置\r\n  configList: [],\r\n  configForm: {type: 0, sex: 3, attribute: 1, text: \"\", replyType: 0, msgId: null, key: \"\", urlList: []},\r\n\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state)), _start, _end;\r\n  switch (action.type) {\r\n    case constants.GET_GONGHAO_TAG_LIST:\r\n      newState.gonghaoTagList = action.gonghaoTagList;\r\n      return newState;\r\n    case constants.GET_ALL_GONGHAO_LIST:\r\n      newState.allGonghaoList = newState.originalGonghaoList = action.allGonghaoList;\r\n      newState.gonghaoList = action.gonghaoList;\r\n      return newState;\r\n    case constants.CHANGE_SELECT_VALUE:\r\n      newState.group = newState.status = \"全部\";\r\n      newState[action.key] = action.value;\r\n      if(newState[action.key] === \"全部\") {\r\n        newState.gonghaoList = [...newState.allGonghaoList]\r\n      } else{\r\n        newState.gonghaoList = [...newState.allGonghaoList.filter(item => item[action.key] === action.value)]\r\n      }\r\n      return newState;\r\n    case constants.CHANGE_PAGE:\r\n      _start = (action.page - 1) * 10;\r\n      _end = action.page * 10;\r\n      newState.gonghaoList = newState.allGonghaoList.slice(_start, _end);\r\n      newState.currentPage = action.page;\r\n      return newState;\r\n    case constants.CHANGE_SEARCH_INPUT:\r\n      newState.searchName = action.searchName;\r\n      return newState;\r\n    case constants.SEARCH_BY_NAME:\r\n      newState.allGonghaoList = action.allGonghaoList;\r\n      newState.gonghaoList = action.gonghaoList;\r\n      newState.searchName = \"\";\r\n      return newState;\r\n    case constants.OPEN_GONGHAO_MODAL:\r\n      newState.gonghaoModal = true;\r\n      newState.gonghaoInfo = {id: action.id, group: action.group, attribute: action.attribute, ab_test: action.ab_test};\r\n      return newState;\r\n    case constants.CLOSE_GONGHAO_MODAL:\r\n      newState.gonghaoModal = false;\r\n      newState.gonghaoInfo = {attribute: 0};\r\n      return newState;\r\n    case constants.CHANGE_GROUP:\r\n      newState.gonghaoInfo.group = action.name;\r\n      return newState;\r\n    case  constants.CHANGE_ATTRIBUTE:\r\n      newState.gonghaoInfo.attribute = action.attribute;\r\n      return newState;\r\n    case  constants.CHANGE_AB_TEST:\r\n      newState.gonghaoInfo.ab_test = action.ab_test;\r\n      return newState;\r\n    case constants.DELETE_GONGHAO:\r\n      newState.gonghaoList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.SESECT_TAG:\r\n      newState.isSelectTag = true;\r\n      newState.selectedTag = action.selectedTag;\r\n      return newState;\r\n    case constants.REMOVE_TAG:\r\n      newState.isSelectTag = false;\r\n      newState.selectedTag = \"\";\r\n      return newState;\r\n    case constants.TAG_CONFIRM:\r\n      newState.isSelectTag = true;\r\n      newState.selectedTag = action.group;\r\n      action.name && newState.gonghaoTagList.push(action.name);\r\n      return newState;\r\n    case constants.DELETE_TAG_ITEM:\r\n      newState.isSelectTag = false;\r\n      newState.selectedTag = \"\";\r\n      newState.gonghaoTagList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CHECK_PAGE_ATTR:\r\n      newState.isCreate = false;\r\n      return newState;\r\n    case constants.JIEGUAN_GONGHAO:\r\n      newState.gonghaoList[action.index].status = 0;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from \"axios\";\r\n\r\naxios.defaults.timeout = 10000;\r\n//\r\n// axios.defaults.headers = {\r\n//   'X-Requested-With': 'XMLHttpRequest',\r\n//   \"Content-Type\": \"application/json;charset=utf-8\"\r\n// };\r\nlet userInfo = localStorage.getItem(\"userInfo\")\r\n\r\nlet account_id = userInfo ? JSON.parse(userInfo)._id  : \"\";\r\n\r\naxios.interceptors.request.use(\r\n  config => {\r\n    if(config.method === \"get\" || config.method === \"delete\") {\r\n      if (config.url.indexOf('?') >= 0) {\r\n        config.url += ('&account_id=' + account_id + \"&_t=\" + new Date().getTime());\r\n      } else {\r\n        config.url += ('?account_id=' + account_id + \"&_t=\" + new Date().getTime());\r\n      }\r\n    } else if(config.method === \"post\" || config.method === \"put\") {\r\n      config.data.account_id = account_id;\r\n      config.data._t = new Date().getTime();\r\n    }\r\n    return config;\r\n  },\r\n  err => {\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\n//响应拦截器即异常处理\r\naxios.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  err => {\r\n    if (err && err.response) {\r\n      switch (err.response.status) {\r\n        case 400:\r\n          err.message = \"错误请求\";\r\n          break;\r\n        case 401:\r\n          err.message = \"登录信息失效\";\r\n          break;\r\n        case 403:\r\n          err.message = \"拒绝访问\";\r\n          break;\r\n        case 404:\r\n          err.message = \"请求错误,未找到该资源\";\r\n          break;\r\n        case 405:\r\n          err.message = \"请求方法未允许\";\r\n          break;\r\n        case 408:\r\n          err.message = \"请求超时\";\r\n          break;\r\n        case 500:\r\n          err.message = \"服务器端出错\";\r\n          break;\r\n        case 501:\r\n          err.message = \"网络未实现\";\r\n          break;\r\n        case 502:\r\n          err.message = \"网络错误\";\r\n          break;\r\n        case 503:\r\n          err.message = \"服务不可用\";\r\n          break;\r\n        case 504:\r\n          err.message = \"网络超时\";\r\n          break;\r\n        case 505:\r\n          err.message = \"http版本不支持该请求\";\r\n          break;\r\n        default:\r\n          err.message = `连接错误${err.response.status}`;\r\n      }\r\n    } else {\r\n      err.message = \"连接到服务器失败\";\r\n    }\r\n    return Promise.resolve(err.response);\r\n  }\r\n);\r\n\r\nexport default axios;","const backTop = () => {\r\n  return new Promise((resolve, reject) => {\r\n    let timer;\r\n    timer = setInterval(function () {\r\n      let osTop =\r\n        document.documentElement.scrollTop || document.body.scrollTop;\r\n      let ispeed = Math.floor(-osTop / 1.2);\r\n      document.documentElement.scrollTop = document.body.scrollTop =\r\n        osTop + ispeed;\r\n      if (osTop === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 30);\r\n    resolve(null)\r\n  })\r\n};\r\n\r\nexport default backTop;","import axios from '../../../../utils/http';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\nimport backTop from '../../../../utils';\r\n\r\nexport const getGroupList = () => {\r\n  return (dispatch) => {\r\n    axios.get('/gonghaoTag')\r\n      .then(res => {\r\n        if (res.data.code === 1) {\r\n          let gonghaoTagList = res.data.data;\r\n          const action = {\r\n            type: constants.GET_GONGHAO_TAG_LIST,\r\n            gonghaoTagList\r\n          };\r\n          dispatch(action)\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const getAllGonghaoList = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let allGonghaoList = res.data.data;\r\n          const action = {\r\n            type: constants.GET_ALL_GONGHAO_LIST,\r\n            allGonghaoList,\r\n            gonghaoList: allGonghaoList\r\n          };\r\n          dispatch(action);\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changePage = (page) => {\r\n  return async dispatch => {\r\n    const action = {\r\n      type: constants.CHANGE_PAGE,\r\n      page\r\n    };\r\n    await backTop();\r\n    await dispatch(action);\r\n  }\r\n};\r\n\r\n\r\nexport const changeSearchInput = searchName => ({\r\n  type: constants.CHANGE_SEARCH_INPUT,\r\n  searchName\r\n});\r\n\r\nexport const searchByName = nick_name => {\r\n  return dispatch => {\r\n    axios.get('/conf/find_one', {params: {nick_name}})\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let allGonghaoList = res.data.data,\r\n            gonghaoList = allGonghaoList;\r\n          const action = {\r\n            type: constants.SEARCH_BY_NAME,\r\n            allGonghaoList, gonghaoList\r\n          };\r\n          dispatch(action);\r\n          message.success(\"查询成功\")\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeSelectValue = (key, value) => ({\r\n  type: constants.CHANGE_SELECT_VALUE,\r\n  key, value\r\n});\r\n\r\nexport const deleteGonghao = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认删除吗？\",\r\ntitle: \"提示\",\r\n      onOk: () => {\r\n        axios.get(\"/conf/del\", {\r\n          params: {id}\r\n        }).then(res => {\r\n          const action = {\r\n            type: constants.DELETE_GONGHAO,\r\n            index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"删除成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const jieguan = (code, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认接管吗？\",\r\ntitle: \"提示\",\r\n      onOk: () => {\r\n        axios.get(\"/conf/jieguan\", {\r\n          params: {code}\r\n        }).then(res => {\r\n          const action = {\r\n            type: constants.JIEGUAN_GONGHAO,\r\n            index\r\n          };\r\n          dispatch(action);\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const addNewGonghao = () => {\r\n  return dispatch => {\r\n    axios.get('/component/componentAuthorize')\r\n      .then(res => {\r\n        window.open(res.data)\r\n      })\r\n  }\r\n};\r\n\r\nexport const openGonghaoModal = (id, group, attribute, ab_test) => ({\r\n  type: constants.OPEN_GONGHAO_MODAL,\r\n  id, group, attribute, ab_test\r\n});\r\n\r\nexport const closeGonghaoModal = () => ({\r\n  type: constants.CLOSE_GONGHAO_MODAL\r\n});\r\n\r\nexport const updateGonghaoInfo = gonghaoInfo => {\r\n  return dispatch => {\r\n    console.log(gonghaoInfo)\r\n    axios.put('/conf', {...gonghaoInfo})\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          message.success(res.data.msg);\r\n          dispatch(closeGonghaoModal());\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeGroup = name => ({\r\n  type: constants.CHANGE_GROUP,\r\n  name\r\n});\r\n\r\nexport const changeAttribute = attribute => ({\r\n  type: constants.CHANGE_ATTRIBUTE,\r\n  attribute\r\n});\r\n\r\nexport const changeAbTest = ab_test => ({\r\n  type: constants.CHANGE_AB_TEST,\r\n  ab_test\r\n});\r\n\r\nexport const selectTag = (selectedTag) => ({\r\n  type: constants.SESECT_TAG,\r\n  selectedTag\r\n});\r\n\r\nexport const removeTag = () => ({\r\n  type: constants.REMOVE_TAG\r\n});\r\n\r\nexport const tagConfirm = (group, props) => {\r\n  return (dispatch) => {\r\n    let name;\r\n    axios.post(\"/gonghaoTag\", {name: group})\r\n      .then(res => {\r\n        if (res.data.exist === 0) {\r\n          name = res.data.data\r\n        }\r\n        props.form.setFieldsValue({group})\r\n        const action = {\r\n          type: constants.TAG_CONFIRM,\r\n          name, group\r\n        };\r\n        dispatch(action)\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteTagItem = (id, index) => {\r\n  return (dispatch) => {\r\n    axios.delete('/gonghaoTag/' + id)\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.DELETE_TAG_ITEM,\r\n          index\r\n        };\r\n        dispatch(action)\r\n      });\r\n  }\r\n};\r\n\r\nexport const createForm = (gonghaoInfo, history) => {\r\n  return (dispatch) => {\r\n    axios.post(\"/conf/create\", gonghaoInfo).then(res => {\r\n      history.goBack();\r\n      const action = {\r\n        type: constants.CREATE_FORM,\r\n        gonghaoInfo\r\n      };\r\n      dispatch(action);\r\n      message.success(\"添加成功\")\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateForm = (gonghaoInfo, history) => {\r\n  return (dispatch) => {\r\n    axios.post(\"/conf/update\", gonghaoInfo).then(res => {\r\n      history.goBack();\r\n      getAllGonghaoList();\r\n      const action = {\r\n        type: constants.UPDATE_FORM,\r\n        gonghaoInfo\r\n      };\r\n      dispatch(action);\r\n      message.success(\"修改成功\")\r\n    });\r\n  }\r\n};\r\n\r\nexport const checkPageAttr = () => ({\r\n  type: constants.CHECK_PAGE_ATTR\r\n});\r\n\r\n// 公号配置\r\n\r\nexport const getConfigList = (code) => {\r\n  return (dispatch) => {\r\n    axios.get('/reply', {params: {code}})\r\n      .then(res => {\r\n        let configList = res.data.data;\r\n        const action = {\r\n          type: constants.GET_CONFIG_LIST,\r\n          configList\r\n        };\r\n        dispatch(action)\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteConfig = (id, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认删除吗？\",\r\n      title: \"提示\",\r\n      onOk: () => {\r\n        axios.get('/reply/del', {params: {id}})\r\n          .then(res => {\r\n          const action = {\r\n            type: constants.DELETE_CONFIG,\r\n            index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"删除成功\")\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n};\r\n\r\nexport const changeConfigForm = (formInfo) => ({\r\n  type: constants.CHANGE_CONFIG_FORM,\r\n  formInfo\r\n});\r\n\r\nexport const createConfigForm = (configInfo, history) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      title: \"确定新建一条规则吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/create\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.CREATE_CONFIG_FORM,\r\n            configInfo\r\n          };\r\n          dispatch(action);\r\n          message.success(\"创建成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const updateConfigForm = (configInfo, history, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      title: \"确定修改吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/update\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.UPDATE_CONFIG_FORM,\r\n            configInfo, index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"修改成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\n","export const GET_GONGHAO_TAG_LIST = \"gonghao/tuoguan/getGonghaoTagList\";\r\nexport const GET_ALL_GONGHAO_LIST = \"gonghao/tuoguan/getAllGonghaoList\";\r\nexport const CHANGE_PAGE = \"gonghao/tuoguan/changePage\";\r\nexport const SEARCH_BY_NAME = \"gonghao/tuoguan/searchByName\";\r\nexport const DELETE_GONGHAO = \"gonghao/tuoguan/deleteGonghao\";\r\nexport const JIEGUAN_GONGHAO = \"gonghao/tuoguan/jieguan\";\r\nexport const CHANGE_SEARCH_INPUT = \"gonghao/tuoguan/changeSearchInput\";\r\nexport const SESECT_TAG = \"gonghao/tuoguan/selectTag\";\r\nexport const REMOVE_TAG = \"gonghao/tuoguan/removeTag\";\r\nexport const TAG_CONFIRM = \"gonghao/tuoguan/tagConfirm\";\r\nexport const DELETE_TAG_ITEM = \"gonghao/tuoguan/deleteTagItem\";\r\nexport const CREATE_FORM = \"gonghao/tuoguan/createForm\";\r\nexport const UPDATE_FORM = \"gonghao/tuoguan/updateForm\";\r\nexport const CHECK_PAGE_ATTR = \"gonghao/tuoguan/checkPageAttr\";\r\nexport const OPEN_GONGHAO_MODAL = \"gonghao/tuoguan/openGonghaoModal\";\r\nexport const CLOSE_GONGHAO_MODAL = \"gonghao/tuoguan/closeGonghaoModal\";\r\nexport const CHANGE_GROUP = \"gonghao/tuoguan/changeGroup\";\r\nexport const CHANGE_ATTRIBUTE = \"gonghao/tuoguan/changeAttribute\";\r\nexport const CHANGE_AB_TEST = \"gonghao/tuoguan/changeAbTest\";\r\nexport const CHANGE_SELECT_VALUE = \"gonghao/tuoguan/changeSelectValue\";\r\n\r\n// 公号配置\r\nexport const GET_CONFIG_LIST = \"gonghao/tuoguan/getConfigList\";\r\nexport const DELETE_CONFIG = \"gonghao/tuoguan/deleteConfig\";\r\nexport const CREATE_CONFIG_FORM = \"gonghao/tuoguan/createConfigForm\";\r\nexport const UPDATE_CONFIG_FORM = \"gonghao/tuoguan/updateConfigForm\";\r\nexport const CHANGE_CONFIG_FORM = \"gonghao/tuoguan/changeConfigForm\";\r\n","export const GET_MENU_LIST = \"gonghao/menu/getMenuList\";\r\nexport const DELETE_MENU = \"gonghao/menu/deleteMenu\";\r\nexport const HANDLE_INFO_CHANGE = \"gonghao/menu/handleInfoChange\";\r\nexport const HANDLE_INDIVIDUAL_CHANGE = \"gonghao/menu/handleIndividualChange\";\r\nexport const HANDLE_INPUT_CHANGE = \"gonghao/menu/handleInputChange\";\r\nexport const HANDLE_SUB_INPUT_CHANGE = \"gonghao/menu/handleSubInputChange\";\r\nexport const ADD_FIRST_MENU = \"gonghao/menu/addFirstMenu\";\r\nexport const ADD_SECOND_MENU = \"gonghao/menu/addSecondMenu\";\r\nexport const EDIT_MENU = \"gonghao/menu/editMenu\";\r\nexport const EDIT_SEC_MENU = \"gonghao/menu/editSecMenu\";\r\nexport const SUBMIT_MENU = \"gonghao/menu/submitMenu\";\r\nexport const OPEN_MADAL = \"gonghao/menu/openModal\";\r\nexport const CANCEL_MENU = \"gonghao/menu/cancelMenu\";\r\nexport const DELETE_FIR_MENU = \"gonghao/menu/deleteFirMenu\";\r\nexport const DELETE_SUB_MENU = \"gonghao/menu/deleteSubMenu\";\r\nexport const GET_ALL_CODES = \"gonghao/menu/getAllCodes\";\r\nexport const CHANGE_GONGHAO = \"gonghao/menu/changeGonghao\";\r\nexport const INIT_MENU_INFO = \"gonghao/menu/initMenuInfo\";\r\nexport const RESET_STATE = \"gonghao/menu/resetState\";\r\nexport const CHANGE_MESSAGE_INFO = \"gonghao/menu/changeMessageInfo\";\r\nexport const ADD_TO_LIST = \"gonghao/menu/addToList\";\r\nexport const UPDATE_MESSAGE_ITEM = \"gonghao/menu/updateMessageItem\";\r\nexport const UPDATE_CURRENT_MESSAGE = \"gonghao/menu/updateCurrentMessage\";\r\nexport const DELETE_CURRENT_MESSAGE = \"gonghao/menu/deleteCurrentMessage\";\r\nexport const CLEAR_MESSAGE_INFO_INPUT = \"gonghao/menu/clearMessageInfoInput\";\r\nexport const SAVE_TO_CONTENTS = \"gonghao/menu/saveToContents\";\r\nexport const RANDOM_STRING = \"gonghao/menu/randomString\";","import * as constants from './constants';\r\n\r\nconst firstMenuForm = {\r\n  name: \"菜单名称\",\r\n  type: \"view\",\r\n  key: \"\",\r\n  url: \"\",\r\n  sub_button: []\r\n};\r\n\r\nconst sub_button = {\r\n  name: \"子菜单名称\",\r\n  type: \"view\",\r\n  key: \"\",\r\n  url: \"\"\r\n};\r\n\r\nconst defaultMenuInfo = {\r\n  title: \"\",\r\n  individual: false,\r\n  sex: \"0\",\r\n  values: [],\r\n  codes: [],\r\n  contents: {}\r\n};\r\n\r\nconst messageInfo = {\r\n  replyType: 0,\r\n  articles: [],\r\n  content: \"\"\r\n};\r\n\r\nconst defaultState = {\r\n  menuList: [],\r\n  menuForm: JSON.parse(JSON.stringify(firstMenuForm)),\r\n  menuInfo: JSON.parse(JSON.stringify(defaultMenuInfo)),\r\n  menuIndex: -1,\r\n  sub_button: JSON.parse(JSON.stringify(sub_button)),\r\n  secMenuIndex: -1,\r\n  isSubmit: false,\r\n  updateIndex: -1,\r\n  messageInfo: JSON.parse(JSON.stringify(messageInfo)),\r\n  currentKey: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    // 菜单配置列表页\r\n    case constants.GET_MENU_LIST:    // 获取菜单列表\r\n      newState.menuList = action.menuList;\r\n      return newState;\r\n    case constants.DELETE_MENU:      // 删除菜单\r\n      newState.menuList.splice(action.index, 1);\r\n      return newState;\r\n\r\n    // 编辑菜单栏\r\n    case constants.GET_ALL_CODES:    // 获取所有公号\r\n      newState.allCodes = [...action.allCodes];\r\n      return newState;\r\n    case constants.CHANGE_GONGHAO:   // 选择公号\r\n      newState.menuInfo.codes = newState.targetKeys = [...action.targetKeys];\r\n      return newState;\r\n    case constants.ADD_FIRST_MENU:    // 添加一级菜单\r\n      newState.menuForm = JSON.parse(JSON.stringify(firstMenuForm));\r\n      newState.menuInfo.values.push({...newState.menuForm});\r\n      newState.menuIndex = newState.menuInfo.values.length - 1;\r\n      return newState;\r\n    case constants.EDIT_MENU:         // 编辑一级菜单\r\n      newState.secMenuIndex = -1;\r\n      newState.menuIndex = action.index;\r\n      newState.menuForm = {...action.data};\r\n      if(newState.menuForm.sub_button && newState.menuForm.sub_button.length) {\r\n        newState.sub_button = {...newState.menuForm.sub_button[0]};\r\n        newState.secMenuIndex = 0;\r\n      }\r\n      newState.currentKey = \"\";\r\n      if(newState.menuIndex > -1) {\r\n        if(newState.sub_button.key && newState.secMenuIndex > -1){\r\n          newState.menuInfo.values[newState.menuIndex].key = newState.menuForm.key = \"\";\r\n          newState.currentKey = newState.sub_button.key;\r\n          newState.messageInfo = newState.menuInfo.contents[newState.currentKey]\r\n        } else if(action.data.key) {\r\n          newState.currentKey = newState.menuForm.key = newState.menuInfo.values[newState.menuIndex].key;\r\n          newState.messageInfo = newState.menuInfo.contents[newState.currentKey]\r\n        }\r\n      }\r\n      return newState;\r\n    case constants.DELETE_FIR_MENU:   // 删除一级菜单\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1);\r\n      newState.menuIndex = 0;\r\n      newState.menuForm = newState.menuInfo.values[0] || JSON.parse(JSON.stringify(firstMenuForm));\r\n      delete newState.menuInfo.contents[newState.currentKey];\r\n      newState.menuForm.key &&( newState.messageInfo = newState.menuInfo.contents[newState.menuForm.key]);\r\n      return newState;\r\n    case constants.HANDLE_INPUT_CHANGE:    // 一级菜单input修改\r\n      if(action.name === \"type\") {\r\n        newState.menuForm.url = \"\";\r\n        newState.messageInfo = JSON.parse(JSON.stringify(messageInfo));\r\n        if(action.value === \"click\") {\r\n          // newState.menuForm.key = newState.currentKey = newState.menuInfo.values[newState.menuIndex].key = \"wxb_mn_\" + (newState.menuIndex + 1) + \"_0\";\r\n          newState.menuForm.key = newState.menuInfo.values[newState.menuIndex].key  = newState.currentKey;\r\n        } else {\r\n          newState.menuForm.key = newState.menuInfo.values[newState.menuIndex].key = newState.currentKey = \"\"\r\n        }\r\n      }\r\n      newState.menuForm[action.name] = action.value;\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm});\r\n      return newState;\r\n    case constants.ADD_SECOND_MENU:   // 添加二级菜单\r\n      newState.sub_button = JSON.parse(JSON.stringify(sub_button));\r\n      newState.menuForm.sub_button.push({...newState.sub_button});\r\n      newState.messageInfo = JSON.parse(JSON.stringify(messageInfo));\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm});\r\n      newState.secMenuIndex = newState.menuForm.sub_button.length - 1;\r\n      return newState;\r\n    case constants.EDIT_SEC_MENU:     // 编辑二级菜单\r\n      newState.currentKey && (newState.menuInfo.contents[newState.currentKey] = newState.messageInfo);\r\n      newState.secMenuIndex = action.index;\r\n      newState.sub_button = {...action.data};\r\n      newState.currentKey = \"\";\r\n      if(action.data.key && newState.secMenuIndex > -1) {\r\n        newState.menuInfo.values[newState.menuIndex].key = newState.menuForm.key = \"\";\r\n        newState.currentKey = newState.sub_button.key;\r\n        newState.messageInfo = newState.menuInfo.contents[newState.currentKey]\r\n      }\r\n      return newState;\r\n    case constants.DELETE_SUB_MENU:   // 删除二级菜单\r\n      newState.menuForm.sub_button.splice(newState.secMenuIndex, 1);\r\n      newState.menuInfo.values[newState.menuIndex].sub_button.splice(newState.secMenuIndex, 1);\r\n      newState.secMenuIndex = 0;\r\n      newState.sub_button = newState.menuForm.sub_button[0] ||JSON.parse(JSON.stringify(sub_button));\r\n      delete newState.menuInfo.contents[newState.currentKey];\r\n      newState.sub_button.key && (newState.messageInfo = newState.menuInfo.contents[newState.sub_button.key]);\r\n      return newState;\r\n    case constants.HANDLE_SUB_INPUT_CHANGE:    // 二级菜单input修改\r\n      if(action.name === \"type\") {\r\n        newState.sub_button.url = \"\";\r\n        newState.messageInfo = JSON.parse(JSON.stringify(messageInfo));\r\n        if(action.value === \"click\") {\r\n          newState.menuInfo.values[newState.menuIndex].key = newState.menuForm.key = \"\";\r\n          newState.sub_button.key = newState.currentKey;\r\n        } else {\r\n          newState.sub_button.key = newState.currentKey = \"\"\r\n        }\r\n      }\r\n      newState.sub_button[action.name] = action.value;\r\n      newState.menuForm.sub_button.splice(newState.secMenuIndex, 1, {...newState.sub_button});\r\n      newState.menuInfo.values.splice(newState.menuIndex, 1, {...newState.menuForm})\r\n      return newState;\r\n    case constants.CHANGE_MESSAGE_INFO:  // 修改图文消息Input\r\n      if(action.key === \"replyType\") {\r\n        newState.messageInfo = JSON.parse(JSON.stringify(messageInfo));\r\n        newState.messageInfo.replyType = action.value\r\n      } else {\r\n        newState.messageInfo[action.key] = action.value;\r\n      }\r\n      return newState;\r\n    case constants.ADD_TO_LIST:          // 添加到图文消息列表\r\n      const { title, picurl, url, description } = newState.messageInfo;\r\n      newState.messageInfo.articles.push({...{ title, picurl, url, description }});\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      return newState;\r\n    case constants.UPDATE_MESSAGE_ITEM:  // 选择修改的消息\r\n      const { item, index } = action;\r\n      Object.assign(newState.messageInfo, {...item});\r\n      newState.updateIndex = index;\r\n      return newState;\r\n    case constants.UPDATE_CURRENT_MESSAGE:    // 修改当前的消息\r\n      let currentMessage = {\r\n        title: newState.messageInfo.title,\r\n        picurl: newState.messageInfo.picurl,\r\n        url: newState.messageInfo.url,\r\n        description: newState.messageInfo.description};\r\n      newState.messageInfo.articles.splice(newState.updateIndex, 1, {...currentMessage});\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n    case constants.DELETE_CURRENT_MESSAGE:     // 删除当前的消息\r\n      newState.messageInfo.articles.splice(newState.updateIndex, 1);\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n    case constants.CLEAR_MESSAGE_INFO_INPUT:   // 清空messageInfo的input\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n    case constants.SAVE_TO_CONTENTS:           // 保存到contents\r\n      let {articles, content, replyType} = newState.messageInfo;\r\n      let message = {articles, content, replyType};\r\n      newState.currentKey && (newState.menuInfo.contents[newState.currentKey] = {...message});\r\n      return newState;\r\n    case constants.RANDOM_STRING:              // 随机8位字符串\r\n      newState.currentKey = action.result;\r\n      return newState;\r\n\r\n    case constants.OPEN_MADAL:        // 打开选择公号Modal\r\n      newState.isSubmit = true;\r\n      return newState;\r\n    case constants.SUBMIT_MENU:       // 提交菜单栏\r\n      newState.isSubmit = false;\r\n      return newState;\r\n    case constants.CANCEL_MENU:       // 取消提交、关闭Modal\r\n      newState.isSubmit = false;\r\n      return newState;\r\n    case constants.HANDLE_INFO_CHANGE:         // 修改menuInfo\r\n      newState.menuInfo[action.name] = action.value;\r\n      return newState;\r\n    case constants.HANDLE_INDIVIDUAL_CHANGE:   // 是否开启个性化菜单\r\n      newState.menuInfo.individual = action.value;\r\n      Object.assign(newState.menuForm, {\r\n        sex: 0\r\n      });\r\n      return newState;\r\n\r\n    case constants.INIT_MENU_INFO:    // 修改菜单栏时，初始化菜单栏信息\r\n      newState.menuInfo = {...action.record, contents: {}};\r\n      newState.menuInfo.id = action.record._id;\r\n      newState.targetKeys = [...newState.menuInfo.codes];\r\n      newState.menuForm = {...newState.menuInfo.values[0]};\r\n      newState.menuIndex = 0;\r\n      if(newState.menuForm.sub_button && newState.menuForm.sub_button.length) {\r\n        newState.sub_button = {...newState.menuForm.sub_button[0]};\r\n        newState.secMenuIndex = 0;\r\n        if(newState.sub_button.key) {\r\n          newState.currentKey = newState.sub_button.key;\r\n          newState.messageInfo = newState.menuInfo.contents[newState.currentKey];\r\n        }\r\n      } else {\r\n        newState.menuForm.key && (newState.currentKey = newState.menuForm.key);\r\n        newState.currentKey && (newState.messageInfo = newState.menuInfo.contents[newState.currentKey]);\r\n      }\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:       // 重置state\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport {Modal, message} from 'antd';\r\n\r\n\r\nexport const getMenuList = () => {\r\n  return dispatch => {\r\n    axios.get('/menu')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let menuList = res.data.data.reverse();\r\n          const action = {\r\n            type: constants.GET_MENU_LIST,\r\n            menuList\r\n          };\r\n          dispatch(action);\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteMenu = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/menu/del\", {params: {id: id}})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              const action = {\r\n                type: constants.DELETE_MENU,\r\n                index\r\n              };\r\n              dispatch(action);\r\n              message.success(res.data.success)\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const handleInfoChange = (value, name) => ({\r\n  type: constants.HANDLE_INFO_CHANGE,\r\n  value, name\r\n});\r\n\r\nexport const handleIndividualChange = value => ({\r\n  type: constants.HANDLE_INDIVIDUAL_CHANGE,\r\n  value\r\n});\r\n\r\nexport const handleInputChange = (name, value) => {\r\n  return dispatch => {\r\n    if (value === \"click\") {\r\n      dispatch(randomString());\r\n    }\r\n    dispatch({\r\n      type: constants.HANDLE_INPUT_CHANGE,\r\n      name, value\r\n    })\r\n  }\r\n};\r\n\r\nexport const handleSubInputChange = (name, value) => {\r\n  return dispatch => {\r\n    if (value === \"click\") {\r\n      dispatch(randomString());\r\n      dispatch({type: constants.SAVE_TO_CONTENTS})\r\n    }\r\n    dispatch({\r\n      type: constants.HANDLE_SUB_INPUT_CHANGE,\r\n      name, value\r\n    })\r\n  }\r\n};\r\n\r\nexport const addFirstMenu = () => {\r\n  return dispatch => {\r\n    dispatch({type: constants.SAVE_TO_CONTENTS});\r\n    dispatch({type: constants.ADD_FIRST_MENU});\r\n  }\r\n};\r\n\r\nexport const editMenu = (data, index) => {\r\n  return dispatch => {\r\n    dispatch({type: constants.SAVE_TO_CONTENTS});\r\n    dispatch({\r\n      type: constants.EDIT_MENU,\r\n      index, data\r\n    });\r\n  }\r\n};\r\n\r\nexport const addSecondMenu = () => {\r\n  return dispatch => {\r\n    dispatch({type: constants.SAVE_TO_CONTENTS});\r\n    dispatch({type: constants.ADD_SECOND_MENU});\r\n  }\r\n};\r\n\r\nexport const editSecMenu = (data, index) => {\r\n  return dispatch => {\r\n    if (data.key) {\r\n      dispatch({type: constants.SAVE_TO_CONTENTS})\r\n    }\r\n    dispatch({\r\n      type: constants.EDIT_SEC_MENU,\r\n      index, data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteFirMenu = () => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        dispatch({type: constants.DELETE_FIR_MENU})\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteSubMenu = () => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定删除吗？\",\r\n      onOk: () => {\r\n        dispatch({type: constants.DELETE_SUB_MENU})\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const openModal = () => {\r\n  return dispatch => {\r\n    dispatch({type: constants.OPEN_MADAL});\r\n    dispatch({type: constants.SAVE_TO_CONTENTS});\r\n  }\r\n};\r\n\r\nexport const submitMenu = props => {\r\n  return dispatch => {\r\n    let {menuInfo} = props, {values} = menuInfo;\r\n    let validateResult = validateArray(values);\r\n    validateResult && Modal.confirm({\r\n      title: \"提示\",\r\n      content: \"确定提交吗？\",\r\n      onOk: () => {\r\n        axios.post(props.history.location.query ? \"/menu/update\" : \"/menu/create\", {...menuInfo})\r\n          .then(res => {\r\n            const action = {\r\n              type: constants.SUBMIT_MENU\r\n            };\r\n            dispatch(action);\r\n            props.history.goBack();\r\n            dispatch(resetState())\r\n          })\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n\r\nexport const cancelMenu = () => ({\r\n  type: constants.CANCEL_MENU\r\n});\r\n\r\n\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        let allCodes = res.data.data;\r\n        const action = {\r\n          type: constants.GET_ALL_CODES,\r\n          allCodes\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeGonghao = targetKeys => ({\r\n  type: constants.CHANGE_GONGHAO,\r\n  targetKeys\r\n});\r\n\r\nexport const initMenuInfo = record => ({\r\n  type: constants.INIT_MENU_INFO,\r\n  record\r\n});\r\n\r\nexport const changeMessageInfo = (key, value) => ({\r\n  type: constants.CHANGE_MESSAGE_INFO,\r\n  key, value\r\n});\r\n\r\nexport const addToList = () => ({\r\n  type: constants.ADD_TO_LIST\r\n});\r\n\r\nexport const updateMessageItem = (item, index) => ({\r\n  type: constants.UPDATE_MESSAGE_ITEM,\r\n  item, index\r\n});\r\n\r\n\r\nexport const updateCurrentMessage = () => ({\r\n  type: constants.UPDATE_CURRENT_MESSAGE\r\n});\r\n\r\nexport const deleteCurrentMessage = () => ({\r\n  type: constants.DELETE_CURRENT_MESSAGE\r\n});\r\n\r\nexport const randomString = () => {\r\n  return dispatch => {\r\n    var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    var result = '';\r\n    for (var i = 8; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];\r\n    dispatch({type: constants.RANDOM_STRING, result})\r\n  }\r\n};\r\n\r\nconst validateArray = values => {\r\n  for(let j = 0; j < values.length; j ++) {\r\n    let item = values[j];\r\n    if(item.sub_button) {\r\n      for (let i = 0; i < item.sub_button.length; i ++) {\r\n        if(item.sub_button[i].type === \"view\") {\r\n          if(!item.sub_button[i].url) {\r\n            message.warning(\"请检查跳转链接输入是否有误\");\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if(item.type === \"view\") {\r\n        if(!item.url) {\r\n          message.warning(\"请检查跳转链接输入是否有误\");\r\n          return false\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return true\r\n};","import * as constants from './constants';\r\n\r\nconst resetFields = {\r\n  type: 0,\r\n  sex: 3,\r\n  attribute: 1,\r\n  replyType: 0,\r\n  codes: [],\r\n  articles: []\r\n};\r\n\r\nconst defaultState = {\r\n  // 公号配置\r\n  replyMessageList: [],\r\n  messageInfo: JSON.parse(JSON.stringify(resetFields)),\r\n  allCodes: [],\r\n  selectGonghaoModal: true,\r\n  updateIndex: -1,\r\n  messageIndex: -1\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    // 公号配置\r\n    case constants.GET_REPLY_MESSAGE_LIST:\r\n      newState.replyMessageList = action.replyMessageList.filter(item => item.type !== 1);\r\n      return newState;\r\n    case constants.DELETE_REPLY_MESSAGE:\r\n      newState.replyMessageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = action.allCodes;\r\n      return newState;\r\n    case constants.CLOSE_SELECT_MODAL:\r\n      newState.selectGonghaoModal = false;\r\n      return newState;\r\n    case constants.OPEN_SELECT_MODAL:\r\n      newState.selectGonghaoModal = true;\r\n      return newState;\r\n    case constants.CHANGE_MESSAGE_INFO:\r\n      newState.messageInfo[action.key] = action.value;\r\n      return newState;\r\n    case constants.ADD_TO_LIST:\r\n      const { title, picurl, url, description } = newState.messageInfo;\r\n      newState.messageInfo.articles.push({...{ title, picurl, url, description }});\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      return newState;\r\n    case constants.UPDATE_MESSAGE_ITEM:\r\n      const { item, index} = action;\r\n      Object.assign(newState.messageInfo, {...item});\r\n      newState.updateIndex = index;\r\n      return newState;\r\n    case constants.UPDATE_CURRENT_MESSAGE:\r\n      let message = {\r\n        title: newState.messageInfo.title,\r\n        picurl: newState.messageInfo.picurl,\r\n        url: newState.messageInfo.url,\r\n        description: newState.messageInfo.description\r\n      };\r\n      newState.messageInfo.articles.splice(newState.updateIndex, 1, {...message});\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n    case constants.DELETE_CURRENT_MESSAGE:\r\n      newState.messageInfo.articles.splice(newState.updateIndex, 1);\r\n      newState.messageInfo.title = newState.messageInfo.picurl = newState.messageInfo.url = newState.messageInfo.description = \"\";\r\n      newState.updateIndex = -1;\r\n      return newState;\r\n\r\n    case constants.INIT_STATE:\r\n      newState.messageInfo = JSON.parse(JSON.stringify(action.record));\r\n      newState.messageIndex = action.index;\r\n      if(newState.messageInfo.replyType === 1) {\r\n        Object.assign(newState.messageInfo, newState.messageInfo.articles[0]);\r\n        newState.updateIndex = 0;\r\n      }\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = JSON.parse(JSON.stringify(defaultState));\r\n      return newState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n\r\n// 公号配置\r\n\r\nexport const getReplyMessageList = () => {\r\n  return dispatch => {\r\n    axios.get('/reply')\r\n      .then(res => {\r\n        let replyMessageList = res.data.data;\r\n        const action = {\r\n          type: constants.GET_REPLY_MESSAGE_LIST,\r\n          replyMessageList\r\n        };\r\n        dispatch(action)\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteReplyMessage = (_id, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      content: \"确认删除吗？\",\r\n      title: \"提示\",\r\n      onOk: () => {\r\n        axios.get('/reply/del', {params: {_id}})\r\n          .then(res => {\r\n          const action = {\r\n            type: constants.DELETE_REPLY_MESSAGE,\r\n            index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"删除成功\")\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          const {data: allCodes} = res.data;\r\n          dispatch({ type: constants.GET_ALL_CODES, allCodes });\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const closeSelectModal = () => ({\r\n  type: constants.CLOSE_SELECT_MODAL\r\n});\r\n\r\nexport const openSelectModal = () => ({\r\n  type: constants.OPEN_SELECT_MODAL\r\n});\r\n\r\nexport const changeMessageInfo = (key, value) => ({\r\n  type: constants.CHANGE_MESSAGE_INFO,\r\n  key, value\r\n});\r\n\r\nexport const addToList = () => ({\r\n  type: constants.ADD_TO_LIST\r\n});\r\n\r\nexport const updateMessageItem = (item, index) => ({\r\n  type: constants.UPDATE_MESSAGE_ITEM,\r\n  item, index\r\n});\r\n\r\nexport const updateCurrentMessage = () => ({\r\n  type: constants.UPDATE_CURRENT_MESSAGE\r\n});\r\n\r\nexport const deleteCurrentMessage = () => ({\r\n  type: constants.DELETE_CURRENT_MESSAGE\r\n});\r\n\r\nexport const createConfigForm = (configInfo, history) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      title: \"确定新建一条规则吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/create\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.CREATE_CONFIG_FORM,\r\n            configInfo\r\n          };\r\n          dispatch(action);\r\n          message.success(\"创建成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const updateConfigForm = (configInfo, history, index) => {\r\n  return (dispatch) => {\r\n    Modal.confirm({\r\n      title: \"确定修改吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/reply/update\", configInfo).then(res => {\r\n          history.goBack();\r\n          const action = {\r\n            type: constants.UPDATE_CONFIG_FORM,\r\n            configInfo, index\r\n          };\r\n          dispatch(action);\r\n          message.success(\"修改成功\")\r\n        });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n\r\nexport const initState = (record, index) => ({\r\n  type: constants.INIT_STATE,\r\n  record, index\r\n});","export const GET_REPLY_MESSAGE_LIST = \"gonghao/reply/getReplyMessageList\";\r\nexport const DELETE_REPLY_MESSAGE = \"gonghao/reply/deleteReplyMessage\";\r\n\r\nexport const INIT_STATE = \"gonghao/reply/initState\";\r\n// 获取所有公号\r\nexport const GET_ALL_CODES = \"gonghao/reply/getAllCodes\";\r\nexport const CLOSE_SELECT_MODAL = \"gonghao/reply/closeSelectModal\";\r\nexport const OPEN_SELECT_MODAL = \"gonghao/reply/openSelectModal\";\r\nexport const ADD_TO_LIST = \"gonghao/reply/addToList\";\r\nexport const CHANGE_MESSAGE_INFO = \"gonghao/reply/changeMessageInfo\";\r\nexport const UPDATE_MESSAGE_ITEM = \"gonghao/reply/updateMessageItem\";\r\nexport const UPDATE_CURRENT_MESSAGE = \"gonghao/reply/updateCurrentMessage\";\r\nexport const DELETE_CURRENT_MESSAGE = \"gonghao/reply/deleteCurrentMessage\";\r\n\r\n\r\nexport const CREATE_CONFIG_FORM = \"gonghao/reply/createConfigForm\";\r\nexport const UPDATE_CONFIG_FORM = \"gonghao/reply/updateConfigForm\";\r\n\r\n\r\nexport const RESET_STATE = \"gonghao/reply/resetState\";","import { combineReducers } from 'redux';\r\nimport { reducer as tuoguanReducer } from './tuoguan/store';\r\nimport { reducer as menuReducer } from './menu/store';\r\nimport { reducer as replyReducer } from './reply/store';\r\n\r\nconst reducer = combineReducers({\r\n  tuoguan: tuoguanReducer,\r\n  menu: menuReducer,\r\n  reply: replyReducer,\r\n});\r\n\r\nexport default reducer;","export const GET_GROUP_GONGHAO = \"gonghao/group/getGroupGonghao\";\r\nexport const CHANGE_SEARCH_INPUT = \"gonghao/group/changeSearchInput\";\r\nexport const SEARCH_BY_NAME = \"gonghao/group/search\";\r\n\r\n// 群发素材\r\nexport const GET_GROUP_MATERIAL = \"gonghao/group/getMessageList\";\r\nexport const OPEN_MODAL = \"gonghao/group/openModal\";\r\nexport const OPEN_TIMING_MODAL = \"gonghao/group/openTimingModal\";\r\nexport const CHANGE_TAG_ID = \"gonghao/group/changeTagId\";\r\nexport const GET_TAG_LIST = \"gonghao/group/getTagList\";\r\nexport const CLOSE_MODAL = \"gonghao/group/closeModal\";\r\nexport const CHANGE_TIMING_STATE = \"gonghao/group/changeTimingState\";\r\nexport const CHANGE_TIME = \"gonghao/group/changeTime\";\r\nexport const COPY = \"gonghao/group/copy\";\r\nexport const DELETE_MATERIAL = \"gonghao/group/deleteMaterial\";\r\nexport const CLEAR_MATERIAL = \"gonghao/group/clearMaterial\";\r\nexport const OPEN_UPDATE_MATERIAL_MODAL = \"gonghao/group/openUpdateMaterialModal\";\r\nexport const CLOSE_UPDATE_MATERIAL_MODAL = \"gonghao/group/closeUpdateMaterialModal\";\r\nexport const CHANGE_CONTENT_SOURCE_URL = \"gonghao/group/changeContentSourceUrl\";\r\n\r\n// 群发历史\r\nexport const GET_HISTORY_LIST = \"gonghao/group/getHistoryList\";\r\nexport const OPEN_MSG_MODAL = \"gonghao/group/openMsgModal\";\r\nexport const CLOSE_MSG_MODAL = \"gonghao/group/closeMsgModal\";\r\nexport const CHANGE_ARTICLE_IDX = \"gonghao/group/changeArticleIdx\";\r\nexport const CLEAR_HISTORY = \"gonghao/group/clearHistory\";\r\nexport const CHANGE_DATE = \"gonghao/group/changeDate\";\r\n\r\n\r\n\r\n\r\nexport const RESET_STATE = \"gonghao/group/resetState\";\r\n","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  messageList: [],\r\n  isComplete: true,\r\n  tagList: [],\r\n  sendModal: false,\r\n  sendTimingModal: false,\r\n  date: \"\",\r\n  time: \"\",\r\n  sendInfo: {\r\n    id: \"\",\r\n    tagId: null,\r\n    mediaId: \"\"\r\n  },\r\n  sendTimingInfo: {\r\n    id: \"\",\r\n    tagId: null,\r\n    isTiming: false,\r\n    timing: null\r\n  },\r\n  updateInfo: {\r\n    \"media_id\": \"\",\r\n    \"index\": null,\r\n    \"articles\": {\r\n      \"content_source_url\": \"\"\r\n    },\r\n    id: \"\"\r\n  },\r\n  updateMaterialModal: false,\r\n\r\n  historyList: [],\r\n  historyMsgModal: false,\r\n  delMsgInfo: {\r\n    code: null,\r\n    msg_id: \"\",\r\n    article_idx: \"\"\r\n  },\r\n  delDate: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n\r\n    // 群发素材\r\n\r\n    case constants.GET_GROUP_MATERIAL:\r\n      newState.messageList = [...action.data];\r\n      return newState;\r\n    case constants.GET_TAG_LIST:\r\n      newState.tagList = [...action.data];\r\n      return newState;\r\n    case constants.CHANGE_TAG_ID:\r\n      !action.isTiming && (newState.sendInfo.tagId = action.value)\r\n      action.isTiming && (newState.sendTimingInfo.tagId = action.value)\r\n      return newState;\r\n    case constants.CLOSE_MODAL:\r\n      newState.sendInfo = newState.sendTimingInfo = {};\r\n      newState.sendTimingInfo.timing = Date.now();\r\n      newState.sendTimingInfo.isTiming = newState.sendTimingModal = newState.sendModal = false;\r\n      return newState;\r\n    case constants.OPEN_MODAL:\r\n      newState.sendInfo.id = action.record._id;\r\n      newState.sendInfo.tagId = action.record.tagId;\r\n      newState.sendInfo.mediaId = action.record.media_id;\r\n      newState.sendModal = true;\r\n      return newState;\r\n    case constants.OPEN_TIMING_MODAL:\r\n      newState.sendTimingInfo.id = action.record._id;\r\n      newState.sendTimingInfo.tagId = action.record.tagId;\r\n      newState.sendTimingInfo.isTiming = action.record.isTiming;\r\n      newState.sendTimingInfo.timing = action.record.timing;\r\n      newState.sendTimingModal = true;\r\n      return newState;\r\n    case constants.CHANGE_TIMING_STATE:\r\n      newState.sendTimingInfo.isTiming = action.value;\r\n      return newState;\r\n    case constants.CHANGE_TIME:\r\n      if (action.timeType === \"date\") {\r\n        newState.date = action.time\r\n      } else {\r\n        newState.time = action.time\r\n      }\r\n      let dateTime = new Date(newState.date + \" \" + newState.time);\r\n      newState.sendTimingInfo.timing = dateTime.getTime();\r\n      return newState;\r\n    case constants.COPY:\r\n      newState.messageList.unshift({...action.data});\r\n      return newState;\r\n    case constants.DELETE_MATERIAL:\r\n      newState.messageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CLEAR_MATERIAL:\r\n      newState.messageList = [];\r\n      return newState;\r\n    case constants.OPEN_UPDATE_MATERIAL_MODAL:\r\n      newState.updateMaterialModal = true;\r\n      newState.updateInfo = action.updateInfo;\r\n      return newState;\r\n    case constants.CLOSE_UPDATE_MATERIAL_MODAL:\r\n      newState.updateMaterialModal = false;\r\n      newState.updateInfo.articles.content_source_url = \"\";\r\n      return newState;\r\n    case constants.CHANGE_CONTENT_SOURCE_URL:\r\n      newState.updateInfo.articles.content_source_url = action.content_source_url;\r\n      return newState;\r\n\r\n    // 群发历史\r\n    case constants.GET_HISTORY_LIST:\r\n      newState.historyList = [...action.data];\r\n      return newState;\r\n    case constants.OPEN_MSG_MODAL:\r\n      newState.historyMsgModal = true;\r\n      newState.delMsgInfo.code = action.code;\r\n      newState.delMsgInfo.msg_id = action.msg_id;\r\n      return newState;\r\n    case constants.CLOSE_MSG_MODAL:\r\n      newState.historyMsgModal = false;\r\n      newState.delMsgInfo.article_idx = \"\";\r\n      return newState;\r\n    case constants.CHANGE_ARTICLE_IDX:\r\n      newState.delMsgInfo.article_idx = action.value;\r\n      return newState;\r\n    case constants.CLEAR_HISTORY:\r\n      newState.historyList = [];\r\n      return newState;\r\n    case constants.CHANGE_DATE:\r\n      newState.delDate = action.delDate;\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n// 群发公号\r\nconst getGonghaoList = () => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        if (res.data.data.length > 0) {\r\n          let gonghaoList = res.data.data;\r\n          const action = {\r\n            type: constants.GET_GROUP_GONGHAO,\r\n            gonghaoList\r\n          };\r\n          resolve(action)\r\n        } else {\r\n          reject('error message: 没有数据')\r\n        }\r\n      })\r\n  });\r\n};\r\n\r\nexport const getGroupGonghao = () => {\r\n  return async dispatch => {\r\n    let action = await getGonghaoList();\r\n    dispatch(action);\r\n  }\r\n};\r\n\r\nexport const getMaterial = code => {\r\n  return dispatch => {\r\n    if(code) {\r\n      axios.get('/material', {params: {code}})\r\n        .then(res => {\r\n          message.success(res.data.success);\r\n          setTimeout(function () {\r\n            dispatch(getMessageList(code))\r\n          }, 3000)\r\n        })\r\n    } else {\r\n      message.warning(\"请选择公号后再试\")\r\n    }\r\n  }\r\n};\r\n\r\nexport const openUpdateMaterialModal = updateInfo => ({\r\n  type: constants.OPEN_UPDATE_MATERIAL_MODAL,\r\n  updateInfo\r\n});\r\n\r\nexport const closeUpdateMaterialModal = () => ({\r\n  type: constants.CLOSE_UPDATE_MATERIAL_MODAL\r\n});\r\n\r\nexport const updateMaterial = (updateInfo, code) => {\r\n  return dispatch => {\r\n    axios.put(\"/material/contentSourceUrl\", {...updateInfo, code})\r\n      .then(res => {\r\n        const { code, msg } = res.data;\r\n        if(code === 1) {\r\n          message.success(msg);\r\n          dispatch(closeUpdateMaterialModal())\r\n        } else {\r\n          message.error(msg)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeContentSourceUrl = content_source_url => ({\r\n  type: constants.CHANGE_CONTENT_SOURCE_URL,\r\n  content_source_url\r\n});\r\n\r\n// 群发素材\r\n\r\nexport const getMessageList = code => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"/material/show\", { params: { code: Number(code) } })\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        const action = {\r\n          type: constants.GET_GROUP_MATERIAL,\r\n          data\r\n        };\r\n        dispatch(action)\r\n      });\r\n  }\r\n};\r\n\r\nexport const getTagList = code => {\r\n  return dispatch => {\r\n    axios.get(\"/material/tag\", {params: {code}})\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        const action = {\r\n          type: constants.GET_TAG_LIST,\r\n          data\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeTagId = (value, isTiming) => ({\r\n  type: constants.CHANGE_TAG_ID,\r\n  value, isTiming\r\n});\r\n\r\nexport const closeModal = () => ({\r\n  type: constants.CLOSE_MODAL\r\n});\r\n\r\nexport const openModal = record => ({\r\n  type: constants.OPEN_MODAL,\r\n  record\r\n});\r\n\r\nexport const sendMessage = sendInfo => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定发送消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/material/sendMsg\", {params: {...sendInfo}})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            dispatch(closeModal());\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const openTimingModal = record => ({\r\n  type: constants.OPEN_TIMING_MODAL,\r\n  record\r\n});\r\n\r\nexport const sendTimingMessage = (sendTimingInfo, code) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定定时发送消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/material/send_timing\", {params: {...sendTimingInfo}})\r\n          .then(res => {\r\n            message.info(\"设置成功\");\r\n            dispatch(getMessageList(code));\r\n            dispatch(closeModal());\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeTimingState = value => ({\r\n  type: constants.CHANGE_TIMING_STATE,\r\n  value\r\n});\r\n\r\nexport const changeTime = (time, timeType) => ({\r\n  type: constants.CHANGE_TIME,\r\n  time, timeType\r\n});\r\n\r\nexport const copy = id => {\r\n  return dipatch => {\r\n    Modal.confirm({\r\n      title: \"确定复制这条素材吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/material/copy\", {id})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              const { data } = res.data;\r\n              message.success(res.data.success);\r\n              const action = {\r\n                type: constants.COPY,\r\n                data\r\n              };\r\n              dipatch(action)\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const deleteMaterial = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条素材吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/material/del\", {params: {id}})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.success(res.data.success);\r\n              const action = {\r\n                type: constants.DELETE_MATERIAL,\r\n                 index\r\n              };\r\n              dispatch(action);\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const clearMaterial = code => {\r\n  return dispatch => {\r\n    if(code) {\r\n      Modal.confirm({\r\n        title: \"确定清空列表吗？\",\r\n        onOk: () => {\r\n          axios.get(\"/material/clear\", { params: { code } })\r\n            .then(res => {\r\n              message.info(res.data.success);\r\n              const action = {\r\n                type: constants.CLEAR_MATERIAL\r\n              };\r\n              dispatch(action);\r\n            });\r\n        }\r\n      })\r\n    } else {\r\n      message.warning(\"请选择公号后再试\")\r\n    }\r\n  }\r\n};\r\n\r\n// 群发历史\r\n\r\nexport const getHistoryList = code => {\r\n  return dispatch => {\r\n    axios.get(\"/history\", {params: {code}})\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        const action = {\r\n          type: constants.GET_HISTORY_LIST,\r\n          data\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const checkSendState = (code, msg_id) => {\r\n  return dispatch => {\r\n    axios.get(\"/history/state\", { params: { code, msg_id }})\r\n      .then(res => {\r\n        message.info(res.data.data.msg_status)\r\n      })\r\n  }\r\n};\r\n\r\nexport const openMsgModal = (code, msg_id) => ({\r\n  type: constants.OPEN_MSG_MODAL,\r\n  code, msg_id\r\n});\r\n\r\nexport const closeMsgModal = () => ({\r\n  type: constants.CLOSE_MSG_MODAL\r\n});\r\n\r\nexport const changeArticleIdx = value => ({\r\n  type: constants.CHANGE_ARTICLE_IDX,\r\n  value\r\n});\r\n\r\nexport const deleteMsg = (delMsgInfo) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除吗？\",\r\n      onOk: () => {\r\n        axios.get('/history/del_msg', {\r\n          params: {...delMsgInfo}\r\n        }).then(res => {\r\n          message.info(res.data.success);\r\n          dispatch(closeMsgModal());\r\n        })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const clearHistory = code => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定清空列表？\",\r\n      onOk: () => {\r\n        axios.get(\"/history/clear\", {params: {code}})\r\n          .then(res => {\r\n            message.success(res.data.success);\r\n            const action = {\r\n              type: constants.CLEAR_HISTORY\r\n            };\r\n            dispatch(action);\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeDate = delDate => ({\r\n  type: constants.CHANGE_DATE,\r\n  delDate\r\n});\r\n\r\nexport const deleteMany = (code, date) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: '确认删除吗?:',\r\n      onOk: () => {\r\n        axios.get('/history/delByDate', {params: {date, code}})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            dispatch(getHistoryList())\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n","import * as constants from './constants';\r\n\r\nconst initContent = {\r\n  description: \"\",\r\n  title: \"\",\r\n  url: \"\",\r\n  picurl: \"\"\r\n};\r\n\r\nconst LocalDate = new Date(new Date().toLocaleDateString()).getTime();\r\n\r\nconst defaultState = {\r\n  allMessageList: [],\r\n  kefuMessageList: [],\r\n  messageType: 4,\r\n  messageGroup: \"全部分组\",\r\n  selectedMessages: [],\r\n  updateGroupModal: false,\r\n  group: \"\",\r\n  currentPage: 1,\r\n  searchName: \"\",\r\n  kefuMessageInfo: {\r\n    contents: [],\r\n    type: 0,\r\n    img: \"\",\r\n    img_path: \"\",\r\n    channel: 1,\r\n    sex: \"all\",\r\n    timing_time: new Date(),\r\n    daily_time: new Date(),\r\n    delay: 5,\r\n    tagId: \"\",\r\n    tagName: \"\",\r\n    codes: [],\r\n    remarks: \"\",\r\n    action_type: 1,\r\n    isHour: 0,\r\n    group: \"未分组\"\r\n  },\r\n  content: initContent,\r\n  messageIndex: -1,\r\n  paramsModal: false,\r\n  allCodes: [],\r\n  allGroup: [],\r\n  selectGonghaoModal: true,\r\n  previewModal: false,\r\n  openid: \"\",\r\n  groupInputVisible: false,\r\n  groupValue: \"\",\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case constants.GET_KEFU_MESSAGE_LIST:\r\n      newState.allMessageList = [...action.kefuMessageList];\r\n      if(newState.messageGroup !== \"全部分组\") {\r\n        newState.kefuMessageList = newState.allMessageList.filter(item => item.group === newState.messageGroup)\r\n      } else if (newState.searchName) {\r\n        newState.kefuMessageList = newState.allMessageList.filter(item => {\r\n          let gonghaoList1 = [];\r\n          item.gonghaoList.map(i => {\r\n            i.nick_name === newState.searchName && gonghaoList1.push(i)\r\n          });\r\n          return gonghaoList1.length > 0\r\n        })\r\n      } else {\r\n        newState.kefuMessageList = newState.allMessageList\r\n      }\r\n      return newState;\r\n    case constants.CREATE_KEFU_MESSAGE:\r\n      newState.kefuMessageList.unshift({...action.data});\r\n      return newState;\r\n    case constants.DELETE_LAST_MESSAGE:\r\n      newState.kefuMessageList = [];\r\n      return newState;\r\n    case constants.DELETE_MESSAGE:\r\n      newState.kefuMessageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.HANDLE_CHANGE_SELECT:\r\n      newState.messageType = 4;\r\n      newState.messageGroup = \"全部分组\";\r\n      if(action.name === \"messageType\") {\r\n        const { value: type } = action;\r\n        newState.messageType = type;\r\n        type === 0 && (newState.kefuMessageList = newState.allMessageList.filter(item => !(item.delay || item.is_timing || item.is_daily)));\r\n        type === 1 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item.delay));\r\n        type === 2 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item.is_timing));\r\n        type === 3 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item.is_daily));\r\n        type === 4 && (newState.kefuMessageList = newState.allMessageList.filter(item => !!item));\r\n      } else {\r\n        const { value: group } = action;\r\n        newState.messageGroup = group;\r\n        if( group === \"全部分组\") {\r\n          newState.kefuMessageList = newState.allMessageList.filter(item => item.group !== \"全部消息\")\r\n        } else {\r\n          newState.kefuMessageList = newState.allMessageList.filter(item => item.group === group)\r\n        }\r\n      }\r\n      if(newState.searchName) {\r\n        newState.kefuMessageList = newState.kefuMessageList.filter(item => {\r\n          let gonghaoList2 = [];\r\n          item.gonghaoList.map(i => {\r\n            i.nick_name === newState.searchName && gonghaoList2.push(i)\r\n          });\r\n          return gonghaoList2.length > 0\r\n        })\r\n      }\r\n      return newState;\r\n    case constants.CHANGE_SELECTED_MESSAGES:\r\n      newState.selectedMessages = action.selectedMessages;\r\n      return newState;\r\n    case constants.OPEN_UPDATE_GROUP_MODAL:\r\n      newState.updateGroupModal = true;\r\n      return newState;\r\n    case constants.CHANGE_GROUP:\r\n      newState.group = action.value;\r\n      return newState;\r\n    case constants.CANCEL_UPDATE_GROUP:\r\n      newState.updateGroupModal = false;\r\n      newState.group = \"\";\r\n      return newState;\r\n    case constants.UPDATE_MORE_GROUP:\r\n      newState.selectedMessages = [];\r\n      return newState;\r\n    case constants.CHANGE_SEARCH_NAME:\r\n      let { allMessageList } = newState;\r\n      newState.kefuMessageList = allMessageList.filter(item => {\r\n        let gonghaoList = [];\r\n        item.gonghaoList.map(i => {\r\n          i.nick_name === action.value && gonghaoList.push(i)\r\n        });\r\n        return gonghaoList.length > 0\r\n      });\r\n      if(newState.kefuMessageList.length > 0) {\r\n        action.message.success(\"查询成功\");\r\n      } else {\r\n        newState.kefuMessageList = allMessageList;\r\n        action.value && action.message.warning(\"没有查询到相关数据\");\r\n      }\r\n      return newState;\r\n    case constants.CLEAR_CONDITION:\r\n      newState.group = newState.searchName = \"\";\r\n      newState.messageGroup = \"全部分组\";\r\n      newState.currentPage = 1;\r\n      newState.kefuMessageList = newState.allMessageList;\r\n      return newState;\r\n\r\n    // 编辑客服消息\r\n    case constants.CHANGE_CONTENT_VALUE:\r\n      newState.content[action.name] = action.value;\r\n      newState.kefuMessageInfo.contents.splice(newState.messageIndex, 1, newState.content);\r\n      return newState;\r\n    case constants.CHANGE_MESSAGE_VALUE:\r\n      newState.kefuMessageInfo[action.name] = action.value;\r\n      if(action.name === \"type\") {\r\n        newState.content = initContent;\r\n        newState.kefuMessageInfo.contents = [];\r\n        newState.kefuMessageInfo.img = newState.kefuMessageInfo.img_path =  \"\";\r\n        newState.messageIndex = -1;\r\n        if(action.value === 0) {\r\n          newState.kefuMessageInfo.contents.push(newState.content);\r\n          newState.messageIndex = 0;\r\n        }\r\n      }\r\n      if(action.name === \"channel\") {\r\n        Object.assign(newState.kefuMessageInfo, {timing_time: new Date(), delay: 5, daily_time: new Date()})\r\n      }\r\n      return newState;\r\n    case constants.ADD_MESSAGE:\r\n      newState.content = initContent;\r\n      newState.kefuMessageInfo.contents.push(newState.content);\r\n      newState.messageIndex = newState.kefuMessageInfo.contents.length - 1;\r\n      return newState;\r\n    case constants.SELECT_MESSAGE:\r\n      newState.content = {...action.info};\r\n      newState.messageIndex = action.index;\r\n      return newState;\r\n    case constants.SELECT_PARAMS:\r\n      newState.paramsModal = true;\r\n      return newState;\r\n    case constants.HIDE_PARAMS_MODAL:\r\n      newState.paramsModal = false;\r\n      return newState;\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = [...action.allCodes];\r\n      return newState;\r\n    case constants.CHANGE_GONGHAO:\r\n      newState.kefuMessageInfo.codes = [...action.codes];\r\n      return newState;\r\n    case constants.OPEN_SELECT_MODAL:\r\n      newState.selectGonghaoModal = true;\r\n      return newState;\r\n    case constants.CLOSE_SELECT_MODAL:\r\n      newState.selectGonghaoModal = false;\r\n      return newState;\r\n    case constants.INIT_KEFU_MESSAGE_INFO:\r\n      newState.kefuMessageInfo = {...action.query};\r\n      newState.kefuMessageInfo.contents.length > 0 && (newState.content = {...newState.kefuMessageInfo.contents[0]});\r\n      if(newState.kefuMessageInfo.type === 0) newState.messageIndex = 0;\r\n      if(action.query.task) {\r\n        newState.kefuMessageInfo.channel = 1\r\n      } else if(action.query.is_timing) {\r\n        newState.kefuMessageInfo.channel = 2\r\n      } else if(action.query.is_daily) {\r\n        newState.kefuMessageInfo.channel = 3;\r\n        newState.kefuMessageInfo.daily_time += LocalDate\r\n      } else {\r\n        newState.kefuMessageInfo.channel = 0\r\n      }\r\n      newState.kefuMessageInfo.isHour && (newState.kefuMessageInfo.delay = newState.kefuMessageInfo.delay/60);\r\n      !newState.kefuMessageInfo.isHour && (newState.kefuMessageInfo.isHour = 0);\r\n      return newState;\r\n    case constants.OPEN_PREVIEW_MODAL:\r\n      newState.previewModal = true;\r\n      return newState;\r\n    case constants.CLOSE_PREVIEW_MODAL:\r\n      newState.previewModal = false;\r\n      newState.openid = \"\";\r\n      return newState;\r\n    case constants.CHANGE_OPENID:\r\n      newState.openid = action.value;\r\n      return newState;\r\n\r\n    case constants.GET_ALL_GROUP:\r\n      newState.allGroup = [...action.allGroup];\r\n      return newState;\r\n    case constants.SHOW_GROUP_INPUT:\r\n      newState.groupInputVisible = true;\r\n      setTimeout(function () {\r\n        action.that.input.focus();\r\n      }, 500);\r\n      return newState;\r\n    case constants.HANDLE_GROUP_INPUT_CHANGE:\r\n      newState.groupValue = action.value;\r\n      return newState;\r\n    case constants.HANDLE_GROUP_INPUT_CONFIRM:\r\n      Object.keys(action.data).length > 0 && newState.allGroup.push(action.data);\r\n      newState.groupInputVisible = false;\r\n      newState.groupValue = \"\";\r\n      return newState;\r\n    case constants.DELETE_GROUP:\r\n      newState.allGroup.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CANCEL_SELECT_GROUP:\r\n      newState.kefuMessageInfo.group = \"未分组\";\r\n      return newState;\r\n\r\n    case constants.CHANGE_PAGE:\r\n      newState.currentPage = action.page;\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      let {currentPage, messageGroup} = newState;\r\n      newState = defaultState;\r\n      newState.currentPage = currentPage;\r\n      newState.messageGroup = messageGroup;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n// 群发公号\r\nconst getData = () => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(\"/message\", {params: {sort: \"_id\"}})\r\n      .then(res => {\r\n        if (res.data.messages.length > 0) {\r\n          let kefuMessageList = res.data.messages;\r\n          const action = {\r\n            type: constants.GET_KEFU_MESSAGE_LIST,\r\n            kefuMessageList\r\n          };\r\n          resolve(action)\r\n        } else {\r\n          reject('error message: 没有数据')\r\n        }\r\n      })\r\n  });\r\n};\r\n\r\nexport const getKefuMessageList = () => {\r\n  return async dispatch => {\r\n    let action = await getData();\r\n    dispatch(action);\r\n  }\r\n};\r\n\r\nexport const createKefuMessage = record => {\r\n  return dispatch => {\r\n    record.delay && record.isHour && (record.delay /= 60);\r\n    Modal.confirm({\r\n      title: \"确定新增一条客服消息吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/message/create\", {...record})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              let data = res.data.data\r\n              message.info(record._id ? \"复制成功\" : res.data.success);\r\n              const action = {\r\n                type: constants.CREATE_KEFU_MESSAGE,\r\n                data\r\n              };\r\n              dispatch(action);\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const deleteMessage = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条客服消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/message/delete\", { params: { id } })\r\n          .then(res => {\r\n            dispatch(getKefuMessageList());\r\n            if (res.data.data.length === 0) {\r\n              message.info(\"已删除最后一条数据\");\r\n              const action = {\r\n                type: constants.DELETE_LAST_MESSAGE\r\n              };\r\n              dispatch(action);\r\n            } else {\r\n              message.info(res.data.success);\r\n              const action = {\r\n                type: constants.DELETE_MESSAGE,\r\n                index\r\n              };\r\n              dispatch(action);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const sendKefuMessage = (id, tagId) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定发送消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/message/send\", { params: { id, tagId, take_over: true } })\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n          });\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const handleChangeSelect = (value, name) => ({\r\n  type: constants.HANDLE_CHANGE_SELECT,\r\n  value, name\r\n});\r\n\r\nexport const changeSelectedMessages = selectedMessages => ({\r\n  type: constants.CHANGE_SELECTED_MESSAGES,\r\n  selectedMessages\r\n});\r\n\r\nexport const openUpdateGroupModal = () => ({\r\n  type: constants.OPEN_UPDATE_GROUP_MODAL\r\n});\r\n\r\nexport const changeGroup = value => ({\r\n  type: constants.CHANGE_GROUP,\r\n  value\r\n});\r\n\r\nexport const cancelUpdateGroup = () => ({\r\n  type: constants.CANCEL_UPDATE_GROUP\r\n});\r\n\r\nexport const updateMoreGroup = (selectedMessages, group) => {\r\n  return dispatch => {\r\n    axios.put('/message/updateGroup', {selectedMessages, group})\r\n      .then(res => {\r\n        const { code, msg } = res.data;\r\n        if(code === 1) {\r\n          message.success(msg);\r\n          dispatch(getKefuMessageList());\r\n          dispatch({type: constants.UPDATE_MORE_GROUP});\r\n          dispatch(cancelUpdateGroup());\r\n        } else {\r\n          message.error(msg)\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeSearchName = value => ({\r\n  type: constants.CHANGE_SEARCH_NAME,\r\n  value, message\r\n});\r\n\r\nexport const clearCondition = () => ({\r\n  type: constants.CLEAR_CONDITION\r\n});\r\n\r\n// 编辑客服消息\r\nexport const changeContentValue = (value, name) => ({\r\n  type: constants.CHANGE_CONTENT_VALUE,\r\n  value, name\r\n});\r\n\r\nexport const changeMessageValue = (value, name) => ({\r\n  type: constants.CHANGE_MESSAGE_VALUE,\r\n  value, name\r\n});\r\n\r\n\r\nexport const addMessage = () => ({\r\n  type: constants.ADD_MESSAGE\r\n});\r\n\r\nexport const selectMessage = (info, index) => ({\r\n  type: constants.SELECT_MESSAGE,\r\n  info, index\r\n});\r\n\r\nexport const selectParams = () => ({\r\n  type: constants.SELECT_PARAMS\r\n});\r\n\r\nexport const hideParamsModal = () => ({\r\n  type: constants.HIDE_PARAMS_MODAL\r\n});\r\n\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        let allCodes = res.data.data;\r\n        const action = {\r\n          type: constants.GET_ALL_CODES,\r\n          allCodes\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const getAllGroup = () => {\r\n  return dispatch => {\r\n    axios.get('/messageGroup')\r\n      .then(res => {\r\n        let {data: allGroup} = res.data;\r\n        const action = {\r\n          type: constants.GET_ALL_GROUP,\r\n          allGroup\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const showGroupInput = that => ({\r\n  type: constants.SHOW_GROUP_INPUT,\r\n  that\r\n});\r\n\r\nexport const handleGroupInputChange = value => ({\r\n  type: constants.HANDLE_GROUP_INPUT_CHANGE,\r\n  value\r\n});\r\n\r\nexport const handleGroupInputConfirm = group => {\r\n  return dispatch => {\r\n    if(group) {\r\n      axios.post('/messageGroup', {group})\r\n        .then(res => {\r\n          const {code, msg, data} = res.data;\r\n          if (code === 1) {\r\n            message.success(msg);\r\n            dispatch({type: constants.HANDLE_GROUP_INPUT_CONFIRM, data})\r\n          } else {\r\n            message.error(msg);\r\n          }\r\n        })\r\n    } else {\r\n      dispatch({type: constants.HANDLE_GROUP_INPUT_CONFIRM, data: {}})\r\n    }\r\n  }\r\n};\r\n\r\nexport const handleClose = (_id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这个分组吗？\",\r\n      onOk: () => {\r\n        axios.delete(\"/messageGroup\", {params: {_id}})\r\n          .then(res => {\r\n            const {code, msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              dispatch({type: constants.DELETE_GROUP, index})\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const cancelSelectGroup = () => ({\r\n  type: constants.CANCEL_SELECT_GROUP\r\n});\r\n\r\nexport const changeGonghao = codes => ({\r\n  type: constants.CHANGE_GONGHAO,\r\n  codes\r\n});\r\n\r\nexport const openSelectModal = () => ({\r\n  type: constants.OPEN_SELECT_MODAL\r\n});\r\n\r\nexport const closeSelectModal = () => ({\r\n  type: constants.CLOSE_SELECT_MODAL\r\n});\r\n\r\nexport const submitMessage = (info, history, allCodes) => {\r\n  return dispatch => {\r\n    const LocalDate = new Date(new Date().toLocaleDateString()).getTime();\r\n    info.gonghaoList = allCodes.filter(item => info.codes.indexOf(item.code) > -1);\r\n    !info.img && info.contents.length > 0 && (info.img = info.contents[0].picurl);\r\n    info.channel === 1 ? info.task = true : info.task = false;\r\n    info.channel === 2 ? info.is_timing = true : info.is_timing = false;\r\n    if(info.channel !== 1) {\r\n      info.delay = null;\r\n    }\r\n    if(info.channel === 3) {\r\n      info.is_daily = true;\r\n      if(info.daily_time._d) {\r\n        info.daily_time = new Date(info.daily_time._d).getTime() - LocalDate\r\n      } else {\r\n        info.daily_time = new Date(info.daily_time).getTime() - LocalDate\r\n      }\r\n    } else {\r\n      info.is_daily = false;\r\n      info.daily_time = 0;\r\n    }\r\n    Modal.confirm({\r\n      title: \"确定提交吗？\",\r\n      onOk: () => {\r\n        let url = \"/message/create\";\r\n        if(history.location.query) {\r\n          url = \"/message/update\";\r\n          info.id = info._id\r\n        }\r\n        axios.post(url, {...info})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.info(res.data.success);\r\n              history.goBack();\r\n              dispatch(resetState());\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const initKefuMessageInfo = query => {\r\n  return dispatch => {\r\n    if (query.tagId) {\r\n      axios.get(\"/tag/get_name\", { params: { tagId: query.tagId } })\r\n        .then(res => {\r\n          query.tagName = res.data.data.name;\r\n          const action = {\r\n            type: constants.INIT_KEFU_MESSAGE_INFO,\r\n            query\r\n          };\r\n          dispatch(action);\r\n        });\r\n    } else {\r\n      const action = {\r\n        type: constants.INIT_KEFU_MESSAGE_INFO,\r\n        query\r\n      };\r\n      dispatch(action);\r\n    }\r\n\r\n  }\r\n};\r\n\r\nexport const openPreviewModal = () => ({\r\n  type: constants.OPEN_PREVIEW_MODAL\r\n});\r\n\r\nexport const closePreviewModal = () => ({\r\n  type: constants.CLOSE_PREVIEW_MODAL\r\n});\r\n\r\nexport const preview = ({codes, type, contents, img_path}, openid) => {\r\n  return dispatch => {\r\n    axios.post('/message/preview', {codes, type, contents, img_path, openid})\r\n      .then(res => {\r\n        const { code, msg } = res.data;\r\n        if(code === 1) {\r\n          message.success(msg);\r\n        } else {\r\n          message.warning(msg);\r\n        }\r\n        dispatch(closePreviewModal());\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeOpenId = value => ({\r\n  type: constants.CHANGE_OPENID,\r\n  value\r\n});\r\n\r\nexport const changePage = page => ({\r\n  type: constants.CHANGE_PAGE,\r\n  page\r\n});\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n","export const GET_KEFU_MESSAGE_LIST = \"message/kefu/getKefuMessageList\";\r\nexport const CREATE_KEFU_MESSAGE = \"message/kefu/createKefuMessage\";\r\nexport const DELETE_LAST_MESSAGE = \"message/kefu/deleteLastMessage\";\r\nexport const DELETE_MESSAGE = \"message/kefu/deleteMessage\";\r\nexport const CHANGE_CONTENT_VALUE = \"message/kefu/changeContentValue\";\r\nexport const CHANGE_MESSAGE_VALUE = \"message/kefu/changeMessageValue\";\r\nexport const HANDLE_CHANGE_SELECT = \"message/kefu/handleChangeSelect\";\r\nexport const CHANGE_SELECTED_MESSAGES = \"message/kefu/changeSelectedMessages\";\r\nexport const OPEN_UPDATE_GROUP_MODAL = \"message/kefu/openUpdateGroupModal\";\r\nexport const CHANGE_GROUP = \"message/kefu/changeGroup\";\r\nexport const CANCEL_UPDATE_GROUP = \"message/kefu/cancelUpdateGroup\";\r\nexport const UPDATE_MORE_GROUP = \"message/kefu/updateMoreGroup\";\r\nexport const CHANGE_SEARCH_NAME = \"message/kefu/changeSearchName\";\r\nexport const CLEAR_CONDITION = \"message/kefu/clearCondition\";\r\n\r\nexport const ADD_MESSAGE = \"message/kefu/addMessage\";\r\nexport const SELECT_MESSAGE = \"message/kefu/selectMessage\";\r\nexport const GET_ALL_CODES = \"message/kefu/getAllCodes\";\r\nexport const CHANGE_GONGHAO = \"message/kefu/changeGonghao\";\r\nexport const SELECT_PARAMS = \"message/kefu/selectParams\";\r\nexport const HIDE_PARAMS_MODAL = \"message/kefu/hideParamsModal\";\r\nexport const INIT_KEFU_MESSAGE_INFO = \"message/kefu/initKefuMessageInfo\";\r\nexport const SUBMIT_MESSAGE = \"message/kefu/submitMessage\";\r\nexport const OPEN_SELECT_MODAL = \"message/kefu/openSelectModal\";\r\nexport const CLOSE_SELECT_MODAL = \"message/kefu/closeSelectModal\";\r\nexport const OPEN_PREVIEW_MODAL = \"message/kefu/openPreviewModal\";\r\nexport const CLOSE_PREVIEW_MODAL = \"message/kefu/closePreviewModal\";\r\nexport const CHANGE_OPENID = \"message/kefu/changeOpenId\";\r\n\r\nexport const GET_ALL_GROUP = \"message/kefu/getAllGroup\";\r\nexport const SHOW_GROUP_INPUT = \"message/kefu/showGroupInput\";\r\nexport const HANDLE_GROUP_INPUT_CHANGE = \"message/kefu/handleGroupInputChange\";\r\nexport const HANDLE_GROUP_INPUT_CONFIRM = \"message/kefu/handleGroupInputConfirm\";\r\nexport const DELETE_GROUP = \"message/kefu/handleClose\";\r\nexport const CANCEL_SELECT_GROUP = \"message/kefu/cancelSelectGroup\";\r\n\r\nexport const CHANGE_PAGE = \"message/kefu/changePage\";\r\n\r\n\r\nexport const RESET_STATE = \"message/kefu/resetState\";\r\n","import * as constants from './constants';\r\n\r\nconst defaultState = {\r\n  templateMessageList: [],\r\n  confName: \"\",\r\n\r\n  selectGonghaoModal: true,\r\n  messageInfo: {\r\n    name: \"\",\r\n    code: null,\r\n    templateId: \"\",\r\n    templateName: \"\",\r\n    url: \"\",\r\n    sex: \"all\",\r\n    content: {},\r\n    is_timing: false,\r\n    timing_time: new Date()\r\n  },\r\n  allCodes: [],\r\n  templateList: [],\r\n  templateInfo: {\r\n    template_id: \"\",\r\n  },\r\n  name: \"\",\r\n  templateModalVisible: false,\r\n  content: {\r\n    value: \"\",\r\n    color: \"#000\"\r\n  },\r\n  previewModal: false,\r\n  openid: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n\r\n    case constants.GET_TEMPLATE_LIST:\r\n      newState.templateMessageList = action.data;\r\n      newState.confName = \"\";\r\n      return newState;\r\n    case constants.DELETE_TEMPLATE:\r\n      newState.templateMessageList.splice(action.index, 1);\r\n      return newState;\r\n    case constants.CHANGE_CONF_NAME:\r\n      newState.confName = action.value;\r\n      return newState;\r\n    case constants.SEARCH_CONF_NAME:\r\n      newState.templateMessageList = action.data;\r\n      newState.confName = \"\";\r\n      return newState;\r\n    case constants.SEND_TEMPLATE_MSG:\r\n      let templateMessageList = newState.templateMessageList.map(item => {\r\n        item._id === action.id && (item.status = 1);\r\n        return item\r\n      });\r\n      newState.templateMessageList = templateMessageList;\r\n      return newState;\r\n\r\n    case constants.GET_ALL_CODES:\r\n      newState.allCodes = action.allCodes;\r\n      return newState;\r\n\r\n    case constants.OPEN_SELECT_MODAL:\r\n      newState.selectGonghaoModal = true;\r\n      return newState;\r\n    case constants.OPEN_EDIT_MODAL:\r\n      newState.name = action.key;\r\n      newState.content = action.content;\r\n      newState.templateModalVisible = true;\r\n      return newState;\r\n    case constants.CLOSE_TEMPLATE_MODAL:\r\n      newState.name = \"\";\r\n      newState.templateModalVisible = false;\r\n      newState.content = { value: \"\", color: \"#000\" };\r\n      return newState;\r\n    case constants.CHANGE_TEMPLATE:\r\n      newState.templateInfo = newState.templateList.filter(item => item.template_id === action.value)[0];\r\n      newState.messageInfo.templateId = newState.templateInfo.template_id;\r\n      newState.messageInfo.content = {};\r\n      for(let key in newState.templateInfo.data) {\r\n        newState.messageInfo.content[key] = {\r\n          value: \"\",\r\n          color: \"#000\"\r\n        }\r\n      }\r\n      return newState;\r\n    case constants.EDIT_TEMPLATE:\r\n      newState.content[action.key] = action.value;\r\n      return newState;\r\n    case constants.SAVE_TEMPLATE_MODAL:\r\n      newState.messageInfo.content[newState.name] = newState.content;\r\n      newState.name = \"\";\r\n      newState.templateModalVisible = false;\r\n      newState.content = { value: \"\", color: \"#000\" };\r\n      return newState;\r\n\r\n    case constants.CHANGE_MESSAGE_INFO:\r\n      newState.messageInfo[action.key] = action.value;\r\n      if(action.key === \"is_timing\") {\r\n        newState.messageInfo.timing_time = new Date()\r\n      }\r\n      return newState;\r\n    case constants.CONFIRM_SELECT:\r\n      newState.templateList = action.templateList;\r\n      newState.templateInfo = action.templateInfo;\r\n      newState.messageInfo.templateId = newState.templateInfo.template_id;\r\n      for(let key in newState.templateInfo.data) {\r\n        newState.messageInfo.content[key] = {\r\n          value: \"\",\r\n          color: \"#000\"\r\n        }\r\n      }\r\n      return newState;\r\n    case constants.CLOSE_SELECT_MODAL:\r\n      newState.selectGonghaoModal = false;\r\n      return newState;\r\n    case constants.OPEN_PREVIEW_MODAL:\r\n      newState.previewModal = true;\r\n      return newState;\r\n    case constants.CLOSE_PREVIEW_MODAL:\r\n      newState.previewModal = false;\r\n      newState.openid = \"\";\r\n      return newState;\r\n    case constants.CHANGE_OPENID:\r\n      newState.openid = action.value;\r\n      return newState;\r\n\r\n    case constants.INIT_MESSAGE_INFO:\r\n      newState.messageInfo = JSON.parse(JSON.stringify(action.record));\r\n      newState.templateList = action.templateList;\r\n      newState.templateInfo = newState.templateList.filter(item => item.template_id === action.record.templateId)[0];\r\n      return newState;\r\n\r\n    case constants.RESET_STATE:\r\n      newState = defaultState;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport { Modal, message } from 'antd';\r\n\r\n// 列表页\r\n\r\nexport const getTemplateList = () => {\r\n  return dispatch => {\r\n    axios.get(\"/template\")\r\n      .then(res => {\r\n        const {data} = res.data;\r\n        dispatch({ type: constants.GET_TEMPLATE_LIST, data })\r\n      })\r\n  }\r\n};\r\n\r\nexport const deleteTemplate = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定删除这条模板消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/template/del\", {params: {id}})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              message.success(res.data.success);\r\n              dispatch({ type: constants.DELETE_TEMPLATE, index })\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const sendTemplate = (id, index) => {\r\n  return dispatch => {\r\n    Modal.confirm({\r\n      title: \"确定发送这条模板消息吗？\",\r\n      onOk: () => {\r\n        axios.get(\"/template/send\", {params: {id}})\r\n          .then(res => {\r\n            message.success(res.data);\r\n            dispatch({\r\n              type: constants.SEND_TEMPLATE_MSG,\r\n              id\r\n            });\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeConfNickName = value => ({\r\n  type: constants.CHANGE_CONF_NAME,\r\n  value\r\n});\r\n\r\nexport const searchConfName = confName => {\r\n  return dispatch => {\r\n    if(/^\\?.*/.test(confName) )\r\n    axios.get('/template/search', {params: {confName}})\r\n      .then(res => {\r\n        if(res.data.data.length > 0) {\r\n          dispatch({type: constants.SEARCH_CONF_NAME, data: res.data.data});\r\n          message.success(res.data.msg)\r\n        } else {\r\n          dispatch(getTemplateList());\r\n          message.error(\"没有查询到相关数据\")\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\n\r\n// 编辑模板消息\r\nexport const getAllCodes = () => {\r\n  return dispatch => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.GET_ALL_CODES,\r\n          allCodes: res.data.data\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const openSelectModal = () => ({\r\n  type: constants.OPEN_SELECT_MODAL\r\n});\r\n\r\nexport const openEditModal = (key, content) => ({\r\n  type: constants.OPEN_EDIT_MODAL,\r\n  key, content\r\n});\r\n\r\nexport const closeTemplateModal = () => ({\r\n  type: constants.CLOSE_TEMPLATE_MODAL\r\n});\r\n\r\nexport const changeTemplate = value => ({\r\n  type: constants.CHANGE_TEMPLATE,\r\n  value\r\n});\r\n\r\nexport const saveTemplateModal = () => ({\r\n  type: constants.SAVE_TEMPLATE_MODAL\r\n});\r\n\r\n\r\nexport const editTemplate = (key, value) => ({\r\n  type: constants.EDIT_TEMPLATE,\r\n  key, value\r\n});\r\n\r\nexport const changeMessageInfo = (key, value) => ({\r\n  type: constants.CHANGE_MESSAGE_INFO,\r\n  key, value\r\n});\r\n\r\nexport const confirmSelect = code => {\r\n  return dispatch => {\r\n    dispatch(changeMessageInfo(\"code\", code));\r\n    axios.get('/template/list', {params: {code}})\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.CONFIRM_SELECT,\r\n          templateList: res.data, templateInfo: {...res.data[0]}, code\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n\r\nexport const closeSelectModal = () => ({\r\n  type: constants.CLOSE_SELECT_MODAL\r\n});\r\n\r\n\r\nexport const openPreviewModal = () => ({\r\n  type: constants.OPEN_PREVIEW_MODAL\r\n});\r\n\r\nexport const closePreviewModal = () => ({\r\n  type: constants.CLOSE_PREVIEW_MODAL\r\n});\r\n\r\nexport const preview = ({code, templateId, url, content}, openid) => {\r\n  return dispatch => {\r\n    axios.post('/template/preview', {code, templateId, url, content, openid})\r\n      .then(res => {\r\n        message.success(res.data.msg);\r\n        dispatch(closePreviewModal());\r\n      })\r\n  }\r\n};\r\n\r\nexport const changeOpenId = value => ({\r\n  type: constants.CHANGE_OPENID,\r\n  value\r\n});\r\n\r\nexport const submitMessage = (info, history, templateList) => {\r\n  return dispatch => {\r\n    let url = '/template/create';\r\n    info.templateName = templateList.filter(item => item.template_id === info.templateId)[0].title;\r\n    info._id && (url = '/template/update') && (info.id = info._id);\r\n    info.is_timing && (info.timing_time = new Date(info.timing_time));\r\n    Modal.confirm({\r\n      title: \"确定\" + (info._id ? \"保存这\" : \"创建一\") + \"条模板消息吗？\",\r\n      onOk: () => {\r\n        axios.post(url, {...info})\r\n          .then(res => {\r\n            if(res.data.success) {\r\n              message.success(res.data.success);\r\n              history.goBack()\r\n            } else {\r\n              message.error(res.data.err)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\n\r\nexport const initMessageInfo = record => {\r\n  return dispatch => {\r\n    dispatch(closeSelectModal());\r\n    axios.get('/template/list', {params: {code: record.code}})\r\n      .then(res => {\r\n        const action = {\r\n          type: constants.INIT_MESSAGE_INFO,\r\n          templateList: res.data,\r\n          record\r\n        };\r\n        dispatch(action);\r\n      })\r\n  }\r\n};\r\n// ({\r\n//   type: constants.INIT_MESSAGE_INFO,\r\n//   record\r\n// });\r\n\r\nexport const resetState = () => ({\r\n  type: constants.RESET_STATE\r\n});\r\n","// 列表页\r\n// 获取模板消息列表\r\nexport const GET_TEMPLATE_LIST = \"message/template/getTemplateList\";\r\nexport const DELETE_TEMPLATE = \"message/template/deleteTemplate\";\r\nexport const CHANGE_CONF_NAME = \"message/template/changeConfNickName\";\r\nexport const SEARCH_CONF_NAME = \"message/template/searchConfName\";\r\nexport const SEND_TEMPLATE_MSG = \"message/template/sendTemplate\";\r\n\r\n\r\n// 编辑模板消息\r\n// 获取所有公号\r\nexport const GET_ALL_CODES = \"message/template/getAllCodes\";\r\n\r\n// 打开选择公号面板\r\nexport const OPEN_SELECT_MODAL = \"message/template/openSelectModal\";\r\n// 关闭选择公号面板\r\nexport const CLOSE_SELECT_MODAL = \"message/template/closeSelectModal\";\r\n\r\n// 打开列表编辑的modal\r\nexport const OPEN_EDIT_MODAL = \"message/template/openEditModal\";\r\n// 关闭列表编辑的modal\r\nexport const CLOSE_TEMPLATE_MODAL = \"message/template/closeTemplateModal\";\r\n// 更换模板\r\nexport const CHANGE_TEMPLATE = \"message/template/changeTemplate\";\r\n// 编辑模板\r\nexport const EDIT_TEMPLATE = \"message/template/editTemplate\";\r\n// 保存模板\r\nexport const SAVE_TEMPLATE_MODAL = \"message/template/saveTemplateModal\";\r\n\r\n// 修改messageInfo\r\nexport const CHANGE_MESSAGE_INFO = \"message/template/changeMessageInfo\";\r\n// 确认选择公号，关闭modal，获取模板列表\r\nexport const CONFIRM_SELECT = \"message/template/confirmSelect\";\r\n\r\nexport const OPEN_PREVIEW_MODAL = \"message/template/openPreviewModal\";\r\nexport const CLOSE_PREVIEW_MODAL = \"message/template/closePreviewModal\";\r\nexport const CHANGE_OPENID = \"message/template/changeOpenId\";\r\n\r\n// 初始化messageInfo\r\nexport const INIT_MESSAGE_INFO = \"message/template/initMessageInfo\";\r\n\r\n\r\n// 重置state\r\nexport const RESET_STATE = \"message/template/resetState\";\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as groupReducer } from './group/store';\r\nimport { reducer as kefuReducer } from './kefu/store';\r\nimport { reducer as templateReducer } from './template/store';\r\n\r\nconst reducer = combineReducers({\r\n  group: groupReducer,\r\n  kefu: kefuReducer,\r\n  template: templateReducer\r\n});\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport gonghaoReducer from '../pages/gonghao/reducer';\r\nimport messageReducer from '../pages/message/reducer';\r\n\r\nconst reducer = combineReducers({\r\n  gonghao: gonghaoReducer,\r\n  message: messageReducer,\r\n});\r\n\r\nexport default reducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from './reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport \"./index.scss\";\r\nimport {Input, Icon, message} from 'antd';\r\nimport axios from '../../utils/http';\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.login = this.login.bind(this);\r\n    this.state = {\r\n      loginInfo: {\r\n        username: \"\",\r\n        password: \"\"\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loginInfo } = this.state;\r\n    const bgStyle = {\r\n      minHeight: \"100vh\",\r\n      backgroundSize: \"100%\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundAttachment: \"fixed\",\r\n      backgroundImage: `url(${require(\"../../assets/images/login_bg.png\")})`\r\n    };\r\n    return (\r\n      <div className=\"login-bg\" style={bgStyle}>\r\n        <div className=\"bg-mask\"></div>\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"content\">\r\n            <p className=\"title\">明星说后台管理系统</p>\r\n            <p>运营与管控一体化的整合式服务平台</p>\r\n            <p>一起解构数字世界，碰撞科技创新思想</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"login-form-wrapper\">\r\n          <div className=\"login-form\">\r\n            <h4 className=\"login-title\">登录</h4>\r\n            <Input\r\n              value={loginInfo.username}\r\n              size=\"large\"\r\n              onChange={e => this.changeInputValue(e.target.value, \"username\")}\r\n              prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)', marginRight: 10}}/>}\r\n              style={{marginBottom: 30}}\r\n              placeholder=\"用户名\"\r\n              onKeyUp={e => e.keyCode === 13 && this.login()}\r\n            />\r\n            <Input\r\n              value={loginInfo.password}\r\n              size=\"large\"\r\n              type=\"password\"\r\n              onChange={e => this.changeInputValue(e.target.value, \"password\")}\r\n              prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)', marginRight: 10}}/>}\r\n              placeholder=\"密码\"\r\n              onKeyUp={e => e.keyCode === 13 && this.login()}\r\n            />\r\n            <button className=\"login-btn cursor\" onClick={this.login}>登录</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  changeInputValue(value, name) {\r\n    const { loginInfo } = this.state;\r\n    loginInfo[name] = value;\r\n    this.setState(state => ({loginInfo: {...state.loginInfo, ...loginInfo}}))\r\n  }\r\n\r\n  login() {\r\n    const { loginInfo } = this.state;\r\n    if(loginInfo.username && loginInfo.password) {\r\n      loginInfo.password = this.$MD5(loginInfo.password).toString();\r\n      axios.post('/account/login', {...loginInfo})\r\n        .then(res => {\r\n          const { code, msg, data } = res.data;\r\n          if(code === -1) {\r\n            message.error(msg);\r\n          } else {\r\n            const userInfo = JSON.stringify(data[0]);\r\n            localStorage.setItem(\"userInfo\", userInfo);\r\n            window.location.href = '/admin';\r\n            this.setState({loginInfo: {}});\r\n            message.success(msg)\r\n          }\r\n        })\r\n    } else {\r\n      message.warning(\"用户名或密码不能为空\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Avatar, Popover, Icon, message, Modal, Form, Input, Tooltip } from 'antd';\r\nimport axios from 'axios';\r\n\r\nimport './index.scss';\r\n\r\nclass HeaderWrapper extends Component {\r\n\r\n  state = {\r\n    userInfo: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userInfo = localStorage.getItem(\"userInfo\");\r\n    if(userInfo) {\r\n      userInfo = JSON.parse(userInfo);\r\n      this.setState({userInfo})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { userInfo, showUpdateModal } = this.state;\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div className='header-wrapper'>\r\n        <Link to=\"/\">\r\n          <img className=\"logo fl\" src={require(\"../../../assets/images/logo.png\")} alt=\"\"/>\r\n        </Link>\r\n        <div className=\"user-info fr\">\r\n          <Tooltip title=\"帮助文档\">\r\n            <a href=\"http://t.dmmup.com/平台接管及发文方式.pdf\" target=\"__blank\">\r\n              <Avatar size={25} icon=\"question\" style={{marginRight: 10, color: '#f56a00', backgroundColor: '#fde3cf' }} />\r\n            </a>\r\n          </Tooltip>\r\n          <Avatar size={25} icon=\"user\" />\r\n          <Popover content={\r\n            <>\r\n              <p style={{fontSize: 12, marginBottom: 10}} className=\"cursor\" onClick={() => this.setState({showUpdateModal: true})}><Icon style={{marginRight: 5}} type=\"edit\" />修改信息</p>\r\n              <p style={{fontSize: 12}} className=\"cursor\" onClick={logout}><Icon style={{marginRight: 5}} type=\"logout\" />退出</p>\r\n            </>\r\n          }>\r\n            <div className=\"user fr cursor\">\r\n              <p>{userInfo.username},</p>\r\n              <p>欢迎回来<Icon type=\"down\" /></p>\r\n            </div>\r\n          </Popover>\r\n          <Modal visible={showUpdateModal} title=\"修改用户信息\" onOk={this.updateInfo} onCancel={this.cancelUpdate}>\r\n            <Form labelCol={{span: 4}} wrapperCol={{span: 20}}>\r\n              <Form.Item label=\"用户名：\">\r\n                {getFieldDecorator('username', {\r\n                  initialValue: userInfo.username\r\n                })(\r\n                  <Input placeholder=\"请输入用户名\"/>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"新密码：\">\r\n                {getFieldDecorator('password', {\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"登录密码不能为空\"\r\n                  }]\r\n                })(\r\n                  <Input type=\"password\" placeholder=\"请输入新密码\"/>\r\n                )}\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  updateInfo = () => {\r\n    const { getFieldsValue } = this.props.form;\r\n    const { userInfo: {_id: id} } = this.state;\r\n    const { username, password } = getFieldsValue();\r\n    if(password.trim() && username.trim()) {\r\n      Modal.confirm({\r\n        title: \"确定修改用户信息吗？\",\r\n        onOk: () => {\r\n          let md5Password = this.$MD5(password).toString();\r\n          axios.put('/account', {id, username, password: md5Password })\r\n            .then(res => {\r\n              const {code, msg} = res.data;\r\n              if(code === 1) {\r\n                message.success(msg + \"请重新登录\");\r\n                this.cancelUpdate();\r\n                localStorage.setItem(\"userInfo\", \"\");\r\n                window.location.href = \"/admin/login\";\r\n              } else {\r\n                message.error(msg);\r\n              }\r\n            })\r\n        }\r\n      })\r\n    } else {\r\n      message.error(\"请检查输入是否有误，密码首尾不能为空格\")\r\n    }\r\n  };\r\n\r\n  cancelUpdate = () => {\r\n    const { setFieldsValue } = this.props.form;\r\n    this.setState({showUpdateModal: false});\r\n    setFieldsValue({password: \"\"});\r\n  }\r\n\r\n}\r\n\r\nconst updateInfo = () => {\r\n\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.setItem(\"userInfo\", \"\");\r\n  message.success(\"退出登录成功\");\r\n  setTimeout(() => {\r\n    window.location.href = \"/admin/login\";\r\n  }, 500)\r\n};\r\n\r\nexport default Form.create()(HeaderWrapper);\r\n","import React, {Component} from 'react';\r\nimport {Menu, Icon} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './index.scss';\r\n\r\nconst {SubMenu} = Menu;\r\nconst MenuItem = Menu.Item;\r\n\r\nclass SideWrapper extends Component {\r\n  menuList = [\r\n    {\r\n      keyIndex: 'gonghao',\r\n      title: '公号管理',\r\n      icon: 'appstore',\r\n      role: 2,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'tuoguan',\r\n          title: '公号托管',\r\n          path: '/admin/gonghao/tuoguan'\r\n        }, {\r\n          keyIndex: 'menu',\r\n          title: '菜单配置',\r\n          path: '/admin/gonghao/menu'\r\n        }, {\r\n          keyIndex: 'reply',\r\n          title: '自动回复',\r\n          path: '/admin/gonghao/reply'\r\n        // }, {\r\n        //   keyIndex: 'qrcode',\r\n        //   title: '参数二维码',\r\n        //   path: '/admin/gonghao/qrcode'\r\n        }\r\n      ]\r\n    }, {\r\n      keyIndex: 'message',\r\n      title: '消息管理',\r\n      icon: 'snippets',\r\n      role: 2,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'kefu',\r\n          title: '客服消息',\r\n          path: '/admin/message/kefu'\r\n        }, {\r\n          keyIndex: 'group',\r\n          title: '群发消息',\r\n          path: '/admin/message/group'\r\n        }, {\r\n          keyIndex: 'template',\r\n          title: '模板消息',\r\n          path: '/admin/message/template'\r\n        }\r\n      ]\r\n    }, {\r\n      keyIndex: 'channel',\r\n      title: '渠道推广',\r\n      icon: 'control',\r\n      role: 2,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'spread',\r\n          title: '推广链接',\r\n          path: '/admin/channel/spread'\r\n        }\r\n      ]\r\n    }, {\r\n      keyIndex: 'account',\r\n      title: '账户管理',\r\n      icon: 'user',\r\n      role: 0,\r\n      subMenuList: [\r\n        {\r\n          keyIndex: 'list',\r\n          title: '账户管理',\r\n          path: '/admin/account/list'\r\n        }, {\r\n          keyIndex: 'add',\r\n          title: '新增用户',\r\n          path: '/admin/account/add'\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  state = {\r\n    selectedKeys: [],\r\n    role: null\r\n  };\r\n\r\n  onSelect = async (selectItem) => {\r\n    const latestSelectedKey = selectItem.selectedKeys.find(key => this.state.selectedKeys.indexOf(key) === -1);\r\n    let selectList = [];\r\n    await this.menuList.map(item => (selectList = [...selectList, ...item.subMenuList]));\r\n    await selectList.find(item => (\r\n      item.keyIndex === latestSelectedKey\r\n      && this.setState({ selectedKeys: latestSelectedKey ? [latestSelectedKey] : [this.state.role === 2 ? 'tuoguan' : 'list'] })\r\n    ))\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    let userInfo = localStorage.getItem(\"userInfo\");\r\n    if(userInfo) {\r\n      userInfo = JSON.parse(userInfo);\r\n      this.setState({\r\n        role: userInfo.role,\r\n        selectedKeys: [window.location.pathname.split('/')[3] || (userInfo.role === 2 ? 'tuoguan' : 'list')]\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const pathName = window.location.pathname;\r\n    const MenuListRender = this.menuList.map((item, index) => {\r\n      if(item.role === this.state.role) {\r\n        const SubMenuList = item.subMenuList.map(subItem => (\r\n          <MenuItem key={subItem.keyIndex}><Link to={subItem.path}>{subItem.title}</Link></MenuItem>\r\n        ));\r\n        return (<SubMenu\r\n          key={item.keyIndex}\r\n          title={\r\n            <span className='side-item'>\r\n            <Icon className=\"side-icon\" type={item.icon}/>\r\n            <span>{item.title}</span>\r\n          </span>\r\n          }\r\n        >\r\n          {SubMenuList}\r\n        </SubMenu>)\r\n      }\r\n      return '';\r\n    });\r\n    return (\r\n      <div className='side-wrapper'>\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"light\"\r\n          selectedKeys={this.state.selectedKeys}\r\n          defaultOpenKeys={[window.location.pathname.split('/')[2] || (this.state.role === 2 ? 'gonghao' : 'account')]}\r\n          onSelect={this.onSelect}\r\n          defaultSelectedKeys={[pathName]}\r\n        >\r\n          {MenuListRender}\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SideWrapper;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Breadcrumb } from 'antd';\r\nimport { withRouter } from 'react-router'\r\nimport './index.scss';\r\n\r\nconst breadList = {\r\n  '/gonghao': '公号管理',\r\n\r\n  '/gonghao/tuoguan': '公号托管',\r\n  '/gonghao/tuoguan/group': '分组管理',\r\n\r\n  '/gonghao/tuoguan/error': '错误信息',\r\n\r\n  '/gonghao/tuoguan/config': '公号配置',\r\n  '/gonghao/tuoguan/config/create': '新建配置',\r\n  '/gonghao/tuoguan/config/update': '修改配置',\r\n\r\n  '/gonghao/menu': '配置菜单',\r\n  '/gonghao/menu/create': '新建菜单',\r\n  '/gonghao/menu/update': '修改菜单',\r\n\r\n  '/gonghao/reply': '自动回复',\r\n  '/gonghao/reply/create': '新建素材',\r\n  '/gonghao/reply/update': '修改素材',\r\n\r\n  '/message': '消息管理',\r\n\r\n  '/message/kefu': '客服消息',\r\n  '/message/kefu/create': '新建消息',\r\n  '/message/kefu/update': '修改消息',\r\n\r\n  '/message/group': '群发消息',\r\n  '/message/group/material': '群发素材',\r\n  '/message/group/history': '历史记录',\r\n\r\n  '/message/template': '模板消息',\r\n  '/message/template/create': '创建消息',\r\n  '/message/template/update': '修改消息',\r\n\r\n  '/channel': \"渠道推广\",\r\n  '/channel/spread': '推广链接',\r\n  '/channel/spread/create': '创建素材',\r\n  '/channel/spread/update': '修改素材',\r\n\r\n  '/source': '素材库',\r\n  '/source/group': '图文素材',\r\n  '/source/group/create': '新建素材',\r\n  '/source/group/update': '修改素材',\r\n\r\n  '/wechat/qrcode': '参数二维码',\r\n  '/wechat/qrcode/create': '新增二维码',\r\n  '/wechat/qrcode/update': '修改二维码',\r\n\r\n  '/account': '账户管理',\r\n  '/account/list': '账户列表',\r\n  '/account/add': '新增账户',\r\n};\r\n\r\nclass BreadWrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pathSnippets: null,\r\n      extraBreadcrumbItems: null,\r\n    }\r\n  }\r\n\r\n  getPath = () => {\r\n    this.setState({\r\n      pathSnippets: window.location.pathname.split('/').slice(2)\r\n    });\r\n    this.setState((prev) => {\r\n      return {\r\n        extraBreadcrumbItems: prev.pathSnippets.map((_, index) => {\r\n          let url = `/${prev.pathSnippets.slice(0, index + 1).join('/')}`;\r\n          return (\r\n            <Breadcrumb.Item key={url}>\r\n              {breadList[url]}\r\n            </Breadcrumb.Item>\r\n          );\r\n        })\r\n      }\r\n    })\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps () {\r\n    this.getPath();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPath();\r\n  }\r\n\r\n  render() {\r\n    const { extraBreadcrumbItems } = this.state;\r\n    return (\r\n    \t<div className='bread-wrapper'>\r\n    \t\t<div className='bread-nav'>\r\n          <Breadcrumb>\r\n            {extraBreadcrumbItems}\r\n          </Breadcrumb>\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(BreadWrapper);","import React from 'react';\r\nimport {Layout, Card} from 'antd';\r\nimport HeaderWrapper from './header';\r\nimport SiderWrapper from './sider';\r\nimport BreadCrumb from './bread';\r\nimport \"./index.scss\";\r\n\r\nconst {Content, Sider, Header, Footer} = Layout;\r\n\r\nconst BasicLayout = props => <Layout className=\"basic-layout\">\r\n  <HeaderWrapper/>\r\n  <Layout>\r\n    <Sider collapsible  theme=\"light\" width=\"180\" style={{minHeight: \"calc(100vh - 50px)\"}}>\r\n      <SiderWrapper/>\r\n    </Sider>\r\n    <Layout>\r\n      <Content style={{marginLeft: 2}}>\r\n        <Card style={{minHeight: \"calc(100vh - 90px)\"}}>\r\n          <Layout>\r\n            <Header style={{ background: '#fff', padding: 0, borderBottom: \"2px solid #eee\", height: 43 }}><BreadCrumb /></Header>\r\n            <Content>{props.content}</Content>\r\n          </Layout>\r\n        </Card>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center', padding: \"10px 0\" }}>Copyright&copy;2019  最终解释权归本公司所有</Footer>\r\n    </Layout>\r\n  </Layout>\r\n</Layout>;\r\n\r\nexport default BasicLayout;","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\n\r\nconst ButtonList = {\r\n  \"warning\": \"#F39C12\",\r\n  \"danger\": \"#E74C3C\",\r\n  \"success\": \"#2ECC71\",\r\n  \"info\": \"#7F8C8D\",\r\n  \"update\": \"#3498DB\"\r\n};\r\n\r\n\r\nclass ButtonWrapper extends Component {\r\n  state = {\r\n    buttonStyle: {\r\n      background: \"#3498DB\",\r\n      color: \"#fff\",\r\n      marginRight: 5,\r\n      marginLeft: 0,\r\n      marginBottom: 0\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    const { background = \"update\", color = \"#fff\", mr = 5, ml = 0, mb = 0 } = this.props;\r\n    this.setState({\r\n      buttonStyle: { background: ButtonList[background], color, marginRight: mr, marginLeft: ml, marginBottom: mb }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { size = \"small\", buttonContent, disabled = false, onClick } = this.props;\r\n    const { buttonStyle } = this.state;\r\n    return (\r\n    \t<Button size={size} disabled={disabled} style={buttonStyle} onClick={onClick}>{buttonContent}</Button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ButtonWrapper;","import React, {Component} from 'react';\r\nimport {Input, Card, List, Modal, Form, Select, Radio, Tag, Tooltip, Avatar, Icon} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport {actionCreators} from './store';\r\nimport './index.scss';\r\nimport Button from \"../../../common/components/Button\";\r\n\r\nconst {Search} = Input;\r\nconst {Option} = Select;\r\n\r\nclass Tuoguan extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getGroupList();\r\n    this.props.getAllGonghaoList();\r\n  }\r\n\r\n  render() {\r\n    const {gonghaoTagList, gonghaoList, searchByName, searchName, changeSearchInput, jieguan, addNewGonghao, openGonghaoModal, gonghaoModal, closeGonghaoModal, gonghaoInfo, updateGonghaoInfo, changeGroup, changeAttribute, changeAbTest, deleteGonghao, group, changeSelectValue, status} = this.props;\r\n    let innerWidth = window.innerWidth > 1440;\r\n    const pagination = {\r\n      pageSize: innerWidth ? 24 : 12\r\n    };\r\n    return (\r\n      <div>\r\n        <div className='container'>\r\n          <Search\r\n            placeholder='请输入公号名称'\r\n            className='search-btn'\r\n            value={searchName}\r\n            onChange={changeSearchInput}\r\n            onSearch={searchName => searchByName(searchName)}\r\n          />\r\n          <Select value={group} onChange={value => changeSelectValue(\"group\", value)} style={{width: 150, marginLeft: 10}}>\r\n            <Option value=\"全部\">全部公号</Option>\r\n            <Option value=\"未分组\">未分组</Option>\r\n            {gonghaoTagList.map(item => <Option key={item._id} value={item.name}>{item.name}</Option>)}\r\n          </Select>\r\n          <Select value={status} onChange={value => changeSelectValue(\"status\", value)} style={{width: 100, marginLeft: 10}}>\r\n            <Option value=\"全部\">全部</Option>\r\n            <Option value={1}>已接管</Option>\r\n            <Option value={-1}>接管中</Option>\r\n            <Option value={0}>待接管</Option>\r\n            <Option value={-2}>未接管</Option>\r\n          </Select>\r\n          <div className=\"fr btn-wrapper\">\r\n            <Button background=\"success\" size=\"default\"\r\n                    buttonContent={<Link to='/admin/gonghao/tuoguan/group'>分组管理</Link>}/>\r\n            <Button size=\"default\" buttonContent=\"添加新公号\" onClick={addNewGonghao}/>\r\n          </div>\r\n          <div className='table-wrapper'>\r\n            <List\r\n              grid={{gutter: 16, sm: 4, xxl: 6}}\r\n              dataSource={gonghaoList}\r\n              pagination={pagination}\r\n              renderItem={(item, index) => (\r\n                <List.Item>\r\n                  <Card className=\"card-item\"\r\n                        actions={\r\n                          [\r\n                            <Tooltip title=\"修改分组和公号属性\"><span onClick={() => openGonghaoModal(item._id, item.group, item.attribute, item.ab_test)}>修改</span></Tooltip>,\r\n                            <Tooltip title=\"接管粉丝，打标签\"><span className={item.status === -2 ? \"\" : \"disabled-click\"}\r\n                                           onClick={() => item.status === -2 ? jieguan(item.code, index) : console.log(\"已接管或接管中\")}>{item.status === -2 ? \"接管\" : (item.status === -1 ? \"接管中\" : (item.status === 0 ? \"待接管\" : \"已接管\"))}</span></Tooltip>,\r\n                            <Tooltip title={<p>删除公号信息<br />解除授权请在公号后台操作</p>}><span onClick={() => deleteGonghao(item._id, index)}>删除</span></Tooltip>\r\n                          ]\r\n                        }>\r\n                    {item.head_img ? <img src={item.head_img} alt=\"\"/> : <Avatar shape=\"circle\" size={40} icon=\"user\" style={{marginRight: 5, marginTop: -20}}/>}\r\n                    <div className=\"gonghao-info\">\r\n                      <p>{item.nick_name}</p>\r\n                      <Tag>{item.group}</Tag>\r\n                    </div>\r\n                  </Card>\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Modal visible={gonghaoModal} title=\"修改公号信息\" onCancel={closeGonghaoModal} onOk={() => updateGonghaoInfo(gonghaoInfo)}>\r\n          <Form labelCol={{span: 8}} wrapperCol={{span: 10}}>\r\n            <Form.Item label=\"公号分组\" >\r\n              <Select value={gonghaoInfo.group || \"未分组\"} onChange={changeGroup}>\r\n                <Option value=\"未分组\">未分组</Option>\r\n                {gonghaoTagList.map(item => <Option key={item._id} value={item.name}>{item.name}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item label=\"公号属性\">\r\n              <Radio.Group value={gonghaoInfo.attribute} onChange={changeAttribute}>\r\n                <Radio value={0}>默认</Radio>\r\n                <Radio value={1}>男</Radio>\r\n                <Radio value={2}>女</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item label={<span>测试性别 <Tooltip title={<span>将公号男粉丝或女粉丝平均分开,一般默认即可<br />(如有需要，请在接管前选择)</span>}><Icon className=\"cursor\" type=\"question-circle\" theme=\"filled\" /></Tooltip></span>}>\r\n              <Radio.Group value={gonghaoInfo.ab_test} onChange={changeAbTest}>\r\n                <Radio value={0}>默认</Radio>\r\n                <Radio value={1}>男</Radio>\r\n                <Radio value={2}>女</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  gonghaoTagList: state.gonghao.tuoguan.gonghaoTagList,\r\n  allGonghaoList: state.gonghao.tuoguan.allGonghaoList,\r\n  gonghaoList: state.gonghao.tuoguan.gonghaoList,\r\n  currentPage: state.gonghao.tuoguan.currentPage,\r\n  searchName: state.gonghao.tuoguan.searchName,\r\n  gonghaoModal: state.gonghao.tuoguan.gonghaoModal,\r\n  gonghaoInfo: state.gonghao.tuoguan.gonghaoInfo,\r\n  group: state.gonghao.tuoguan.group,\r\n  status: state.gonghao.tuoguan.status,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getGroupList() {\r\n    dispatch(actionCreators.getGroupList())\r\n  },\r\n  getAllGonghaoList() {\r\n    dispatch(actionCreators.getAllGonghaoList())\r\n  },\r\n  changePage(page) {\r\n    dispatch(actionCreators.changePage(page))\r\n  },\r\n  changeSearchInput(e) {\r\n    dispatch(actionCreators.changeSearchInput(e.target.value))\r\n  },\r\n  searchByName(value) {\r\n    dispatch(actionCreators.searchByName(value));\r\n  },\r\n  deleteGonghao(id, index) {\r\n    dispatch(actionCreators.deleteGonghao(id, index));\r\n  },\r\n  jieguan(code, index) {\r\n    dispatch(actionCreators.jieguan(code, index));\r\n  },\r\n  addNewGonghao() {\r\n    dispatch(actionCreators.addNewGonghao());\r\n  },\r\n  openGonghaoModal(id, group, attribute, ab_test) {\r\n    dispatch(actionCreators.openGonghaoModal(id, group, attribute, ab_test));\r\n  },\r\n  closeGonghaoModal() {\r\n    dispatch(actionCreators.closeGonghaoModal());\r\n  },\r\n  updateGonghaoInfo(gonghaoInfo) {\r\n    dispatch(actionCreators.updateGonghaoInfo(gonghaoInfo));\r\n  },\r\n  changeGroup(name) {\r\n    dispatch(actionCreators.changeGroup(name));\r\n  },\r\n  changeAttribute(e) {\r\n    let attribute = e.target.value;\r\n    dispatch(actionCreators.changeAttribute(attribute));\r\n  },\r\n  changeAbTest(e) {\r\n    let ab_test = e.target.value;\r\n    dispatch(actionCreators.changeAbTest(ab_test));\r\n  },\r\n  changeSelectValue(key, value) {\r\n    dispatch(actionCreators.changeSelectValue(key, value));\r\n  },\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Tuoguan);","import React, { Component } from 'react';\r\nimport { Layout, List, Input, Card, Table, Button, Modal, Radio, message, Icon } from 'antd'\r\nimport axios from 'axios';\r\n\r\nconst { Sider, Content } = Layout;\r\nconst { Search } = Input;\r\n\r\n\r\nclass GonghaoGroup extends Component {\r\n  columns = [\r\n    {\r\n      key: \"nick_name\",\r\n      dataIndex: \"nick_name\",\r\n      title: \"公号名称\",\r\n      align: \"center\",\r\n      width: 200\r\n    }, {\r\n      key: \"group\",\r\n      dataIndex: \"group\",\r\n      title: \"分组\",\r\n      align: \"center\"\r\n    }, {\r\n      key: \"action\",\r\n      title: \"操作\",\r\n      align: \"center\",\r\n      width: 100,\r\n      render: (text, record, index) => <Button type=\"primary\" size=\"small\" onClick={() => this.setState({gonghaoModal: true, gonghao_id: record._id, gonghao_index: index})}>修改分组</Button>\r\n    }\r\n  ];\r\n\r\n  state = {\r\n    gonghaoTagList: [],\r\n    gonghaoModal: false,\r\n    editGroupModalVisible: false,\r\n    group: \"\",\r\n    gonghaoList: [],\r\n    group_id: \"\",\r\n    group_index: -1,\r\n    gonghao_id: \"\",\r\n    gonghao_index: -1,\r\n    selectGroup: \"\",\r\n    selectedRowKeys: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGonghaoTagList();\r\n    this.getGroupGonghao();\r\n  }\r\n\r\n  getGonghaoTagList = () => {\r\n    axios.get(\"/gonghaoTag\")\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          const { data: gonghaoTagList } = res.data;\r\n          this.setState({gonghaoTagList})\r\n        }\r\n      })\r\n  };\r\n\r\n  getGroupGonghao = group => {\r\n    axios.get('/conf/group', { params: {group} })\r\n      .then(res => {\r\n        let { data: gonghaoList } = res.data;\r\n        this.setState({gonghaoList})\r\n        gonghaoList.length === 0 && message.warning(\"该分组中还没有数据，请添加\")\r\n      })\r\n  };\r\n\r\n  openEditGroupModal = () => {\r\n    this.setState({editGroupModalVisible: true})\r\n  };\r\n\r\n  closeEditGroupModal = () => {\r\n    this.setState({editGroupModalVisible: false, group: \"\"})\r\n  };\r\n\r\n  confirmEditGroup = () => {\r\n    const { group: name, group_id, group_index } = this.state;\r\n    if(!group_id) {\r\n      this.addGroup(name)\r\n    } else {\r\n      this.updateGroup(name, group_id, group_index)\r\n    }\r\n  };\r\n\r\n  addGroup = name => {\r\n    Modal.confirm({\r\n      title: \"确定添加一个分组吗？\",\r\n      onOk: () => {\r\n        if(name) {\r\n          axios.post(\"/gonghaoTag\", {name})\r\n            .then(res => {\r\n              if(res.data.code === 1 && res.data.exist === 0) {\r\n                const { data, msg } = res.data;\r\n                this.setState(state => {\r\n                  let gonghaoTagList = [...state.gonghaoTagList];\r\n                  gonghaoTagList.push(data);\r\n                  return {gonghaoTagList};\r\n                });\r\n                message.success(msg);\r\n                this.closeEditGroupModal();\r\n              } else if (res.data.code === 1 && res.data.exist === 1) {\r\n                message.warning(\"分组已存在，请更换分组名称\");\r\n              } else {\r\n                message.error(res.data.msg)\r\n              }\r\n            });\r\n        } else {\r\n          message.error(\"分组名称不能为空\")\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  updateGroup = (name, id, index) => {\r\n    Modal.confirm({\r\n      title: \"确定修改分组名称吗？\",\r\n      onOk: () => {\r\n        if(name) {\r\n          axios.put(\"/gonghaoTag\", {name, id})\r\n            .then(res => {\r\n              if(res.data.code === 1) {\r\n                const { data, msg } = res.data;\r\n                this.setState(state => {\r\n                  let gonghaoTagList = state.gonghaoTagList;\r\n                  Object.assign(gonghaoTagList[index], data);\r\n                  return {gonghaoTagList};\r\n                });\r\n                message.success(msg);\r\n                this.closeEditGroupModal();\r\n              }else {\r\n                message.error(res.data.msg)\r\n              }\r\n            });\r\n        } else {\r\n          message.error(\"分组名称不能为空\")\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  deleteGroup = (id, index) => {\r\n    Modal.confirm({\r\n      title: \"确定删除这个分组吗？\",\r\n      onOk: () => {\r\n        axios.delete('/gonghaoTag/' + id)\r\n          .then(res => {\r\n            const {code , msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.getGroupGonghao();\r\n              this.setState(state => {\r\n                let gonghaoTagList = state.gonghaoTagList;\r\n                gonghaoTagList.splice(index, 1);\r\n                return {gonghaoTagList}\r\n              })\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  changeGroupValue = e => {\r\n    let group = e.target.value;\r\n    this.setState({group})\r\n  };\r\n\r\n  searchGroupGonghao = nick_name => {\r\n    if(nick_name) {\r\n      axios.get('/conf/find_one', {params: {nick_name}})\r\n        .then(res => {\r\n          const {data: gonghaoList, code, msg} = res.data;\r\n          if(code === 1) {\r\n            message.success(msg);\r\n            this.setState({gonghaoList})\r\n          } else {\r\n            message.error(\"没有查询到相关数据，请检查输入是否有误\")\r\n          }\r\n        })\r\n    } else {\r\n      message.error(\"公号名称不能为空\")\r\n    }\r\n\r\n  };\r\n\r\n  closeGonghaoModal = () => {\r\n    this.setState({\r\n      gonghaoModal: false,\r\n      gonghao_id: \"\",\r\n      gonghao_index: -1,\r\n      selectGroup: \"\"\r\n    })\r\n  };\r\n\r\n  submitGonghaoModal = () => {\r\n    const { gonghao_id: id, gonghao_index, selectGroup: group, selectedRowKeys: ids } = this.state;\r\n    if(id) {\r\n      this.updateOne(id, gonghao_index, group)\r\n    } else {\r\n      this.updateMore(ids, group)\r\n    }\r\n  };\r\n\r\n  openUpdateMoreModal = () => {\r\n    const {selectedRowKeys} = this.state;\r\n    if(selectedRowKeys.length === 0) {\r\n      message.warning(\"请先选择公号\")\r\n    } else {\r\n      this.setState({\r\n        gonghaoModal: true\r\n      })\r\n    }\r\n  };\r\n\r\n  updateOne = (id, gonghao_index, group) => {\r\n    Modal.confirm({\r\n      title: \"确定修改分组吗？\",\r\n      onOk: () => {\r\n        axios.put('/conf', {id, group})\r\n          .then(res => {\r\n            const { code, msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.setState(state => {\r\n                let gonghaoList = [...state.gonghaoList];\r\n                gonghaoList.splice(gonghao_index, 1);\r\n                return {gonghaoList}\r\n              });\r\n              this.closeGonghaoModal();\r\n            } else {\r\n              message.error(msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  updateMore = (ids, group) => {\r\n    Modal.confirm({\r\n      title: \"确定修改分组1吗？\",\r\n      onOk: () => {\r\n        axios.put('/conf/multi_select', {ids, group})\r\n          .then(res => {\r\n            const { code, msg } = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.getGroupGonghao();\r\n              this.closeGonghaoModal();\r\n              this.setState({selectedRowKeys: []})\r\n            } else {\r\n              message.error(msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  changeSelectGroup = e => {\r\n    let selectGroup = e.target.value;\r\n    this.setState({selectGroup});\r\n  };\r\n\r\n  render() {\r\n    const { gonghaoTagList, gonghaoModal, editGroupModalVisible, gonghaoList, group, selectGroup } = this.state;;\r\n    const addGroupStyle = {\r\n      width: \"90%\",\r\n      margin: \"15px auto 0\",\r\n      padding: \"10px 0\",\r\n      borderRadius: 5,\r\n      border: \"1px dashed #999\"\r\n    };\r\n    const rowSelection = {\r\n      selectedRowKeys: this.state.selectedRowKeys,\r\n      onChange: selectedRowKeys => {\r\n        this.setState({selectedRowKeys})\r\n      }\r\n    };\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Layout>\r\n            <Sider theme=\"light\">\r\n              <List\r\n                header={<div className=\"cursor userSelect\" onClick={() => this.getGroupGonghao(\"未分组\")}>未分组</div>}\r\n                bordered\r\n                dataSource={gonghaoTagList}\r\n                style={{marginRight: 10}}\r\n                renderItem={(item, index) => (\r\n                  <List.Item className=\"userSelect\">\r\n                    <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", width: \"100%\", lineHeight: 1}}>\r\n                      <p className=\"cursor\" onClick={() => this.getGroupGonghao(item.name)}>{item.name}</p>\r\n                      <div>\r\n                        <Icon className=\"cursor\" style={{marginRight: 10}} type=\"form\" onClick={() => this.setState({editGroupModalVisible: true, group_id: item._id, group_index: index})} />\r\n                        <Icon className=\"cursor\" type=\"close-square\" onClick={() => this.deleteGroup(item._id, index)} />\r\n                      </div>\r\n                    </div>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n              <div className=\"tc cursor userSelect\" style={addGroupStyle} onClick={this.openEditGroupModal}>+ 添加分组</div>\r\n            </Sider>\r\n            <Content>\r\n              <Card style={{padding: 20}}>\r\n                <Search placeholder=\"请输入公众号名称\" style={{width: 200, marginBottom: 20, marginTop: -10}} onSearch={this.searchGroupGonghao} />\r\n                <Button type=\"primary\" style={{display: 'block', marginBottom: 20}} onClick={this.openUpdateMoreModal}>批量修改</Button>\r\n                <Table rowSelection={rowSelection} bordered size=\"small\" rowKey={record => record._id} columns={this.columns} dataSource={gonghaoList} />\r\n              </Card>\r\n            </Content>\r\n          </Layout>\r\n        </div>\r\n        <Modal visible={gonghaoModal} onCancel={this.closeGonghaoModal} onOk={this.submitGonghaoModal}>\r\n          <Radio.Group value={selectGroup} onChange={this.changeSelectGroup}>\r\n            <Radio value=\"未分组\">未分组</Radio>\r\n            {gonghaoTagList.map(item => <Radio key={item._id} value={item.name}>{item.name}</Radio>)}\r\n          </Radio.Group>\r\n        </Modal>\r\n        <Modal visible={editGroupModalVisible} title=\"新建分组名称\" onCancel={this.closeEditGroupModal} onOk={this.confirmEditGroup}>\r\n          分组名称：<Input onChange={this.changeGroupValue} value={group} style={{width: 300}} placeholder=\"请输入分组名称\" />\r\n        </Modal>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GonghaoGroup;","import React, { Component } from 'react';\r\nimport { Table, Button } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport backTop from '../../../utils';\r\n\r\nimport {actionCreators} from \"./store\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    const { menuList, deleteMenu } = this.props;\r\n    const menuHeader =  [\r\n      {\r\n        title: \"菜单类型\",\r\n        key: \"individual\",\r\n        dataIndex: \"individual\",\r\n        align: \"center\",\r\n        render: (text, record) => record.individual ? \"个性化菜单\" : \"通用菜单\"\r\n      },\r\n      {\r\n        title: \"菜单性别\",\r\n        key: \"sex\",\r\n        dataIndex: \"sex\",\r\n        align: \"center\",\r\n        render: (text, record) => (record.individual ? (record.sex === '0' ? \"未知\"\r\n          : (record.sex === '1' ? '男' : '女')) : '——')\r\n      },\r\n      {\r\n        key: \"title\",\r\n        dataIndex: \"title\",\r\n        title: \"标题\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        key: \"Action\",\r\n        align: \"center\",\r\n        render: (text, record, index) => (\r\n          <div>\r\n            <Button size=\"small\" type=\"primary\" style={{marginRight: \"10px\"}}>\r\n              <Link to={{pathname: \"/admin/gonghao/menu/update\", query: record}}>编辑</Link>\r\n            </Button>\r\n            <Button size=\"small\" type=\"danger\" onClick={() => deleteMenu(record._id, index)}>删除</Button>\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n    \t<div>\r\n    \t\t<div className=\"container\">\r\n          <Button type=\"primary\" style={{marginBottom: \"20px\"}}>\r\n            <Link to=\"/admin/gonghao/menu/create\">配置新菜单栏</Link>\r\n          </Button>\r\n          <Table size=\"small\" rowKey={record => record._id} columns={menuHeader} dataSource={menuList} pagination={{onChange: () => backTop()}} />\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n  componentDidMount() {\r\n    this.props.getMenuList()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  menuList: state.gonghao.menu.menuList\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getMenuList() {\r\n    dispatch(actionCreators.getMenuList())\r\n  },\r\n  deleteMenu(id, index) {\r\n    dispatch(actionCreators.deleteMenu(id, index))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Menu);","import React from 'react';\r\nimport {Card, List} from 'antd';\r\nimport \"./index.scss\";\r\n\r\nconst GraphicMessage = props => {\r\n  const {messageList, updateMessageItem} = props;\r\n  return (\r\n    <div className=\"graphic-message-list-wrapper\">\r\n      <Card className=\"message-list-card\" title={\r\n        messageList.length > 1 ?\r\n        <List className=\"message-list\">\r\n            <List.Item className=\"cursor\" onClick={() => updateMessageItem(messageList[0], 0)}>\r\n              <div className=\"head-message\">\r\n                <p className=\"ellipse-two\">{messageList[0].title}</p>\r\n                <img src={messageList[0].picurl} alt=\"\"/>\r\n              </div>\r\n          </List.Item>\r\n          {messageList.slice(1).map((message, index) => \r\n            <List.Item className=\"border_btm cursor\" onClick={() => updateMessageItem(message, index + 1)} key={index}>\r\n              <div className=\"rest-message\">\r\n                <p className=\"ellipse-two\">{message.title}</p>\r\n                <img src={message.picurl} alt=\"\"/>\r\n              </div>\r\n            </List.Item>)}\r\n        </List> : <div className=\"cursor\" onClick={() => updateMessageItem(messageList[0], 0)}>\r\n          <div className=\"head-other\">\r\n            <img src={messageList[0].picurl} alt=\"\"/>\r\n            <h3 className=\"title textEllipsis\">{messageList[0].title}</h3>\r\n            <p className=\"ellipse-two\">{messageList[0].description}</p>\r\n          </div>\r\n        </div>}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default GraphicMessage;","import React, {Component, Fragment} from 'react';\r\nimport {Form, Input, Radio, Button, Icon, Upload, Divider} from 'antd';\r\nimport GraphicMessage from '../../../../common/components/GraphicMessage';\r\n\r\nclass MenuReplyMessage extends Component {\r\n  render() {\r\n    const {messageInfo, changeMessageInfo, uploadImg, updateCurrentMessage, deleteCurrentMessage, addToList, updateIndex, updateMessageItem} = this.props;\r\n    let MessageContent;\r\n    if (messageInfo.replyType === 0) {\r\n      MessageContent = <Form.Item className=\"inputtxt\" label=\"文本消息\">\r\n        <Input.TextArea onChange={e => changeMessageInfo(\"content\", e.target.value)} value={messageInfo.content} autoSize={{minRows: 3, maxRows: 6}} placeholder='请输入回复文本消息'/>\r\n      </Form.Item>\r\n    } else {\r\n      let UploadImg;\r\n      if (messageInfo.picurl) {\r\n        UploadImg = <img style={{width: \"100px\"}} src={messageInfo.picurl} alt=\"图片走丢啦~\"/>\r\n      } else {\r\n        UploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n      }\r\n      MessageContent = <Fragment>\r\n        <Form.Item label=\"图文标题\">\r\n          <Input onChange={e => changeMessageInfo(\"title\", e.target.value)} value={messageInfo.title} placeholder='请输入图文标题'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文链接\">\r\n          <Input onChange={e => changeMessageInfo(\"url\", e.target.value)} value={messageInfo.url} placeholder='请输入图文链接'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文描述\">\r\n          <Input.TextArea onChange={e => changeMessageInfo(\"description\", e.target.value)} value={messageInfo.description} autoSize={{minRows: 3, maxRows: 6}} placeholder='请输入图文描述'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"上传图片\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" showUploadList={false} onChange={uploadImg}>\r\n            {UploadImg}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item label=\" \" colon={false}>\r\n          {updateIndex > -1 ? <div>\r\n            <Button onClick={updateCurrentMessage} type=\"primary\" style={{marginRight: 20}}>保存</Button>\r\n            <Button onClick={deleteCurrentMessage}>删除此条消息</Button>\r\n          </div> : <div><Button onClick={addToList}>添加到图文列表</Button><p className=\"tips\">Tips: 当用户发送文本、图片、视频、图文、地理位置这五种消息时，只能回复1条图文消息；其余场景最多可回复8条图文消息</p></div>}\r\n        </Form.Item>\r\n        <Divider dashed />\r\n        <div style={{width: \"50%\", margin: \"auto\"}}>{messageInfo.articles.length > 0 && <GraphicMessage messageList={messageInfo.articles} updateMessageItem={updateMessageItem} />}</div>\r\n      </Fragment>\r\n    }\r\n    return (\r\n    \t<div>\r\n        <Form.Item wrapperCol={{offset: 2}}>\r\n          <Radio.Group value={messageInfo.replyType} onChange={e => changeMessageInfo(\"replyType\", e.target.value)}>\r\n            <Radio.Button value={0}>文本消息</Radio.Button>\r\n            <Radio.Button value={1}>图文消息</Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        {MessageContent}\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MenuReplyMessage;","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Form, Button, Input, Radio, Transfer, Switch} from \"antd\";\r\nimport * as actionCreators from '../store/actionCreators';\r\nimport './index.scss';\r\nimport MenuReplyMessage from '../components/MenuReplyMessage';\r\nclass EditMenuInfo extends Component {\r\n\r\n    componentDidMount() {\r\n        let query = this.props.history.location.query;\r\n        query && this.props.initMenuInfo(query);\r\n    }\r\n\r\n    render() {\r\n        const {menuInfo, menuForm, sub_button, menuIndex, handleInputChange, handleSubInputChange, addFirstMenu, editMenu, submitMenu, addSecondMenu, editSecMenu, deleteFirMenu, deleteSubMenu, allCodes, targetKeys, changeGonghao, isSubmit, cancelMenu, handleInfoChange, handleIndividualChange, openModal, resetState, messageInfo, changeMessageInfo, uploadImg, addToList, updateMessageItem, updateCurrentMessage, deleteCurrentMessage, updateIndex} = this.props;\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                sm: {span: 4}\r\n            },\r\n            wrapperCol: {\r\n                sm: {span: 16, offset: 0}\r\n            },\r\n            colon: false\r\n        };\r\n        const menuList = menuInfo[\"values\"].map((item, index) => (\r\n            <div className=\"menu\" style={{width: menuInfo[\"values\"].length === 1 ? \"50%\" : menuInfo[\"values\"].length === 2 ? \"33.33%\" : \"33.33%\"}} key={index} onClick={() => editMenu(item, index)}>\r\n                <span className=\"nav-title cursor\">{item.name.length > 6 ? item.name.slice(0, 6) + \"...\" : item.name}</span>\r\n                <ul className=\"sub-menu-list\" style={{top: (item.sub_button && item.sub_button.length) ? (item.sub_button.length === 5 ?  - 4 * 46 - 55 : - item.sub_button.length * 46 - 55) : -55, display: menuIndex === index ? \"block\" : \"none\"}}>\r\n                    {item.sub_button && item.sub_button.map((i, idx) => (\r\n                        <li className=\"textEllipsis\" key={idx} onClick={e=> editSecMenu(e, i, idx)}>{i.name}</li>\r\n                    ))}\r\n                    <li className=\"add\" style={{display: item.sub_button && item.sub_button.length < 5 ? \"blcok\" : \"none\"}} onClick={addSecondMenu}>+</li>\r\n                    <div className=\"sanjiao sanjiao-out\"/>\r\n                    <div className=\"sanjiao sanjiao-in\"/>\r\n                </ul>\r\n            </div>\r\n        ));\r\n        let keyOrUrl, subKeyOrUrl;\r\n        if (sub_button.type === 'view') {\r\n            subKeyOrUrl = <Form.Item label=\"链接\">\r\n                <Input value={sub_button.url} placeholder=\"请输入网页跳转链接\" onChange={(e) => handleSubInputChange(e, \"url\")}/>\r\n            </Form.Item>\r\n        } else if (sub_button.type === 'click') {\r\n            subKeyOrUrl = <div className=\"content-wrapper\">\r\n                {messageInfo && <MenuReplyMessage messageInfo={messageInfo} changeMessageInfo={changeMessageInfo} uploadImg={uploadImg} addToList={addToList} updateMessageItem={updateMessageItem} updateCurrentMessage={updateCurrentMessage} deleteCurrentMessage={deleteCurrentMessage} updateIndex={updateIndex} />}\r\n            </div>\r\n        }\r\n        if (menuForm.type === 'view') {\r\n            keyOrUrl = <Form.Item label=\"链接\">\r\n                <Input value={menuForm.url} placeholder=\"请输入网页跳转链接\" onChange={(e) => handleInputChange(e, \"url\")}/>\r\n            </Form.Item>\r\n        } else if (menuForm.type === 'click') {\r\n            keyOrUrl =\r\n                <div className=\"content-wrapper\">\r\n                    <MenuReplyMessage messageInfo={messageInfo} changeMessageInfo={changeMessageInfo} uploadImg={uploadImg} addToList={addToList} updateMessageItem={updateMessageItem} updateCurrentMessage={updateCurrentMessage} deleteCurrentMessage={deleteCurrentMessage} updateIndex={updateIndex} />\r\n                </div>\r\n        }\r\n        let menuInfoForm, submitButton;\r\n        if (menuInfo.values.length !== 0) {\r\n            if (menuForm.sub_button && menuForm.sub_button.length !== 0) {\r\n                menuInfoForm =\r\n                    <div className=\"menu-right fl\">\r\n                        <div className=\"menu-parent\">\r\n                            <div className=\"menu-title\">\r\n                                <h4 className=\"fl\">菜单编辑</h4>\r\n                                <Button className=\"fr\" type=\"link\" onClick={deleteFirMenu}>删除菜单</Button>\r\n                            </div>\r\n                            <Form {...formItemLayout}>\r\n                                <Form.Item label=\"菜单名称\">\r\n                                    <Input value={menuForm.name} placeholder=\"仅支持中英文和数字，字数不超过4个汉字或8个字母\"\r\n                                           onChange={(e) => handleInputChange(e, \"name\")}/>\r\n                                </Form.Item>\r\n                            </Form>\r\n                            <div className=\"menu-children\">\r\n                                <div className=\"menu-title\">\r\n                                    <h4 className=\"fl\">子菜单编辑</h4>\r\n                                    <Button className=\"fr\" type=\"link\" onClick={deleteSubMenu}>删除子菜单</Button>\r\n                                </div>\r\n                                <Form {...formItemLayout}>\r\n                                    <Form.Item label=\"子菜单名称\">\r\n                                        <Input value={sub_button.name} placeholder=\"仅支持中英文和数字，字数不超过8个汉字或16个字母\"\r\n                                               onChange={(e) => handleSubInputChange(e, \"name\")}/>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"子菜单内容\">\r\n                                        <Radio.Group value={sub_button.type} onChange={(e) => handleSubInputChange(e, \"type\")}>\r\n                                            <Radio value=\"view\">跳转网页</Radio>\r\n                                            <Radio value=\"click\">发送消息</Radio>\r\n                                        </Radio.Group>\r\n                                    </Form.Item>\r\n                                    {subKeyOrUrl}\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            } else {\r\n                menuInfoForm =\r\n                    <div className=\"menu-right fl\">\r\n                        <div className=\"menu-parent\">\r\n                            <div className=\"menu-title\">\r\n                                <h4 className=\"fl\">菜单编辑</h4>\r\n                                <Button className=\"fr\" type=\"link\" onClick={deleteFirMenu}>删除菜单</Button>\r\n                            </div>\r\n                            <Form {...formItemLayout}>\r\n                                <Form.Item label=\"菜单名称\">\r\n                                    <Input value={menuForm.name} placeholder=\"仅支持中英文和数字，字数不超过4个汉字或8个字母\" onChange={(e) => handleInputChange(e, \"name\")}/>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"菜单内容\">\r\n                                    <Radio.Group value={menuForm.type} onChange={(e) => handleInputChange(e, \"type\")}>\r\n                                        <Radio value=\"view\">跳转网页</Radio>\r\n                                        <Radio value=\"click\">发送消息</Radio>\r\n                                    </Radio.Group>\r\n                                </Form.Item>\r\n                                {keyOrUrl}\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            submitButton = <div className=\"menu-right-btm fl\">\r\n                <Button type=\"primary\" onClick={() => {openModal();this.props.getAllCodes()}\r\n                }>提交</Button>\r\n            </div>\r\n        }\r\n        let menuModal;\r\n        if (isSubmit) {\r\n            let individualSex;\r\n            if (menuInfo.individual) {\r\n                individualSex = <Form.Item label=\"性别\">\r\n                    <Radio.Group value={menuInfo.sex} onChange={e => handleInfoChange(e, \"sex\")}>\r\n                        <Radio value=\"0\">未知</Radio>\r\n                        <Radio value=\"1\">男</Radio>\r\n                        <Radio value=\"2\">女</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n            }\r\n            menuModal = <div className=\"menu-modal-wrapper\">\r\n                <div className=\"menu-modal\">\r\n                    <Transfer\r\n                        dataSource={allCodes}\r\n                        showSearch\r\n                        targetKeys={targetKeys}\r\n                        onChange={changeGonghao}\r\n                        render={item => item.nick_name}\r\n                        rowKey={record => record.code}\r\n                        className=\"menu-transfer fl\"\r\n                    />\r\n                    <Form className=\"fl\" colon={false} labelCol={{sm: {span: 30}}} wrapperCol={{sm: {span: 30, offset: 0}}}\r\n                          labelAlign=\"left\">\r\n                        <Form.Item label=\"标题\">\r\n                            <Input value={menuInfo.title} placeholder=\"请输入标题\" onChange={(e) => handleInfoChange(e, \"title\")}/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"个性化菜单\">\r\n                            <Switch onChange={handleIndividualChange} checked={menuInfo.individual}/>\r\n                        </Form.Item>\r\n                        {individualSex}\r\n                        <Form.Item label=\" \">\r\n                            <Button style={{marginRight: \"10px\"}} type=\"primary\" onClick={() => submitMenu(this.props)}>提交</Button>\r\n                            <Button onClick={cancelMenu}>取消</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        }\r\n        return (\r\n            <div>\r\n                <div className='container edit-menu'>\r\n                    <div className=\"title-wrapper\">\r\n                        <h2>菜单配置</h2>\r\n                        <Button className=\"fr\" onClick={() => resetState(this.props)}>返回上一级</Button>\r\n                    </div>\r\n                    <div className=\"menu-left fl\">\r\n                        <div className=\"menu-wrapper\">\r\n                            <div className=\"menu-cont\">\r\n                                <div className=\"menu-list\">\r\n                                    {menuList}\r\n                                    <div className=\"menu add\"\r\n                                         style={menuList.length === 1 ? {width: \"50%\"} : (menuList.length === 2 ? {width: \"33%\"} : (menuList.length === 3 ? {display: \"none\"} : {width: \"100%\"}))}\r\n                                         onClick={addFirstMenu}>\r\n                                        <span className=\"nav-title cursor\">+ 添加菜单</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {menuInfoForm}\r\n                    {submitButton}\r\n                </div>\r\n                {menuModal}\r\n            </div>\r\n        )\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.unMountState();\r\n        this.props.resetMessageInfo();\r\n    }\r\n\r\n}\r\n\r\nconst mapState = state => ({\r\n    menuInfo: state.gonghao.menu.menuInfo,\r\n    menuForm: state.gonghao.menu.menuForm,\r\n    sub_button: state.gonghao.menu.sub_button,\r\n    menuIndex: state.gonghao.menu.menuIndex,\r\n    allCodes: state.gonghao.menu.allCodes,\r\n    isSubmit: state.gonghao.menu.isSubmit,\r\n    targetKeys: state.gonghao.menu.targetKeys,\r\n    messageInfo: state.gonghao.menu.messageInfo,\r\n    updateIndex: state.gonghao.menu.updateIndex,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n    initMenuInfo(record) {\r\n        dispatch(actionCreators.initMenuInfo(record));\r\n    },\r\n    handleInfoChange(e, name) {\r\n        dispatch(actionCreators.handleInfoChange(e.target.value, name));\r\n    },\r\n    handleIndividualChange(value) {\r\n        dispatch(actionCreators.handleIndividualChange(value));\r\n    },\r\n    handleInputChange(e, name) {\r\n        dispatch(actionCreators.handleInputChange(name, e.target.value))\r\n    },\r\n    handleSubInputChange(e, name) {\r\n        dispatch(actionCreators.handleSubInputChange(name, e.target.value))\r\n    },\r\n    addFirstMenu() {\r\n        dispatch(actionCreators.addFirstMenu())\r\n    },\r\n    editMenu(item, index) {\r\n        dispatch(actionCreators.editMenu(item, index))\r\n    },\r\n    addSecondMenu(e) {\r\n        e.stopPropagation();\r\n        dispatch(actionCreators.addSecondMenu())\r\n    },\r\n    submitMenu(props) {\r\n        dispatch(actionCreators.submitMenu(props))\r\n    },\r\n    openModal() {\r\n        dispatch(actionCreators.openModal())\r\n    },\r\n    editSecMenu(e, data, idx) {\r\n        e.stopPropagation();\r\n        dispatch(actionCreators.editSecMenu(data, idx))\r\n    },\r\n    deleteFirMenu() {\r\n        dispatch(actionCreators.deleteFirMenu())\r\n    },\r\n    deleteSubMenu() {\r\n        dispatch(actionCreators.deleteSubMenu())\r\n    },\r\n    changeGonghao(targetKeys) {\r\n        dispatch(actionCreators.changeGonghao(targetKeys))\r\n    },\r\n    getAllCodes() {\r\n        dispatch(actionCreators.getAllCodes())\r\n    },\r\n    cancelMenu() {\r\n        dispatch(actionCreators.cancelMenu())\r\n    },\r\n    resetState(props) {\r\n        props.history.goBack();\r\n        dispatch(actionCreators.resetState());\r\n    },\r\n    unMountState() {\r\n        dispatch(actionCreators.resetState());\r\n    },\r\n    uploadImg(info) {\r\n        if (info.file.status === 'done') {\r\n            let picurl = `http://t.dmmup.com/uploads/${info.file.response.filename}`;\r\n            dispatch(actionCreators.changeMessageInfo(\"picurl\", picurl))\r\n        }\r\n    },\r\n    changeMessageInfo(key, value) {\r\n        dispatch(actionCreators.changeMessageInfo(key, value))\r\n    },\r\n    addToList() {\r\n        dispatch(actionCreators.addToList())\r\n    },\r\n    updateMessageItem(item, index) {\r\n        dispatch(actionCreators.updateMessageItem(item, index))\r\n    },\r\n    updateCurrentMessage() {\r\n        dispatch(actionCreators.updateCurrentMessage())\r\n    },\r\n    deleteCurrentMessage() {\r\n        dispatch(actionCreators.deleteCurrentMessage())\r\n    },\r\n    resetMessageInfo() {\r\n        dispatch(actionCreators.resetState())\r\n    },\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Form.create({name: 'editMenuInfo'})(EditMenuInfo));","import React, {Component} from 'react';\r\nimport {Button, Table} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport {actionCreators} from './store';\r\nimport './index.scss';\r\n\r\nclass Config extends Component {\r\n\r\n  render() {\r\n    const {replyMessageList, allCodes, deleteReplyMessage} = this.props;\r\n    const configHeader = [\r\n      {\r\n        key: \"replyType\",\r\n        title: \"消息类型\",\r\n        dataIndex: \"replyType\",\r\n        align: \"center\",\r\n        render: text => text === 0 ? \"文本消息\" : \"图文消息\"\r\n      }, {\r\n        key: \"type\",\r\n        title: \"互动类型\",\r\n        dataIndex: \"type\",\r\n        align: \"center\",\r\n        render: text => text === 0 ? \"用户回复\" : (text === 2 ? \"用户关注\" : (text === 4 ? \"默认回复\" : \"~~\"))\r\n      }, {\r\n        key: \"name\",\r\n        dataIndex: \"name\",\r\n        title: \"消息名称\",\r\n        align: \"center\"\r\n      },{\r\n        key: \"sex\",\r\n        title: \"性别\",\r\n        dataIndex: \"sex\",\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return (\r\n            <span>\r\n              {record.sex === 1 ? \"男\" : (record.sex === 2\r\n                ? \"女\" : (record.sex === 0 ? \"未知\" : \"默认\"))}\r\n            </span>\r\n          )\r\n        }\r\n      }, {\r\n        key: \"text\",\r\n        title: \"用户回复文本\",\r\n        dataIndex: \"text\",\r\n        align: \"center\",\r\n        render: text => text ? text : \"——\"\r\n      }, {\r\n        key: \"codes\",\r\n        title: \"公号名称\",\r\n        dataIndex: \"codes\",\r\n        align: \"center\",\r\n        render: text => text.length > 0 ? text.slice(0, 4).map(item => {\r\n          let a = allCodes.filter(i => i.code === item)[0];\r\n          return a && a.nick_name\r\n        }) : \"无\"\r\n      }, {\r\n        key: \"Action\",\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 120,\r\n        render: (text, record, index) => {\r\n          return (\r\n            <div className=\"btn-wrapper\">\r\n              <Button size=\"small\" type=\"primary\">\r\n                <Link to={{pathname: './update', state: {record, index}}}>编辑</Link>\r\n              </Button>\r\n              <Button size=\"small\" style={{background: \"red\", marginLeft: \"5px\"}}\r\n                      onClick={() => deleteReplyMessage(record._id, index)}>删除</Button>\r\n            </div>\r\n          )\r\n        }\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"edit-config\">\r\n          <Button type=\"primary\" className=\"edit-btn\">\r\n            <Link to='./create'>新建回复规则</Link>\r\n          </Button>\r\n          <Table className='config-table' size=\"small\" rowKey={(record => record._id)} columns={configHeader} dataSource={replyMessageList} bordered pagination={false}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getReplyMessageList();\r\n    this.props.getAllCodes();\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  allCodes: state.gonghao.reply.allCodes,\r\n  replyMessageList: state.gonghao.reply.replyMessageList\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  getReplyMessageList() {\r\n    dispatch(actionCreators.getReplyMessageList())\r\n  },\r\n  deleteReplyMessage(id, index) {\r\n    dispatch(actionCreators.deleteReplyMessage(id, index))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Config);","import React from 'react';\r\nimport { Checkbox, Row, Col, Modal, Button } from 'antd';\r\n\r\nconst MultiSelectModal = props => {\r\n  const {selectGonghaoModal, allCodes, codes = [], changeGonghao, closeSelectModal} = props;\r\n  return (\r\n    <Modal width={1000} visible={selectGonghaoModal} maskClosable={false} closable={false} mask={false}  footer={<Button type=\"primary\" disabled={codes.length === 0} onClick={closeSelectModal}>确定</Button>}>\r\n      <Checkbox.Group value={codes} style={{ width: '100%' }} onChange={changeGonghao}>\r\n        <Row>\r\n          {allCodes.map(item =>  <Col span={4} key={item._id}>\r\n            <Checkbox value={item.code}>{item.nick_name}</Checkbox>\r\n          </Col>)}\r\n        </Row>\r\n      </Checkbox.Group>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default MultiSelectModal;","import React, {Component, Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Form, Button, Input, Upload, Radio, Icon, Row, Col, Divider, Avatar, Tooltip} from \"antd\";\r\nimport * as actionCreators from '../store/actionCreators';\r\nimport \"./index.scss\";\r\nimport GraphicMessage from '../../../../common/components/GraphicMessage';\r\nimport MultiSelectModal from '../../../../common/components/SelectGonghao/MultiSelectModal';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    sm: {span: 4}\r\n  },\r\n  wrapperCol: {\r\n    sm: {span: 14, offset: 0}\r\n  },\r\n};\r\n\r\nclass EditConfigInfo extends Component {\r\n\r\n  UNSAFE_componentWillMount() {\r\n    const { location: {state}, getAllCodes, initState, closeSelectModal } = this.props;\r\n    getAllCodes();\r\n    state && initState(state.record, state.index);\r\n    state && closeSelectModal();\r\n  }\r\n  render() {\r\n    const {selectGonghaoModal, allCodes, closeSelectModal, openSelectModal, submitForm, messageInfo, updateMessageItem, addToList, changeMessageInfo, uploadImg, history, updateIndex, updateCurrentMessage, deleteCurrentMessage} = this.props;\r\n    let TextOrKey, MessageContent;\r\n    if (messageInfo.type === 0) {\r\n      TextOrKey = <Form.Item label=\"用户回复内容\">\r\n        <Input onChange={e => changeMessageInfo(\"text\", e.target.value)} value={messageInfo.text} placeholder='请输入用户回复内容'/>\r\n      </Form.Item>\r\n    } else if (messageInfo.type === 1) {\r\n      TextOrKey = <Form.Item label=\"点击关键词\">\r\n        <Input onChange={e => changeMessageInfo(\"key\", e.target.value)} value={messageInfo.key} placeholder='请输入菜单栏点击关键词'/>\r\n      </Form.Item>\r\n    }\r\n    if (messageInfo.replyType === 0) {\r\n      MessageContent = <Form.Item className=\"inputtxt\" label=\"文本消息\">\r\n        <Input.TextArea onChange={e => changeMessageInfo(\"content\", e.target.value)} value={messageInfo.content} autosize={{minRows: 3, maxRows: 6}} placeholder='请输入回复文本消息'/>\r\n      </Form.Item>\r\n    } else {\r\n      let UploadImg;\r\n      if (messageInfo.picurl) {\r\n        UploadImg = <img style={{width: \"100px\"}} src={messageInfo.picurl} alt=\"图片走丢啦~\"/>\r\n      } else {\r\n        UploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n      }\r\n      MessageContent = <Fragment>\r\n        <Form.Item label=\"图文标题\">\r\n          <Input onChange={e => changeMessageInfo(\"title\", e.target.value)} value={messageInfo.title} placeholder='请输入图文标题'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文链接\">\r\n          <Input onChange={e => changeMessageInfo(\"url\", e.target.value)} value={messageInfo.url} placeholder='请输入图文链接'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文描述\">\r\n          <Input.TextArea onChange={e => changeMessageInfo(\"description\", e.target.value)} value={messageInfo.description} autosize={{minRows: 3, maxRows: 6}} placeholder='请输入图文描述'/>\r\n        </Form.Item>\r\n        <Form.Item label=\"上传图片\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" showUploadList={false} onChange={uploadImg}>\r\n            {UploadImg}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item label=\" \" colon={false}>\r\n          {updateIndex > -1 ? <div>\r\n            <Button onClick={updateCurrentMessage} type=\"primary\" style={{marginRight: 20}}>保存</Button>\r\n            <Button onClick={deleteCurrentMessage}>删除此条消息</Button>\r\n          </div> : <div><Button onClick={addToList}>添加到图文列表</Button><p className=\"tips\">Tips: 当用户发送文本、图片、视频、图文、地理位置这五种消息时，只能回复1条图文消息；其余场景最多可回复8条图文消息</p></div>}\r\n        </Form.Item>\r\n      </Fragment>\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        {selectGonghaoModal && <MultiSelectModal allCodes={allCodes} selectGonghaoModal={selectGonghaoModal} changeGonghao={codes => changeMessageInfo(\"codes\", codes)} closeSelectModal={closeSelectModal} codes={messageInfo.codes} />}\r\n        <Form className=\"reply-form\" labelAlign=\"right\" {...formItemLayout}>\r\n          <Col span={17}>\r\n            <Form.Item label=\"选择公号\">\r\n              <Avatar className=\"cursor\" shape=\"square\" icon=\"user\" onClick={openSelectModal}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"消息名称\">\r\n              <Input onChange={e => changeMessageInfo(\"name\", e.target.value)} value={messageInfo.name} placeholder='请输入消息名称,(仅供备注，不会发送给粉丝)'/>\r\n            </Form.Item>\r\n          </Col>\r\n          <Divider style={{width: \"110%\", marginLeft: -50}}/>\r\n          <h2 className=\"block-title\">设置自动回复</h2>\r\n          <Row>\r\n            <Col span={17}>\r\n              <Form.Item wrapperCol={{offset: 1}}>\r\n                <Radio.Group value={messageInfo.replyType} onChange={e => changeMessageInfo(\"replyType\", e.target.value)}>\r\n                  <Radio.Button value={0}>文本消息</Radio.Button>\r\n                  <Radio.Button value={1}>图文消息</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              {MessageContent}\r\n            </Col>\r\n            <Col span={7}>\r\n              {messageInfo.articles.length > 0 && <GraphicMessage messageList={messageInfo.articles} updateMessageItem={updateMessageItem} />}\r\n            </Col>\r\n          </Row>\r\n          <Divider style={{width: \"110%\", marginLeft: -50}}/>\r\n          <h2 className=\"block-title\">设置模板消息</h2>\r\n          <Col span={17}>\r\n            <Form.Item wrapperCol={{offset: 1}}>\r\n              <Radio.Group value={messageInfo.type} onChange={e => changeMessageInfo(\"type\", e.target.value)}>\r\n                <Radio.Button value={0}>特定回复</Radio.Button>\r\n                <Radio.Button value={2}>用户关注</Radio.Button>\r\n                <Radio.Button value={4}>默认回复</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item label=\"粉丝性别\">\r\n              <Radio.Group value={messageInfo.sex} onChange={e => changeMessageInfo(\"sex\", e.target.value)}>\r\n                <Radio value={3}>默认</Radio>\r\n                <Radio value={1}>男</Radio>\r\n                <Radio value={2}>女</Radio>\r\n                <Radio value={0}>未知</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item label={<span>未知性别<Tooltip title=\"未知属性粉丝按照`男`或`女`发送\"><Icon className=\"cursor\" type=\"question-circle\" theme=\"filled\" /></Tooltip> </span>}>\r\n              <Radio.Group value={messageInfo.attribute} onChange={e => changeMessageInfo(\"attribute\", e.target.value)}>\r\n                <Radio value={1}>男</Radio>\r\n                <Radio value={2}>女</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            {TextOrKey}\r\n          </Col>\r\n          <Divider style={{width: \"110%\", marginLeft: -50}}/>\r\n          <Form.Item wrapperCol={{offset: 1}}>\r\n            <Button type=\"primary\" style={{marginRight: 20}} onClick={() => submitForm(messageInfo, this.props)}>提交</Button>\r\n            <Button onClick={() => history.goBack()}>取消</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  messageInfo: state.gonghao.reply.messageInfo,\r\n  allCodes: state.gonghao.reply.allCodes,\r\n  selectGonghaoModal: state.gonghao.reply.selectGonghaoModal,\r\n  updateIndex: state.gonghao.reply.updateIndex,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  closeSelectModal() {\r\n    dispatch(actionCreators.closeSelectModal())\r\n  },\r\n  openSelectModal() {\r\n    dispatch(actionCreators.openSelectModal())\r\n  },\r\n  changeMessageInfo(key, value) {\r\n    dispatch(actionCreators.changeMessageInfo(key, value))\r\n  },\r\n  uploadImg(info) {\r\n    if (info.file.status === 'done') {\r\n      let picurl = `http://t.dmmup.com/uploads/${info.file.response.filename}`;\r\n      dispatch(actionCreators.changeMessageInfo(\"picurl\", picurl))\r\n    }\r\n  },\r\n  addToList() {\r\n    dispatch(actionCreators.addToList())\r\n  },\r\n  updateMessageItem(item, index) {\r\n    dispatch(actionCreators.updateMessageItem(item, index))\r\n  },\r\n  updateCurrentMessage() {\r\n    dispatch(actionCreators.updateCurrentMessage())\r\n  },\r\n  deleteCurrentMessage() {\r\n    dispatch(actionCreators.deleteCurrentMessage())\r\n  },\r\n  submitForm(messageInfo, props) {\r\n    const { title, picurl, url, description } = messageInfo;\r\n    const {state} = props.location;\r\n    messageInfo.articles.length === 0 && (messageInfo.articles.push({ title, picurl, url, description }));\r\n    messageInfo.title = messageInfo.picurl = messageInfo.url = messageInfo.description = \"\";\r\n    if (state) {\r\n      messageInfo._id = state.record._id;\r\n      dispatch(actionCreators.updateConfigForm(messageInfo, props.history))\r\n    } else {\r\n      dispatch(actionCreators.createConfigForm(messageInfo, props.history))\r\n    }\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState());\r\n  },\r\n  initState(record, index) {\r\n    dispatch(actionCreators.initState(record, index))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Form.create({name: 'editConfigInfo'})(EditConfigInfo));","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Tuoguan from './tuoguan';\r\nimport GonghaoGroup from './tuoguan/group'\r\n\r\nimport Menu from './menu';\r\nimport editMenu from './menu/edit';\r\n\r\nimport Replay from './reply';\r\nimport editReplay from './reply/edit';\r\n\r\nclass TuoguanWrapper extends Component {\r\n  render() {\r\n    return (\r\n        <Route path=\"/admin/gonghao\" render={() =>\r\n          <Switch>\r\n            {/*接管公号*/}\r\n            <Route path='/admin/gonghao/tuoguan/'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/tuoguan/index\" component={Tuoguan} />\r\n                <Route path=\"/admin/gonghao/tuoguan/group\" component={GonghaoGroup} />\r\n                <Redirect from=\"/admin/gonghao/tuoguan\" exact to='/admin/gonghao/tuoguan/index' />\r\n              </Switch>\r\n            </Route>\r\n            {/*菜单配置*/}\r\n            <Route path='/admin/gonghao/menu/'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/menu/index\" component={Menu} />\r\n                <Route path='/admin/gonghao/menu/create' component={editMenu} />\r\n                <Route path='/admin/gonghao/menu/update' component={editMenu} />\r\n                <Redirect from=\"/admin/gonghao/menu\" exact to='/admin/gonghao/menu/index' />\r\n              </Switch>\r\n            </Route>\r\n            {/*自动回复*/}\r\n            <Route path='/admin/gonghao/reply'>\r\n              <Switch>\r\n                <Route path=\"/admin/gonghao/reply/index\" component={Replay} />\r\n                <Route path='/admin/gonghao/reply/create' component={editReplay} />\r\n                <Route path='/admin/gonghao/reply/update' component={editReplay} />\r\n                <Redirect from=\"/admin/gonghao/reply\" exact to='/admin/gonghao/reply/index' />\r\n              </Switch>\r\n            </Route>\r\n            <Redirect from=\"/admin/gonghao\" exact to='/admin/gonghao/tuoguan' />\r\n          </Switch>\r\n        } />\r\n    )\r\n  }\r\n}\r\n\r\nexport default TuoguanWrapper;","import React from 'react';\r\nimport {Card, List, Icon, Tooltip} from 'antd';\r\nimport \"./index.scss\";\r\nimport moment from 'moment';\r\n\r\nconst GraphicMessage = props => {\r\n  const {messageList, openSyncModal, openModal, openTimingModal, copy, deleteMaterial, openUpdateMaterialModal} = props;\r\n  return (\r\n    <div className=\"message-list-wrapper\">\r\n      <List grid={{gutter: 20, sm: 3, xxl: 6}} dataSource={messageList}\r\n            renderItem={(item, index) => <List.Item key={item._id}>\r\n              <Card className=\"message-list-card\" title={\r\n                <List className=\"message-list\">\r\n                  <div className=\"update-time\"><Icon\r\n                    type=\"sound\"/>{item.isTiming ? `于 ${moment(item.timing).format(\"YYYY-MM-DD HH:mm:ss\")} 发送` : \"未设置定时时间，请手动发送\"}</div>\r\n                  <Tooltip title=\"\" key={item.content.news_item[0].thumb_media_id + \"0\"}>\r\n                    <List.Item className=\"cursor\" onClick={() => openUpdateMaterialModal(item.media_id, 0, item.content.news_item[0], item._id)}>\r\n                      <div className=\"head-message\">\r\n                        <p className=\"ellipse-two\">{item.content.news_item[0].title}</p>\r\n                        <img src={item.content.news_item[0].local_img_path} alt=\"请先在微信后台上传图片\"/>\r\n                      </div>\r\n                    </List.Item>\r\n                  </Tooltip>\r\n                  {item.content.news_item.slice(1).map((message, i) => <Tooltip title=\"点击修改原文链接\" key={message.thumb_media_id + i + 1} placement=\"rightTop\">\r\n                    <List.Item className=\"border_btm cursor\" onClick={() => openUpdateMaterialModal(item.media_id, i + 1, item.content.news_item[i + 1], item._id)}>\r\n                      <div className=\"rest-message\">\r\n                        <p className=\"ellipse-two\">{message.title}</p>\r\n                        <img src={message.local_img_path} alt=\"miss\"/>\r\n                      </div>\r\n                    </List.Item>\r\n                  </Tooltip>)}\r\n                </List>}\r\n                    actions={[\r\n                      <Tooltip title=\"同步\"><Icon onClick={() => openSyncModal(item)} type=\"cloud-upload\"\r\n                                                key=\"sync\"/></Tooltip>,\r\n                      <Tooltip title=\"发送\"><Icon onClick={() => openModal(item)} type=\"message\" key=\"send\"/></Tooltip>,\r\n                      <Tooltip title=\"定时发送\"><Icon onClick={() => openTimingModal(item)} type=\"history\" key=\"timing\"/></Tooltip>,\r\n                      <Tooltip title=\"复制\"><Icon onClick={() => copy(item._id)} type=\"fork\" key=\"copy\"/></Tooltip>,\r\n                      <Tooltip title=\"删除\"><Icon onClick={() => deleteMaterial(item._id, index)} type=\"delete\"\r\n                                                key=\"del\"/></Tooltip>,\r\n                    ]}\r\n              />\r\n            </List.Item>}/>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default GraphicMessage;","import React, {PureComponent} from 'react';\r\nimport {ConfigProvider, message, Modal, Radio, Switch, DatePicker, TimePicker, Checkbox, Row, Col, Input} from \"antd\";\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/zh-cn';\r\nimport {connect} from \"react-redux\";\r\nimport { actionCreators } from '../store';\r\nimport GraphicMessage from '../components/GraphicMessage';\r\n\r\nimport axios from 'axios';\r\n\r\nclass groupMessage extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      syncModal: false,\r\n      checkedList: [],\r\n      indeterminate: false,\r\n      checkAll: false,\r\n      messageInfo: {},\r\n      code: props.code,\r\n      gonghaoList: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { code } = this.state;\r\n    this.props.getMessageList(code);\r\n    this.props.getTagList(code);\r\n    this.props.getGroupGonghao();\r\n    this.getGonghaoList();\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\r\n    if(this.props.code !== nextProps.code) {\r\n      const { code } = nextProps;\r\n      this.props.getMessageList(code);\r\n    }\r\n  }\r\n\r\n  getGonghaoList = () => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        const { data, code } = res.data;\r\n        if (code === 1) {\r\n          this.setState({gonghaoList: data})\r\n        }\r\n      })\r\n  };\r\n\r\n  render() {\r\n    const { messageList, openModal, sendModal, sendMessage, sendInfo, tagList, closeModal, changeTagId, sendTimingModal, sendTimingMessage, sendTimingInfo, openTimingModal, changeTimingState, copy, changeTime, deleteMaterial, isComplete, openUpdateMaterialModal, closeUpdateMaterialModal, updateMaterialModal, updateMaterial, updateInfo, changeContentSourceUrl }  = this.props;\r\n    const { code, gonghaoList } = this.state;\r\n    let selectGonghaoList = gonghaoList.filter(item => item.code !== code);\r\n    const selectTagRadio = tagList.map(item => (\r\n      <Radio key={item._id} value={item.id}>{item.name}</Radio>\r\n    ));\r\n    return (\r\n      <ConfigProvider locale={zhCN}>\r\n        <div className=\"container\" style={{padding: 0}}>\r\n          <GraphicMessage messageList={messageList} openSyncModal={message => this.setState({syncModal: true, messageInfo: message})} openModal={openModal} openTimingModal={openTimingModal} copy={copy} deleteMaterial={deleteMaterial} isComplete={isComplete} openUpdateMaterialModal={openUpdateMaterialModal} />\r\n        </div>\r\n        <Modal\r\n          title=\"请选择要发送的标签\"\r\n          visible={sendModal}\r\n          onOk={() => sendMessage(sendInfo)}\r\n          onCancel={closeModal}\r\n        >\r\n          <Radio.Group value={sendInfo.tagId} onChange={e => changeTagId(e, false)}>\r\n            {selectTagRadio}\r\n          </Radio.Group>\r\n        </Modal>\r\n        <Modal\r\n          title=\"创建定时发送任务？\"\r\n          visible={sendTimingModal}\r\n          onOk={() => sendTimingMessage(sendTimingInfo, code)}\r\n          onCancel={closeModal}\r\n        >\r\n          <label htmlFor=\"tagId\">\r\n            标签：\r\n            <Radio.Group id=\"tagId\" value={sendTimingInfo.tagId} onChange={e => changeTagId(e, true)}>\r\n              {selectTagRadio}\r\n            </Radio.Group>\r\n          </label>\r\n          <label style={{display: \"block\", margin: \"20px 0\"}} htmlFor=\"isTiming\">\r\n            是否定时：\r\n            <Switch checked={sendTimingInfo.isTiming} onChange={changeTimingState} />\r\n          </label>\r\n          <label htmlFor=\"timing\" style={{display: sendTimingInfo.isTiming ? \"block\" : \"none\"}}>\r\n            时间选择：\r\n            <DatePicker\r\n              value={moment(new Date(sendTimingInfo.timing), 'YYYY-MM-DD')}\r\n              onChange={(time, timeString) => changeTime(timeString, \"date\")}\r\n            />\r\n            <TimePicker\r\n              value={moment(new Date(sendTimingInfo.timing), 'HH-MM-SS')}\r\n              onChange={(time, timeString) => changeTime(timeString, \"time\")}\r\n            />\r\n          </label>\r\n        </Modal>\r\n        <Modal width={640} title=\"请选择需要同步素材的公号：\" visible={this.state.syncModal} onOk={this.syncMaterial} onCancel={this.closeSyncModal}>\r\n          <div style={{ borderBottom: '1px solid #E9E9E9', paddingBottom: 10, marginBottom: 10 }}>\r\n            <Checkbox\r\n              indeterminate={this.state.indeterminate}\r\n              onChange={this.onCheckAllChange}\r\n              checked={this.state.checkAll}\r\n            >全选</Checkbox>\r\n          </div>\r\n          <Checkbox.Group style={{width: \"100%\"}} onChange={this.onChange} value={this.state.checkedList}>\r\n            <Row>\r\n              {selectGonghaoList.map(item => <Col span={6} key={item._id}>\r\n                <Checkbox value={item.code}>{item.nick_name}</Checkbox>\r\n              </Col>)}\r\n            </Row>\r\n          </Checkbox.Group>\r\n        </Modal>\r\n        <Modal visible={updateMaterialModal} onCancel={closeUpdateMaterialModal} onOk={() => updateMaterial(updateInfo, code)} title=\"修改原文链接\">\r\n          <Input value={updateInfo.articles.content_source_url} placeholder=\"请输入新的原文链接\" onChange={changeContentSourceUrl} />\r\n        </Modal>\r\n      </ConfigProvider>\r\n    )\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n\r\n  syncMaterial = () => {\r\n    const { messageInfo, checkedList: codes } = this.state;\r\n    Modal.confirm({\r\n      title: \"确定同步这条素材吗？\",\r\n      onOk: () => {\r\n        axios.post(\"/material/syncMaterial\", {codes, docs: [messageInfo]})\r\n          .then(res => {\r\n            const {code, msg } = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.closeSyncModal();\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  closeSyncModal = () => {\r\n    this.setState({\r\n      syncModal: false,\r\n      checkedList: [],\r\n      indeterminate: false,\r\n      checkAll: false,\r\n      messageInfo: {}\r\n    })\r\n  };\r\n\r\n  onCheckAllChange = e => {\r\n    const { code, gonghaoList } = this.state;\r\n    const plainOptions = gonghaoList.filter(item => item.code !== code);\r\n    const codes = plainOptions.map(item => item.code);\r\n    this.setState({\r\n      checkedList: e.target.checked ? codes : [],\r\n      indeterminate: false,\r\n      checkAll: e.target.checked,\r\n    });\r\n  };\r\n\r\n  onChange = checkedList => {\r\n    const { code, gonghaoList } = this.state;\r\n    const plainOptions = gonghaoList.filter(item => item.code !== code);\r\n    const codes = plainOptions.map(item => item.code);\r\n    this.setState({\r\n      checkedList,\r\n      indeterminate: !!checkedList.length && checkedList.length < codes.length,\r\n      checkAll: checkedList.length === codes.length,\r\n    });\r\n  };\r\n}\r\n\r\n\r\nconst mapState = state => ({\r\n  tagList: state.message.group.tagList,\r\n  messageList: state.message.group.messageList,\r\n  sendInfo: state.message.group.sendInfo,\r\n  sendTimingInfo: state.message.group.sendTimingInfo,\r\n  sendModal: state.message.group.sendModal,\r\n  sendTimingModal: state.message.group.sendTimingModal,\r\n  gonghaoList: state.message.group.gonghaoList,\r\n  isComplete: state.message.group.isComplete,\r\n  updateMaterialModal: state.message.group.updateMaterialModal,\r\n  updateInfo: state.message.group.updateInfo,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getTagList(code) {\r\n    dispatch(actionCreators.getTagList(code))\r\n  },\r\n  getMessageList(code) {\r\n    dispatch(actionCreators.getMessageList(code))\r\n  },\r\n  openModal(record) {\r\n    dispatch(actionCreators.openModal(record));\r\n  },\r\n  sendMessage(sendInfo) {\r\n    dispatch(actionCreators.sendMessage(sendInfo));\r\n  },\r\n  changeTagId(e, isTiming) {\r\n    dispatch(actionCreators.changeTagId(e.target.value, isTiming));\r\n  },\r\n  openTimingModal(record) {\r\n    dispatch(actionCreators.openTimingModal(record));\r\n  },\r\n  closeModal() {\r\n    dispatch(actionCreators.closeModal());\r\n  },\r\n  sendTimingMessage(sendTimingInfo, code) {\r\n    dispatch(actionCreators.sendTimingMessage(sendTimingInfo, code));\r\n  },\r\n  changeTimingState(value) {\r\n    dispatch(actionCreators.changeTimingState(value));\r\n  },\r\n  changeTime(time, type) {\r\n    dispatch(actionCreators.changeTime(time, type));\r\n  },\r\n  copy(id) {\r\n    dispatch(actionCreators.copy(id));\r\n  },\r\n  deleteMaterial(id, index) {\r\n    dispatch(actionCreators.deleteMaterial(id, index));\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState());\r\n  },\r\n  getGroupGonghao() {\r\n    dispatch(actionCreators.getGroupGonghao());\r\n  },\r\n  openUpdateMaterialModal(media_id, index, articles, id) {\r\n    dispatch(actionCreators.openUpdateMaterialModal({media_id, index, articles, id}));\r\n  },\r\n  closeUpdateMaterialModal() {\r\n    dispatch(actionCreators.closeUpdateMaterialModal());\r\n  },\r\n  updateMaterial(updateInfo, code) {\r\n    dispatch(actionCreators.updateMaterial(updateInfo, code));\r\n  },\r\n  changeContentSourceUrl(e) {\r\n    let content_source_url = e.target.value;\r\n    dispatch(actionCreators.changeContentSourceUrl(content_source_url));\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(groupMessage);","import React, { Component } from 'react';\r\nimport {Modal, Form, Input, Radio, Switch, DatePicker, Button, message} from \"antd\";\r\nimport axios from 'axios';\r\n\r\nimport moment from 'moment';\r\nimport * as constants from \"../../store/constants\";\r\n\r\nclass EditTextMaterialModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.openOpenidModal = this.openOpenidModal.bind(this);\r\n    this.prevTextMaterial = this.prevTextMaterial.bind(this);\r\n    this.cancelPrev = this.cancelPrev.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n\r\n  state = {\r\n    openidModalVisible: false,\r\n    tagList: []\r\n  };\r\n\r\n  openOpenidModal() {\r\n    this.setState({openidModalVisible: true})\r\n  }\r\n\r\n  prevTextMaterial() {\r\n    const { form: {getFieldsValue}, code } = this.props;\r\n    let {openid, content} = getFieldsValue();\r\n    axios.post(\"/textMaterial/preview\", {code, openid, content})\r\n      .then(res => {\r\n        const {code, msg} = res.data;\r\n        code === 1 && message.success(msg)\r\n      });\r\n    this.cancelPrev()\r\n  }\r\n\r\n  cancelPrev() {\r\n    const { form: {setFieldsValue} } = this.props;\r\n    setFieldsValue({openid: \"\"});\r\n    this.setState({openidModalVisible: false})\r\n  }\r\n\r\n  submitForm() {\r\n    const { form: {getFieldsValue} } = this.props;\r\n    this.props.submitTextMaterial(getFieldsValue())\r\n  }\r\n\r\n  closeModal() {\r\n    const { form: {resetFields} } = this.props;\r\n    resetFields();\r\n    this.props.cancelEditMaterial()\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { code } = this.props;\r\n    axios.get(\"/material/tag\", {params: {code}})\r\n      .then(res => {\r\n        this.setState({tagList: res.data.data});\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { form: {getFieldDecorator, getFieldValue}, editMaterialModalVisible, initMaterial = {} } = this.props;\r\n    const { openidModalVisible, tagList } = this.state;\r\n    return (\r\n      <Modal\r\n        visible={editMaterialModalVisible}\r\n        title=\"编辑文本素材\"\r\n        footer={\r\n          <div>\r\n            <Button onClick={this.openOpenidModal}>发送预览</Button>\r\n            <Button onClick={this.submitForm}>提交</Button>\r\n          </div>\r\n        }\r\n        onCancel={this.closeModal}\r\n      >\r\n        <Form labelCol={{span: 4}} wrapperCol={{span: 20, offset: 0}}>\r\n          <Form.Item label=\"文本素材\">\r\n            {getFieldDecorator('content', {\r\n              initialValue: initMaterial.content || \"\",\r\n              rules: [{ required: true, message: 'Please input your content!' }]\r\n            })(<Input.TextArea rows={4} placeholder=\"请输入文本素材内容\" />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"粉丝属性\">\r\n            {getFieldDecorator('tagId', {\r\n              initialValue: initMaterial.tagId + \"\" || \"\",\r\n              rules: [{required: true}]\r\n            })(<Radio.Group>\r\n              {tagList.map(item =>\r\n                <Radio key={item._id} value={item.id}>{item.name}</Radio>\r\n              )}\r\n            </Radio.Group>)}\r\n          </Form.Item>\r\n          <Form.Item label=\"是否定时\">\r\n            {getFieldDecorator('is_timing', {\r\n              valuePropName: 'checked',\r\n              initialValue: initMaterial.is_timing || false,\r\n            })(<Switch />)}\r\n          </Form.Item>\r\n          {getFieldValue(\"is_timing\") ? <Form.Item label=\"发送时间\">\r\n            {getFieldDecorator('timing_time', {initialValue: initMaterial.is_timing ? moment(initMaterial.timing_time) : null})(<DatePicker showTime={{format: \"HH:mm\"}} format=\"YYYY-MM-DD HH:mm\" placeholder=\"请选择定时发送时间\" />)}\r\n          </Form.Item> : \"\"}\r\n        </Form>\r\n        <Modal visible={openidModalVisible} title=\"发送预览消息\" onOk={this.prevTextMaterial} onCancel={this.cancelPrev}>\r\n          {getFieldDecorator('openid', {\r\n            rules: [{ required: true, message: 'Please input your openid!' }],\r\n            initialValue: \"\"\r\n          })(<Input placeholder=\"请输入openid\" />)}\r\n        </Modal>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(EditTextMaterialModal);","import React, {Component} from 'react';\r\nimport {ConfigProvider, List, Card, Icon, Button, Modal, message} from \"antd\";\r\n\r\nimport axios from 'axios';\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/zh-cn';\r\n\r\nimport EditTextMaterialModal from '../components/EditTextMaterialModal';\r\n\r\nimport \"./index.scss\";\r\n\r\nclass TextMaterial extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.openEditMaterialModal = this.openEditMaterialModal.bind(this);\r\n    this.submitTextMaterial = this.submitTextMaterial.bind(this);\r\n    this.cancelEditMaterial = this.cancelEditMaterial.bind(this);\r\n    this.updateTextMaterial = this.updateTextMaterial.bind(this);\r\n  }\r\n\r\n  state = {\r\n    editMaterialModalVisible: false,\r\n    textMaterialList: [],\r\n    initMaterial: {},\r\n    index: -1\r\n  };\r\n\r\n  openEditMaterialModal() {\r\n    this.setState({editMaterialModalVisible: true})\r\n  }\r\n\r\n  submitTextMaterial(textMaterial) {\r\n    const {initMaterial: {_id = \"\"}, index, textMaterialList} = this.state;\r\n    textMaterial.timing_time = +textMaterial.timing_time;\r\n    textMaterial.code = this.props.code;\r\n    textMaterial.tagId = parseInt(textMaterial.tagId)\r\n    _id && (textMaterial._id = _id);\r\n    Modal.confirm({\r\n      title: \"确定提交这条文本素材吗？\",\r\n      onOk: () => {\r\n        if (!_id) {\r\n          axios.post('/textMaterial', {...textMaterial})\r\n            .then(res => {\r\n              const {code, msg, data} = res.data;\r\n              if (code === 1) {\r\n                this.setState(prevState => ({textMaterialList: [data, ...prevState.textMaterialList]}));\r\n                message.success(msg);\r\n                this.cancelEditMaterial();\r\n              } else {\r\n                message.warning(msg);\r\n              }\r\n            })\r\n        } else {\r\n          axios.put('/textMaterial', {...textMaterial})\r\n            .then(res => {\r\n              const {code, msg, data} = res.data;\r\n              if (code === 1) {\r\n                textMaterialList.splice(index, 1, data);\r\n                this.setState({textMaterialList});\r\n                message.success(msg);\r\n                this.cancelEditMaterial();\r\n              } else {\r\n                message.warning(msg);\r\n              }\r\n            })\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  cancelEditMaterial() {\r\n    this.setState({editMaterialModalVisible: false, initMaterial: {}})\r\n  }\r\n\r\n  updateTextMaterial(item, index) {\r\n    this.openEditMaterialModal();\r\n    this.setState({\r\n      initMaterial: {...item}, index\r\n    })\r\n  }\r\n\r\n  sendMaterial(item, index) {\r\n    let {textMaterialList} = this.state;\r\n    Modal.confirm({\r\n      title: \"是否发送这条素材\",\r\n      onOk: () => {\r\n        axios.post(\"/textMaterial/send\", {...item})\r\n          .then(res => {\r\n            const {code, msg} = res.data;\r\n            if (code === 1) {\r\n              message.success(msg);\r\n              Object.assign(textMaterialList[index], {isSend: 1});\r\n              this.setState({textMaterialList})\r\n            } else {\r\n              message.warning(msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteMaterial(_id, index) {\r\n    Modal.confirm({\r\n      title: \"是否删除这条素材？\",\r\n      onOk: () => {\r\n        axios.delete(\"/textMaterial\", {params: {_id}})\r\n          .then(res => {\r\n            const {code, msg} = res.data;\r\n            if (code === 1) {\r\n              message.success(msg);\r\n              this.setState(prevState => {\r\n                let textMaterialList = prevState.textMaterialList;\r\n                textMaterialList.splice(index, 1);\r\n                return {textMaterialList}\r\n              })\r\n            } else {\r\n              message.warning(msg)\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/textMaterial\", {params: {code: this.props.code}})\r\n      .then(res => {\r\n        const {code, data} = res.data;\r\n        code === 1 && this.setState({textMaterialList: data.reverse()})\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const {editMaterialModalVisible, textMaterialList, initMaterial} = this.state;\r\n    const {code} = this.props;\r\n    let innerWidth = window.innerWidth > 1440;\r\n    const pagination = {\r\n      pageSize: innerWidth ? 18 : 9\r\n    };\r\n    return (\r\n      <ConfigProvider locale={zhCN}>\r\n        <div className=\"text-material\">\r\n          <Button className=\"mb15\" onClick={this.openEditMaterialModal}>创建文本素材</Button>\r\n          <List grid={{gutter: 16, xl: 3, xxl: 6,}}\r\n                dataSource={textMaterialList}\r\n                renderItem={(item, index) => (\r\n                  <List.Item key={item._id}>\r\n                    <Card title={item.is_timing ?\r\n                      <p>于 <span className=\"date\">{moment(item.timing_time).format(\"YYYY-MM-DD HH:mm\")}</span> 发送\r\n                      </p> : \"未设置定时时间\"} actions={item.isSend ? [<span className=\"see-msg-id\"\r\n                        onClick={() => Modal.warning({\r\n                          title: \"msg_id\",\r\n                          content: <p style={{userSelect: \"text\"}}>{item.msg_id}</p>\r\n                        })}><Icon type=\"eye\" key=\"eye\"/><span>查看msg_id</span></span>] : [\r\n                      <Icon type=\"setting\" key=\"setting\" onClick={() => this.updateTextMaterial(item, index)}/>,\r\n                      <Icon disabled={true} type=\"share-alt\" key=\"edit\"\r\n                            onClick={() => item.is_timing ? message.warning(\"已设置为定时发送，如有需要，请点击修改\") : this.sendMaterial(item, index)}/>,\r\n                      <Icon type=\"delete\" key=\"delete\" onClick={() => this.deleteMaterial(item._id, index)}/>\r\n                    ]}>\r\n                      <p className=\"card-content1\">{item.content}</p>\r\n                    </Card>\r\n                  </List.Item>\r\n                )}\r\n                pagination={pagination}\r\n          />\r\n          {editMaterialModalVisible &&\r\n          <EditTextMaterialModal initMaterial={initMaterial} editMaterialModalVisible={editMaterialModalVisible}\r\n                                 cancelEditMaterial={this.cancelEditMaterial} code={code}\r\n                                 submitTextMaterial={this.submitTextMaterial}/>}\r\n        </div>\r\n      </ConfigProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TextMaterial;","import React, {Component} from 'react';\r\nimport {Avatar, Input, List, Layout, Collapse, message} from \"antd\";\r\nimport axios from 'axios';\r\nimport \"./index.scss\";\r\n\r\nconst {Sider, Content} = Layout;\r\nconst {Panel} = Collapse;\r\n\r\nclass SingleSelectByGroup extends Component {\r\n\r\n  state = {\r\n    gonghaoTagList: [],\r\n    gonghaoList: [],\r\n    nick_name: \"\",\r\n    _id: \"\",\r\n    activeKey: \"\"\r\n  };\r\n\r\n  search = nick_name => {\r\n    const {gonghaoTagList} = this.state;\r\n    if (nick_name !== \"\") {\r\n      axios.get(\"/conf/find_one\", {params: {nick_name}})\r\n        .then(res => {\r\n          if (res.data.data.length !== 0) {\r\n            const {data} = res.data;\r\n            this.props.setCode(data[0].code);\r\n            let selectGonghao = gonghaoTagList.filter(item => data[0].group === item.name);\r\n            this.setState({nick_name: \"\", _id: data[0]._id, activeKey: selectGonghao[0].name})\r\n          } else {\r\n            message.info(\"没有查询到包含该字符的公号，请检查后重新输入\")\r\n          }\r\n        })\r\n    } else {\r\n      message.info(\"公号名不能为空\")\r\n    }\r\n  };\r\n\r\n  changeSearchInput = e => {\r\n    let nick_name = e.target.value;\r\n    this.setState({nick_name})\r\n  };\r\n\r\n  selectGonghao = gonghao => {\r\n    const {code, _id} = gonghao;\r\n    this.props.setCode(code);\r\n    this.setState({_id})\r\n  };\r\n\r\n  handleChangeGroup = value => {\r\n    this.setState({activeKey: value || \"\"})\r\n  };\r\n\r\n  render() {\r\n    const {gonghaoTagList, gonghaoList, nick_name, _id, activeKey} = this.state;\r\n    const PanelList = name => (\r\n      <List className=\"gonghao-list\" dataSource={gonghaoList.length > 0 ? gonghaoList.filter(i => i.group === name) : null} locale={{emptyText: <span style={{display: \"none\"}}>123</span>}}\r\n        renderItem={gonghao =>\r\n          <List.Item className={gonghao._id === _id ? \"cursor selected\" : \"cursor\"} onClick={() => this.selectGonghao(gonghao)} key={gonghao._id}>\r\n            <Avatar shape=\"square\" size={22} icon=\"user\"/>{gonghao.nick_name}\r\n        </List.Item>\r\n      }/>\r\n    );\r\n    return (\r\n      <Layout style={{background: \"#fff\"}} className=\"message-group-wrapper\">\r\n        <Sider className=\"message-sider-wrapper\" theme=\"light\" width=\"180\">\r\n          <Input.Search\r\n            className=\"search-input\"\r\n            placeholder=\"请输入公号名称\"\r\n            onSearch={this.search}\r\n            value={nick_name}\r\n            onChange={this.changeSearchInput}\r\n          />\r\n          <List>\r\n            <List.Item>\r\n              <Collapse bordered={false} accordion activeKey={activeKey} onChange={this.handleChangeGroup}>\r\n                <Panel header=\"未分组\" key=\"未分组\">\r\n                  {PanelList(\"未分组\")}\r\n                </Panel>\r\n                {gonghaoTagList.map(item =>\r\n                  <Panel header={item.name} key={item.name}>\r\n                    {PanelList(item.name)}\r\n                  </Panel>\r\n                )}\r\n              </Collapse>\r\n            </List.Item>\r\n          </List>\r\n        </Sider>\r\n        <Content>{this.props.content}</Content>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  getGonghaoTagList = () => {\r\n    axios.get(\"/gonghaoTag\")\r\n      .then(res => {\r\n        if (res.data.code === 1) {\r\n          const {data: gonghaoTagList} = res.data;\r\n          this.setState({gonghaoTagList})\r\n        }\r\n      })\r\n  };\r\n\r\n  getGonghaoList = () => {\r\n    axios.get('/conf')\r\n      .then(res => {\r\n        const {data, code} = res.data;\r\n        if (code === 1) {\r\n          this.setState({gonghaoList: data})\r\n        }\r\n      })\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGonghaoTagList();\r\n    this.getGonghaoList();\r\n  }\r\n}\r\n\r\nexport default SingleSelectByGroup;","import React, { Component } from 'react';\r\nimport {Modal, Table, Tooltip, Input} from 'antd';\r\nimport moment from 'moment';\r\nimport {connect} from \"react-redux\";\r\nimport { actionCreators } from '../store';\r\nimport Button from '../../../../common/components/Button';\r\n\r\n\r\nclass History extends Component {\r\n\r\n  componentWillMount() {\r\n    const { code } = this.props;\r\n    this.props.getTagList(code);\r\n    this.props.getHistoryList(code);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\r\n    if(this.props.code !== nextProps.code) {\r\n      const { code } = nextProps;\r\n      this.props.getTagList(code);\r\n      this.props.getHistoryList(code);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { historyList, tagList, checkSendState, openMsgModal, closeMsgModal, deleteMsg, changeArticleIdx, delMsgInfo, historyMsgModal, code } = this.props;\r\n    const historyHeader = [\r\n      {\r\n        key: \"update_time\",\r\n        title: \"发送消息时间\",\r\n        align: \"center\",\r\n        width: 120,\r\n        render: (text, record) => {\r\n          let time = moment(record.update_time * 1000).format(\"YYYY-MM-DD, HH:mm:ss\");\r\n          return (\r\n            <span>{time}</span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: \"发送对象\",\r\n        align: \"center\",\r\n        render: (text, record) => {\r\n          let tag = \"无\";\r\n          if(record.tagId) {\r\n            tag = tagList.map(item => {\r\n              return (record.tagId === item.id) && (tag = item.name);\r\n            });\r\n          }\r\n          return (\r\n            <div>\r\n              {tag}\r\n            </div>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: \"是否成功\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record) => {\r\n          let msg_id = record.msg_id;\r\n          let success;\r\n          if(msg_id === \"\") {\r\n            success = \"无msg_id,发送不成功\"\r\n          } else {\r\n            success = \"msg_id存在,发送成功\"\r\n          }\r\n          return <span>{success}</span>\r\n        }\r\n      },\r\n      {\r\n        title: \"图文标题\",\r\n        align: \"center\",\r\n        width: 300,\r\n        render: (text, record) => {\r\n          let arr =\r\n            record.content.news_item.length !== 0\r\n              ? record.content.news_item\r\n              : [];\r\n          let titles = [];\r\n          for (let i = 0; i < arr.length; i++) {\r\n            titles.push(i + 1 + \".\" + arr[i].title);\r\n          }\r\n          return (\r\n            <Tooltip placement=\"top\" title={titles}>\r\n              <p className=\"textEllipsis\" style={{width: 300}}>{titles}</p>\r\n            </Tooltip>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"isTiming\",\r\n        title: \"是否定时\",\r\n        align: \"center\",\r\n        render: (text, record) => {\r\n          let time = record.isTiming ? \"是\" : \"否\";\r\n          return (\r\n            <span>{time}</span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"timing\",\r\n        title: \"定时时间\",\r\n        align: \"center\",\r\n        render: (text, record) => {\r\n          let time = \"~~\";\r\n          if (record.timing) {\r\n            time = moment(record.timing).format(\"YYYY-MM-DD, HH:mm:ss\")\r\n          }\r\n          return (\r\n            <span>{time}</span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: (text, record) => (\r\n          <div>\r\n            <Button mb={10} onClick={() => checkSendState(code, record.msg_id)} buttonContent=\"发送状态\" />\r\n            <Button background=\"danger\" onClick={() => openMsgModal(record.code, record.msg_id)} buttonContent=\"删除消息\" />\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          {/*<Button size=\"default\" background=\"warning\" onClick={() => clearHistory(code)} buttonContent=\"清空列表\" />*/}\r\n            {/*<div className=\"fr\">*/}\r\n              {/*<DatePicker value={delDate ? moment(delDate): null} onChange={changeDate} />*/}\r\n              {/*<Button background=\"danger\" size=\"default\" ml={10} onClick={() => deleteMany(code, delDate)} buttonContent=\"批量删除\" />*/}\r\n            {/*</div>*/}\r\n          <Table size=\"small\" bordered rowKey={record => record._id} columns={historyHeader} dataSource={historyList} />\r\n        </div>\r\n        <Modal\r\n          title=\"请输入要删除的消息的索引\"\r\n          visible={historyMsgModal}\r\n          onOk={() => deleteMsg(delMsgInfo)}\r\n          onCancel={closeMsgModal}\r\n        >\r\n          <Input style={{width: 100}} value={delMsgInfo.article_idx} onChange={changeArticleIdx} />\r\n          <p style={{color: \"red\", marginTop: 10}}>Tips:   0为全部删除  1、2、3...为对应第几条</p>\r\n        </Modal>\r\n    \t</div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nconst mapState = state => ({\r\n  tagList: state.message.group.tagList,\r\n  historyList: state.message.group.historyList,\r\n  historyMsgModal: state.message.group.historyMsgModal,\r\n  delMsgInfo: state.message.group.delMsgInfo,\r\n  delDate: state.message.group.delDate\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getHistoryList(code) {\r\n    dispatch(actionCreators.getHistoryList(code))\r\n  },\r\n  getTagList(code) {\r\n    dispatch(actionCreators.getTagList(code))\r\n  },\r\n  checkSendState(code, msg_id) {\r\n    dispatch(actionCreators.checkSendState(code, msg_id))\r\n  },\r\n  openMsgModal(code, msg_id) {\r\n    dispatch(actionCreators.openMsgModal(code, msg_id))\r\n  },\r\n  closeMsgModal() {\r\n    dispatch(actionCreators.closeMsgModal())\r\n  },\r\n  deleteMsg(delMsgInfo) {\r\n    dispatch(actionCreators.deleteMsg(delMsgInfo))\r\n  },\r\n  changeArticleIdx(e) {\r\n    dispatch(actionCreators.changeArticleIdx(e.target.value))\r\n  },\r\n  clearHistory(code) {\r\n    dispatch(actionCreators.clearHistory(code))\r\n  },\r\n  changeDate(date, dataString) {\r\n    dispatch(actionCreators.changeDate(dataString))\r\n  },\r\n  deleteMany(code, delDate) {\r\n    let time = new Date(delDate).getTime()/1000;\r\n    dispatch(actionCreators.deleteMany(code, time))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(History);\r\n","import React from 'react';\r\nimport {Spin} from 'antd';\r\n\r\nconst loadingWrapper = {\r\n  width: \"100%\",\r\n  textAlign: \"center\",\r\n  background: \"rgba(241, 244, 245, .7)\",\r\n  position: \"absolute\",\r\n  padding: \"200px 0\",\r\n  top: 0,\r\n  left: 0,\r\n  zIndex: 1,\r\n};\r\n\r\nconst Loading = props => <div style={loadingWrapper}><Spin spinning={props.spinning}/></div>\r\n\r\nexport default Loading;","import React, {Component} from 'react';\r\nimport {Empty, Modal, message, Tabs} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {actionCreators} from \"./store\";\r\nimport './index.scss';\r\nimport GroupMaterial from './material';\r\nimport TextMaterial from './textMaterial';\r\nimport SingleSelectByGroup from \"../../../common/components/SelectGonghao/SingleSelectByGroup\";\r\nimport Button from '../../../common/components/Button';\r\nimport History from './history';\r\nimport Loading from '../../../common/components/Loading';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass groupMessage extends Component {\r\n\r\n  state = {\r\n    code: null,\r\n    historyModalVisible: false,\r\n    spinning: true\r\n  };\r\n\r\n  timer = () => setTimeout(() => {\r\n    this.setState({spinning: false})\r\n  }, 1000);\r\n\r\n  setCode = code => {\r\n    clearTimeout(this.timer);\r\n    this.setState({spinning: true});\r\n    this.setState({code});\r\n    this.timer();\r\n  };\r\n\r\n  componentDidMount() {\r\n    message.warning(\"请选择公号进行操作\")\r\n  }\r\n\r\n  render() {\r\n    const {getMaterial, clearMaterial} = this.props;\r\n    const {code, historyModalVisible, spinning} = this.state;\r\n    const imageStyle = {\r\n      height: \"auto\",\r\n      margin: \"0 auto\"\r\n    };\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <SingleSelectByGroup setCode={this.setCode} content={\r\n            code\r\n              ? spinning\r\n                ? <div>\r\n                    <Loading spinning={spinning}/><Empty description=\"\" image=\"https://s.weituibao.com/static/1544235586856/empty.png\" imageStyle={imageStyle}/>\r\n                  </div>\r\n                : <div>\r\n                <Tabs tabPosition=\"left\">\r\n                  <TabPane tab=\"图文\" key=\"1\">\r\n                    <Button size=\"default\" background=\"success\" buttonContent=\"同步素材\" onClick={() => getMaterial(code)}/>\r\n                    <Button size=\"default\" buttonContent=\"群发记录\" onClick={() => this.setState({historyModalVisible: true})}/>\r\n                    <Button size=\"default\" mb={20} background=\"danger\" onClick={() => clearMaterial(code)} buttonContent=\"清空列表\"/>\r\n                    <GroupMaterial code={code}/>\r\n                  </TabPane>\r\n                  <TabPane tab=\"文本\" key=\"2\">\r\n                    <TextMaterial code={code} />\r\n                  </TabPane>\r\n                </Tabs>\r\n                  </div>\r\n              : <Empty description=\"\" image=\"https://s.weituibao.com/static/1544235586856/empty.png\" imageStyle={imageStyle}/>}/>\r\n        </div>\r\n        {code && <Modal title=\"发送记录\" visible={historyModalVisible} width={1200} footer=\"\" onCancel={() => this.setState({historyModalVisible: false})}><History code={code}/></Modal>}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getMaterial(code) {\r\n    dispatch(actionCreators.getMaterial(code))\r\n  },\r\n  clearMaterial(code) {\r\n    dispatch(actionCreators.clearMaterial(code));\r\n  },\r\n});\r\n\r\nexport default connect(null, mapDispatch)(groupMessage);","import React, { Component } from 'react';\r\nimport { Table, Select, Modal, Radio, Input } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionCreators } from './store';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '../../../common/components/Button';\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\n\r\nclass Kefu extends Component {\r\n\r\n  state = {\r\n    messageType: \"请选择消息类型\"\r\n  };\r\n\r\n  UNSAFE_componentWillMount () {\r\n    this.props.getKefuMessageList();\r\n    this.props.getAllGroup();\r\n    this.props.getAllCodes();\r\n    this.props.changePage(this.props.currentPage);\r\n  }\r\n\r\n  render() {\r\n    const { allCodes, kefuMessageList, copyMessage, deleteMessage, sendKefuMessage, messageType, handleChangeSelect, allGroup, messageGroup, selectedMessages, changeSelectedMessages, updateMoreGroup, updateGroupModal, openUpdateGroupModal, changeGroup, cancelUpdateGroup, group, changePage, currentPage, searchName, changeSearchName, clearCondition }  = this.props;\r\n    const kefuMessageHeader = [\r\n      {\r\n        key: \"remarks\",\r\n        title: \"消息名称\",\r\n        dataIndex: \"remarks\",\r\n        align: \"center\",\r\n        render: text => !text ? \"请点击修改，编辑消息名称\" : text\r\n      },\r\n      {\r\n        key: \"group\",\r\n        title: \"分组\",\r\n        dataIndex: \"group\",\r\n        align: \"center\",\r\n        width: 80\r\n      },\r\n      {\r\n        key: \"delay\",\r\n        title: \"延时时间\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: (text, record) => record.task ? (record.isHour ? record.delay / 60 + \"小时\" : record.delay + \"分钟\") : \"——\"\r\n      },\r\n      {\r\n        key: \"timing_time\",\r\n        title: \"定时时间\",\r\n        align: \"center\",\r\n        sorter: (a, b) => (new Date(a.timing_time)).getTime() - (new Date(b.timing_time)).getTime(),\r\n        render: (text, record) => record.is_timing ? record.time : \"——\",\r\n      },\r\n      {\r\n        key: \"daily_time\",\r\n        dataIndex: \"daily_time\",\r\n        title: \"按时发送\",\r\n        align: \"center\",\r\n        sorter: (a, b) => b.daily_time - a.daily_time,\r\n        render: (text, record) => record.is_daily ? moment(text += new Date(new Date().toLocaleDateString()).getTime()).format(\"HH:mm:ss\") : \"——\",\r\n      },\r\n      {\r\n        key: \"gonghaoList\",\r\n        dataIndex: \"gonghaoList\",\r\n        title: \"已选公号 (最多显示4个)\",\r\n        align: \"center\",\r\n        width: 120,\r\n        render: text => text.slice(0, 4).map(item => <p key={item._id}>{item.nick_name}</p>)\r\n      },\r\n      {\r\n        key: \"sex\",\r\n        title: \"群发粉丝\",\r\n        align: \"center\",\r\n        dataIndex: \"sex\",\r\n        width: 80,\r\n        render: text => text === \"0\" ? \"未知粉丝\" : text === \"1\"  ? \"男性粉丝\" : text === \"2\" ? \"女性粉丝\" : \"全部粉丝\"\r\n      },\r\n      {\r\n        key: \"action_type\",\r\n        title: \"互动行为\",\r\n        align: \"center\",\r\n        dataIndex: \"action_type\",\r\n        width: 80,\r\n        render: text => text === 1 ? \"用户关注\" : \"用户互动\"\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 280,\r\n        render: (text, record, index) => (\r\n          <div>\r\n            <Button background=\"success\" onClick={() => copyMessage({...record})} buttonContent=\"复制\" />\r\n            <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />\r\n            <Button disabled={record.is_timing || record.delay || record.is_daily} background={(record.is_timing || record.delay || record.is_daily) ? \"info\" : \"warning\"} onClick={() => sendKefuMessage(record._id, record.tagId)} buttonContent=\"发送消息\" />\r\n            <Button background=\"danger\" onClick={() => deleteMessage(record._id, index)} buttonContent=\"删除\" />\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n    const rowSelection = {\r\n      selectedRowKeys: selectedMessages,\r\n      onChange: changeSelectedMessages\r\n    };\r\n    const pagination = {\r\n      showQuickJumper: true,\r\n      hideOnSinglePage: true,\r\n      onChange: changePage,\r\n      current: currentPage\r\n    };\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Select\r\n              showSearch\r\n              allowClear\r\n              onChange={changeSearchName}\r\n              style={{ width: 200, marginRight: 5 }}\r\n              placeholder=\"请输入公号名称\"\r\n          >\r\n            {allCodes.map(item => (\r\n                <Option key={item._id} value={item.nick_name}>{item.nick_name}</Option>\r\n            ))}\r\n          </Select>\r\n          <Select value={messageType} onChange={value => handleChangeSelect(value, \"messageType\")} style={{marginRight: 5}}>\r\n            <Option value={4}>全部</Option>\r\n            <Option value={0}>手动</Option>\r\n            <Option value={1}>延时</Option>\r\n            <Option value={2}>定时</Option>\r\n            <Option value={3}>按时</Option>\r\n          </Select>\r\n          <Select style={{width: 100}} value={messageGroup} onChange={value => handleChangeSelect(value, \"messageGroup\")}>\r\n            <Option value=\"全部分组\">全部分组</Option>\r\n            <Option value=\"未分组\">未分组</Option>\r\n            {allGroup.map(item => <Option key={item._id} value={item.group}>{item.group}</Option>)}\r\n          </Select>\r\n          <Button size=\"default\" background=\"warning\" buttonContent=\"清空所有条件\" ml={5} onClick={clearCondition} />\r\n          <Button size=\"default\" ml={5} background=\"success\" buttonContent=\"批量修改分组\" onClick={openUpdateGroupModal} />\r\n          <Button size=\"default\" mb={20} buttonContent={<Link to=\"./create\">新建客服消息</Link>} />\r\n          <Table size=\"middle\" rowKey={record => record._id} columns={kefuMessageHeader} dataSource={kefuMessageList} rowSelection={rowSelection} pagination={pagination} />\r\n        </div>\r\n        <Modal title=\"请选择分组\" visible={updateGroupModal} onCancel={cancelUpdateGroup} onOk={() => updateMoreGroup(selectedMessages, group)}>\r\n          <Radio.Group onChange={changeGroup} value={group}>\r\n            {allGroup.map(item => <Radio key={item._id} value={item.group}>{item.group}</Radio>)}\r\n          </Radio.Group>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  allCodes: state.message.kefu.allCodes,\r\n  kefuMessageList: state.message.kefu.kefuMessageList,\r\n  messageType: state.message.kefu.messageType,\r\n  allGroup: state.message.kefu.allGroup,\r\n  messageGroup: state.message.kefu.messageGroup,\r\n  selectedMessages: state.message.kefu.selectedMessages,\r\n  updateGroupModal: state.message.kefu.updateGroupModal,\r\n  group: state.message.kefu.group,\r\n  currentPage: state.message.kefu.currentPage,\r\n  searchName: state.message.kefu.searchName\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  getKefuMessageList() {\r\n    dispatch(actionCreators.getKefuMessageList())\r\n  },\r\n  getAllGroup() {\r\n    dispatch(actionCreators.getAllGroup())\r\n  },\r\n  copyMessage(record) {\r\n    dispatch(actionCreators.createKefuMessage(record))\r\n  },\r\n  deleteMessage(id, index) {\r\n    dispatch(actionCreators.deleteMessage(id, index))\r\n  },\r\n  sendKefuMessage(id, tagId) {\r\n    dispatch(actionCreators.sendKefuMessage(id, tagId))\r\n  },\r\n  handleChangeSelect(value, name) {\r\n    dispatch(actionCreators.handleChangeSelect(value, name))\r\n  },\r\n  changeSelectedMessages(selectedMessages) {\r\n    dispatch(actionCreators.changeSelectedMessages(selectedMessages))\r\n  },\r\n  updateMoreGroup(selectedMessages, group) {\r\n    dispatch(actionCreators.updateMoreGroup(selectedMessages, group))\r\n  },\r\n  openUpdateGroupModal() {\r\n    dispatch(actionCreators.openUpdateGroupModal())\r\n  },\r\n  changeGroup(e) {\r\n    dispatch(actionCreators.changeGroup(e.target.value))\r\n  },\r\n  cancelUpdateGroup() {\r\n    dispatch(actionCreators.cancelUpdateGroup())\r\n  },\r\n  changePage(page) {\r\n    dispatch(actionCreators.changePage(page))\r\n  },\r\n  changeSearchName(value) {\r\n    dispatch(actionCreators.changeSearchName(value))\r\n  },\r\n  clearCondition() {\r\n    dispatch(actionCreators.clearCondition())\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Kefu);","import React, {Component} from 'react';\r\nimport {\r\n  ConfigProvider,\r\n  Icon,\r\n  Form,\r\n  Button,\r\n  Radio,\r\n  DatePicker,\r\n  Input,\r\n  Upload,\r\n  InputNumber,\r\n  Avatar,\r\n  Divider,\r\n  Modal,\r\n  Select,\r\n  Tag,\r\n  TimePicker\r\n} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {actionCreators} from '../store';\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/zh-cn';\r\nimport \"./index.scss\";\r\nimport MultiSelectModal from '../../../../common/components/SelectGonghao/MultiSelectModal';\r\nconst {Option} = Select;\r\n\r\nclass EditMessage extends Component {\r\n  state = {\r\n    selectGonghaoModal: true\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.props.getAllCodes();\r\n    this.props.getAllGroup();\r\n    let query = this.props.history.location.query;\r\n    query && this.props.closeSelectModal();\r\n    query && this.props.initKefuMessageInfo(query);\r\n  }\r\n\r\n  render() {\r\n    const {kefuMessageInfo, content, changeContentValue, changeMessageValue, uploadImg, submitMessage, allCodes, changeGonghao, selectGonghaoModal, history, openSelectModal, closeSelectModal, openPreviewModal, closePreviewModal, openid, changeOpenId, previewModal, preview, allGroup, groupInputVisible, groupValue, showGroupInput, handleGroupInputChange, handleGroupInputConfirm, handleClose, cancelSelectGroup} = this.props;\r\n    let isUploadImg, isTextUploadImg, FormItemWrapper;\r\n    if (content.picurl) {\r\n      isTextUploadImg = <img style={{width: \"100px\"}} src={content.picurl} alt=\"\"/>\r\n    } else {\r\n      isTextUploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n    }\r\n    if (kefuMessageInfo.img) {\r\n      isUploadImg = <img style={{width: \"100px\"}} src={kefuMessageInfo.img} alt=\"\"/>\r\n    } else {\r\n      isUploadImg = <Button><Icon type=\"upload\"/> 上传图片 </Button>\r\n    }\r\n    if (kefuMessageInfo.type === 1) {\r\n      FormItemWrapper = <Form.Item label=\"文本消息\" className=\"text-message\">\r\n        <Input.TextArea autosize={{minRows: 6}} value={content.description} placeholder=\"请输入文本消息\"\r\n                        onChange={e => changeContentValue(e, \"description\")}/>\r\n      </Form.Item>\r\n    } else if (kefuMessageInfo.type === 0) {\r\n      FormItemWrapper = <div>\r\n        <Form.Item label=\"图片封面\">\r\n          <Upload name=\"imageFile\" action=\"/reply/upload\" onChange={(info) => {\r\n            uploadImg(kefuMessageInfo, info)\r\n          }} showUploadList={false}>\r\n            {isTextUploadImg}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文标题\">\r\n          <Input placeholder=\"请输入图文标题\" value={content.title} onChange={e => changeContentValue(e, \"title\")}/>\r\n        </Form.Item>\r\n        <Form.Item label=\"图文描述\" className=\"text-message\">\r\n          <Input.TextArea autosize={{minRows: 6}} value={content.description} placeholder=\"请输入图文描述\"\r\n                          onChange={e => changeContentValue(e, \"description\")}/>\r\n        </Form.Item>\r\n        <Form.Item label=\"跳转链接\">\r\n          <Input placeholder=\"请输入跳转链接\" value={content.url} onChange={e => changeContentValue(e, \"url\")}/>\r\n        </Form.Item>\r\n      </div>\r\n    } else if (kefuMessageInfo.type === 2) {\r\n      FormItemWrapper =\r\n          <Form.Item label=\"图片消息\">\r\n            <Upload name=\"imageFile\" action=\"/reply/upload\" onChange={(info) => {\r\n              uploadImg(kefuMessageInfo, info)\r\n            }} showUploadList={false}>\r\n              {isUploadImg}\r\n            </Upload>\r\n          </Form.Item>;\r\n    }\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: {span: 4}\r\n      },\r\n      wrapperCol: {\r\n        sm: {span: 20, offset: 0}\r\n      },\r\n    };\r\n    let Channel;\r\n    if (kefuMessageInfo.channel === 1) {\r\n      Channel = <><Form.Item label=\"延时时间\">\r\n        <InputNumber value={kefuMessageInfo.delay} min={1} onChange={value => changeMessageValue(value, \"delay\")}/>\r\n        <Select value={kefuMessageInfo.isHour} onChange={value => changeMessageValue(value, \"isHour\")}\r\n                style={{width: 80}}>\r\n          <Option value={0}>分钟</Option>\r\n          <Option value={1}>小时</Option>\r\n        </Select>\r\n      </Form.Item>\r\n        <Form.Item label=\"互动类型\">\r\n          <Radio.Group value={kefuMessageInfo.action_type}\r\n                       onChange={e => changeMessageValue(e.target.value, \"action_type\")}>\r\n            <Radio value={1}>用户关注</Radio>\r\n            <Radio value={2}>用户互动</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n      </>\r\n    } else if (kefuMessageInfo.channel === 2) {\r\n      Channel =\r\n          <Form.Item label=\"定时时间\">\r\n            <DatePicker showTime placeholder=\"选择时间\" value={moment(kefuMessageInfo.timing_time)}\r\n                        onChange={(value, dateString) => changeMessageValue(dateString, 'timing_time')}/>\r\n          </Form.Item>\r\n    } else if (kefuMessageInfo.channel === 3) {\r\n      Channel =\r\n          <Form.Item label=\"选择时间\">\r\n            <TimePicker placeholder=\"选择时间\" value={moment(kefuMessageInfo.daily_time)}\r\n                        onChange={(value, dateString) => changeMessageValue(value, 'daily_time')}/>\r\n          </Form.Item>\r\n    }\r\n    return (\r\n        <ConfigProvider locale={zhCN}>\r\n          <div className=\"container edit-message\">\r\n            {/*{isImgAndText}*/}\r\n            <div className=\"kefu-form fl\">\r\n              <Form {...formItemLayout}>\r\n                <Form.Item label=\"选择公号\">\r\n                  <Avatar onClick={openSelectModal} className=\"cursor\" shape=\"square\" icon=\"user\"/>\r\n                </Form.Item>\r\n                <Form.Item label=\"消息名称\">\r\n                  <Input value={kefuMessageInfo.remarks} placeholder=\"请输入消息名称,(仅供备注，不会发送给粉丝)\"\r\n                         onChange={e => changeMessageValue(e.target.value, \"remarks\")}/>\r\n                </Form.Item>\r\n                <Form.Item label=\"消息分组\">\r\n                  <Tag color={kefuMessageInfo.group !== \"未分组\" ? \"#1890ff\" : \"\"} closable={kefuMessageInfo.group !== \"未分组\"}\r\n                       onClose={cancelSelectGroup}\r\n                       style={kefuMessageInfo.group !== \"未分组\" ? {} : {background: '#fff', borderStyle: 'dashed'}}>\r\n                    {kefuMessageInfo.group}\r\n                  </Tag>\r\n                </Form.Item>\r\n                <Form.Item label=\"全部分组\">\r\n                  {groupInputVisible && (\r\n                      <Input\r\n                          ref={input => this.input = input}\r\n                          type=\"text\"\r\n                          size=\"small\"\r\n                          style={{width: 78, marginRight: 10}}\r\n                          value={groupValue}\r\n                          onChange={handleGroupInputChange}\r\n                          onBlur={handleGroupInputConfirm}\r\n                          onPressEnter={handleGroupInputConfirm}\r\n                      />\r\n                  )}\r\n                  {!groupInputVisible && (\r\n                      <Tag className=\"cursor\" onClick={() => showGroupInput(this)}\r\n                           style={{background: '#fff', borderStyle: 'dashed'}}>\r\n                        <Icon type=\"plus\"/> New Tag\r\n                      </Tag>\r\n                  )}\r\n                  {allGroup.map((item, index) => <Tag color=\"#1890ff\" key={item._id} className=\"cursor\" closable onClose={e => handleClose(e, item._id, index)} onClick={e => changeMessageValue(item.group, \"group\")}>\r\n                    {item.group}\r\n                  </Tag>)}\r\n                </Form.Item>\r\n                <Divider style={{width: \"205%\", marginLeft: -50}}/>\r\n                <h2 className=\"block-title\">设置客服消息</h2>\r\n                <Form.Item>\r\n                  <Radio.Group buttonStyle=\"solid\" value={kefuMessageInfo.type} onChange={e => changeMessageValue(e.target.value, \"type\")}>\r\n                    <Radio.Button value={0}>图文消息</Radio.Button>\r\n                    <Radio.Button value={1}>文本消息</Radio.Button>\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n                {FormItemWrapper}\r\n                <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n                <h2 className=\"block-title\">选择群发对象</h2>\r\n                <Form.Item label=\"群发粉丝\">\r\n                  <Radio.Group value={kefuMessageInfo.sex} onChange={e => changeMessageValue(e.target.value, \"sex\")}>\r\n                    <Radio value=\"all\">全部粉丝</Radio>\r\n                    <br/>\r\n                    <Radio value=\"1\">仅男性粉丝</Radio>\r\n                    <Radio value=\"2\">仅女性粉丝</Radio>\r\n                    <Radio value=\"0\">仅未知粉丝</Radio>\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n                <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n                <h2 className=\"block-title\">设置群发方式</h2>\r\n                <Form.Item label=\"发送方式\">\r\n                  <Radio.Group value={kefuMessageInfo.channel}\r\n                               onChange={e => changeMessageValue(e.target.value, \"channel\")}>\r\n                    <Radio.Button value={0}>人工</Radio.Button>\r\n                    <Radio.Button value={1}>延时</Radio.Button>\r\n                    <Radio.Button value={2}>定时</Radio.Button>\r\n                    <Radio.Button value={3}>按时发送</Radio.Button>\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n                {Channel}\r\n                <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n                <Form.Item>\r\n                  <Button size=\"large\" type=\"primary\"\r\n                          onClick={() => submitMessage(kefuMessageInfo, history, allCodes)}>确定{!kefuMessageInfo._id ? \"并创建消息\" : \"并保存消息\"}</Button>\r\n                  {kefuMessageInfo._id && <Button style={{marginLeft: 20}} type=\"info\" size=\"large\"\r\n                                                  onClick={() => history.goBack()}>取消编辑</Button>}\r\n                  <Button size=\"large\" style={{marginLeft: 30, background: \"yellowgreen\", borderColor: \"yellowgreen\"}}\r\n                          type=\"primary\" onClick={openPreviewModal}>发送预览</Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n          {selectGonghaoModal &&\r\n          <MultiSelectModal allCodes={allCodes} selectGonghaoModal={selectGonghaoModal} changeGonghao={changeGonghao}\r\n                            closeSelectModal={closeSelectModal} codes={kefuMessageInfo.codes}/>}\r\n          <Modal title=\"发送预览\" visible={previewModal} onCancel={closePreviewModal}\r\n                 onOk={() => preview(kefuMessageInfo, openid)}>\r\n            <Input onChange={changeOpenId} value={openid} placeholder=\"请输入预览用户的openid\"/>\r\n            <span className=\"tips\">Tips: 在预览公号回复<span> openid </span>,将返回的内容复制到输入框中<br/>一个openid只对应一个公号</span>\r\n          </Modal>\r\n        </ConfigProvider>\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  kefuMessageInfo: state.message.kefu.kefuMessageInfo,\r\n  content: state.message.kefu.content,\r\n  allCodes: state.message.kefu.allCodes,\r\n  selectGonghaoModal: state.message.kefu.selectGonghaoModal,\r\n  previewModal: state.message.kefu.previewModal,\r\n  openid: state.message.kefu.openid,\r\n  allGroup: state.message.kefu.allGroup,\r\n  groupInputVisible: state.message.kefu.groupInputVisible,\r\n  groupValue: state.message.kefu.groupValue,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  initKefuMessageInfo(query) {\r\n    dispatch(actionCreators.initKefuMessageInfo(query));\r\n  },\r\n  changeContentValue(e, name) {\r\n    dispatch(actionCreators.changeContentValue(e.target.value, name));\r\n  },\r\n  uploadImg(kefuMessageInfo, info) {\r\n    if (info.file.status === 'done') {\r\n      let img = `http://t.dmmup.com/uploads/${info.file.response.filename}`,\r\n          img_path = `./public/uploads/${info.file.response.filename}`;\r\n      if (kefuMessageInfo.type === 0) {\r\n        dispatch(actionCreators.changeContentValue(img, \"picurl\"));\r\n      } else {\r\n        dispatch(actionCreators.changeMessageValue(img, \"img\"));\r\n        dispatch(actionCreators.changeMessageValue(img_path, \"img_path\"));\r\n      }\r\n    }\r\n  },\r\n  changeMessageValue(value, name) {\r\n    dispatch(actionCreators.changeMessageValue(value, name));\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState());\r\n  },\r\n  selectParams() {\r\n    dispatch(actionCreators.selectParams());\r\n  },\r\n  submitMessage(info, history, allCodes) {\r\n    dispatch(actionCreators.submitMessage(info, history, allCodes));\r\n  },\r\n  changeGonghao(codes) {\r\n    dispatch(actionCreators.changeGonghao(codes))\r\n  },\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  openSelectModal() {\r\n    dispatch(actionCreators.openSelectModal())\r\n  },\r\n  closeSelectModal() {\r\n    dispatch(actionCreators.closeSelectModal())\r\n  },\r\n  changeOpenId(e) {\r\n    dispatch(actionCreators.changeOpenId(e.target.value))\r\n  },\r\n  openPreviewModal() {\r\n    dispatch(actionCreators.openPreviewModal())\r\n  },\r\n  closePreviewModal() {\r\n    dispatch(actionCreators.closePreviewModal())\r\n  },\r\n  preview(info, openid) {\r\n    dispatch(actionCreators.preview(info, openid))\r\n  },\r\n  getAllGroup() {\r\n    dispatch(actionCreators.getAllGroup())\r\n  },\r\n  showGroupInput(that) {\r\n    dispatch(actionCreators.showGroupInput(that))\r\n  },\r\n  handleGroupInputChange(e) {\r\n    dispatch(actionCreators.handleGroupInputChange(e.target.value))\r\n  },\r\n  handleGroupInputConfirm(e) {\r\n    dispatch(actionCreators.handleGroupInputConfirm(e.target.value))\r\n  },\r\n  handleClose(e, _id, index) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    dispatch(actionCreators.handleClose(_id, index))\r\n  },\r\n  cancelSelectGroup(e) {\r\n    e.preventDefault();\r\n    dispatch(actionCreators.cancelSelectGroup())\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(EditMessage);","import React, {Component} from 'react';\r\nimport {Input, Table} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../../common/components/Button';\r\nimport {actionCreators} from './store';\r\nimport moment from 'moment';\r\n\r\nconst {Search} = Input;\r\n\r\nclass Template extends Component {\r\n  render() {\r\n    const {confName, templateMessageList, deleteTemplate, sendTemplate, changeConfNickName, searchConfName} = this.props;\r\n    const templateColumns = [\r\n      {\r\n        key: \"confName\",\r\n        dataIndex: \"confName\",\r\n        title: \"公众号\",\r\n        align: \"center\"\r\n      }, {\r\n        key: \"name\",\r\n        dataIndex: \"name\",\r\n        title: \"消息名称\",\r\n        align: \"center\"\r\n      }, {\r\n        key: \"sex\",\r\n        dataIndex: \"sex\",\r\n        title: \"消息名称\",\r\n        align: \"center\",\r\n        render: text => text === \"all\" ? \"全部\" : (text === \"1\" ? \"男\" : (text === \"2\" ? \"女\" : \"未知\"))\r\n      }, {\r\n        key: \"templateName\",\r\n        dataIndex: \"templateName\",\r\n        title: \"模板名称\",\r\n        align: \"center\"\r\n      }, {\r\n        key: \"timing_time\",\r\n        dataIndex: \"timing_time\",\r\n        title: \"定时\",\r\n        align: \"center\",\r\n        render: (text, record) => record.is_timing ? moment(text).format(\"YYYY-MM-DD HH:mm:ss\") : \"~~\"\r\n      }, {\r\n        key: \"status\",\r\n        dataIndex: \"status\",\r\n        title: \"发送状态\",\r\n        align: \"center\",\r\n        width: 80,\r\n        render: text => text === 0 ? \"未发送\" : (text === 1 ? \"正在发送\" : (text === 2 ? \"发送次数超出限制\" : \"发送完成\"))\r\n      }, {\r\n        key: \"count\",\r\n        dataIndex: \"count\",\r\n        title: \"已接收用户数\",\r\n        align: \"center\",\r\n        width: 80\r\n      }, {\r\n        key: \"Action\",\r\n        title: \"操作\",\r\n        align: \"center\",\r\n        width: 240,\r\n        render: (text, record, index) => <div>\r\n          {(!record.is_timing && record.status === 0) && <Button buttonContent=\"发送\" onClick={() => sendTemplate(record._id, index)} background=\"success\"/>}\r\n          {record.status === 0 && <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />}\r\n          <Button buttonContent=\"删除\" onClick={() => deleteTemplate(record._id, index)} background=\"danger\"/>\r\n        </div>\r\n      }\r\n    ];\r\n    return (\r\n      <div className=\"container\">\r\n        <Search style={{width: 200}} placeholder=\"搜索公众号\" value={confName} onChange={changeConfNickName} onSearch={searchConfName}/>\r\n        <div className=\"fr\"><Button size=\"default\" className=\"fr\" mb={20} buttonContent={<Link to=\"./create\">+ 新建模板消息</Link>}/></div>\r\n        <Table rowKey={record => record._id} size=\"middle\" dataSource={templateMessageList} columns={templateColumns}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getTemplateList()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  templateMessageList: state.message.template.templateMessageList,\r\n  confName: state.message.template.confName,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getTemplateList() {\r\n    dispatch(actionCreators.getTemplateList())\r\n  },\r\n  deleteTemplate(id, index) {\r\n    dispatch(actionCreators.deleteTemplate(id, index))\r\n  },\r\n  sendTemplate(id, index) {\r\n    dispatch(actionCreators.sendTemplate(id, index))\r\n  },\r\n  changeConfNickName(e) {\r\n    dispatch(actionCreators.changeConfNickName(e.target.value))\r\n  },\r\n  searchConfName(value) {\r\n    dispatch(actionCreators.searchConfName(value))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Template);","import React from 'react';\r\nimport { Radio, Row, Col, Modal, Button } from 'antd';\r\n\r\nconst SingleSelectModal = props => {\r\n  const {selectGonghaoModal, allCodes, code, confirmSelect, closeSelectModal} = props;\r\n  return (\r\n    <Modal width={1000} visible={selectGonghaoModal} maskClosable={false} closable={false} mask={false}  footer={<Button type=\"primary\" disabled={!code} onClick={closeSelectModal}>确定</Button>}>\r\n      <Radio.Group value={code} style={{ width: '100%' }} onChange={e => confirmSelect(e.target.value, code)}>\r\n        <Row>\r\n          {allCodes.map(item => <Col span={4} key={item._id}>\r\n            <Radio value={item.code}>{item.nick_name}</Radio>\r\n          </Col>)}\r\n        </Row>\r\n      </Radio.Group>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default SingleSelectModal;","import React from 'react';\r\nimport {Modal, Input, Button} from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport {actionCreators} from \"../store\";\r\n\r\nconst colors = [\"#000\", \"#CF021B\", \"#F5A623\", \"#3BA6FF\", \"#BD10E0\", \"#999\"];\r\nconst colorWrapperStyle = {\r\n  width: 20,\r\n  height: 20,\r\n  marginLeft: 10,\r\n  display: \"inline-block\",\r\n  marginTop: 5\r\n};\r\n\r\nconst TemplateModal = props => {\r\n  const { show, content, closeTemplateModal, saveTemplateModal, editTemplate } = props;\r\n  const footer = (\r\n    <div style={{overflow: \"hidden\", lineHeight: 1.5}}>\r\n      <div className=\"fl\">\r\n        {colors.map(item => <span className=\"cursor\" style={{...colorWrapperStyle, background: item}} key={item} onClick={() => editTemplate('color', item)} />)}\r\n      </div>\r\n      <Button type=\"primary\" className=\"fr\" onClick={saveTemplateModal}>保存</Button>\r\n    </div>);\r\n  return(\r\n    <Modal\r\n      visible={show}\r\n      onCancel={closeTemplateModal}\r\n      closable={false}\r\n      footer={footer}\r\n      mask={false}\r\n    >\r\n      <Input.TextArea style={{color: content[\"color\"]}} value={content[\"value\"]} autoSize={{ minRows: 3, maxRows: 6 }} onChange={e => editTemplate('value', e.target.value)} />\r\n    </Modal>\r\n  )\r\n};\r\n\r\nconst mapState = state => ({\r\n  content: state.message.template.content,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  closeTemplateModal() {\r\n    dispatch(actionCreators.closeTemplateModal())\r\n  },\r\n  saveTemplateModal() {\r\n    dispatch(actionCreators.saveTemplateModal())\r\n  },\r\n  editTemplate(key, value) {\r\n    dispatch(actionCreators.editTemplate(key, value))\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(TemplateModal);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  ConfigProvider,\r\n  Icon,\r\n  Form,\r\n  Button,\r\n  Radio,\r\n  Input,\r\n  Avatar,\r\n  Divider,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Switch,\r\n  DatePicker\r\n} from \"antd\";\r\nimport SingleSelectModal from '../../../../common/components/SelectGonghao/SingleSelectModal';\r\nimport {actionCreators} from \"../store\";\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/zh-cn';\r\nimport TemplateModal from '../components/TemplateModal';\r\nimport './index.scss';\r\n\r\nconst {Option} = Select;\r\n\r\nclass EditTemplate extends Component {\r\n\r\n  async componentWillMount() {\r\n    this.props.getAllCodes();\r\n    const {query} = this.props.location;\r\n    query && await this.props.initMessageInfo(query);\r\n  }\r\n\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: {span: 4}\r\n      },\r\n      wrapperCol: {\r\n        sm: {span: 20, offset: 0}\r\n      },\r\n    };\r\n\r\n    const {openSelectModal, messageInfo, changeMessageInfo, selectGonghaoModal, allCodes, openEditModal, templateList, templateInfo, templateModalVisible, changeTemplate, history, submitMessage, confirmSelect, closeSelectModal, openPreviewModal, closePreviewModal, openid, changeOpenId, previewModal, preview} = this.props;\r\n    let template = [];\r\n    for (let key in templateInfo.data) {\r\n      let content = messageInfo.content[key];\r\n      if (key === \"first\") {\r\n        template.unshift(<Form.Item label={templateInfo.data[\"first\"].pre || \"\"} key=\"first\">\r\n          <span className=\"mr5\">{content.value}</span>\r\n          <Icon className=\"cursor\" onClick={() => openEditModal(key, content)} type=\"edit\"/>\r\n        </Form.Item>)\r\n      } else {\r\n        template.push(<Form.Item label={templateInfo.data[key].pre || \"\"} key={key}>\r\n          <span className=\"mr5\">{content.value}</span>\r\n          <Icon className=\"cursor\" onClick={() => openEditModal(key, content)} type=\"edit\"/>\r\n        </Form.Item>)\r\n      }\r\n    }\r\n    let GonghaoModal;\r\n    selectGonghaoModal && (GonghaoModal =\r\n      <SingleSelectModal code={messageInfo.code} confirmSelect={confirmSelect} closeSelectModal={closeSelectModal}\r\n                         allCodes={allCodes} selectGonghaoModal={selectGonghaoModal}/>);\r\n    return (\r\n      <ConfigProvider locale={zhCN}>\r\n        <div className=\"container edit-message\">\r\n          <Form className=\"kefu-form\" {...formItemLayout} style={{width: 520}}>\r\n            <Form.Item label=\"选择公号\">\r\n              <Avatar onClick={openSelectModal} className=\"cursor\" shape=\"square\" icon=\"user\"/>\r\n            </Form.Item>\r\n            <Form.Item label=\"消息名称\">\r\n              <Input value={messageInfo.name} onChange={e => changeMessageInfo(\"name\", e.target.value)}\r\n                     placeholder=\"请输入消息名称,(仅供备注，不会发送给粉丝)\"/>\r\n            </Form.Item>\r\n            <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n            <h2 className=\"block-title\">设置模板消息</h2>\r\n            <Form.Item label=\"选择模板\">\r\n              <Select value={messageInfo.templateId} onChange={changeTemplate}>\r\n                {templateList.map(item => <Option value={item.template_id}\r\n                                                  key={item.template_id}>{item.title}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n            <Row className=\"template-wrapper\">\r\n              <Col span={4}/>\r\n              <Col span={20}>\r\n                <div className=\"message-block\">\r\n                  {template}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"点击跳转\">\r\n              <Input value={messageInfo.url} placeholder=\"输入跳转链接，且必须以http://或https://开头\"\r\n                     onChange={e => changeMessageInfo(\"url\", e.target.value)}/>\r\n            </Form.Item>\r\n            <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n            <h2 className=\"block-title\">选择群发对象</h2>\r\n            <Form.Item label=\"群发粉丝\">\r\n              <Radio.Group value={messageInfo.sex} onChange={e => changeMessageInfo(\"sex\", e.target.value)}>\r\n                <Radio value=\"all\">全部粉丝</Radio>\r\n                <Radio value=\"0\">未知粉丝</Radio>\r\n                <Radio value=\"1\">男粉丝</Radio>\r\n                <Radio value=\"2\">女粉丝</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n            <h2 className=\"block-title\">设置发送方式</h2>\r\n            <Form.Item label=\"定时发送\">\r\n              <Switch checked={messageInfo.is_timing} onChange={value => changeMessageInfo(\"is_timing\", value)}/>\r\n            </Form.Item>\r\n            {messageInfo.is_timing && <Form.Item label=\"发送时间\">\r\n              <DatePicker showTime placeholder=\"选择时间\" value={moment(messageInfo.timing_time)}\r\n                          onChange={(value, dateString) => changeMessageInfo('timing_time', dateString)}/>\r\n            </Form.Item>}\r\n            <Divider style={{width: \"175%\", marginLeft: -50}}/>\r\n            <Form.Item>\r\n              <Button size=\"large\" type=\"primary\"\r\n                      onClick={() => submitMessage(messageInfo, history, templateList)}>确定{!messageInfo._id ? \"并创建消息\" : \"并保存消息\"}</Button>\r\n              {messageInfo._id &&\r\n              <Button style={{marginLeft: 20}} type=\"info\" size=\"large\" onClick={() => history.goBack()}>取消编辑</Button>}\r\n              <Button size=\"large\" style={{marginLeft: 20, background: \"yellowgreen\", borderColor: \"yellowgreen\"}}\r\n                      type=\"primary\" onClick={openPreviewModal}>发送预览</Button>\r\n            </Form.Item>\r\n          </Form>\r\n          {GonghaoModal}\r\n          <TemplateModal show={templateModalVisible}/>\r\n          <Modal title=\"发送预览\" visible={previewModal} onCancel={closePreviewModal}\r\n                 onOk={() => preview(messageInfo, openid)}>\r\n            <Input onChange={changeOpenId} value={openid} placeholder=\"请输入预览用户的openid\"/>\r\n            <span className=\"tips\">Tips: 在预览公号回复<span> openid </span>,将返回的内容复制到输入框中<br/>一个openid只对应一个公号</span>\r\n          </Modal>\r\n        </div>\r\n      </ConfigProvider>\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetState()\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  messageInfo: state.message.template.messageInfo,\r\n  templateList: state.message.template.templateList,\r\n  templateInfo: state.message.template.templateInfo,\r\n  templateModalVisible: state.message.template.templateModalVisible,\r\n  selectGonghaoModal: state.message.template.selectGonghaoModal,\r\n  allCodes: state.message.template.allCodes,\r\n  previewModal: state.message.template.previewModal,\r\n  openid: state.message.template.openid,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getAllCodes() {\r\n    dispatch(actionCreators.getAllCodes())\r\n  },\r\n  openEditModal(key, content) {\r\n    !content.color && (content.color = \"#000\");\r\n    dispatch(actionCreators.openEditModal(key, content))\r\n  },\r\n  changeTemplate(value) {\r\n    dispatch(actionCreators.changeTemplate(value))\r\n  },\r\n  submitMessage(info, history, templateList) {\r\n    dispatch(actionCreators.submitMessage(info, history, templateList));\r\n  },\r\n  openSelectModal() {\r\n    dispatch(actionCreators.openSelectModal())\r\n  },\r\n  changeMessageInfo(key, value) {\r\n    dispatch(actionCreators.changeMessageInfo(key, value))\r\n  },\r\n  initMessageInfo(record) {\r\n    dispatch(actionCreators.initMessageInfo(record))\r\n  },\r\n  confirmSelect(code) {\r\n    dispatch(actionCreators.confirmSelect(code))\r\n  },\r\n  resetState() {\r\n    dispatch(actionCreators.resetState())\r\n  },\r\n  closeSelectModal() {\r\n    dispatch(actionCreators.closeSelectModal())\r\n  },\r\n  changeOpenId(e) {\r\n    dispatch(actionCreators.changeOpenId(e.target.value))\r\n  },\r\n  openPreviewModal() {\r\n    dispatch(actionCreators.openPreviewModal())\r\n  },\r\n  closePreviewModal() {\r\n    dispatch(actionCreators.closePreviewModal())\r\n  },\r\n  preview(info, openid) {\r\n    dispatch(actionCreators.preview(info, openid))\r\n  },\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(EditTemplate);","import React, { Component } from 'react';\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Group from \"./group\";\r\nimport GroupMaterial from \"./group/material\";\r\nimport History from './group/history';\r\nimport Kefu from './kefu';\r\nimport EditKefuMSg from './kefu/edit';\r\nimport Template from './template';\r\nimport EditTemplate from './template/edit';\r\n\r\nclass GroupRouter extends Component {\r\n  render() {\r\n    return (\r\n    \t<div>\r\n        <Route path='/admin/message'>\r\n          <Switch>\r\n            <Route path=\"/admin/message/group/index\" component={Group} />\r\n            <Route path=\"/admin/message/group/material\" component={GroupMaterial} />\r\n            <Route path=\"/admin/message/group/history\" component={History} />\r\n            <Route path=\"/admin/message/kefu/index\" component={Kefu} />\r\n            <Route path=\"/admin/message/kefu/create\" component={EditKefuMSg} />\r\n            <Route path=\"/admin/message/kefu/update\" component={EditKefuMSg} />\r\n            <Route path=\"/admin/message/template/index\" component={Template} />\r\n            <Route path=\"/admin/message/template/create\" component={EditTemplate} />\r\n            <Route path=\"/admin/message/template/update\" component={EditTemplate} />\r\n            <Redirect from=\"/admin/message\" exact to='/admin/message/group' />\r\n            <Redirect from=\"/admin/message/group\" exact to='/admin/message/group/index' />\r\n            <Redirect from=\"/admin/message/kefu\" exact to='/admin/message/kefu/index' />\r\n            <Redirect from=\"/admin/message/template\" exact to='/admin/message/template/index' />\r\n          </Switch>\r\n        </Route>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroupRouter;","import React, {Component} from 'react';\r\nimport {Table, Modal, message, Tabs} from 'antd';\r\nimport axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '../../../common/components/Button';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\nclass Advertise extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeTab = this.changeTab.bind(this);\r\n  }\r\n\r\n  state = {\r\n    spreadData: [],\r\n    domain_names: [],\r\n    tagList: [],\r\n    dataList: []\r\n  };\r\n\r\n  render() {\r\n    const {spreadData, tagList} = this.state;\r\n    const tabsRender = tagList.map(item => (\r\n      <TabPane tab={item.name} key={item.name}/>\r\n    ));\r\n    const spreadHeader = [\r\n      {\r\n        key: \"links\",\r\n        title: \"链接\",\r\n        align: \"center\",\r\n        width: 280,\r\n        render: (text, record) => <p\r\n          style={{width: 280, wordWrap: \"break-word\", userSelect: \"all\"}}>{'http://tiexie0.wang/cmst/' + record.id}</p>\r\n      },\r\n      {\r\n        key: \"group\",\r\n        dataIndex: \"group\",\r\n        title: \"分组\",\r\n        align: \"center\",\r\n        width: 120\r\n      },\r\n      {\r\n        key: \"title\",\r\n        dataIndex: \"title\",\r\n        title: \"标题\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        key: \"remarks\",\r\n        dataIndex: \"remarks\",\r\n        title: \"备注\",\r\n        align: \"center\",\r\n        width: 100,\r\n        render: text => text ? text : \"无\"\r\n      },\r\n      {\r\n        title: \"数据\",\r\n        align: \"center\",\r\n        width: 80,\r\n        render: (text, record) => <a href={'http://tiexie0.wang/transfer/' + record.id} target={\"_blank\"}>查看数据</a>\r\n      },\r\n      {\r\n        title: \"置顶\",\r\n        align: \"center\",\r\n        width: 80,\r\n        render: (text, record) => <Button background=\"warning\" onClick={() => this.goTop(record._id)} buttonContent=\"置顶\" />\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (text, record, index) => <div>\r\n          <Button buttonContent={<Link to={{pathname: \"./update\", query: {...record}}}>修改</Link>} />\r\n          <Button background=\"danger\" buttonContent=\"删除\" onClick={() => this.deleteLink(record._id, index)} />\r\n          <Button background=\"success\" mr={0} buttonContent=\"复制\" onClick={() => this.copyLink({...record})} />\r\n        </div>\r\n      }\r\n    ];\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <Button size=\"default\" background=\"success\" mb={20} buttonContent={<Link to=\"./create\">添加新链接</Link>} />\r\n          <Tabs animated={false} defaultActiveKey=\"ALL\" tabBarGutter={0} onChange={this.changeTab}\r\n                size='small'>\r\n            <TabPane tab=\"ALL\" key=\"ALL\"/>\r\n            {tabsRender}\r\n          </Tabs>\r\n          <Table rowKey={record => record._id} size=\"small\" bordered columns={spreadHeader} dataSource={spreadData}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSpreadList();\r\n    this.getTagList();\r\n  }\r\n\r\n  getSpreadList() {\r\n    axios.get(\"/transfer\").then(res => {\r\n      let spreadData = res.data.messages;\r\n      let domain_names = res.data.domain_names;\r\n      this.setState({\r\n        spreadData,\r\n        dataList: spreadData,\r\n        domain_names\r\n      })\r\n    });\r\n  }\r\n\r\n  getTagList() {\r\n    axios.get(\"/tuiguangTag\").then(res => {\r\n      const {data: tagList} = res.data;\r\n      this.setState({tagList})\r\n    });\r\n  }\r\n\r\n  changeTab(key) {\r\n    const {dataList} = this.state;\r\n    if (key === 'ALL') {\r\n      this.setState({\r\n        spreadData: dataList\r\n      });\r\n    } else {\r\n      let data = [];\r\n      for (let i = 0; i < dataList.length; i++) {\r\n        if (key === dataList[i].group) {\r\n          data.push(dataList[i]);\r\n        }\r\n      }\r\n      this.setState({spreadData: [...data]})\r\n    }\r\n  }\r\n\r\n  goTop(id) {\r\n    Modal.confirm({\r\n      title: \"确定置顶这条链接吗？\",\r\n      onOk: () => {\r\n        axios.post('/transfer/goTop', {id})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            this.getSpreadList();\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteLink(id, index) {\r\n    const {spreadData} = this.state;\r\n    Modal.confirm({\r\n      title: '确认删除这条内容吗？:',\r\n      onOk: () => {\r\n        axios.get('/transfer/delete', {params: {id}})\r\n          .then(res => {\r\n            message.info(res.data.success);\r\n            spreadData.splice(index, 1);\r\n            this.setState({spreadData});\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  copyLink(record) {\r\n    record.id += '_copy';\r\n    const {spreadData} = this.state;\r\n    Modal.confirm({\r\n      title: \"确定复制一条推广链接吗？\",\r\n      onOk: () => {\r\n        axios.post('/transfer/create', {...record})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.info('复制成功');\r\n              spreadData.unshift(res.data.data);\r\n              this.setState({spreadData})\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default Advertise;","import React, {Component, Fragment} from 'react';\r\nimport {Form, Input, Button, Switch, InputNumber, message, Modal, List, Tag } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst initState = {\r\n  spreadLinkInfo: {\r\n    id: \"\",\r\n    title: \"\",\r\n    links: [],\r\n    weights: [],\r\n    back_urls: [],\r\n    link: \"\",\r\n    back_url: \"\",\r\n    weight: \"\",\r\n    type: false,\r\n    status: false,\r\n    granularity: 1,\r\n    group: \"\",\r\n    remarks: \"\"\r\n  },\r\n  tagList: [],\r\n  index: -1\r\n};\r\n\r\nclass EditAdvertise extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addTag = this.addTag.bind(this);\r\n    this.cancelSelectTag = this.cancelSelectTag.bind(this);\r\n    this.cancelEdit = this.cancelEdit.bind(this);\r\n    this.submitSpreadLink = this.submitSpreadLink.bind(this);\r\n    this.cancelUpdate= this.cancelUpdate.bind(this);\r\n  }\r\n\r\n  state = {...initState};\r\n\r\n  componentWillMount() {\r\n    let query = this.props.history.location.query;\r\n    query && this.initData(query);\r\n    this.getTagList();\r\n  }\r\n\r\n  render() {\r\n    const {spreadLinkInfo, tagList, index} = this.state;\r\n    const {id, title, links, weights, back_urls, link, back_url, weight, type, status, granularity, group, remarks} = spreadLinkInfo;\r\n    let isAddWeight, hasLink, hasBackUrl, hasWeight, selectedTag;\r\n    links.length > 0 && (hasLink = <Form.Item label=\"链接组\">\r\n      <List\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={links}\r\n        renderItem={(item, index) => (\r\n          <List.Item actions={[<span className=\"cursor\" style={{color: \"#f00\"}} onClick={() => this.delLink(index, \"links\")}>del</span>]}>\r\n            {item}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </Form.Item>);\r\n    back_urls.length > 0 && (hasBackUrl = <Form.Item label=\"返回链接组\">\r\n      <List\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={back_urls}\r\n        renderItem={(item, index) => (\r\n          <List.Item actions={[<span className=\"cursor\" style={{color: \"#f00\"}} onClick={() => this.delLink(index, \"back_urls\")}>del</span>]}>\r\n            {item}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </Form.Item>);\r\n    weights.length > 0 && (hasWeight = <Form.Item label=\"权重组\">\r\n      <List\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={weights}\r\n        renderItem={(item, i) => {\r\n          let isUpdate;\r\n          if(index === i) {\r\n            isUpdate = [<span className=\"cursor\" style={{color: \"#f00\"}} onClick={this.cancelUpdate}>取消</span>]\r\n          } else {\r\n            isUpdate = [<span className=\"cursor\" style={{color: \"#f00\"}} onClick={e => this.delLink(i, \"weights\", e)}>删除</span>]\r\n          }\r\n          return (\r\n          <List.Item onClick={() => this.updateWeight(i)} actions={isUpdate}>\r\n            {index === i ? <Input.Search size=\"small\" enterButton=\"保存\" onSearch={(value, e) => this.saveUpdate(value, e)} /> : item}\r\n          </List.Item>\r\n        )}}\r\n      />\r\n    </Form.Item>);\r\n    if (type) {\r\n      isAddWeight = <Fragment>\r\n        <Form.Item label=\"权重\">\r\n          <Input.Search value={weight} enterButton=\"添加\" placeholder=\"请输入权重\"\r\n                        onChange={e => this.changeInputValue(e.target.value, \"weight\")} onSearch={value => this.addLink(value, \"weights\", \"weight\")}/>\r\n        </Form.Item>\r\n        {hasWeight}\r\n        <Form.Item label=\"投放状态\">\r\n          <Switch checked={status} onChange={value => this.changeInputValue(value, \"status\")}/>\r\n        </Form.Item>\r\n        <Form.Item label=\"时间颗粒度\">\r\n          <InputNumber min={1} value={granularity} placeholder=\"请输入标题\"\r\n                       onChange={value => this.changeInputValue(value, \"granularity\")}/>\r\n        </Form.Item>\r\n      </Fragment>\r\n    }\r\n    if(group) {\r\n      selectedTag = <Tag closable onClose={this.cancelSelectTag}>{group}</Tag>\r\n    } else {\r\n     selectedTag = <Input.Search enterButton=\"确定\" placeholder=\"请输入标签\" onSearch={this.addTag}/>\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"title-wrapper\">\r\n            <h2>编辑推广链接</h2>\r\n            <div className=\"fr\">\r\n              <Button type=\"primary\" style={{marginRight: 10}} onClick={this.submitSpreadLink}>提交</Button>\r\n              <Button onClick={this.cancelEdit}>取消</Button>\r\n            </div>\r\n          </div>\r\n          <Form className=\"fl\" style={{width: \"60%\", borderRight: \"1px solid #eee\"}} labelCol={{sm: 3}} wrapperCol={{sm: 18, offset: 0}} colon={false}>\r\n            <Form.Item label=\"标题\">\r\n              <Input value={title} placeholder=\"请输入标题\"\r\n                     onChange={e => this.changeInputValue(e.target.value, \"title\")}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"链接\">\r\n              <Input.Search value={link} enterButton=\"添加\" placeholder=\"请输入链接\" onChange={e => this.changeInputValue(e.target.value, \"link\")} onSearch={value => this.addLink(value, \"links\", \"link\")}/>\r\n            </Form.Item>\r\n            {hasLink}\r\n            <Form.Item label=\"返回链接\">\r\n              <Input.Search value={back_url} enterButton=\"添加\" placeholder=\"请输入返回链接\" onChange={e => this.changeInputValue(e.target.value, \"back_url\")} onSearch={value => this.addLink(value, \"back_urls\", \"back_url\")}/>\r\n            </Form.Item>\r\n            {hasBackUrl}\r\n            <Form.Item label=\"选择标签\">\r\n              {selectedTag}\r\n            </Form.Item>\r\n            <Form.Item label=\"标签选项\">\r\n              {tagList.map((item, index) => <Tag className=\"cursor\" closable onClose={(e) => this.deleteTag(e, item._id, index)} key={item._id} onClick={() => this.selectTag(item.name)}>{item.name}</Tag>)}\r\n            </Form.Item>\r\n          </Form>\r\n          <Form className=\"fl\" style={{width: \"36%\", paddingLeft: \"4%\"}} labelCol={{sm: 7}} wrapperCol={{sm: 17, offset: 0}} colon={false}>\r\n            <Form.Item label=\"是否增加权重\">\r\n              <Switch checked={type} onChange={value => this.changeInputValue(value, \"type\")}/>\r\n            </Form.Item>\r\n            {isAddWeight}\r\n            <Form.Item label=\"链接备注\">\r\n              <Input value={remarks} placeholder=\"请输入备注\" onChange={e => this.changeInputValue(e.target.value, \"remarks\")}/>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  initData(query) {\r\n    query.type = query.type === 1;\r\n    query.status = query.status === 1;\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...query}}))\r\n  }\r\n\r\n  changeInputValue(value, name) {\r\n    let {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo[name] = value;\r\n    this.setState({spreadLinkInfo})\r\n  }\r\n\r\n  addLink(value, list, item) {\r\n    const {spreadLinkInfo} = this.state;\r\n    if(!value.trim()) {\r\n      message.error(\"链接不能为空\")\r\n    } else {\r\n      spreadLinkInfo[list].push(value.trim());\r\n      spreadLinkInfo[item] = \"\";\r\n      this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}))\r\n    }\r\n  }\r\n\r\n  delLink(index, list, e) {\r\n    e && e.stopPropagation();\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo[list].splice(index, 1);\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}))\r\n  }\r\n\r\n  updateWeight(index) {\r\n    this.setState({index})\r\n  }\r\n\r\n  saveUpdate(value, e) {\r\n    e.stopPropagation();\r\n    const {spreadLinkInfo, index} = this.state;\r\n    spreadLinkInfo[\"weights\"].splice(index, 1, value);\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}, index: -1}));\r\n  }\r\n\r\n  cancelUpdate(e) {\r\n    e.stopPropagation();\r\n    this.setState({index: -1})\r\n  }\r\n\r\n  getTagList() {\r\n    axios.get(\"/tuiguangTag\").then(res => {\r\n      let tagList = res.data.data;\r\n      this.setState({tagList});\r\n    });\r\n  }\r\n\r\n  addTag(value) {\r\n    const { spreadLinkInfo } = this.state;\r\n    if(!value.trim()) {\r\n      message.error(\"标签名不能为空\")\r\n    } else {\r\n      axios.post(\"/tuiguangTag\", {name: value.trim()})\r\n        .then(res => {\r\n          if (res.data.exist === 0) {\r\n            const { data } = res.data;\r\n            this.setState(state => ({tagList: [...state.tagList, data]}));\r\n          }\r\n          spreadLinkInfo.group = value;\r\n          this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\r\n        })\r\n    }\r\n  }\r\n\r\n  selectTag(group) {\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo.group = group;\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\r\n  }\r\n\r\n  cancelSelectTag() {\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo.group = \"\";\r\n    this.setState(state => ({spreadLinkInfo: {...state.spreadLinkInfo, ...spreadLinkInfo}}));\r\n  }\r\n\r\n  deleteTag(e, id, index) {\r\n    e.stopPropagation();\r\n    const {tagList} = this.state;\r\n    axios.delete('/tuiguangTag', {params: {id}})\r\n      .then(res => {\r\n        tagList.splice(index, 1)\r\n        this.setState({tagList})\r\n      });\r\n  }\r\n\r\n  submitSpreadLink() {\r\n    const { query } = this.props.history.location;\r\n    const {spreadLinkInfo} = this.state;\r\n    spreadLinkInfo.type = spreadLinkInfo.type ? 1 : 0;\r\n    spreadLinkInfo.status = spreadLinkInfo.status ? 1 : 0;\r\n    let url = '/transfer/create';\r\n    if(query) {\r\n      url = '/transfer/update'\r\n    }\r\n    Modal.confirm({\r\n      title: \"确定提交吗？\",\r\n      onOk: () => {\r\n        axios.post(url, {...spreadLinkInfo})\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              message.info(res.data.success);\r\n              this.cancelEdit()\r\n            } else {\r\n              message.info(res.data.err);\r\n            }\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  cancelEdit() {\r\n    this.props.history.goBack();\r\n    this.resetState();\r\n  }\r\n\r\n  resetState() {\r\n    this.setState({...initState})\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.resetState()\r\n  }\r\n}\r\n\r\nexport default EditAdvertise;","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Spread from './spread';\r\nimport EditSpread from './spread/edit';\r\n\r\nclass ChannelWrapper extends Component {\r\n  render() {\r\n    return (\r\n        <Route path=\"/admin/channel\" render={\r\n          () =>\r\n            <Switch>\r\n              <Route path=\"/admin/channel/spread/index\" component={Spread} />\r\n              <Route path=\"/admin/channel/spread/create\" component={EditSpread} />\r\n              <Route path=\"/admin/channel/spread/update\" component={EditSpread} />\r\n              <Redirect from=\"/admin/channel\" exact to='/admin/channel/spread' />\r\n              <Redirect from=\"/admin/channel/spread\" exact to='/admin/channel/spread/index' />\r\n            </Switch>\r\n          }\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChannelWrapper;","import React, { Component } from 'react';\r\nimport { Input, Table, message, Modal } from 'antd';\r\nimport Button from '../../common/components/Button';\r\nimport axios from 'axios';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nconst Search = Input.Search;\r\n\r\nclass Account extends Component {\r\n\r\n  state = {\r\n    accountList: [],\r\n    searchValue: \"\",\r\n    updateRemarksIndex: -1\r\n  };\r\n\r\n\r\n\r\n  searchAccount = () => {\r\n    const { searchValue } = this.state;\r\n    axios.get('/account', {params: {username: searchValue}})\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          const {data: accountList, msg} = res.data;\r\n          this.setState({accountList, searchValue: \"\"});\r\n          message.success(msg)\r\n        } else {\r\n          message.error(res.data.msg);\r\n          this.getAccountList()\r\n        }\r\n      })\r\n  };\r\n\r\n  saveUpdate(id, remarks) {\r\n    Modal.confirm({\r\n      title: \"确定保存修改吗？\",\r\n      onOk: () => {\r\n        axios.put(\"/account/remarks\", {id, remarks})\r\n          .then(res => {\r\n            const {code, msg} = res.data;\r\n            if(code === 1) {\r\n              message.success(msg);\r\n              this.setState({\r\n                updateRemarksIndex: -1\r\n              });\r\n              this.getAccountList()\r\n            } else {\r\n              message.error(msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteAccount(_id) {\r\n    Modal.confirm({\r\n      title: \"确定删除这个账户吗？\",\r\n      onOk: () => {\r\n        axios.delete('/account', {params: {_id}})\r\n          .then(res => {\r\n            if(res.data.code === 1) {\r\n              message.success(res.data.msg);\r\n              this.getAccountList()\r\n            } else {\r\n              message.error(res.data.msg);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  getAccountList = () => {\r\n    axios.get('/account')\r\n      .then(res => {\r\n        if(res.data.code === 1) {\r\n          let { data } = res.data;\r\n          let accountList = data.reverse();\r\n          this.setState({accountList});\r\n        }\r\n      })\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAccountList()\r\n  }\r\n\r\n  handleChangeSearchValue = e => {\r\n    this.setState({searchValue: e.target.value})\r\n  };\r\n\r\n  render() {\r\n    const {accountList, searchValue, updateRemarksIndex} = this.state;\r\n    const columns = [\r\n      {\r\n        key: 'username',\r\n        dataIndex: 'username',\r\n        title: '账户名',\r\n        align: 'center'\r\n      }, {\r\n        key: 'remarks',\r\n        dataIndex: 'remarks',\r\n        title: '公司名称/备注',\r\n        align: 'center',\r\n        width: 300,\r\n        render: (text, record, index) => updateRemarksIndex !== index ? text : <Input.Search enterButton=\"保存\" size=\"small\" onSearch={value => this.saveUpdate(record._id,value)} />\r\n      }, {\r\n        key: 'password',\r\n        dataIndex: 'password',\r\n        title: '密码（点击自动复制，打开解密网站）',\r\n        align: 'center',\r\n        render: text => <CopyToClipboard text={text} onCopy={() => message.success(\"复制成功\")}><a href=\"https://www.somd5.com/\" target=\"__blank\">{text}</a></CopyToClipboard>\r\n      }, {\r\n        key: 'role',\r\n        dataIndex: 'role',\r\n        title: '权限',\r\n        align: 'center',\r\n        render: text => text === 0 ? \"超级管理员\" : (text === 1 ? \"一级代理\" : \"二级代理\")\r\n      }, {\r\n        title: 'Action',\r\n        key: 'action',\r\n        align: 'center',\r\n        render: (text, record, index) => <>\r\n          <Button buttonContent=\"修改备注\" onClick={() => this.setState({updateRemarksIndex: index})} />\r\n          <Button mr={0} background=\"danger\" disabled={record.role === 0} buttonContent=\"删除\" onClick={() => this.deleteAccount(record._id)} />\r\n        </>\r\n      }\r\n    ];\r\n    return (\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Search onChange={this.handleChangeSearchValue} value={searchValue} style={{width: 300, marginBottom: 20}} placeholder=\"请输入账户名\" enterButton=\"查询\" onSearch={this.searchAccount} />\r\n          <Table rowKey={record => record._id} size=\"small\" dataSource={accountList} columns={columns} />\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account;","import React, { Component } from 'react';\r\nimport { Form, Input, message, Modal, Select } from 'antd';\r\nimport Button from '../../../common/components/Button';\r\nimport axios from 'axios';\r\n\r\nconst { Option  } = Select;\r\n\r\nclass AddAccount extends Component {\r\n\r\n  addAccount = () => {\r\n    const { form: {validateFields} } = this.props;\r\n    validateFields((errors, values) => {\r\n      if(errors) {\r\n        message.error(\"请检查输入是否有误\");\r\n        return\r\n      }\r\n      values.password = this.$MD5(values.password).toString();\r\n      Modal.confirm({\r\n        title: \"确定创建一个新账户吗？\",\r\n        onOk: () => {\r\n          axios.post('/account', {...values})\r\n            .then(res => {\r\n              if(res.data.code === 1) {\r\n                this.resetForm()\r\n                message.success(res.data.msg)\r\n              } else {\r\n                message.error(res.data.msg)\r\n              }\r\n            })\r\n        }\r\n      })\r\n    })\r\n    // console.log(getFieldsValue())\r\n  };\r\n\r\n  resetForm = () => {\r\n    const { form: {setFieldsValue} } = this.props;\r\n    setFieldsValue({username: \"\", password: \"\", role: 2})\r\n  };\r\n\r\n  render() {\r\n    const { form: {getFieldDecorator} } = this.props;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 2 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      colon: false\r\n    };\r\n    return (\r\n\r\n    \t<div>\r\n        <div className=\"container\">\r\n          <Form {...formItemLayout}>\r\n            <Form.Item label=\"用户名\">\r\n              {getFieldDecorator('username', {\r\n                rules: [{ required: true, message: '用户名不能为空' }],\r\n              })(\r\n                <Input placeholder=\"请输入用户名\"/>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"密码\">\r\n              {getFieldDecorator('password', {\r\n                rules: [{ required: true, message: '密码不能为空' }],\r\n              })(\r\n                <Input placeholder=\"请输入密码\"/>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"备注\">\r\n              {getFieldDecorator('remarks', {\r\n                rules: [{ required: true, message: '备注不能为空' }],\r\n              })(\r\n                <Input placeholder=\"请输入备注\"/>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"管理员权限\">\r\n              {getFieldDecorator('role', {\r\n                rules: [{ required: true }],\r\n                initialValue: 2\r\n              })(\r\n                <Select>\r\n                  <Option value={0}>超级管理员</Option>\r\n                  <Option value={1}>一级代理</Option>\r\n                  <Option value={2}>二级代理</Option>\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\" \">\r\n              <Button size=\"default\" buttonContent=\"新增\" onClick={this.addAccount} />\r\n              <Button ml={20} background=\"info\" size=\"default\" buttonContent=\"清空\" onClick={this.resetForm}  />\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddAccount);","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Account from './index';\r\nimport AddAccount from './add';\r\nclass AccountRouter extends Component {\r\n  render() {\r\n    return (\r\n    \t<Switch>\r\n        <Route path=\"/admin/account/list\" component={Account} />\r\n        <Route path=\"/admin/account/add\" component={AddAccount} />\r\n        <Redirect from=\"/admin/account\" exact to=\"/admin/account/list\"/>\r\n    \t</Switch>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AccountRouter;","import React, { Component } from 'react';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport store from './store';\n\nimport Login from './pages/login';\n\nimport BasicLayout from './common/BasicLayout';\nimport TuoguanRouter from './pages/gonghao/router';\nimport MessageRouter from './pages/message/router';\nimport ChannelRouter from './pages/channel/router';\nimport AccountRouter from './pages/account/router';\n\nclass App extends Component{\n\n  state = {\n    userInfo: {}\n  };\n\n  componentDidMount() {\n    let userInfo = localStorage.getItem(\"userInfo\");\n    if(userInfo && (Date.now() - (+ new Date(JSON.parse(userInfo).loginAt)) < 12 * 60 * 60 * 1000)) {\n      this.setState({userInfo: JSON.parse(userInfo)});\n    }\n  }\n\n  render() {\n    const { userInfo } = this.state;\n    const needLogin = Object.keys(userInfo).length > 0;\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/admin/login\" render={() => needLogin ? <Redirect to={window.location.search ? decodeURIComponent(window.location.search.split(\"=\")[1]) : \"/admin\"} /> : <Login />} />\n            <Route path=\"/admin\" render={() => (\n              needLogin ?\n                <BasicLayout content={\n                    <Switch>\n                      <Route path='/admin/gonghao' component={TuoguanRouter} />\n                      <Route path='/admin/message' component={MessageRouter} />\n                      <Route path='/admin/channel' component={ChannelRouter} />\n                      <Route path='/admin/account' component={AccountRouter} />\n                      <Redirect from=\"/admin\" exact to={userInfo.role === 2 ? \"/admin/gonghao\" : \"/admin/account\"} />\n                    </Switch>\n                } />\n                : <Redirect to={\"/admin/login?redirect=\" + encodeURIComponent(window.location.pathname)} />\n            )} />\n            <Redirect from=\"/\" exact to=\"/admin\" />\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import 'core-js/es/map';\nimport 'core-js/es/set';\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './assets/css/reset.css';\nimport App from './App.jsx';\nimport MD5 from 'crypto-js/md5';\nimport Promise from 'promise-polyfill';\n\n\n// // To add to window  解决promise 在ie中未定义的问题\nif (!window.Promise) {\n  window.Promise = Promise;\n}\n\nReact.Component.prototype.$MD5 = MD5;\n\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/login_bg.e3347162.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ad641e9f.png\";"],"sourceRoot":""}